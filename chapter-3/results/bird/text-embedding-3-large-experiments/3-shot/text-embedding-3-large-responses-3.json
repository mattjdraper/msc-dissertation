{
    "0": "SELECT MAX(`Percent (%) Eligible Free (K-12)`) FROM frpm WHERE `County Name` = 'Alameda County'\t----- bird -----\tcalifornia_schools",
    "1": "SELECT TOP 3 `Percent (%) Eligible Free (Ages 5-17)` FROM frpm WHERE `Educational Option Type` = 'Continuation School' ORDER BY (`Free Meal Count (Ages 5-17)` / `Enrollment (Ages 5-17)`) ASC;\t----- bird -----\tcalifornia_schools",
    "2": "SELECT T1.Zip FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.`Charter School (Y/N)` = 1 AND T1.County = 'Fresno County Office of Education'\t----- bird -----\tcalifornia_schools",
    "3": "SELECT MailStreet, MailCity, MailZip, MailState FROM schools WHERE CDSCode = (SELECT CDSCode FROM frpm WHERE `FRPM Count (K-12)` = (SELECT MAX(`FRPM Count (K-12)`) FROM frpm))\t----- bird -----\tcalifornia_schools",
    "4": "SELECT Phone FROM schools WHERE Charter = 1 AND OpenDate > '2000-01-01'\t----- bird -----\tcalifornia_schools",
    "5": "SELECT COUNT(s.CDSCode) FROM satscores AS s INNER JOIN schools AS sc ON s.cds = sc.CDSCode WHERE s.AvgScrMath < 400 AND sc.Virtual = 'F'\t----- bird -----\tcalifornia_schools",
    "6": "SELECT s.school FROM satscores AS s INNER JOIN schools AS sc ON s.cds = sc.CDSCode WHERE s.NumTstTakr > 500 AND sc.Magnet = 1;\t----- bird -----\tcalifornia_schools",
    "7": "SELECT T3.Phone FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode INNER JOIN frpm AS T3 ON T1.cds = T3.CDSCode WHERE T1.NumTstTakr = (SELECT MAX(NumTstTakr) FROM satscores WHERE NumGE1500 > 0)\t----- bird -----\tcalifornia_schools",
    "8": "SELECT T2.NumTstTakr FROM frpm AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T1.`FRPM Count (K-12)` = (SELECT MAX(`FRPM Count (K-12)`) FROM frpm)\t----- bird -----\tcalifornia_schools",
    "9": "SELECT COUNT(*) FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T1.AvgScrMath > 560 AND T2.FundingType = 'Charter'\t----- bird -----\tcalifornia_schools",
    "10": "SELECT T1.`FRPM Count (Ages 5-17)` FROM frpm AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T2.AvgScrRead = (SELECT MAX(AvgScrRead) FROM satscores)\t----- bird -----\tcalifornia_schools",
    "11": "SELECT CDSCode FROM frpm WHERE (`Enrollment (K-12)` + `Enrollment (Ages 5-17)`) > 500\t----- bird -----\tcalifornia_schools",
    "12": "SELECT MAX(`Percent (%) Eligible Free (Ages 5-17)`) FROM frpm AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE CAST(T2.NumGE1500 AS REAL) / T2.NumTstTakr > 0.3\t----- bird -----\tcalifornia_schools",
    "13": "SELECT Phone FROM schools WHERE CDSCode IN ( SELECT cds FROM satscores ORDER BY NumGE1500 / NumTstTakr DESC LIMIT 3 )\t----- bird -----\tcalifornia_schools",
    "14": "SELECT T1.NCESSchool FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode ORDER BY T2.`Enrollment (Ages 5-17)` DESC LIMIT 0, 5\t----- bird -----\tcalifornia_schools",
    "15": "SELECT dname, AVG(AvgScrRead) AS avg_reading_score FROM satscores JOIN schools ON satscores.cds = schools.CDSCode WHERE schools.StatusType = 'Active' GROUP BY dname ORDER BY avg_reading_score DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "16": "SELECT COUNT(*) FROM schools AS S INNER JOIN frpm AS F ON S.CDSCode = F.CDSCode INNER JOIN satscores AS SAT ON S.CDSCode = SAT.cds WHERE S.County = 'Alameda' AND SAT.NumTstTakr < 100;\t----- bird -----\tcalifornia_schools",
    "17": "SELECT CharterNum FROM schools WHERE CDSCode IN (SELECT cds FROM satscores WHERE AvgScrWrite = 499)\t----- bird -----\tcalifornia_schools",
    "18": "SELECT COUNT(s.CDSCode) FROM schools AS s INNER JOIN frpm AS f ON s.CDSCode = f.CDSCode INNER JOIN satscores AS ss ON s.CDSCode = ss.cds WHERE s.County = 'Contra Costa' AND f.`Charter Funding Type` = 'Directly Funded' AND ss.NumTstTakr <= 250;\t----- bird -----\tcalifornia_schools",
    "19": "SELECT T3.Phone FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T1.AvgScrMath = (SELECT MAX(AvgScrMath) FROM satscores)\t----- bird -----\tcalifornia_schools",
    "20": "SELECT COUNT(*) FROM frpm INNER JOIN schools ON frpm.CDSCode = schools.CDSCode WHERE schools.County = 'Amador' AND frpm.`Low Grade` = '9' AND frpm.`High Grade` = '12'\t----- bird -----\tcalifornia_schools",
    "21": "SELECT COUNT(CDSCode) FROM frpm WHERE `County Name` = 'Los Angeles' AND `Free Meal Count (K-12)` > 500 AND `Free Meal Count (K-12)` < 700\t----- bird -----\tcalifornia_schools",
    "22": "SELECT satscores.sname FROM satscores INNER JOIN schools ON satscores.cds = schools.CDSCode WHERE schools.County = 'Contra Costa' ORDER BY satscores.NumTstTakr DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "23": "SELECT s.School, s.Street FROM schools s INNER JOIN frpm f ON s.CDSCode = f.CDSCode WHERE f.`Enrollment (K-12)` - f.`Enrollment (Ages 5-17)` > 30;\t----- bird -----\tcalifornia_schools",
    "24": "SELECT s.School FROM frpm f INNER JOIN satscores s ON f.CDSCode = s.cds WHERE f.`Percent (%) Eligible Free (K-12)` > 0.1 AND s.NumGE1500 > 0;\t----- bird -----\tcalifornia_schools",
    "25": "SELECT T2.School, T1.FundingType FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T1.AvgScrMath > 400 AND T2.County = 'Riverside'\t----- bird -----\tcalifornia_schools",
    "26": "SELECT T2.School, T2.Street || ', ' || T2.City || ', ' || T2.State || ', ' || T2.Zip AS Full_Address FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.`Percent (%) Eligible FRPM (Ages 5-17)` > 800 AND T2.County = 'Monterey' AND T2.StatusType = 'High School'\t----- bird -----\tcalifornia_schools",
    "27": "SELECT s.School, s.Phone, AVG(ss.AvgScrWrite) AS AvgWritingScore FROM schools AS s INNER JOIN satscores AS ss ON s.CDSCode = ss.cds WHERE (s.OpenDate > '1991' OR s.ClosedDate < '2000') AND ss.AvgScrWrite IS NOT NULL GROUP BY s.School, s.Phone\t----- bird -----\tcalifornia_schools",
    "28": "SELECT T1.`School Name`, T2.DOCType FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.FundingType = 'Local' AND (`Enrollment (K-12)` - `Enrollment (Ages 5-17)`) > (SELECT AVG(`Enrollment (K-12)` - `Enrollment (Ages 5-17)`) FROM frpm)\t----- bird -----\tcalifornia_schools",
    "29": "SELECT MIN(OpenDate) FROM schools WHERE GSoffered = 'K-12' ORDER BY Enrollment DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "30": "SELECT DISTINCT city FROM schools ORDER BY enrollment ASC LIMIT 5\t----- bird -----\tcalifornia_schools",
    "31": "SELECT (`Free Meal Count (K-12)` / `Enrollment (K-12)`) AS Eligible_Free_Rate FROM frpm WHERE `Educational Option Type` = 'K-12' ORDER BY `Enrollment (K-12)` DESC LIMIT 10, 2\t----- bird -----\tcalifornia_schools",
    "32": "SELECT TOP 5 `FRPM Count (K-12)` / `Enrollment (K-12)` AS Eligible_Free_Reduced_Meal_Rate FROM frpm WHERE `District Type` = 66 ORDER BY `FRPM Count (K-12)` DESC LIMIT 5\t----- bird -----\tcalifornia_schools",
    "33": "SELECT T2.`School Name`, T1.Website FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.`Free Meal Count (Ages 5-17)` BETWEEN 1900 AND 2000;\t----- bird -----\tcalifornia_schools",
    "34": "SELECT `Free Meal Count (Ages 5-17)` / `Enrollment (Ages 5-17)` FROM frpm WHERE `School Name` = 'Kacey Gibson'\t----- bird -----\tcalifornia_schools",
    "35": "SELECT s.AdmEmail1 FROM schools s INNER JOIN frpm f ON s.CDSCode = f.CDSCode WHERE s.Charter = 1 ORDER BY f.`Enrollment (K-12)` ASC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "36": "SELECT AdmFName1, AdmLName1 FROM schools WHERE CDSCode IN ( SELECT cds FROM satscores WHERE NumGE1500 = (SELECT MAX(NumGE1500) FROM satscores) )\t----- bird -----\tcalifornia_schools",
    "37": "SELECT T3.Street, T3.City, T3.Zip, T3.State FROM schools AS T3 INNER JOIN satscores AS T2 ON T3.CDSCode = T2.cds WHERE T2.NumGE1500 / T2.NumTstTakr = (SELECT MIN(NumGE1500 / NumTstTakr) FROM satscores)\t----- bird -----\tcalifornia_schools",
    "38": "SELECT Website FROM schools WHERE County = 'Los Angeles' AND CDSCode IN (SELECT cds FROM satscores WHERE NumTstTakr BETWEEN 2000 AND 3000)\t----- bird -----\tcalifornia_schools",
    "39": "SELECT AVG(NumTstTakr) FROM satscores INNER JOIN schools ON satscores.cds = schools.CDSCode WHERE schools.County = 'Fresno' AND schools.OpenDate BETWEEN '1980-01-01' AND '1980-12-31';\t----- bird -----\tcalifornia_schools",
    "40": "SELECT T2.Phone FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T1.AvgScrRead = (SELECT MIN(AvgScrRead) FROM satscores WHERE dname = 'Fresno Unified')\t----- bird -----\tcalifornia_schools",
    "41": "SELECT s.sname, s.AvgScrRead FROM satscores s INNER JOIN schools sc ON s.cds = sc.CDSCode WHERE sc.Virtual = 'F' ORDER BY s.AvgScrRead DESC LIMIT 5\t----- bird -----\tcalifornia_schools",
    "42": "SELECT T1.`Educational Option Type` FROM frpm AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds ORDER BY T2.AvgScrMath DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "43": "SELECT AVG(s.AvgScrMath) AS average_math_score, s.cname AS county_name FROM satscores s WHERE s.AvgScrMath + s.AvgScrRead + s.AvgScrWrite = ( SELECT MIN(AvgScrMath + AvgScrRead + AvgScrWrite) FROM satscores )\t----- bird -----\tcalifornia_schools",
    "44": "SELECT AVG(AvgScrWrite), satscores.sname, schools.City FROM satscores INNER JOIN schools ON satscores.cds = schools.CDSCode WHERE satscores.NumTstTakr = (SELECT MAX(NumTstTakr) FROM satscores WHERE NumGE1500 >= 1500) AND NumGE1500 >= 1500;\t----- bird -----\tcalifornia_schools",
    "45": "SELECT T1.`School Name`, AVG(T2.AvgScrWrite) AS AvgWritingScore FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T1.AdmFName1 = 'Ricci' AND T1.AdmLName1 = 'Ulrich' GROUP BY T1.`School Name`\t----- bird -----\tcalifornia_schools",
    "46": "SELECT State, School FROM schools WHERE EdOpsCode = '31' AND GSoffered = 'K-12' ORDER BY Enrollment DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "47": "SELECT COUNT(schools.CDSCode) / 12 AS monthly_average FROM schools WHERE County = 'Alameda' AND DOC = 52 AND OpenDate LIKE '%1980%'\t----- bird -----\tcalifornia_schools",
    "48": "SELECT CAST(COUNT(CASE WHEN DOC = '54' AND County = 'Orange' THEN 1 ELSE 0 END) AS REAL) / COUNT(CASE WHEN DOC = '52' AND County = 'Orange' THEN 1 ELSE 0 END) FROM schools;\t----- bird -----\tcalifornia_schools",
    "49": "SELECT T1.County, T2.School, T2.ClosedDate FROM schools AS T2 INNER JOIN ( SELECT County, COUNT(School) AS NumClosedSchools FROM schools WHERE StatusType = 'Closed' GROUP BY County ORDER BY NumClosedSchools DESC LIMIT 1 ) AS T1 ON T1.County = T2.County WHERE T2.StatusType = 'Closed'\t----- bird -----\tcalifornia_schools",
    "50": "SELECT T2.MailStreet, T2.School FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode ORDER BY T1.AvgScrMath DESC LIMIT 1 OFFSET 5\t----- bird -----\tcalifornia_schools",
    "51": "SELECT T3.MailStreet, T2.sname FROM schools AS T3 INNER JOIN satscores AS T2 ON T3.CDSCode = T2.cds WHERE T2.AvgScrRead = (SELECT MIN(AvgScrRead) FROM satscores)\t----- bird -----\tcalifornia_schools",
    "52": "SELECT COUNT(*) FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T1.AvgScrRead + T1.AvgScrMath + T1.AvgScrWrite >= 1500 AND T2.MailCity = 'Lakeport'\t----- bird -----\tcalifornia_schools",
    "53": "SELECT SUM(NumTstTakr) FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T2.MailCity = 'Fresno'\t----- bird -----\tcalifornia_schools",
    "54": "SELECT schools.School, schools.MailZip FROM schools WHERE schools.AdmFName1 = 'Avetik' AND schools.AdmLName1 = 'Atoian'\t----- bird -----\tcalifornia_schools",
    "55": "SELECT CAST(COUNT(CASE WHEN s.County = 'Colusa' THEN s.CDSCode ELSE NULL END) AS REAL) / COUNT(CASE WHEN s.County = 'Humboldt' THEN s.CDSCode ELSE NULL END) FROM schools s WHERE s.MailState = 'CA'\t----- bird -----\tcalifornia_schools",
    "56": "SELECT COUNT(*) FROM schools WHERE State = 'CA' AND County = 'San Joaquin' AND StatusType = 'Active' AND MailState = 'CA'\t----- bird -----\tcalifornia_schools",
    "57": "SELECT Phone, Ext FROM schools WHERE CDSCode = ( SELECT cds FROM satscores ORDER BY AvgScrWrite DESC LIMIT 1 OFFSET 332 )\t----- bird -----\tcalifornia_schools",
    "58": "SELECT T1.Phone, T1.Ext, T1.School FROM schools AS T1 WHERE T1.Zip = '95203-3704'\t----- bird -----\tcalifornia_schools",
    "59": "SELECT T1.Website FROM schools AS T1 WHERE T1.AdmFName1 = 'Mike' AND T1.AdmLName1 = 'Larson' OR T1.AdmFName1 = 'Dante' AND T1.AdmLName1 = 'Alvarez' OR T1.AdmFName2 = 'Mike' AND T1.AdmLName2 = 'Larson' OR T1.AdmFName2 = 'Dante' AND T1.AdmLName2 = 'Alvarez' OR T1.AdmFName3 = 'Mike' AND T1.AdmLName3 = 'Larson' OR T1.AdmFName3 = 'Dante' AND T1.AdmLName3 = 'Alvarez'\t----- bird -----\tcalifornia_schools",
    "60": "SELECT Website FROM schools WHERE Charter = 1 AND Virtual = 'P' AND County = 'San Joaquin'\t----- bird -----\tcalifornia_schools",
    "61": "SELECT COUNT(school) FROM schools WHERE City = 'Hickman' AND Charter = 1 AND DOC = 52\t----- bird -----\tcalifornia_schools",
    "62": "SELECT COUNT(s.CDSCode) FROM schools AS s INNER JOIN frpm AS f ON s.CDSCode = f.CDSCode WHERE s.County = 'Los Angeles' AND s.Charter = 0 AND f.`Percent (%) Eligible Free (K-12)` < 0.18\t----- bird -----\tcalifornia_schools",
    "63": "SELECT s.School, s.City, s.AdmFName1 || ' ' || s.AdmLName1 AS Administrator1, s.AdmFName2 || ' ' || s.AdmLName2 AS Administrator2, s.AdmFName3 || ' ' || s.AdmLName3 AS Administrator3 FROM schools AS s WHERE s.Charter = 1 AND s.CharterNum = '00D2'\t----- bird -----\tcalifornia_schools",
    "64": "SELECT COUNT(*) FROM schools WHERE MailCity = 'Hickman' AND CharterNum = '00D4'\t----- bird -----\tcalifornia_schools",
    "65": "SELECT CAST(COUNT(CASE WHEN Charter Funding Type = 'locally funded' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(*) FROM frpm WHERE `County Name` = 'Santa Clara'\t----- bird -----\tcalifornia_schools",
    "66": "SELECT COUNT(*) FROM schools WHERE County = 'Stanislaus' AND FundingType = 'Directly Funded' AND OpenDate BETWEEN '2000-01-01' AND '2005-12-31'\t----- bird -----\tcalifornia_schools",
    "67": "SELECT SUM(T1.ClosedDate) FROM schools AS T1 WHERE T1.District = 'Community College District' AND T1.ClosedDate = '1989' AND T1.City = 'San Francisco'\t----- bird -----\tcalifornia_schools",
    "68": "SELECT T1.County FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.ClosedDate BETWEEN '1980-01-01' AND '1989-12-31' AND T1.SOC = '11' GROUP BY T1.County ORDER BY COUNT(T1.CDSCode) DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "69": "SELECT T1.NCESSchool FROM schools AS T1 WHERE T1.SOC = '31'\t----- bird -----\tcalifornia_schools",
    "70": "SELECT COUNT(*) FROM schools WHERE County = 'Alpine' AND StatusType = 'Active' AND (Charter = 1 OR Charter = 0)\t----- bird -----\tcalifornia_schools",
    "71": "SELECT DISTINCT District Code FROM frpm WHERE `School Name` IN (SELECT School FROM schools WHERE City = 'Fresno') AND `Magnet` = 0\t----- bird -----\tcalifornia_schools",
    "72": "SELECT SUM(`Enrollment (Ages 5-17)`) FROM frpm WHERE `School Name` = 'State Special School' AND `District Name` = 'Fremont' AND `Academic Year` = '2014-2015' AND EdOpsCode = 'SSS'\t----- bird -----\tcalifornia_schools",
    "73": "SELECT `Free Meal Count (Ages 5-17)` FROM frpm WHERE `School Name` = 'Youth Authority School' AND `MailStreet` = 'PO Box 1040' AND `Enrollment (Ages 5-17)` IS NOT NULL;\t----- bird -----\tcalifornia_schools",
    "74": "SELECT MIN(`Low Grade`) FROM frpm WHERE `District Type` = 'SPECON' AND NCESDist = '613360'\t----- bird -----\tcalifornia_schools",
    "75": "SELECT schools.`EdOpsName`, schools.`School` FROM frpm INNER JOIN schools ON frpm.CDSCode = schools.CDSCode WHERE frpm.`County Code` = 37 AND frpm.`NSLP Provision Status` = 'Breakfast Provision 2'\t----- bird -----\tcalifornia_schools",
    "76": "SELECT s.City FROM schools AS s INNER JOIN frpm AS f ON s.CDSCode = f.CDSCode WHERE f.`Educational Option Type` = 'HS' AND f.`NSLP Provision Status` = '2' AND f.`Low Grade` = '9' AND f.`High Grade` = '12' AND s.County = 'Merced'\t----- bird -----\tcalifornia_schools",
    "77": "SELECT schools.school, frpm.`Percent (%) Eligible FRPM (Ages 5-17)` FROM schools INNER JOIN frpm ON schools.CDSCode = frpm.CDSCode WHERE schools.County = 'Los Angeles' AND schools.GSserved = 'K-9'\t----- bird -----\tcalifornia_schools",
    "78": "SELECT T2.`GSserved` FROM geographic AS T1 INNER JOIN schools AS T2 ON T1.city = T2.city WHERE T1.city = 'Adelanto' GROUP BY T2.`GSserved` ORDER BY COUNT(T2.`GSserved`) DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "79": "SELECT T1.County, COUNT(T1.CDSCode) AS Num_Schools FROM schools AS T1 WHERE T1.City IN ('San Diego', 'Santa Barbara') AND T1.Virtual = 'F' GROUP BY T1.County ORDER BY Num_Schools DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "80": "SELECT T1.`School Name`, T1.Latitude, T1.`School Type` FROM schools AS T1 WHERE T1.Latitude = (SELECT MAX(Latitude) FROM schools)\t----- bird -----\tcalifornia_schools",
    "81": "SELECT City, SchoolName, LowGrade FROM schools WHERE State = 'CA' AND Latitude = (SELECT MIN(Latitude) FROM schools WHERE State = 'CA')\t----- bird -----\tcalifornia_schools",
    "82": "SELECT MAX(Longitude), GSoffered FROM schools WHERE Longitude = (SELECT MAX(Longitude) FROM schools)\t----- bird -----\tcalifornia_schools",
    "83": "SELECT COUNT(schools.CDSCode) FROM schools WHERE schools.GSoffered = 'K-8' AND schools.Magnet = 1 AND schools.EdOpsCode = 'Multiple Provision Types' SELECT COUNT(schools.CDSCode), schools.City FROM schools WHERE schools.GSoffered = 'K-8' GROUP BY schools.City\t----- bird -----\tcalifornia_schools",
    "84": "SELECT AdmFName1, AdmLName1, District FROM schools GROUP BY AdmFName1, AdmLName1, District ORDER BY COUNT(*) DESC LIMIT 2\t----- bird -----\tcalifornia_schools",
    "85": "SELECT `Percent (%) Eligible Free (K-12)`, `District Code` FROM frpm WHERE `School Name` IN ( SELECT School FROM schools WHERE AdmFName1 = 'Alusine' )\t----- bird -----\tcalifornia_schools",
    "86": "SELECT T1.AdmLName1, T2.District, T2.County, T2.School FROM schools AS T2 INNER JOIN satscores AS T3 ON T2.CDSCode = T3.cds INNER JOIN frpm AS T1 ON T2.CDSCode = T1.CDSCode WHERE T2.CharterNum = '40'\t----- bird -----\tcalifornia_schools",
    "87": "SELECT AdmEmail1 FROM schools WHERE County = 'San Bernardino' AND District = 'San Bernardino City Unified' AND OpenDate BETWEEN '2009-01-01' AND '2010-12-31' AND (SOC = '62' OR DOC = '54')\t----- bird -----\tcalifornia_schools",
    "88": "SELECT T3.AdmEmail1, T3.School FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode INNER JOIN schools AS T3 ON T1.cds = T3.CDSCode WHERE T1.NumGE1500 = (SELECT MAX(NumGE1500) FROM satscores) LIMIT 1\t----- bird -----\tcalifornia_schools",
    "89": "SELECT COUNT(T1.account_id) FROM account AS T1 INNER JOIN disp AS T2 ON T1.account_id = T2.account_id INNER JOIN client AS T3 ON T2.client_id = T3.client_id INNER JOIN district AS T4 ON T3.district_id = T4.district_id WHERE T1.frequency = 'POPLATEK PO OBRATU' AND T4.A3 = 'East Bohemia'\t----- bird -----\tfinancial",
    "90": "SELECT COUNT(DISTINCT T1.account_id) FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.A3 = 'Prague'\t----- bird -----\tfinancial",
    "91": "SELECT AVG(A12) AS avg_unemployment_1995, AVG(A13) AS avg_unemployment_1996, CASE WHEN AVG(A12) > AVG(A13) THEN '1995' ELSE '1996' END AS higher_percentage_year FROM district\t----- bird -----\tfinancial",
    "92": "SELECT COUNT(district_id) FROM district WHERE district_id IN (SELECT district_id FROM client WHERE gender = 'F' GROUP BY district_id HAVING AVG(A11) > 6000 AND AVG(A11) < 10000)\t----- bird -----\tfinancial",
    "93": "SELECT COUNT(T1.client_id) FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.gender = 'M' AND T2.A3 = 'North Bohemia' AND T2.A11 > 8000\t----- bird -----\tfinancial",
    "94": "SELECT account.account_id FROM account JOIN disp ON account.account_id = disp.account_id JOIN client ON disp.client_id = client.client_id WHERE client.gender = 'F' AND client.birth_date = (SELECT MIN(birth_date) FROM client WHERE gender = 'F') AND client.birth_date = (SELECT MAX(birth_date) FROM client WHERE gender = 'F') AND client.birth_date = (SELECT MIN(birth_date) FROM client WHERE gender = 'F' ORDER BY A11 ASC LIMIT 1) AND client.birth_date = (SELECT MAX(birth_date) FROM client WHERE gender = 'F' ORDER BY A11 DESC LIMIT 1) SELECT MAX(A11) - MIN(A11) AS Gap FROM client WHERE gender = 'F'\t----- bird -----\tfinancial",
    "95": "SELECT account_id FROM client JOIN disp ON client.client_id = disp.client_id JOIN account ON disp.account_id = account.account_id GROUP BY client.client_id HAVING client.birth_date = (SELECT MAX(birth_date) FROM client) ORDER BY AVG(A11) DESC;\t----- bird -----\tfinancial",
    "96": "SELECT COUNT(*) FROM client c JOIN disp d ON c.client_id = d.client_id JOIN account a ON d.account_id = a.account_id WHERE a.frequency = 'POPLATEK TYDNE' AND d.type = 'Owner'\t----- bird -----\tfinancial",
    "97": "SELECT C.client_id, C.gender, C.birth_date FROM client C INNER JOIN disp D ON C.client_id = D.client_id INNER JOIN account A ON D.account_id = A.account_id WHERE D.type = 'DISPONENT' AND A.frequency = 'POPLATEK PO OBRATU'\t----- bird -----\tfinancial",
    "98": "SELECT T1.account_id, T1.frequency FROM account AS T1 INNER JOIN loan AS T2 ON T1.account_id = T2.account_id WHERE STRFTIME('%Y', T2.date) = '1997' AND T2.amount = (SELECT MIN(amount) FROM loan WHERE STRFTIME('%Y', date) = '1997') AND T1.frequency = 'POPLATEK TYDNE'\t----- bird -----\tfinancial",
    "99": "SELECT T1.account_id FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T1.duration > 12 AND T1.date LIKE '1993%' ORDER BY T1.amount DESC LIMIT 1\t----- bird -----\tfinancial",
    "100": "SELECT COUNT(T1.client_id) FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.gender = 'F' AND T1.birth_date < '1950-01-01' AND T2.A2 = 'Slokolov'\t----- bird -----\tfinancial",
    "101": "SELECT account_id FROM account WHERE date = (SELECT MIN(date) FROM account WHERE date LIKE '1995%')\t----- bird -----\tfinancial",
    "102": "SELECT T1.account_id, T1.date FROM account AS T1 INNER JOIN disp AS T2 ON T1.account_id = T2.account_id INNER JOIN trans AS T3 ON T1.account_id = T3.account_id WHERE T1.date < '1997-01-01' AND T3.balance > 3000;\t----- bird -----\tfinancial",
    "103": "SELECT client_id FROM client WHERE client_id IN (SELECT client_id FROM disp WHERE disp_id IN (SELECT disp_id FROM card WHERE issued = '1994-03-03'))\t----- bird -----\tfinancial",
    "104": "SELECT A.date FROM account AS A INNER JOIN trans AS T ON A.account_id = T.account_id WHERE T.amount = 840 AND STRFTIME('%Y-%m-%d', T.date) = '1998-10-14'\t----- bird -----\tfinancial",
    "105": "SELECT A.district_id FROM account AS A INNER JOIN loan AS L ON A.account_id = L.account_id WHERE L.date = '1994-08-25'\t----- bird -----\tfinancial",
    "106": "SELECT MAX(amount) FROM trans AS T1 INNER JOIN disp AS T2 ON T1.account_id = T2.account_id INNER JOIN card AS T3 ON T2.disp_id = T3.disp_id WHERE T3.issued = '1996-10-21'\t----- bird -----\tfinancial",
    "107": "SELECT T2.gender FROM client AS T1 INNER JOIN account AS T2 ON T1.client_id = T2.client_id INNER JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T3.A11 = (SELECT MAX(A11) FROM district) ORDER BY T1.birth_date LIMIT 1\t----- bird -----\tfinancial",
    "108": "SELECT T3.amount FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN account AS T3 ON T2.account_id = T3.account_id INNER JOIN loan AS T4 ON T3.account_id = T4.account_id INNER JOIN trans AS T5 ON T3.account_id = T5.account_id WHERE T4.amount = (SELECT MAX(amount) FROM loan) ORDER BY T5.date ASC LIMIT 1\t----- bird -----\tfinancial",
    "109": "SELECT COUNT(client_id) FROM client WHERE district_id IN (SELECT district_id FROM district WHERE A2 = 'Jesenik') AND gender = 'F'\t----- bird -----\tfinancial",
    "110": "SELECT T2.disp_id FROM trans AS T1 INNER JOIN disp AS T2 ON T1.account_id = T2.account_id WHERE T1.amount = 5100 AND T1.date = '1998-09-02'\t----- bird -----\tfinancial",
    "111": "SELECT COUNT(account_id) FROM account WHERE district_id IN (SELECT district_id FROM district WHERE A2 = 'Litomerice') AND date >= '1996-01-01' AND date <= '1996-12-31'\t----- bird -----\tfinancial",
    "112": "SELECT d.A2 FROM client c JOIN disp d ON c.client_id = d.client_id WHERE c.gender = 'F' AND c.birth_date = '1976-01-29'\t----- bird -----\tfinancial",
    "113": "SELECT T1.birth_date FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN loan AS T3 ON T2.account_id = T3.account_id WHERE T3.amount = 98832 AND T3.date = '1996-01-03'\t----- bird -----\tfinancial",
    "114": "SELECT account_id FROM account WHERE district_id = (SELECT district_id FROM district WHERE A3 = 'Prague' ORDER BY date LIMIT 1)\t----- bird -----\tfinancial",
    "115": "SELECT CAST(SUM(CASE WHEN c.gender = 'M' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(c.client_id) FROM client c JOIN district d ON c.district_id = d.district_id WHERE d.A3 = 'south Bohemia' AND d.A4 = (SELECT MAX(A4) FROM district WHERE A3 = 'south Bohemia')\t----- bird -----\tfinancial",
    "116": "SELECT CAST((T1.balance - T2.balance) AS REAL) * 100 / T2.balance FROM trans AS T1 INNER JOIN ( SELECT balance FROM trans WHERE account_id = ( SELECT account_id FROM loan WHERE date = '1993-07-05' ORDER BY date LIMIT 1 ) AND date = '1993-03-22' ) AS T2 ON T1.account_id = ( SELECT account_id FROM loan WHERE date = '1993-07-05' ORDER BY date LIMIT 1 ) AND T1.date = '1998-12-27'\t----- bird -----\tfinancial",
    "117": "SELECT SUM(CASE WHEN status = 'A' THEN amount ELSE 0 END) * 100 / SUM(amount) FROM loan\t----- bird -----\tfinancial",
    "118": "SELECT CAST(SUM(CASE WHEN T1.status = 'C' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.account_id) FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T1.amount < 100000\t----- bird -----\tfinancial",
    "119": "SELECT account.account_id, district.A2 AS district_name, district.A3 AS district_region FROM account JOIN district ON account.district_id = district.district_id JOIN card ON account.account_id = card.account_id WHERE card.issued > ALL (SELECT date FROM trans WHERE account_id = account.account_id AND type = 'POPLATEK PO OBRATU' AND date LIKE '1993%')\t----- bird -----\tfinancial",
    "120": "SELECT T1.account_id, T1.frequency FROM account AS T1 INNER JOIN disp AS T2 ON T1.account_id = T2.account_id INNER JOIN client AS T3 ON T2.client_id = T3.client_id INNER JOIN district AS T4 ON T3.district_id = T4.district_id WHERE T4.A2 = 'east Bohemia' AND T1.date BETWEEN '1995-01-01' AND '2000-12-31'\t----- bird -----\tfinancial",
    "121": "SELECT account_id, date FROM account WHERE district_id IN (SELECT district_id FROM district WHERE A2 = 'Prachatice')\t----- bird -----\tfinancial",
    "122": "SELECT A2, A3 FROM district WHERE district_id = (SELECT district_id FROM account WHERE account_id = (SELECT account_id FROM loan WHERE loan_id = '4990'))\t----- bird -----\tfinancial",
    "123": "SELECT T1.account_id, T2.A2 AS district, T2.A3 AS region FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T1.amount > 300000\t----- bird -----\tfinancial",
    "124": "SELECT loan.loan_id, district.A3, district.A11 AS average_salary FROM loan INNER JOIN account ON loan.account_id = account.account_id INNER JOIN district ON account.district_id = district.district_id WHERE loan.duration = 60;\t----- bird -----\tfinancial",
    "125": "SELECT DISTINCT d.A2 AS district, ((d.A13 - d.A12) / d.A12) * 100 AS unemployment_increment_rate FROM district AS d INNER JOIN client AS c ON d.district_id = c.district_id INNER JOIN disp AS dp ON c.client_id = dp.client_id INNER JOIN account AS a ON dp.account_id = a.account_id INNER JOIN loan AS l ON a.account_id = l.account_id WHERE l.status = 'D'\t----- bird -----\tfinancial",
    "126": "SELECT CAST(SUM(CASE WHEN T1.A2 = 'Decin' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.account_id) FROM account AS T1 WHERE strftime('%Y', T1.date) = '1993'\t----- bird -----\tfinancial",
    "127": "SELECT account_id FROM account WHERE frequency = 'POPLATEK MESICNE'\t----- bird -----\tfinancial",
    "128": "SELECT T1.A2, COUNT(T2.account_id) AS num_female_account_holders FROM district AS T1 INNER JOIN client AS T2 ON T1.district_id = T2.district_id WHERE T2.gender = 'F' GROUP BY T1.A2 ORDER BY num_female_account_holders DESC LIMIT 10\t----- bird -----\tfinancial",
    "129": "SELECT T1.A2, SUM(T2.amount) AS total_withdrawals FROM district AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id INNER JOIN trans AS T3 ON T2.account_id = T3.account_id WHERE T3.type = 'VYDAJ' AND T3.date LIKE '1996-01%' GROUP BY T1.A2 ORDER BY total_withdrawals DESC LIMIT 10\t----- bird -----\tfinancial",
    "130": "SELECT COUNT(DISTINCT T1.client_id) FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN account AS T3 ON T2.account_id = T3.account_id INNER JOIN district AS T4 ON T1.district_id = T4.district_id WHERE T4.A3 = 'South Bohemia' AND T2.type != 'credit card'\t----- bird -----\tfinancial",
    "131": "SELECT A3 FROM district WHERE district_id IN (SELECT district_id FROM account WHERE account_id IN (SELECT account_id FROM loan WHERE status = 'C' OR status = 'D')) ORDER BY district_id DESC LIMIT 1;\t----- bird -----\tfinancial",
    "132": "SELECT AVG(amount) FROM loan WHERE account_id IN (SELECT account_id FROM disp WHERE client_id IN (SELECT client_id FROM client WHERE gender = 'M'))\t----- bird -----\tfinancial",
    "133": "SELECT A2, A4 FROM district WHERE A13 = (SELECT MAX(A13) FROM district WHERE A13 IS NOT NULL AND A13 <> 0)\t----- bird -----\tfinancial",
    "134": "SELECT COUNT(account_id) FROM account WHERE district_id IN (SELECT district_id FROM district WHERE A16 = (SELECT MAX(A16) FROM district WHERE A16 = 1996))\t----- bird -----\tfinancial",
    "135": "SELECT COUNT(T1.account_id) FROM trans AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN card AS T3 ON T2.account_id = T3.account_id WHERE T1.balance < 0 AND T1.operation = 'VYBER KARTOU' AND T2.frequency = 'POPLATEK MESICNE'\t----- bird -----\tfinancial",
    "136": "SELECT COUNT(T1.loan_id) FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T1.amount >= 250000 AND T2.frequency = 'POPLATEK MESICNE' AND T1.date BETWEEN '1995-01-01' AND '1997-12-31' AND T1.status = 'approved'\t----- bird -----\tfinancial",
    "137": "SELECT COUNT(account_id) FROM loan WHERE status = 'C' AND account_id IN (SELECT account_id FROM account WHERE district_id = 1)\t----- bird -----\tfinancial",
    "138": "SELECT COUNT(T1.client_id) FROM client T1 INNER JOIN district T2 ON T1.district_id = T2.district_id WHERE T2.district_id = ( SELECT district_id FROM district ORDER BY A15 DESC LIMIT 1 OFFSET 1 ) AND T1.gender = 'M'\t----- bird -----\tfinancial",
    "139": "SELECT COUNT(T1.card_id) FROM card AS T1 INNER JOIN disp AS T2 ON T1.disp_id = T2.disp_id WHERE T1.type = 'gold' AND T2.type = 'disponent'\t----- bird -----\tfinancial",
    "140": "SELECT COUNT(account_id) FROM account WHERE district_id = (SELECT district_id FROM district WHERE A2 = 'Pisek')\t----- bird -----\tfinancial",
    "141": "SELECT T1.A2, SUM(T2.amount) FROM district AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id INNER JOIN trans AS T3 ON T2.account_id = T3.account_id WHERE T3.date BETWEEN '1997-01-01' AND '1997-12-31' GROUP BY T1.A2 HAVING SUM(T3.amount) > 10000\t----- bird -----\tfinancial",
    "142": "SELECT T1.account_id FROM `order` AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T1.k_symbol = 'SIPO' AND T3.A4 = 'Pisek'\t----- bird -----\tfinancial",
    "143": "SELECT T1.account_id FROM account AS T1 INNER JOIN disp AS T2 ON T1.account_id = T2.account_id INNER JOIN card AS T3 ON T2.disp_id = T3.disp_id INNER JOIN client AS T4 ON T2.client_id = T4.client_id INNER JOIN district AS T5 ON T4.district_id = T5.district_id WHERE T3.type = 'gold' AND T3.type = 'junior'\t----- bird -----\tfinancial",
    "144": "SELECT AVG(amount) FROM trans WHERE operation = 'VYBER KARTOU' AND STRFTIME('%Y', date) = '2021'\t----- bird -----\tfinancial",
    "145": "SELECT T1.client_id FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN account AS T3 ON T2.account_id = T3.account_id INNER JOIN trans AS T4 ON T3.account_id = T4.account_id WHERE T4.type = 'credit card withdrawal' AND STRFTIME('%Y', T4.date) = '1998' GROUP BY T1.client_id HAVING SUM(T4.amount) < (SELECT AVG(T5.amount) FROM trans AS T5 WHERE T5.type = 'credit card withdrawal' AND STRFTIME('%Y', T5.date) = '1998')\t----- bird -----\tfinancial",
    "146": "SELECT client.client_id FROM client JOIN disp ON client.client_id = disp.client_id JOIN card ON disp.disp_id = card.disp_id JOIN account ON disp.account_id = account.account_id JOIN loan ON account.account_id = loan.account_id WHERE client.gender = 'F' AND card.type = 'credit'\t----- bird -----\tfinancial",
    "147": "SELECT COUNT(T1.client_id) FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.gender = 'F' AND T2.A3 = 'south Bohemia'\t----- bird -----\tfinancial",
    "148": "SELECT T1.account_id FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id INNER JOIN disp AS T3 ON T1.account_id = T3.account_id WHERE T2.A2 = 'Tabor' AND T3.type = 'OWNER'\t----- bird -----\tfinancial",
    "149": "SELECT DISTINCT type FROM disp INNER JOIN account ON disp.account_id = account.account_id INNER JOIN district ON account.district_id = district.district_id WHERE type != 'OWNER' AND A11 > 8000 AND A11 <= 9000\t----- bird -----\tfinancial",
    "150": "SELECT COUNT(DISTINCT T1.account_id) FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id INNER JOIN trans AS T3 ON T1.account_id = T3.account_id WHERE T2.A3 = 'North Bohemia' AND T3.bank = 'AB'\t----- bird -----\tfinancial",
    "151": "SELECT A2 FROM district WHERE district_id IN (SELECT district_id FROM account WHERE account_id IN (SELECT account_id FROM trans WHERE type = 'VYDAJ'))\t----- bird -----\tfinancial",
    "152": "SELECT AVG(T1.crime_count) AS A15 FROM ( SELECT T2.A3, COUNT(T1.report_no) AS crime_count FROM Crime AS T1 INNER JOIN Ward AS T2 ON T1.ward_no = T2.ward_no WHERE T1.date BETWEEN '1995-01-01' AND '1995-12-31' GROUP BY T2.A3 HAVING COUNT(T1.report_no) > 4000 ) AS T1 INNER JOIN district AS T2 ON T1.A3 = T2.A3 INNER JOIN account AS T3 ON T2.district_id = T3.district_id WHERE T3.date >= '1997-01-01'\t----- bird -----\tfinancial",
    "153": "SELECT COUNT(T1.card_id) FROM card AS T1 INNER JOIN disp AS T2 ON T1.disp_id = T2.disp_id WHERE T1.type = 'classic' AND T2.type = 'OWNER'\t----- bird -----\tfinancial",
    "154": "SELECT COUNT(T1.client_id) FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.gender = 'M' AND T2.A2 = 'Hl.m. Praha'\t----- bird -----\tfinancial",
    "155": "SELECT CAST(COUNT(CASE WHEN type = 'gold' AND issued < '1998-01-01' THEN 1 END) AS REAL) * 100 / COUNT(card_id) FROM card\t----- bird -----\tfinancial",
    "156": "SELECT T3.owner_name FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN disp AS T3 ON T2.account_id = T3.account_id GROUP BY T3.owner_name ORDER BY MAX(T1.amount) DESC LIMIT 1\t----- bird -----\tfinancial",
    "157": "SELECT A15 FROM district WHERE district_id = 532\t----- bird -----\tfinancial",
    "158": "SELECT district_id FROM account WHERE account_id = ( SELECT account_id FROM `order` WHERE order_id = 33333 )\t----- bird -----\tfinancial",
    "159": "SELECT T1.trans_id, T1.date, T1.amount FROM trans AS T1 INNER JOIN disp AS T2 ON T1.account_id = T2.account_id WHERE T1.type = 'VYBER' AND T2.client_id = 3356\t----- bird -----\tfinancial",
    "160": "SELECT COUNT(T1.account_id) FROM account AS T1 INNER JOIN loan AS T2 ON T1.account_id = T2.account_id WHERE T1.frequency = 'POPLATEK TYDNE' AND T2.amount < 200000\t----- bird -----\tfinancial",
    "161": "SELECT type FROM card JOIN disp ON card.disp_id = disp.disp_id JOIN client ON disp.client_id = client.client_id WHERE client.client_id = 13539\t----- bird -----\tfinancial",
    "162": "SELECT A3 FROM district WHERE district_id = (SELECT district_id FROM client WHERE client_id = 3541)\t----- bird -----\tfinancial",
    "163": "SELECT T2.A2 FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id INNER JOIN loan AS T3 ON T1.account_id = T3.account_id WHERE T3.status = 'A' GROUP BY T2.A2 ORDER BY COUNT(T1.account_id) DESC LIMIT 1\t----- bird -----\tfinancial",
    "164": "SELECT client_id FROM disp WHERE disp_id = (SELECT disp_id FROM account WHERE account_id = (SELECT account_id FROM `order` WHERE order_id = 32423))\t----- bird -----\tfinancial",
    "165": "SELECT * FROM trans WHERE account_id IN (SELECT account_id FROM account WHERE district_id = 5)\t----- bird -----\tfinancial",
    "166": "SELECT COUNT(*) FROM account WHERE district_id = (SELECT district_id FROM district WHERE A2 = 'Jesenik')\t----- bird -----\tfinancial",
    "167": "SELECT client_id FROM client WHERE client_id IN (SELECT client_id FROM disp WHERE type = 'junior' AND disp_id IN (SELECT disp_id FROM card WHERE issued > '1997-01-01'))\t----- bird -----\tfinancial",
    "168": "SELECT COUNT(client_id) * 100.0 / (SELECT COUNT(client_id) FROM client WHERE district_id IN (SELECT district_id FROM district WHERE A11 > 10000)) AS percentage_female_clients FROM client WHERE gender = 'F' AND district_id IN (SELECT district_id FROM district WHERE A11 > 10000)\t----- bird -----\tfinancial",
    "169": "SELECT ((SELECT SUM(amount) FROM loan WHERE account_id IN (SELECT account_id FROM disp WHERE client_id IN (SELECT client_id FROM client WHERE gender = 'M')) AND date BETWEEN '1996-01-01' AND '1996-12-31') - (SELECT SUM(amount) FROM loan WHERE account_id IN (SELECT account_id FROM disp WHERE client_id IN (SELECT client_id FROM client WHERE gender = 'M')) AND date BETWEEN '1997-01-01' AND '1997-12-31')) * 100.0 / (SELECT SUM(amount) FROM loan WHERE account_id IN (SELECT account_id FROM disp WHERE client_id IN (SELECT client_id FROM client WHERE gender = 'M')) AND date BETWEEN '1996-01-01' AND '1996-12-31') as growth_rate;\t----- bird -----\tfinancial",
    "170": "SELECT COUNT(trans_id) FROM trans WHERE operation = 'VYBER KARTOU' AND STRFTIME('%Y', date) > '1995'\t----- bird -----\tfinancial",
    "171": "SELECT SUM(CASE WHEN T1.A3 = 'North Bohemia' THEN T1.A16 ELSE 0 END) - SUM(CASE WHEN T1.A3 = 'East Bohemia' THEN T1.A16 ELSE 0 END) AS \"Difference in Number of Crimes Committed in 1996\" FROM district AS T1 WHERE T1.A16 IS NOT NULL AND T1.A16 <> 0\t----- bird -----\tfinancial",
    "172": "SELECT COUNT(DISTINCT disp_id) FROM disp WHERE account_id >= 1 AND account_id <= 10 AND type IN ('OWNER', 'DISPONENT')\t----- bird -----\tfinancial",
    "173": "SELECT COUNT(*) FROM trans WHERE account_id = 3 AND operation = 'account_statement' SELECT SUM(amount) FROM trans WHERE account_id = 3 AND type = 'debit' AND k_symbol = '3539'\t----- bird -----\tfinancial",
    "174": "SELECT birth_date FROM client WHERE client_id = 130\t----- bird -----\tfinancial",
    "175": "SELECT COUNT(*) FROM disp WHERE type = 'owner' AND account_id IN (SELECT account_id FROM account WHERE frequency = 'POPLATEK PO OBRATU')\t----- bird -----\tfinancial",
    "176": "SELECT SUM(amount) AS total_debt, status FROM loan WHERE account_id = (SELECT account_id FROM disp WHERE client_id = 992) GROUP BY status\t----- bird -----\tfinancial",
    "177": "SELECT SUM(T1.amount) AS total_amount, T2.gender FROM trans AS T1 INNER JOIN disp AS T2 ON T1.account_id = T2.account_id WHERE T2.client_id = 4 AND T1.trans_id = 851\t----- bird -----\tfinancial",
    "178": "SELECT C.type FROM card AS C INNER JOIN disp AS D ON C.disp_id = D.disp_id WHERE D.client_id = 9\t----- bird -----\tfinancial",
    "179": "SELECT SUM(amount) FROM trans WHERE account_id = 617 AND date LIKE '1998%'\t----- bird -----\tfinancial",
    "180": "SELECT client.client_id, client.birth_date FROM client JOIN district ON client.district_id = district.district_id WHERE client.birth_date BETWEEN '1983-01-01' AND '1987-12-31' AND district.A6 = 'East Bohemia';\t----- bird -----\tfinancial",
    "181": "SELECT client_id FROM client WHERE gender = 'F' ORDER BY client_id DESC LIMIT 3\t----- bird -----\tfinancial",
    "182": "SELECT COUNT(T1.client_id) FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN account AS T3 ON T2.account_id = T3.account_id INNER JOIN trans AS T4 ON T3.account_id = T4.account_id WHERE T1.gender = 'M' AND T1.birth_date BETWEEN '1974-01-01' AND '1976-12-31' AND T4.type = 'SIPO' AND T4.amount > 4000\t----- bird -----\tfinancial",
    "183": "SELECT COUNT(account_id) FROM account INNER JOIN district ON account.district_id = district.district_id WHERE district.A2 = 'Beroun' AND account.date > '1996-01-01'\t----- bird -----\tfinancial",
    "184": "SELECT COUNT(client_id) FROM client WHERE gender = 'F' AND client_id IN (SELECT client_id FROM disp WHERE type = 'junior credit card')\t----- bird -----\tfinancial",
    "185": "SELECT CAST(COUNT(CASE WHEN C.gender = 'F' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(C.client_id) FROM client AS C INNER JOIN account AS A ON C.district_id = A.district_id INNER JOIN district AS D ON C.district_id = D.district_id WHERE D.A3 = 'Prague'\t----- bird -----\tfinancial",
    "186": "SELECT CAST(COUNT(CASE WHEN T1.gender = 'M' THEN 1 END) AS REAL) * 100 / COUNT(T1.client_id) FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN account AS T3 ON T2.account_id = T3.account_id WHERE T3.frequency = 'POPLATEK TYDNE'\t----- bird -----\tfinancial",
    "187": "SELECT COUNT(DISTINCT T3.client_id) FROM account AS T1 INNER JOIN disp AS T2 ON T1.account_id = T2.account_id INNER JOIN client AS T3 ON T2.client_id = T3.client_id WHERE T1.frequency = 'POPLATEK TYDNE'\t----- bird -----\tfinancial",
    "188": "SELECT T1.account_id FROM account AS T1 INNER JOIN loan AS T2 ON T1.account_id = T2.account_id WHERE T2.duration > 24 AND T2.amount = (SELECT MIN(amount) FROM loan WHERE duration > 24) AND T1.date < '1997-01-01'\t----- bird -----\tfinancial",
    "189": "SELECT account_id FROM disp WHERE client_id IN (SELECT client_id FROM client WHERE gender = 'F' AND birth_date = (SELECT MAX(birth_date) FROM client) AND district_id IN (SELECT district_id FROM district WHERE A11 = (SELECT MIN(A11) FROM district)))\t----- bird -----\tfinancial",
    "190": "SELECT COUNT(T1.client_id) FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.birth_date LIKE '192%' AND T2.A3 = 'east Bohemia'\t----- bird -----\tfinancial",
    "191": "SELECT COUNT(account_id) FROM loan INNER JOIN account ON loan.account_id = account.account_id WHERE duration = 24 AND frequency = 'POPLATEK TYDNE'\t----- bird -----\tfinancial",
    "192": "SELECT AVG(amount) FROM loan WHERE status = 'C' AND account_id IN (SELECT account_id FROM trans WHERE k_symbol = 'POPLATEK PO OBRATU')\t----- bird -----\tfinancial",
    "193": "SELECT T1.client_id, T2.A2, T2.A3, T2.A4, T2.A5, T2.A6, T2.A7, T2.A8, T2.A9, T2.A10, T2.A11, T2.A12, T2.A13, T2.A14, T2.A15, T2.A16 FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.client_id IN (SELECT T3.client_id FROM disp AS T3 INNER JOIN account AS T4 ON T3.account_id = T4.account_id WHERE T4.frequency = 'permanent' OR T4.account_id IN (SELECT T5.account_id FROM loan AS T5 WHERE T5.status = 'approved'))\t----- bird -----\tfinancial",
    "194": "SELECT T3.client_id, T2.birth_date FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN card AS T3 ON T2.disp_id = T3.disp_id WHERE T3.type = 'Gold' AND T3.card_id IN (SELECT account_id FROM loan)\t----- bird -----\tfinancial",
    "195": "SELECT T.bond_type FROM bond AS T GROUP BY T.bond_type ORDER BY COUNT(T.bond_type) DESC LIMIT 1\t----- bird -----\ttoxicology",
    "196": "SELECT COUNT(DISTINCT T1.molecule_id) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'cl' AND T2.label = '-'\t----- bird -----\ttoxicology",
    "197": "SELECT AVG(CASE WHEN T1.element = 'o' THEN 1 ELSE 0 END) FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.bond_type = '-'\t----- bird -----\ttoxicology",
    "198": "SELECT SUM(CASE WHEN T4.label = '+' AND T3.bond_type = '-' THEN 1 ELSE 0 END) / COUNT(T1.atom_id) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN bond AS T3 ON T2.molecule_id = T3.molecule_id INNER JOIN connected AS T4 ON T1.atom_id = T4.atom_id\t----- bird -----\ttoxicology",
    "199": "SELECT COUNT(T1.atom_id) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'na' AND T2.label = '-'\t----- bird -----\ttoxicology",
    "200": "SELECT T2.label FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '#' AND T2.label = '+'\t----- bird -----\ttoxicology",
    "201": "SELECT CAST(SUM(CASE WHEN T1.element = 'c' AND T2.bond_type = ' = ' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.atom_id) FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id\t----- bird -----\ttoxicology",
    "202": "SELECT COUNT(*) FROM bond WHERE bond_type = '#'\t----- bird -----\ttoxicology",
    "203": "SELECT COUNT(*) FROM atom WHERE element != 'br'\t----- bird -----\ttoxicology",
    "204": "SELECT COUNT(*) FROM molecule WHERE molecule_id BETWEEN 'TR000' AND 'TR099' AND label = '+'\t----- bird -----\ttoxicology",
    "205": "SELECT T1.molecule_id FROM atom AS T1 WHERE T1.element = 'si'\t----- bird -----\ttoxicology",
    "206": "SELECT element FROM atom WHERE atom_id IN ( SELECT atom_id FROM connected WHERE bond_id = 'TR004_8_9' )\t----- bird -----\ttoxicology",
    "207": "SELECT element FROM atom WHERE molecule_id IN (SELECT molecule_id FROM bond WHERE bond_type = ' = ')\t----- bird -----\ttoxicology",
    "208": "SELECT T.label FROM (SELECT T3.label, COUNT(T3.label) AS num FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN connected AS T3 ON T1.atom_id = T3.atom_id WHERE T1.element = 'h' GROUP BY T3.label) AS T ORDER BY T.num DESC LIMIT 1\t----- bird -----\ttoxicology",
    "209": "SELECT bond_type FROM bond INNER JOIN atom ON bond.molecule_id = atom.molecule_id WHERE atom.element = 'te'\t----- bird -----\ttoxicology",
    "210": "SELECT T1.atom_id, T2.atom_id FROM connected AS T1 INNER JOIN bond AS T2 ON T1.bond_id = T2.bond_id WHERE T2.bond_type = '-'\t----- bird -----\ttoxicology",
    "211": "SELECT T1.atom_id, T2.atom_id2 FROM connected AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN atom AS T3 ON T1.atom_id = T3.atom_id INNER JOIN atom AS T4 ON T2.atom_id2 = T4.atom_id INNER JOIN molecule AS T5 ON T3.molecule_id = T5.molecule_id INNER JOIN molecule AS T6 ON T4.molecule_id = T6.molecule_id WHERE T5.label = '-' AND T6.label = '-'\t----- bird -----\ttoxicology",
    "212": "SELECT element, COUNT(*) AS num_elements FROM atom WHERE molecule_id IN (SELECT molecule_id FROM molecule WHERE label = '-') GROUP BY element ORDER BY num_elements ASC LIMIT 1\t----- bird -----\ttoxicology",
    "213": "SELECT B.bond_type FROM bond AS B INNER JOIN connected AS C ON B.bond_id = C.bond_id WHERE C.atom_id = 'TR004_8' AND C.atom_id2 = 'TR004_20'\t----- bird -----\ttoxicology",
    "214": "SELECT T2.label FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.element != 'sn' AND T1.label = '+' OR T1.label = '-'\t----- bird -----\ttoxicology",
    "215": "SELECT COUNT(*) FROM atom AS A INNER JOIN molecule AS M ON A.molecule_id = M.molecule_id INNER JOIN bond AS B ON M.molecule_id = B.molecule_id WHERE (A.element = 'i' OR A.element = 's') AND B.bond_type = '-'\t----- bird -----\ttoxicology",
    "216": "SELECT atom_id, atom_id2 FROM connected INNER JOIN bond ON connected.bond_id = bond.bond_id WHERE bond.bond_type = '#'\t----- bird -----\ttoxicology",
    "217": "SELECT T1.atom_id FROM connected AS T1 INNER JOIN atom AS T2 ON T1.atom_id2 = T2.atom_id INNER JOIN molecule AS T3 ON T2.molecule_id = T3.molecule_id WHERE T3.molecule_id = 'TR181'\t----- bird -----\ttoxicology",
    "218": "SELECT CAST(SUM(CASE WHEN T1.element != 'f' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.molecule_id) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN bond AS T3 ON T2.molecule_id = T3.molecule_id WHERE T2.label = '+'\t----- bird -----\ttoxicology",
    "219": "SELECT CAST(SUM(CASE WHEN B.bond_type = '#' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(B.bond_id) FROM bond AS B INNER JOIN molecule AS M ON B.molecule_id = M.molecule_id WHERE M.label = '+';\t----- bird -----\ttoxicology",
    "220": "SELECT element FROM atom WHERE molecule_id = 'TR000' ORDER BY element LIMIT 3\t----- bird -----\ttoxicology",
    "221": "SELECT a.atom_id, b.atom_id FROM connected c JOIN bond b ON c.bond_id = b.bond_id JOIN atom a ON c.atom_id = a.atom_id WHERE b.molecule_id = 'TR001' AND b.bond_id = 'TR001_2_6'\t----- bird -----\ttoxicology",
    "222": "SELECT COUNT(CASE WHEN T1.label = '+' THEN T2.molecule_id END) - COUNT(CASE WHEN T1.label = '-' THEN T2.molecule_id END) AS diff FROM molecule AS T1 LEFT JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id\t----- bird -----\ttoxicology",
    "223": "SELECT atom_id, atom_id2 FROM connected WHERE bond_id = 'TR_000_2_5'\t----- bird -----\ttoxicology",
    "224": "SELECT bond_id FROM connected WHERE atom_id2 = 'TR000_2'\t----- bird -----\ttoxicology",
    "225": "SELECT T1.label FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.bond_type = ' = ' ORDER BY T1.label ASC LIMIT 5\t----- bird -----\ttoxicology",
    "226": "SELECT CAST(SUM(CASE WHEN T2.bond_type = ' = ' THEN 1.0 ELSE 0 END) AS REAL) * 100 / COUNT(T2.bond_id) FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.molecule_id = 'TR008'\t----- bird -----\ttoxicology",
    "227": "SELECT CAST(SUM(CASE WHEN label = '+' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(molecule_id) FROM molecule\t----- bird -----\ttoxicology",
    "228": "SELECT CAST(SUM(CASE WHEN T1.element = 'h' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.atom_id) FROM atom AS T1 WHERE T1.molecule_id = 'TR206'\t----- bird -----\ttoxicology",
    "229": "SELECT bond.bond_type FROM bond INNER JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE molecule.molecule_id = 'TR000'\t----- bird -----\ttoxicology",
    "230": "SELECT T1.element FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.molecule_id = 'TR060' AND T2.label = '+' AND T1.element IN ('cl', 'c', 'h', 'o', 's', 'n', 'p', 'na', 'br', 'f', 'i', 'sn', 'pb', 'te', 'ca')\t----- bird -----\ttoxicology",
    "231": "SELECT bond_type, CASE WHEN T2.label = '+' THEN 'carcinogenic' WHEN T2.label = '-' THEN 'non-carcinogenic' END AS carcinogenic_status FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.molecule_id = 'TR018' GROUP BY bond_type ORDER BY COUNT(bond_type) DESC LIMIT 1\t----- bird -----\ttoxicology",
    "232": "SELECT label FROM molecule WHERE molecule_id IN ( SELECT molecule_id FROM bond WHERE bond_type = '-' AND molecule_id IN ( SELECT molecule_id FROM connected GROUP BY molecule_id HAVING COUNT(DISTINCT bond_id) = 1 ) ) AND label = '-' ORDER BY label ASC LIMIT 3\t----- bird -----\ttoxicology",
    "233": "SELECT B1.bond_id, B2.bond_id FROM bond AS B1 INNER JOIN connected AS C ON B1.molecule_id = C.bond_id INNER JOIN bond AS B2 ON C.atom_id2 = B2.molecule_id WHERE B1.molecule_id = 'TR006' ORDER BY B1.bond_id, B2.bond_id LIMIT 2\t----- bird -----\ttoxicology",
    "234": "SELECT COUNT(*) FROM connected c JOIN bond b ON c.bond_id = b.bond_id WHERE (c.atom_id = 'TR009_12' OR c.atom_id2 = 'TR009_12') AND b.molecule_id = 'TR009'\t----- bird -----\ttoxicology",
    "235": "SELECT COUNT(DISTINCT T1.molecule_id) FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '+' AND T2.element = 'br'\t----- bird -----\ttoxicology",
    "236": "SELECT B.bond_type, A.atom_id, C.atom_id2 FROM bond AS B INNER JOIN connected AS C ON B.bond_id = C.bond_id INNER JOIN atom AS A ON C.atom_id = A.atom_id WHERE B.bond_id = 'TR001_6_9'\t----- bird -----\ttoxicology",
    "237": "SELECT T2.label, CASE WHEN T2.label = '+' THEN 'Carcinogenic' ELSE 'Not Carcinogenic' END AS Carcinogenicity FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.atom_id = 'TR001_10'\t----- bird -----\ttoxicology",
    "238": "SELECT COUNT(DISTINCT molecule_id) FROM bond WHERE bond_type = '#'\t----- bird -----\ttoxicology",
    "239": "SELECT COUNT(bond_id) FROM connected WHERE atom_id = 'TR%_19' OR atom_id2 = 'TR%_19'\t----- bird -----\ttoxicology",
    "240": "SELECT T1.element FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.molecule_id = 'TR004' AND T1.element IN ('cl', 'c', 'h', 'o', 's', 'n', 'p', 'na', 'br', 'f', 'i', 'sn', 'pb', 'te', 'ca')\t----- bird -----\ttoxicology",
    "241": "SELECT COUNT(*) FROM molecule WHERE label = '-'\t----- bird -----\ttoxicology",
    "242": "SELECT T2.label FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE SUBSTRING(T1.atom_id, 7, 2) BETWEEN 21 AND 25 AND T2.label = '+'\t----- bird -----\ttoxicology",
    "243": "SELECT T1.bond_id FROM bond AS T1 INNER JOIN connected AS T2 ON T1.molecule_id = T2.bond_id INNER JOIN atom AS T3 ON T2.atom_id = T3.atom_id INNER JOIN atom AS T4 ON T2.atom_id2 = T4.atom_id WHERE T3.element = 'p' AND T4.element = 'n'\t----- bird -----\ttoxicology",
    "244": "SELECT T2.label FROM molecule AS T2 INNER JOIN bond AS T1 ON T2.molecule_id = T1.molecule_id WHERE T1.bond_type = ' = ' GROUP BY T2.label ORDER BY COUNT(T1.bond_id) DESC LIMIT 1\t----- bird -----\ttoxicology",
    "245": "SELECT CAST(COUNT(bond_id) AS REAL) / COUNT(atom_id) FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE element = 'i'\t----- bird -----\ttoxicology",
    "246": "SELECT bond_type, bond_id FROM bond INNER JOIN connected ON bond.molecule_id = connected.bond_id WHERE connected.atom_id = 'atom_45' OR connected.atom_id2 = 'atom_45'\t----- bird -----\ttoxicology",
    "247": "SELECT element FROM atom WHERE element IN ('cl', 'c', 'h', 'o', 's', 'n', 'p', 'na', 'br', 'f', 'i', 'sn', 'pb', 'te', 'ca') AND atom_id NOT IN (SELECT atom_id FROM connected)\t----- bird -----\ttoxicology",
    "248": "SELECT T1.atom_id, T2.element FROM connected AS T1 INNER JOIN atom AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T1.bond_id = T3.bond_id WHERE T3.bond_type = '#' AND T3.molecule_id = 'TR447'\t----- bird -----\ttoxicology",
    "249": "SELECT element FROM atom WHERE molecule_id = 'TR144_8_19'\t----- bird -----\ttoxicology",
    "250": "SELECT T2.label AS Carcinogenic_Molecule, COUNT(CASE WHEN T3.bond_type = ' = ' THEN 1 END) AS Double_Bonds FROM molecule AS T2 INNER JOIN bond AS T3 ON T2.molecule_id = T3.molecule_id WHERE T2.label = '+' GROUP BY T2.label ORDER BY COUNT(CASE WHEN T3.bond_type = ' = ' THEN 1 END) DESC LIMIT 1\t----- bird -----\ttoxicology",
    "251": "SELECT T1.element FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+' GROUP BY T1.element ORDER BY COUNT(T1.atom_id) ASC LIMIT 1\t----- bird -----\ttoxicology",
    "252": "SELECT T2.atom_id2 FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T2.bond_id IS NOT NULL AND T2.atom_id IN (SELECT atom_id FROM atom WHERE element = 'pb')\t----- bird -----\ttoxicology",
    "253": "SELECT element FROM atom INNER JOIN bond ON atom.molecule_id = bond.molecule_id WHERE bond.bond_type = '#' AND (element = 'cl' OR element = 'c' OR element = 'h' OR element = 'o' OR element = 's' OR element = 'n' OR element = 'p' OR element = 'na' OR element = 'br' OR element = 'f' OR element = 'i' OR element = 'sn' OR element = 'pb' OR element = 'te' OR element = 'ca')\t----- bird -----\ttoxicology",
    "254": "SELECT CAST(COUNT(b.bond_id) AS REAL) * 100 / (SELECT COUNT(a.atom_id) FROM atom a INNER JOIN connected c ON a.atom_id = c.atom_id GROUP BY a.element ORDER BY COUNT(a.atom_id) DESC LIMIT 1) FROM bond b INNER JOIN connected c ON b.bond_id = c.bond_id INNER JOIN atom a ON c.atom_id = a.atom_id GROUP BY a.element ORDER BY COUNT(a.atom_id) DESC LIMIT 1;\t----- bird -----\ttoxicology",
    "255": "SELECT CAST(SUM(CASE WHEN T2.label = '+' THEN 1 ELSE 0 END) AS REAL) / COUNT(T1.bond_id) FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '-'\t----- bird -----\ttoxicology",
    "256": "SELECT COUNT(*) FROM atom WHERE element IN ('c', 'h')\t----- bird -----\ttoxicology",
    "257": "SELECT T2.atom_id2 FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T1.element = 'sulfur'\t----- bird -----\ttoxicology",
    "258": "SELECT T2.bond_type FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'sn'\t----- bird -----\ttoxicology",
    "259": "SELECT COUNT(DISTINCT A.element) FROM atom A INNER JOIN bond B ON A.molecule_id = B.molecule_id WHERE B.bond_type = '-'\t----- bird -----\ttoxicology",
    "260": "SELECT COUNT(DISTINCT A.atom_id) FROM atom A JOIN bond B ON A.molecule_id = B.molecule_id JOIN connected C ON A.atom_id = C.atom_id JOIN connected C2 ON A.atom_id = C2.atom_id2 WHERE B.bond_type = '#' AND (A.element = 'p' OR A.element = 'br')\t----- bird -----\ttoxicology",
    "261": "SELECT T2.bond_id FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '+'\t----- bird -----\ttoxicology",
    "262": "SELECT T1.molecule_id FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '-' AND T2.label = '-'\t----- bird -----\ttoxicology",
    "263": "SELECT CAST(SUM(CASE WHEN T1.element = 'cl' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.atom_id) FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.bond_type = '-'\t----- bird -----\ttoxicology",
    "264": "SELECT molecule_id, CASE WHEN label = '+' THEN 'carcinogenic' WHEN label = '-' THEN 'non-carcinogenic' END AS Label FROM molecule WHERE molecule_id IN ('TR000', 'TR001', 'TR002')\t----- bird -----\ttoxicology",
    "265": "SELECT molecule_id FROM molecule WHERE label = '-'\t----- bird -----\ttoxicology",
    "266": "SELECT COUNT(*) FROM molecule WHERE molecule_id BETWEEN 'TR000' AND 'TR030' AND label = '+'\t----- bird -----\ttoxicology",
    "267": "SELECT T2.bond_type FROM bond AS T2 INNER JOIN molecule AS T1 ON T2.molecule_id = T1.molecule_id WHERE T1.molecule_id BETWEEN 'TR000' AND 'TR050'\t----- bird -----\ttoxicology",
    "268": "SELECT element FROM atom WHERE molecule_id = (SELECT molecule_id FROM bond WHERE bond_id = 'TR001_10_11')\t----- bird -----\ttoxicology",
    "269": "SELECT COUNT(bond_id) FROM atom WHERE element = 'i'\t----- bird -----\ttoxicology",
    "270": "SELECT MAX(T2.label) AS most_carcinogenic FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'Ca'\t----- bird -----\ttoxicology",
    "271": "SELECT COUNT(*) FROM connected AS T1 INNER JOIN atom AS T2 ON T1.atom_id = T2.atom_id INNER JOIN atom AS T3 ON T1.atom_id2 = T3.atom_id WHERE T1.bond_id = 'TR001_1_8' AND (T2.element = 'cl' OR T3.element = 'cl') AND (T2.element = 'c' OR T3.element = 'c')\t----- bird -----\ttoxicology",
    "272": "SELECT molecule_id FROM bond JOIN molecule ON bond.molecule_id = molecule.molecule_id JOIN atom ON bond.molecule_id = atom.molecule_id WHERE bond_type = '#' AND element = 'c' AND label = '-'\t----- bird -----\ttoxicology",
    "273": "SELECT CAST(COUNT(CASE WHEN T1.element = 'cl' THEN 1 END) AS REAL) * 100 / COUNT(T1.molecule_id) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+'\t----- bird -----\ttoxicology",
    "274": "SELECT T1.element FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.molecule_id = 'TR001'\t----- bird -----\ttoxicology",
    "275": "SELECT T2.molecule_id FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = ' = '\t----- bird -----\ttoxicology",
    "276": "SELECT T1.atom_id, T2.atom_id2 FROM connected AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id INNER JOIN bond AS T3 ON T1.bond_id = T3.bond_id WHERE T3.bond_type = '#'\t----- bird -----\ttoxicology",
    "277": "SELECT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_id = 'TR005_16_26' AND T1.element IN ('cl', 'c', 'h', 'o', 's', 'n', 'p', 'na', 'br', 'f', 'i', 'sn', 'pb', 'te', 'ca')\t----- bird -----\ttoxicology",
    "278": "SELECT COUNT(DISTINCT T1.molecule_id) FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '-' AND T2.label = '-'\t----- bird -----\ttoxicology",
    "279": "SELECT m.label FROM bond AS b JOIN molecule AS m ON b.molecule_id = m.molecule_id WHERE b.bond_id = 'TR001_10_11'\t----- bird -----\ttoxicology",
    "280": "SELECT T1.bond_id, CASE WHEN T2.label = '+' THEN 'Carcinogenic' WHEN T2.label = '-' THEN 'Non-carcinogenic' END AS Carcinogenicity FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '#'\t----- bird -----\ttoxicology",
    "281": "SELECT T1.element, COUNT(T1.element) AS element_count FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+' AND SUBSTR(T1.atom_id, 7, 1) = '4' AND T1.element IN ('cl', 'c', 'h', 'o', 's', 'n', 'p', 'na', 'br', 'f', 'i', 'sn', 'pb', 'te', 'ca') GROUP BY T1.element;\t----- bird -----\ttoxicology",
    "282": "SELECT CAST(SUM(CASE WHEN T1.element = 'H' THEN 1 ELSE 0 END) AS REAL) / COUNT(T1.element) AS Hydrogen_ratio, T2.label FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.molecule_id = 'TR006'\t----- bird -----\ttoxicology",
    "283": "SELECT CASE WHEN T1.label = '+' THEN 'Carcinogenic' ELSE 'Non-carcinogenic' END AS Carcinogenicity FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.element = 'ca'\t----- bird -----\ttoxicology",
    "284": "SELECT Bond.bond_type FROM Bond INNER JOIN Atom ON Bond.molecule_id = Atom.molecule_id WHERE Atom.element = 'Te'\t----- bird -----\ttoxicology",
    "285": "SELECT T1.element FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN connected AS T3 ON T1.atom_id = T3.atom_id WHERE T2.bond_id = 'TR001_10_11' OR T3.bond_id = 'TR001_10_11'\t----- bird -----\ttoxicology",
    "286": "SELECT CAST(SUM(CASE WHEN bond_type = '#' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(DISTINCT molecule_id) FROM bond\t----- bird -----\ttoxicology",
    "287": "SELECT CAST(SUM(CASE WHEN T2.bond_type = ' = ' THEN 1 ELSE 0 END) AS REAL) / COUNT(T2.bond_id) * 100 FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.molecule_id = 'TR047'\t----- bird -----\ttoxicology",
    "288": "SELECT CASE WHEN T2.label = '+' THEN 'Carcinogenic' ELSE 'Not Carcinogenic' END AS Carcinogenicity FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.atom_id = 'TR001_1'\t----- bird -----\ttoxicology",
    "289": "SELECT CASE WHEN label = '+' THEN 'Yes' ELSE 'No' END AS Is_Carcinogenic FROM molecule WHERE molecule_id = 'TR151'\t----- bird -----\ttoxicology",
    "290": "SELECT T1.element FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = 'TR151' AND T1.element = 'cl'\t----- bird -----\ttoxicology",
    "291": "SELECT COUNT(*) FROM molecule WHERE label = '+'\t----- bird -----\ttoxicology",
    "292": "SELECT atom_id FROM atom WHERE element = 'carbon' AND molecule_id BETWEEN 'TR010' AND 'TR050'\t----- bird -----\ttoxicology",
    "293": "SELECT COUNT(*) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+'\t----- bird -----\ttoxicology",
    "294": "SELECT T2.bond_id FROM bond AS T2 INNER JOIN molecule AS T1 ON T2.molecule_id = T1.molecule_id WHERE T1.label = '+' AND T2.bond_type = ' = '\t----- bird -----\ttoxicology",
    "295": "SELECT COUNT(T1.atom_id) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'H' AND T2.label = '+'\t----- bird -----\ttoxicology",
    "296": "SELECT Molecule.molecule_id FROM Molecule INNER JOIN Bond ON Molecule.molecule_id = Bond.molecule_id INNER JOIN Connected ON Bond.bond_id = Connected.bond_id INNER JOIN Atom ON Connected.atom_id = Atom.atom_id WHERE Atom.element = 'TR00_1' AND Bond.bond_type = 'TR00_1_2'\t----- bird -----\ttoxicology",
    "297": "SELECT T1.atom_id FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'carbon' AND T2.label != 'carcinogenic'\t----- bird -----\ttoxicology",
    "298": "SELECT CAST(SUM(CASE WHEN T1.element = 'h' AND T2.label = '+' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(DISTINCT T1.molecule_id) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'h' AND T2.label = '+'\t----- bird -----\ttoxicology",
    "299": "SELECT CASE WHEN T1.label = '+' THEN 'Yes' ELSE 'No' END AS Is_Carcinogenic FROM molecule WHERE molecule_id = 'TR124'\t----- bird -----\ttoxicology",
    "300": "SELECT T1.atom_id, T1.element FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.molecule_id = 'TR186'\t----- bird -----\ttoxicology",
    "301": "SELECT T2.bond_type FROM bond AS T2 INNER JOIN connected AS T1 ON T2.bond_id = T1.bond_id WHERE T1.atom_id = 'TR007_4_19' OR T1.atom_id2 = 'TR007_4_19'\t----- bird -----\ttoxicology",
    "302": "SELECT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_id = 'TR001_2_4'\t----- bird -----\ttoxicology",
    "303": "SELECT COUNT(T1.bond_id) AS double_bonds, T2.label AS carcinogenic FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '=' AND T2.molecule_id = 'TR006'\t----- bird -----\ttoxicology",
    "304": "SELECT T2.label, T1.element FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+' AND T1.element IN ('cl', 'c', 'h', 'o', 's', 'n', 'p', 'na', 'br', 'f', 'i', 'sn', 'pb', 'te', 'ca')\t----- bird -----\ttoxicology",
    "305": "SELECT T1.bond_id, T2.atom_id, T2.atom_id2 FROM bond AS T1 INNER JOIN connected AS T2 ON T1.molecule_id = T2.bond_id WHERE T1.bond_type = '-'\t----- bird -----\ttoxicology",
    "306": "SELECT m.label, a.element FROM molecule m JOIN bond b ON m.molecule_id = b.molecule_id JOIN atom a ON m.molecule_id = a.molecule_id WHERE b.bond_type = '#' AND (a.element = 'cl' OR a.element = 'c' OR a.element = 'h' OR a.element = 'o' OR a.element = 's' OR a.element = 'n' OR a.element = 'p' OR a.element = 'na' OR a.element = 'br' OR a.element = 'f' OR a.element = 'i' OR a.element = 'sn' OR a.element = 'pb' OR a.element = 'te' OR a.element = 'ca')\t----- bird -----\ttoxicology",
    "307": "SELECT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_id = 'TR000_2_3'\t----- bird -----\ttoxicology",
    "308": "SELECT COUNT(*) FROM bond AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.element = 'cl'\t----- bird -----\ttoxicology",
    "309": "SELECT atom_id FROM atom WHERE molecule_id = 'TR346'; SELECT COUNT(DISTINCT bond_type) FROM bond WHERE molecule_id = 'TR346';\t----- bird -----\ttoxicology",
    "310": "SELECT COUNT(DISTINCT T1.molecule_id) AS DoubleBondMolecules, COUNT(DISTINCT T1.molecule_id) AS CarcinogenicMolecules FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = ' = ' AND T2.label = '+'\t----- bird -----\ttoxicology",
    "311": "SELECT COUNT(DISTINCT T1.molecule_id) FROM molecule AS T1 LEFT JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id LEFT JOIN bond AS T3 ON T1.molecule_id = T3.molecule_id WHERE T2.element != 's' AND T3.bond_type != ' = ' OR T3.bond_type IS NULL\t----- bird -----\ttoxicology",
    "312": "SELECT T2.label FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_id = 'TR001_2_4' AND T2.label = '+'\t----- bird -----\ttoxicology",
    "313": "SELECT COUNT(atom_id) FROM atom WHERE molecule_id = 'TR005'\t----- bird -----\ttoxicology",
    "314": "SELECT COUNT(*) FROM bond WHERE bond_type = '-'\t----- bird -----\ttoxicology",
    "315": "SELECT T2.label FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.element = 'cl' AND T1.label = '+'\t----- bird -----\ttoxicology",
    "316": "SELECT T1.label FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.element LIKE '%c%' AND T1.label = '-'\t----- bird -----\ttoxicology",
    "317": "SELECT CAST(COUNT(DISTINCT CASE WHEN T1.label = '+' AND T2.element = 'Cl' THEN T2.molecule_id ELSE NULL END) AS REAL) * 100 / COUNT(DISTINCT T2.molecule_id) FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_idINNER JOIN connected AS T3 ON T2.atom_id = T3.atom_id OR T2.atom_id = T3.atom_id2\t----- bird -----\ttoxicology",
    "318": "SELECT molecule_id FROM bond WHERE bond_id = 'TR001_1_7'\t----- bird -----\ttoxicology",
    "319": "SELECT COUNT(element) FROM atom WHERE atom_id IN ( SELECT atom_id FROM connected WHERE bond_id = 'TR001_3_4' )\t----- bird -----\ttoxicology",
    "320": "SELECT T2.bond_type FROM connected AS T1 INNER JOIN bond AS T2 ON T1.bond_id = T2.bond_id WHERE T1.atom_id = 'TR000_1' AND T1.atom_id2 = 'TR000_2'\t----- bird -----\ttoxicology",
    "321": "SELECT m.label FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id WHERE a.atom_id IN ('TR000_2', 'TR000_4')\t----- bird -----\ttoxicology",
    "322": "SELECT T1.element FROM atom AS T1 WHERE T1.atom_id = 'TR000_1'\t----- bird -----\ttoxicology",
    "323": "SELECT CASE WHEN T1.label = '+' THEN 'Carcinogenic' ELSE 'Non-carcinogenic' END AS Carcinogenicity FROM molecule AS T1 WHERE T1.molecule_id = 'TR000'\t----- bird -----\ttoxicology",
    "324": "SELECT CAST(SUM(CASE WHEN T2.bond_type = '-' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T2.bond_id) FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id\t----- bird -----\ttoxicology",
    "325": "SELECT COUNT(DISTINCT T4.molecule_id) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN connected AS T3 ON T1.atom_id = T3.atom_id INNER JOIN bond AS T4 ON T3.bond_id = T4.bond_id WHERE T1.element = 'n' AND T2.label = '+'\t----- bird -----\ttoxicology",
    "326": "SELECT T2.label FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN bond AS T3 ON T3.molecule_id = T2.molecule_id WHERE T1.element = 'S' AND T3.bond_type = ' = '\t----- bird -----\ttoxicology",
    "327": "SELECT COUNT(T1.molecule_id) AS molecule_count FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '-' GROUP BY T1.molecule_id HAVING COUNT(T1.molecule_id) > 5;\t----- bird -----\ttoxicology",
    "328": "SELECT T1.element FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN molecule AS T3 ON T1.molecule_id = T3.molecule_id WHERE T2.bond_type = '=' AND T3.label = 'TR024'\t----- bird -----\ttoxicology",
    "329": "SELECT T2.label FROM molecule AS T2 INNER JOIN atom AS T1 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+' GROUP BY T2.molecule_id ORDER BY COUNT(T1.atom_id) DESC LIMIT 1\t----- bird -----\ttoxicology",
    "330": "SELECT CAST(SUM(CASE WHEN T1.label = '+' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(DISTINCT T1.molecule_id) FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN connected AS T3 ON T2.atom_id = T3.atom_id OR T2.atom_id = T3.atom_id2 INNER JOIN bond AS T4 ON T3.bond_id = T4.bond_id WHERE T2.element = 'h' AND T4.bond_type = '#'\t----- bird -----\ttoxicology",
    "331": "SELECT COUNT(*) FROM molecule WHERE label = '+'\t----- bird -----\ttoxicology",
    "332": "SELECT COUNT(DISTINCT T1.molecule_id) FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.molecule_id BETWEEN 'TR004' AND 'TR010' AND T2.bond_type = '-'\t----- bird -----\ttoxicology",
    "333": "SELECT COUNT(*) FROM atom WHERE molecule_id = 'TR008' AND element = 'c'\t----- bird -----\ttoxicology",
    "334": "SELECT element FROM atom WHERE atom_id = 'TR004_7' AND molecule_id IN (SELECT molecule_id FROM molecule WHERE label = '-') AND element != 'cl'\t----- bird -----\ttoxicology",
    "335": "SELECT COUNT(DISTINCT T1.molecule_id) FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'o' AND T2.bond_type = ' = '\t----- bird -----\ttoxicology",
    "336": "SELECT COUNT(DISTINCT T1.molecule_id) FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '#' AND T2.label = '-'\t----- bird -----\ttoxicology",
    "337": "SELECT A.element, B.bond_type FROM atom AS A JOIN bond AS B ON A.molecule_id = B.molecule_id JOIN molecule AS M ON A.molecule_id = M.molecule_id WHERE M.molecule_id = 'TR016'\t----- bird -----\ttoxicology",
    "338": "SELECT atom_id FROM atom WHERE molecule_id = 'TR012' AND element = 'c' AND atom_id IN ( SELECT atom_id FROM bond JOIN connected ON bond.bond_id = connected.bond_id WHERE bond_type = ' = ' )\t----- bird -----\ttoxicology",
    "339": "SELECT T1.atom_id FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+' AND T1.element = 'o'\t----- bird -----\ttoxicology",
    "340": "SELECT name FROM cards WHERE cardKingdomFoilId = cardKingdomId AND cardKingdomId IS NOT NULL\t----- bird -----\tcard_games",
    "341": "SELECT * FROM cards WHERE borderColor = 'borderless' AND cardKingdomFoilId IS NULL AND cardKingdomId IS NOT NULL\t----- bird -----\tcard_games",
    "342": "SELECT name FROM cards WHERE convertedManaCost > faceConvertedManaCost;\t----- bird -----\tcard_games",
    "343": "SELECT cards.name FROM cards WHERE cards.frameVersion = '2015' AND cards.edhrecRank < 100\t----- bird -----\tcard_games",
    "344": "SELECT name FROM cards INNER JOIN legalities ON cards.uuid = legalities.uuid WHERE rarity = 'mythic' AND status = 'Banned' AND format = 'gladiator'\t----- bird -----\tcard_games",
    "345": "SELECT T1.name, T2.status FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.types = 'Artifact' AND T1.side IS NULL AND T2.format = 'vintage'\t----- bird -----\tcard_games",
    "346": "SELECT T1.id, T1.artist FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE (T1.power = '*' OR T1.power IS NULL) AND T2.format = 'commander' AND T2.status = 'Legal'\t----- bird -----\tcard_games",
    "347": "SELECT T1.text FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.uuid = T2.uuid WHERE T1.artist = 'Stephen Daniel' AND T1.hasContentWarning = 1\t----- bird -----\tcard_games",
    "348": "SELECT text FROM rulings WHERE uuid = (SELECT uuid FROM cards WHERE name = 'Sublime Epiphany' AND number = '74s')\t----- bird -----\tcard_games",
    "349": "SELECT c.name, c.artist, c.isPromo FROM cards c INNER JOIN rulings r ON c.uuid = r.uuid GROUP BY c.name, c.artist, c.isPromo ORDER BY COUNT(r.uuid) DESC LIMIT 1\t----- bird -----\tcard_games",
    "350": "SELECT T2.language FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.name = 'Annul' AND T1.number = '29'\t----- bird -----\tcard_games",
    "351": "SELECT T1.name FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.language = 'Japanese'\t----- bird -----\tcard_games",
    "352": "SELECT CAST(SUM(CASE WHEN T2.language = 'Chinese Simplified' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid;\t----- bird -----\tcard_games",
    "353": "SELECT T1.name, T2.totalSetSize FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.language = 'Italian'\t----- bird -----\tcard_games",
    "354": "SELECT COUNT(DISTINCT T1.type) FROM cards AS T1 WHERE T1.artist = 'Aaron Boyd'\t----- bird -----\tcard_games",
    "355": "SELECT T1.keywords FROM cards AS T1 WHERE T1.name = 'Angel of Mercy';\t----- bird -----\tcard_games",
    "356": "SELECT COUNT(id) FROM cards WHERE power = '*'\t----- bird -----\tcard_games",
    "357": "SELECT promoTypes FROM cards WHERE name = 'Duress'\t----- bird -----\tcard_games",
    "358": "SELECT borderColor FROM cards WHERE name = \"Ancestor's Chosen\"\t----- bird -----\tcard_games",
    "359": "SELECT originalType FROM cards WHERE name = \"Ancestor's Chosen\"\t----- bird -----\tcard_games",
    "360": "SELECT T2.language FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T1.name = 'Angel of Mercy'\t----- bird -----\tcard_games",
    "361": "SELECT COUNT(*) FROM cards JOIN legalities ON cards.uuid = legalities.uuid WHERE legalities.status = 'restricted' AND cards.isTextless = 0\t----- bird -----\tcard_games",
    "362": "SELECT T1.text FROM rulings AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T2.name = 'Condemn'\t----- bird -----\tcard_games",
    "363": "SELECT COUNT(cards.id) FROM cards JOIN legalities ON cards.uuid = legalities.uuid WHERE legalities.status = 'restricted' AND cards.isStarter = 1\t----- bird -----\tcard_games",
    "364": "SELECT T2.status FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.name = 'Cloudchaser Eagle'\t----- bird -----\tcard_games",
    "365": "SELECT type FROM cards WHERE name = 'Benalish Knight'\t----- bird -----\tcard_games",
    "366": "SELECT T2.format FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.name = 'Benalish Knight';\t----- bird -----\tcard_games",
    "367": "SELECT T1.artist FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.language = 'Phyrexian'\t----- bird -----\tcard_games",
    "368": "SELECT CAST(COUNT(CASE WHEN borderColor = 'borderless' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(id) FROM cards\t----- bird -----\tcard_games",
    "369": "SELECT COUNT(c.id) FROM cards AS c INNER JOIN foreign_data AS fd ON c.uuid = fd.uuid WHERE fd.language = 'German' AND c.isReprint = 1\t----- bird -----\tcard_games",
    "370": "SELECT COUNT(T1.id) FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.borderColor = 'borderless' AND T2.language = 'Russian'\t----- bird -----\tcard_games",
    "371": "SELECT CAST(COUNT(CASE WHEN T1.language = 'French' THEN T1.id ELSE NULL END) AS REAL) * 100 / COUNT(T1.id) FROM cards AS T1 WHERE T1.isStorySpotlight = 1;\t----- bird -----\tcard_games",
    "372": "SELECT COUNT(id) FROM cards WHERE toughness = '99'\t----- bird -----\tcard_games",
    "373": "SELECT T1.name FROM cards AS T1 WHERE T1.artist = 'Aaron Boyd';\t----- bird -----\tcard_games",
    "374": "SELECT COUNT(*) FROM cards WHERE borderColor = 'black' AND availability = 'mtgo'\t----- bird -----\tcard_games",
    "375": "SELECT id FROM cards WHERE convertedManaCost = 0\t----- bird -----\tcard_games",
    "376": "SELECT T1.layout FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.keywords LIKE '%flying%'\t----- bird -----\tcard_games",
    "377": "SELECT COUNT(id) FROM cards WHERE originalType = 'Summon - Angel' AND subtypes != 'Angel'\t----- bird -----\tcard_games",
    "378": "SELECT id FROM cards WHERE cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL\t----- bird -----\tcard_games",
    "379": "SELECT id FROM cards WHERE duelDeck = 'a'\t----- bird -----\tcard_games",
    "380": "SELECT edhrecRank FROM cards WHERE frameVersion = '2015'\t----- bird -----\tcard_games",
    "381": "SELECT T1.artist FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.language = 'Chinese Simplified'\t----- bird -----\tcard_games",
    "382": "SELECT T1.asciiName FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.availability = 'paper' AND T2.language = 'Japanese'\t----- bird -----\tcard_games",
    "383": "SELECT COUNT(*) FROM cards WHERE borderColor = 'white' AND id IN (SELECT id FROM legalities WHERE status = 'Banned')\t----- bird -----\tcard_games",
    "384": "SELECT cards.uuid, foreign_data.language FROM cards INNER JOIN legalities ON cards.uuid = legalities.uuid INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE legalities.format = 'legacy'\t----- bird -----\tcard_games",
    "385": "SELECT text FROM rulings WHERE uuid = (SELECT uuid FROM cards WHERE name = 'Beacon of Immortality')\t----- bird -----\tcard_games",
    "386": "SELECT COUNT(*) AS num_cards, T1.status FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.frameVersion = 'future' AND T2.status = 'legal'\t----- bird -----\tcard_games",
    "387": "SELECT name, colors FROM cards WHERE setCode = 'OGW'\t----- bird -----\tcard_games",
    "388": "SELECT cards.name, set_translations.language FROM cards JOIN set_translations ON cards.setCode = set_translations.setCode WHERE cards.setCode = '10E' AND cards.convertedManaCost = 5\t----- bird -----\tcard_games",
    "389": "SELECT cards.name, rulings.date FROM cards JOIN rulings ON cards.uuid = rulings.uuid WHERE cards.originalType = 'Creature - Elf'\t----- bird -----\tcard_games",
    "390": "SELECT colors, format FROM cards JOIN legalities ON cards.uuid = legalities.uuid WHERE cards.id BETWEEN 1 AND 20;\t----- bird -----\tcard_games",
    "391": "SELECT c.name FROM cards c JOIN foreign_data f ON c.uuid = f.uuid WHERE c.originalType = 'Artifact' AND c.colors = 'B' AND f.language <> 'English'\t----- bird -----\tcard_games",
    "392": "SELECT T1.name FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.uuid = T2.uuid WHERE T1.rarity = 'uncommon' ORDER BY T2.date ASC LIMIT 3\t----- bird -----\tcard_games",
    "393": "SELECT COUNT(*) FROM cards WHERE artist = 'John Avon' AND cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NULL\t----- bird -----\tcard_games",
    "394": "SELECT COUNT(*) FROM cards WHERE borderColor = 'white' AND cardKingdomFoilId = cardKingdomId AND cardKingdomId IS NOT NULL\t----- bird -----\tcard_games",
    "395": "SELECT COUNT(*) FROM cards WHERE artist = 'UDON' AND availability = 'mtgo' AND hand = -1;\t----- bird -----\tcard_games",
    "396": "SELECT COUNT(id) FROM cards WHERE frameVersion = '1993' AND availability = 'paper' AND hasContentWarning = 1\t----- bird -----\tcard_games",
    "397": "SELECT ManaCost FROM cards WHERE layout = 'normal' AND frameVersion = '2003' AND borderColor = 'black' AND availability = 'paper' AND availability = 'mtgo'\t----- bird -----\tcard_games",
    "398": "SELECT SUM(convertedManaCost) FROM cards WHERE artist = 'Rob Alexander'\t----- bird -----\tcard_games",
    "399": "SELECT DISTINCT types FROM cards WHERE availability = 'arena'\t----- bird -----\tcard_games",
    "400": "SELECT T2.setCode FROM set_translations AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T1.language = 'Spanish'\t----- bird -----\tcard_games",
    "401": "SELECT CAST(COUNT(CASE WHEN hand = '+3' THEN 1 END) AS REAL) * 100 / COUNT(id) FROM cards WHERE frameEffects = 'legendary'\t----- bird -----\tcard_games",
    "402": "SELECT CAST(COUNT(CASE WHEN isStorySpotlight = 1 AND isTextless = 0 THEN id ELSE NULL END) AS REAL) * 100 / COUNT(id) AS percentage, id FROM cards WHERE isStorySpotlight = 1 GROUP BY id;\t----- bird -----\tcard_games",
    "403": "SELECT CAST(COUNT(CASE WHEN T2.language = 'Spanish' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T1.id) AS percentage, T1.name FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid GROUP BY T1.name;\t----- bird -----\tcard_games",
    "404": "SELECT language FROM set_translations WHERE setCode = (SELECT code FROM sets WHERE baseSetSize = 309)\t----- bird -----\tcard_games",
    "405": "SELECT COUNT(T1.setCode) FROM set_translations AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T1.language = 'Portuguese (Brasil)' AND T2.block = 'Commander'\t----- bird -----\tcard_games",
    "406": "SELECT T1.id FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.types LIKE '%Creature%' AND T1.types LIKE '%Goblin%' AND T2.status = 'legal'\t----- bird -----\tcard_games",
    "407": "SELECT DISTINCT T1.subtypes AS card_types FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.language = 'German' AND T1.subtypes IS NOT NULL AND T1.supertypes IS NOT NULL\t----- bird -----\tcard_games",
    "408": "SELECT COUNT(*) FROM cards WHERE power IS NULL AND text LIKE '%triggered ability%'\t----- bird -----\tcard_games",
    "409": "SELECT COUNT(*) FROM cards AS c INNER JOIN legalities AS l ON c.uuid = l.uuid INNER JOIN rulings AS r ON c.uuid = r.uuid WHERE l.format = 'pre-modern' AND r.text = 'This is a triggered mana ability' AND c.side IS NULL\t----- bird -----\tcard_games",
    "410": "SELECT T1.id FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.artist = 'Erica Yang' AND T2.format = 'pauper' AND T1.availability = 'paper'\t----- bird -----\tcard_games",
    "411": "SELECT artist FROM cards WHERE flavorText = 'Das perfekte Gegenmittel zu einer dichten Formation'\t----- bird -----\tcard_games",
    "412": "SELECT T1.name FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.type LIKE '%Creature%' AND T1.layout = 'normal' AND T1.borderColor = 'black' AND T1.artist = 'Matthew D. Wilson' AND T2.language = 'French'\t----- bird -----\tcard_games",
    "413": "SELECT COUNT(c.id) FROM cards AS c INNER JOIN rulings AS r ON c.uuid = r.uuid WHERE c.rarity = 'rare' AND r.date = '2009-01-10'\t----- bird -----\tcard_games",
    "414": "SELECT T2.language FROM sets AS T1 INNER JOIN foreign_data AS T2 ON T1.code = T2.uuid WHERE T1.baseSetSize = 180 AND T1.block = 'Ravnica'\t----- bird -----\tcard_games",
    "415": "SELECT CAST(COUNT(CASE WHEN hasContentWarning = 0 THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(ID) FROM cards INNER JOIN legalities ON cards.uuid = legalities.uuid WHERE legalities.format = 'commander' AND legalities.status = 'legal'\t----- bird -----\tcard_games",
    "416": "SELECT CAST(SUM(IIF(language = 'French' AND (power IS NULL OR power = '*'), 1, 0)) AS REAL) * 100 / COUNT(power) FROM cards INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE power IS NULL OR power = '*'\t----- bird -----\tcard_games",
    "417": "SELECT CAST(COUNT(CASE WHEN T2.type = 'expansion' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(*) FROM set_translations AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T1.language = 'Japanese'\t----- bird -----\tcard_games",
    "418": "SELECT T1.availability FROM cards AS T1 WHERE T1.artist = 'Daren Bader'\t----- bird -----\tcard_games",
    "419": "SELECT COUNT(*) FROM cards WHERE borderColor = 'borderless' AND edhrecRank > 12000;\t----- bird -----\tcard_games",
    "420": "SELECT COUNT(id) FROM cards WHERE isOversized = 1 AND isReprint = 1 AND isPromo = 1\t----- bird -----\tcard_games",
    "421": "SELECT name FROM cards WHERE (power IS NULL OR power = '*') AND promoTypes = 'arenaleague' ORDER BY name LIMIT 3\t----- bird -----\tcard_games",
    "422": "SELECT language FROM foreign_data WHERE multiverseid = 149934;\t----- bird -----\tcard_games",
    "423": "SELECT T1.id FROM cards AS T1 WHERE T1.cardKingdomFoilId IS NOT NULL AND T1.cardKingdomId IS NOT NULL ORDER BY T1.cardKingdomFoilId ASC, T1.cardKingdomId ASC LIMIT 3\t----- bird -----\tcard_games",
    "424": "SELECT CAST(COUNT(CASE WHEN isTextless = 1 AND layout = 'normal' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(isTextless) FROM cards\t----- bird -----\tcard_games",
    "425": "SELECT number FROM cards WHERE side IS NULL AND subtypes LIKE '%Angel%' AND subtypes LIKE '%Wizard%' AND name NOT IN (SELECT name FROM cards WHERE faceName IS NOT NULL)\t----- bird -----\tcard_games",
    "426": "SELECT name FROM sets WHERE mtgoCode IS NULL OR mtgoCode = '' ORDER BY name LIMIT 3\t----- bird -----\tcard_games",
    "427": "SELECT language FROM set_translations WHERE setCode = 'ARC' AND mcmName = 'Archenemy'\t----- bird -----\tcard_games",
    "428": "SELECT T1.name, T2.translation FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.id = 5\t----- bird -----\tcard_games",
    "429": "SELECT T2.language, T1.type FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.id = 206\t----- bird -----\tcard_games",
    "430": "SELECT T1.id, T1.name FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code INNER JOIN foreign_data AS T3 ON T1.uuid = T3.uuid WHERE T3.language = 'Italian' AND T2.block = 'Shadowmoor' ORDER BY T1.name ASC LIMIT 2\t----- bird -----\tcard_games",
    "431": "SELECT T1.id, T1.name FROM sets AS T1 WHERE T1.isForeignOnly = 1 AND T1.isFoilOnly = 1 AND T1.code IN (SELECT T2.code FROM sets AS T2 INNER JOIN foreign_data AS T3 ON T2.code = T3.uuid WHERE T3.language = 'Japanese')\t----- bird -----\tcard_games",
    "432": "SELECT T2.name FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.language = 'Russian' ORDER BY T1.baseSetSize DESC LIMIT 1\t----- bird -----\tcard_games",
    "433": "SELECT CAST(COUNT(CASE WHEN T2.language = 'Chinese Simplified' AND T1.isOnlineOnly = 1 THEN T1.uuid ELSE NULL END) AS REAL) * 100 / COUNT(T1.uuid) FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid\t----- bird -----\tcard_games",
    "434": "SELECT COUNT(*) FROM sets WHERE isOnlineOnly = 0 AND isForeignOnly = 1 AND code NOT IN (SELECT setCode FROM set_translations WHERE language = 'Japanese') AND (mtgoCode IS NULL OR mtgoCode = '')\t----- bird -----\tcard_games",
    "435": "SELECT COUNT(id) AS TotalCards, id FROM cards WHERE borderColor = 'black'\t----- bird -----\tcard_games",
    "436": "SELECT COUNT(id) AS num_cards, id FROM cards WHERE frameEffects = 'extendedart'\t----- bird -----\tcard_games",
    "437": "SELECT name FROM cards WHERE borderColor = 'black' AND isFullArt = 1\t----- bird -----\tcard_games",
    "438": "SELECT language FROM set_translations WHERE setCode = '174'\t----- bird -----\tcard_games",
    "439": "SELECT name FROM sets WHERE code = 'ALL'\t----- bird -----\tcard_games",
    "440": "SELECT T2.language FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.name = 'A Pedra Fellwar'\t----- bird -----\tcard_games",
    "441": "SELECT code FROM sets WHERE releaseDate = '2007-07-13'\t----- bird -----\tcard_games",
    "442": "SELECT T1.baseSetSize, T1.code FROM sets AS T1 WHERE T1.block = 'Masques' AND T1.block = 'Mirage';\t----- bird -----\tcard_games",
    "443": "SELECT code FROM sets WHERE type = 'expansion'\t----- bird -----\tcard_games",
    "444": "SELECT foreign_data.name, cards.type FROM foreign_data JOIN cards ON foreign_data.uuid = cards.uuid WHERE cards.watermark = 'boros'\t----- bird -----\tcard_games",
    "445": "SELECT T1.language, T2.flavorText, T1.type FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.watermark = 'colorpie'\t----- bird -----\tcard_games",
    "446": "SELECT CAST(SUM(IIF(T1.convertedManaCost = 10, 1, 0)) AS REAL) * 100 / COUNT(T1.convertedManaCost) FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.name = 'Abyssal Horror'\t----- bird -----\tcard_games",
    "447": "SELECT T1.code FROM sets AS T1 INNER JOIN cards AS T2 ON T1.code = T2.setCode WHERE T2.types LIKE '%Commander%'\t----- bird -----\tcard_games",
    "448": "SELECT T2.name AS foreign_name, T1.type FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.watermark = 'abzan'\t----- bird -----\tcard_games",
    "449": "SELECT T1.language, T1.type FROM cards AS T1 WHERE T1.watermark = 'Azorius'\t----- bird -----\tcard_games",
    "450": "SELECT COUNT(id) FROM cards WHERE artist = 'Aaron Miller' AND cardKingdomFoilId = cardKingdomId AND cardKingdomId IS NOT NULL\t----- bird -----\tcard_games",
    "451": "SELECT COUNT(id) FROM cards WHERE availability LIKE '%paper%' AND hand LIKE '+%'\t----- bird -----\tcard_games",
    "452": "SELECT name FROM cards WHERE isTextless = 0;\t----- bird -----\tcard_games",
    "453": "SELECT convertedManaCost FROM cards WHERE name = 'Ancestor`s Chosen'\t----- bird -----\tcard_games",
    "454": "SELECT COUNT(*) FROM cards WHERE borderColor = 'white' AND (power = '*' OR power IS NULL)\t----- bird -----\tcard_games",
    "455": "SELECT name FROM cards WHERE isPromo = 1 AND side IS NOT NULL\t----- bird -----\tcard_games",
    "456": "SELECT subtypes, supertypes FROM cards WHERE name = 'Molimo, Maro-Sorcerer'\t----- bird -----\tcard_games",
    "457": "SELECT purchaseUrls FROM cards WHERE promoTypes = 'bundle'\t----- bird -----\tcard_games",
    "458": "SELECT COUNT(DISTINCT T1.artist) FROM cards AS T1 WHERE T1.borderColor = 'black' AND T1.availability LIKE '%arena,mtgo%'\t----- bird -----\tcard_games",
    "459": "SELECT name, convertedManaCost FROM cards WHERE name IN ('Serra Angel', 'Shrine Keeper') ORDER BY convertedManaCost DESC LIMIT 1\t----- bird -----\tcard_games",
    "460": "SELECT DISTINCT artist FROM cards WHERE flavorName = 'Battra, Dark Destroyer'\t----- bird -----\tcard_games",
    "461": "SELECT name FROM cards WHERE convertedManaCost = (SELECT MAX(convertedManaCost) FROM cards WHERE frameVersion = '2003') LIMIT 3\t----- bird -----\tcard_games",
    "462": "SELECT T3.translation FROM cards AS T1 INNER JOIN set_translations AS T2 ON T1.setCode = T2.setCode INNER JOIN sets AS T3 ON T2.setCode = T3.code WHERE T1.name = 'Ancestor''s Chosen' AND T2.language = 'Italian'\t----- bird -----\tcard_games",
    "463": "SELECT COUNT(T2.translation) FROM cards AS T1 INNER JOIN set_translations AS T2 ON T1.setCode = T2.setCode WHERE T1.name = 'Angel of Mercy'\t----- bird -----\tcard_games",
    "464": "SELECT T1.name FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code INNER JOIN set_translations AS T3 ON T2.code = T3.setCode WHERE T3.translation = 'Hauptset Zehnte Edition'\t----- bird -----\tcard_games",
    "465": "SELECT T1.name FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.name = 'Ancestor\\'s Chosen' AND T2.language = 'Korean';\t----- bird -----\tcard_games",
    "466": "SELECT COUNT(*) FROM cards WHERE uuid IN (SELECT uuid FROM set_translations WHERE setCode = '10E') AND artist = 'Adam Rex'\t----- bird -----\tcard_games",
    "467": "SELECT baseSetSize FROM sets WHERE name = 'Hauptset Zehnte Edition'\t----- bird -----\tcard_games",
    "468": "SELECT T2.translation FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.name = 'Eighth Edition' AND T2.language = 'Simplified Chinese'\t----- bird -----\tcard_games",
    "469": "SELECT CASE WHEN T1.mtgoCode IS NOT NULL THEN 'Yes' ELSE 'No' END AS appeared_on_mtgo FROM cards AS T1 WHERE T1.name = 'Angel of Mercy'\t----- bird -----\tcard_games",
    "470": "SELECT T2.releaseDate FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T1.name = 'Ancestor''s Chosen'\t----- bird -----\tcard_games",
    "471": "SELECT T2.type AS expansion_type FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.translation = 'Hauptset Zehnte Edition'\t----- bird -----\tcard_games",
    "472": "SELECT COUNT(T1.setCode) FROM set_translations AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.block = 'Ice Age' AND T1.language = 'Italian'\t----- bird -----\tcard_games",
    "473": "SELECT sets.name FROM cards JOIN sets ON cards.setCode = sets.code WHERE cards.name = 'Adarkar Valkyrie' AND sets.isForeignOnly = 1;\t----- bird -----\tcard_games",
    "474": "SELECT COUNT(*) FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.language = 'Italian' AND T2.translation IS NOT NULL AND T1.baseSetSize < 10\t----- bird -----\tcard_games",
    "475": "SELECT COUNT(id) FROM cards WHERE name = 'Coldsnap' AND borderColor = 'black'\t----- bird -----\tcard_games",
    "476": "SELECT cards.name FROM cards INNER JOIN sets ON cards.setCode = sets.code WHERE sets.name = 'Coldsnap' ORDER BY cards.convertedManaCost DESC LIMIT 1\t----- bird -----\tcard_games",
    "477": "SELECT artist FROM cards WHERE setCode = 'Coldsnap' AND artist IN ('Jeremy Jarvis', 'Aaron Miller', 'Chippy')\t----- bird -----\tcard_games",
    "478": "SELECT name FROM cards WHERE setCode = (SELECT code FROM sets WHERE name = 'Coldsnap') AND number = '4'\t----- bird -----\tcard_games",
    "479": "SELECT COUNT(T1.id) FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.name = 'Coldsnap' AND T1.convertedManaCost > 5 AND (T1.power = '*' OR T1.power IS NULL)\t----- bird -----\tcard_games",
    "480": "SELECT T2.flavorText FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.language = 'Italian' AND T1.name = 'Ancestor''s Chosen'\t----- bird -----\tcard_games",
    "481": "SELECT language FROM foreign_data WHERE name = 'Ancestor''s Chosen' AND flavorText IS NOT NULL\t----- bird -----\tcard_games",
    "482": "SELECT T2.translation FROM cards AS T1 INNER JOIN set_translations AS T2 ON T1.setCode = T2.setCode INNER JOIN foreign_data AS T3 ON T1.uuid = T3.uuid WHERE T3.name = 'Ancestor''s Chosen' AND T3.language = 'German'\t----- bird -----\tcard_games",
    "483": "SELECT T2.text FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.uuid = T2.uuid INNER JOIN sets AS T3 ON T1.setCode = T3.code INNER JOIN set_translations AS T4 ON T3.code = T4.setCode WHERE T4.language = 'Italian' AND T3.name = 'Coldsnap'\t----- bird -----\tcard_games",
    "484": "SELECT T2.name FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid INNER JOIN sets AS T3 ON T1.setCode = T3.code WHERE T3.name = 'Coldsnap' AND T2.language = 'Italian' ORDER BY T1.convertedManaCost DESC LIMIT 1\t----- bird -----\tcard_games",
    "485": "SELECT T1.date FROM rulings AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T2.name = 'Reminisce'\t----- bird -----\tcard_games",
    "486": "SELECT CAST(SUM(CASE WHEN T1.convertedManaCost = 7 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.convertedManaCost) FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.name = 'Coldsnap'\t----- bird -----\tcard_games",
    "487": "SELECT CAST(SUM(CASE WHEN T1.cardKingdomFoilId = T1.cardKingdomId AND T1.cardKingdomId IS NOT NULL THEN 1 ELSE 0 END) AS REAL) * 100 / SUM(CASE WHEN T2.name = 'Coldsnap' THEN 1 ELSE 0 END) FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.name = 'Coldsnap'\t----- bird -----\tcard_games",
    "488": "SELECT T2.code FROM sets AS T2 WHERE T2.releaseDate = '2017-07-14'\t----- bird -----\tcard_games",
    "489": "SELECT keyruneCode FROM sets WHERE code = 'PKHC'\t----- bird -----\tcard_games",
    "490": "SELECT mcmId FROM sets WHERE code = 'SS2'\t----- bird -----\tcard_games",
    "491": "SELECT T1.mcmName FROM sets AS T1 WHERE T1.releaseDate = '2017-06-09'\t----- bird -----\tcard_games",
    "492": "SELECT T1.type FROM sets AS T1 WHERE T1.name LIKE '%From the Vault: Lore%'\t----- bird -----\tcard_games",
    "493": "SELECT T2.parentCode FROM sets AS T1 INNER JOIN sets AS T2 ON T1.parentCode = T2.code WHERE T1.name = 'Commander 2014 Oversized'\t----- bird -----\tcard_games",
    "494": "SELECT T1.asciiName, T2.text, CASE WHEN T1.hasContentWarning = 1 THEN 'Missing or degraded properties and values' ELSE 'No missing or degraded properties and values' END AS Property_Status FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.uuid = T2.uuid WHERE T1.artist = 'Jim Pavelec'\t----- bird -----\tcard_games",
    "495": "SELECT s.releaseDate FROM cards AS c INNER JOIN sets AS s ON c.setCode = s.code WHERE c.name = 'Evacuation'\t----- bird -----\tcard_games",
    "496": "SELECT T1.baseSetSize FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.translation = 'Rinascita di Alara'\t----- bird -----\tcard_games",
    "497": "SELECT T2.type FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.translation = 'Huiti\u00c3\u00a8me \u00c3\u00a9dition'\t----- bird -----\tcard_games",
    "498": "SELECT T2.translation FROM cards AS T1 INNER JOIN set_translations AS T2 ON T1.setCode = T2.setCode INNER JOIN foreign_data AS T3 ON T1.uuid = T3.uuid WHERE T3.name = 'Tendo Ice Bridge' AND T2.language = 'French'\t----- bird -----\tcard_games",
    "499": "SELECT COUNT(translation) FROM set_translations WHERE setCode = (SELECT code FROM sets WHERE name = 'Salvat 2011') AND translation IS NOT NULL;\t----- bird -----\tcard_games",
    "500": "SELECT T2.translation FROM cards AS T1 INNER JOIN set_translations AS T2 ON T1.setCode = T2.setCode WHERE T1.name = 'Fellwar Stone' AND T2.language = 'Japanese'\t----- bird -----\tcard_games",
    "501": "SELECT c.name FROM cards AS c INNER JOIN sets AS s ON c.setCode = s.code WHERE s.name = 'Journey into Nyx Hero''s Path' ORDER BY c.convertedManaCost DESC LIMIT 1\t----- bird -----\tcard_games",
    "502": "SELECT T2.releaseDate FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.translation = 'Ola de fr\u00edo'\t----- bird -----\tcard_games",
    "503": "SELECT T2.type FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T1.name = 'Samite Pilgrim'\t----- bird -----\tcard_games",
    "504": "SELECT COUNT(*) FROM cards WHERE setCode = 'World Championship Decks 2004' AND convertedManaCost = 3\t----- bird -----\tcard_games",
    "505": "SELECT T2.translation FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.name = 'Mirrodin' AND T2.language = 'Chinese Simplified'\t----- bird -----\tcard_games",
    "506": "SELECT CAST(SUM(CASE WHEN T1.isNonFoilOnly = 1 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.language = 'Japanese'\t----- bird -----\tcard_games",
    "507": "SELECT CAST(SUM(CASE WHEN T1.isOnlineOnly = 1 THEN 1 ELSE 0 END) AS REAL) * 100 / SUM(CASE WHEN T2.language = 'Portuguese (Brazil)' THEN 1 ELSE 0 END) FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.language = 'Portuguese (Brazil)'\t----- bird -----\tcard_games",
    "508": "SELECT DISTINCT availability FROM cards WHERE artist = 'Aleksi Briclot' AND isTextless = 1;\t----- bird -----\tcard_games",
    "509": "SELECT id FROM sets WHERE baseSetSize = (SELECT MAX(baseSetSize) FROM sets)\t----- bird -----\tcard_games",
    "510": "SELECT T1.artist FROM cards AS T1 WHERE T1.side IS NULL ORDER BY T1.convertedManaCost DESC LIMIT 1\t----- bird -----\tcard_games",
    "511": "SELECT T1.frameEffects FROM cards AS T1 WHERE T1.cardKingdomFoilId IS NOT NULL AND T1.cardKingdomId IS NOT NULL GROUP BY T1.frameEffects ORDER BY COUNT(T1.frameEffects) DESC LIMIT 1\t----- bird -----\tcard_games",
    "512": "SELECT COUNT(*) FROM cards WHERE (power IS NULL OR power = '*') AND hasFoil = 0 AND duelDeck = 'A'\t----- bird -----\tcard_games",
    "513": "SELECT sets.id FROM sets WHERE sets.type = 'Commander' AND sets.totalSetSize = (SELECT MAX(totalSetSize) FROM sets WHERE sets.type = 'Commander' AND sets.name NOT LIKE '%Alchemy%')\t----- bird -----\tcard_games",
    "514": "SELECT name FROM cards WHERE format = 'duel' ORDER BY convertedManaCost DESC LIMIT 10;\t----- bird -----\tcard_games",
    "515": "SELECT T1.originalReleaseDate, T2.format FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.rarity = 'mythic' ORDER BY T1.originalReleaseDate LIMIT 1\t----- bird -----\tcard_games",
    "516": "SELECT COUNT(T1.id) FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.artist = 'Volkan Baga' AND T2.language = 'French'\t----- bird -----\tcard_games",
    "517": "SELECT COUNT(*) FROM cards WHERE rarity = 'rare' AND types = 'Enchantment' AND name = 'Abundance' AND id IN (SELECT id FROM legalities WHERE format = 'play' AND status = 'Legal')\t----- bird -----\tcard_games",
    "518": "SELECT T2.format, T1.name FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T2.status = 'banned' GROUP BY T2.format ORDER BY COUNT(T2.status) DESC LIMIT 1\t----- bird -----\tcard_games",
    "519": "SELECT T2.language FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.name = 'Battlebond'\t----- bird -----\tcard_games",
    "520": "SELECT artist, format FROM cards INNER JOIN legalities ON cards.uuid = legalities.uuid WHERE artist = (SELECT artist FROM cards GROUP BY artist ORDER BY COUNT(artist) ASC LIMIT 1)\t----- bird -----\tcard_games",
    "521": "SELECT T1.status FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.frameVersion = '1997' AND T1.artist = 'D. Alexander Gregory' AND (T1.hasContentWarning = 1 OR T1.artist = 'Wizards of the Coast') AND T2.format = 'legacy'\t----- bird -----\tcard_games",
    "522": "SELECT T1.name, T2.format FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.edhrecRank = 1 AND T2.status = 'banned'\t----- bird -----\tcard_games",
    "523": "SELECT AVG(T1.id), MAX(COUNT(T2.language)) FROM sets AS T1 INNER JOIN foreign_data AS T2 ON T1.code = T2.uuid WHERE T1.releaseDate BETWEEN '2012-01-01' AND '2015-12-31'\t----- bird -----\tcard_games",
    "524": "SELECT artist FROM cards WHERE borderColor = 'black' AND availability = 'arena'\t----- bird -----\tcard_games",
    "525": "SELECT cards.uuid FROM legalities WHERE format = 'oldschool' AND (status = 'banned' OR status = 'restricted')\t----- bird -----\tcard_games",
    "526": "SELECT COUNT(id) FROM cards WHERE artist = 'Matthew D. Wilson' AND availability = 'paper'\t----- bird -----\tcard_games",
    "527": "SELECT text FROM rulings WHERE uuid IN (SELECT uuid FROM cards WHERE artist = 'Kev Walker') ORDER BY date DESC\t----- bird -----\tcard_games",
    "528": "SELECT T1.name, T2.format FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code INNER JOIN legalities AS T3 ON T1.uuid = T3.uuid WHERE T2.name = 'Hour of Devastation' AND T3.status = 'legal'\t----- bird -----\tcard_games",
    "529": "SELECT T1.name FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.language = 'Korean' AND T1.code NOT IN (SELECT T3.setCode FROM set_translations AS T3 WHERE T3.language LIKE '%Japanese%')\t----- bird -----\tcard_games",
    "530": "SELECT frameVersion, name FROM cards WHERE artist = 'Allen Williams' AND frameVersion IS NOT NULL; SELECT name FROM cards WHERE artist = 'Allen Williams' AND status = 'banned';\t----- bird -----\tcard_games",
    "531": "SELECT DisplayName FROM users WHERE DisplayName = 'Harlan' OR DisplayName = 'Jarrod Dixon' ORDER BY Reputation DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "532": "SELECT DisplayName FROM users WHERE STRFTIME('%Y', CreationDate) = '2014'\t----- bird -----\tcodebase_community",
    "533": "SELECT COUNT(Id) FROM users WHERE LastAccessDate > '2014-09-01 00:00:00'\t----- bird -----\tcodebase_community",
    "534": "SELECT DisplayName FROM users ORDER BY Views DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "535": "SELECT COUNT(Id) FROM users WHERE UpVotes > 100 AND DownVotes > 1;\t----- bird -----\tcodebase_community",
    "536": "SELECT COUNT(*) FROM users WHERE Views > 10 AND strftime('%Y', CreationDate) > '2013'\t----- bird -----\tcodebase_community",
    "537": "SELECT COUNT(*) FROM posts WHERE OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'csgillespie')\t----- bird -----\tcodebase_community",
    "538": "SELECT T1.Title FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'csgillespie'\t----- bird -----\tcodebase_community",
    "539": "SELECT T1.DisplayName FROM posts AS T1 WHERE T1.Title = 'Eliciting priors from experts'\t----- bird -----\tcodebase_community",
    "540": "SELECT Title FROM posts WHERE OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'csgillespie') ORDER BY ViewCount DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "541": "SELECT U.DisplayName FROM users AS U INNER JOIN posts AS P ON U.Id = P.OwnerUserId WHERE P.FavoriteCount = (SELECT MAX(FavoriteCount) FROM posts)\t----- bird -----\tcodebase_community",
    "542": "SELECT SUM(T1.CommentCount) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'csgillespie'\t----- bird -----\tcodebase_community",
    "543": "SELECT MAX(AnswerCount) FROM posts WHERE OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'csgillespie')\t----- bird -----\tcodebase_community",
    "544": "SELECT U.DisplayName FROM posts AS P INNER JOIN users AS U ON P.LastEditorUserId = U.Id WHERE P.Title = 'Examples for teaching: Correlation does not mean causation'\t----- bird -----\tcodebase_community",
    "545": "SELECT COUNT(*) AS root_posts_owned FROM posts WHERE OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'csgillespie') AND ParentId IS NULL;\t----- bird -----\tcodebase_community",
    "546": "SELECT T1.DisplayName FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T2.ClosedDate IS NOT NULL\t----- bird -----\tcodebase_community",
    "547": "SELECT COUNT(T1.Id) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.Age > 65 AND T1.Score >= 20\t----- bird -----\tcodebase_community",
    "548": "SELECT T1.Location FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T2.Title = 'Eliciting priors from experts'\t----- bird -----\tcodebase_community",
    "549": "SELECT T2.Body FROM tags AS T1 INNER JOIN posts AS T2 ON T1.ExcerptPostId = T2.Id WHERE T1.TagName = 'bayesian'\t----- bird -----\tcodebase_community",
    "550": "SELECT P.Body FROM tags AS T INNER JOIN posts AS P ON T.ExcerptPostId = P.Id ORDER BY T.Count DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "551": "SELECT COUNT(*) FROM badges WHERE UserId = (SELECT Id FROM users WHERE DisplayName = 'csgillespie')\t----- bird -----\tcodebase_community",
    "552": "SELECT T1.Name FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.DisplayName = 'csgillespie'\t----- bird -----\tcodebase_community",
    "553": "SELECT COUNT(Id) FROM badges WHERE UserId = (SELECT Id FROM users WHERE DisplayName = 'csgillespie') AND STRFTIME('%Y', Date) = '2011'\t----- bird -----\tcodebase_community",
    "554": "SELECT DisplayName FROM users WHERE Id = ( SELECT UserId FROM badges GROUP BY UserId ORDER BY COUNT(Id) DESC LIMIT 1 )\t----- bird -----\tcodebase_community",
    "555": "SELECT AVG(T1.Score) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'csgillespie'\t----- bird -----\tcodebase_community",
    "556": "SELECT AVG(badges_obtained) FROM (SELECT COUNT(Id) AS badges_obtained, UserId FROM badges INNER JOIN users ON badges.UserId = users.Id WHERE users.Views > 200 GROUP BY UserId) as subquery;\t----- bird -----\tcodebase_community",
    "557": "SELECT CAST(SUM(CASE WHEN T1.Age > 65 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.Id) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T1.Score > 20\t----- bird -----\tcodebase_community",
    "558": "SELECT COUNT(*) FROM votes WHERE UserId = 58 AND CreationDate = '2010-07-19'\t----- bird -----\tcodebase_community",
    "559": "SELECT CreationDate FROM votes GROUP BY CreationDate ORDER BY COUNT(Id) DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "560": "SELECT COUNT(Id) FROM badges WHERE Name = 'Revival'\t----- bird -----\tcodebase_community",
    "561": "SELECT Title FROM posts WHERE Id = (SELECT PostId FROM comments WHERE Score = (SELECT MAX(Score) FROM comments))\t----- bird -----\tcodebase_community",
    "562": "SELECT COUNT(*) FROM comments WHERE PostId = (SELECT Id FROM posts WHERE ViewCount = 1910)\t----- bird -----\tcodebase_community",
    "563": "SELECT T1.FavoriteCount FROM posts AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.PostId WHERE T2.UserId = '3025' AND T2.CreationDate = '2014-04-23 20:29:39.0'\t----- bird -----\tcodebase_community",
    "564": "SELECT T1.Text FROM comments AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T2.ParentId = 107829 AND T2.CommentCount = '1'\t----- bird -----\tcodebase_community",
    "565": "SELECT CASE WHEN p.ClosedDate IS NULL THEN 'Post is not well-finished' ELSE 'Post is well-finished' END AS PostStatus FROM posts p JOIN comments c ON p.Id = c.PostId WHERE c.UserId = 23853 AND c.CreationDate = '2013-07-12 09:08:18.0'\t----- bird -----\tcodebase_community",
    "566": "SELECT Reputation FROM users WHERE Id = (SELECT OwnerUserId FROM posts WHERE Id = 65041)\t----- bird -----\tcodebase_community",
    "567": "SELECT COUNT(*) FROM posts WHERE OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'Tiago Pasqualini')\t----- bird -----\tcodebase_community",
    "568": "SELECT T2.DisplayName FROM votes AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Id = 6347\t----- bird -----\tcodebase_community",
    "569": "SELECT COUNT(*) FROM votes INNER JOIN posts ON votes.PostId = posts.Id WHERE posts.Title LIKE '%data visualization%'\t----- bird -----\tcodebase_community",
    "570": "SELECT b.Name FROM users AS u INNER JOIN badges AS b ON u.Id = b.UserId WHERE u.DisplayName = 'DatEpicCoderGuyWhoPrograms'\t----- bird -----\tcodebase_community",
    "571": "SELECT COUNT(T1.Id) / COUNT(T2.Id) AS times FROM posts AS T1 INNER JOIN votes AS T2 ON T1.OwnerUserId = T2.UserId WHERE T1.OwnerUserId = 24;\t----- bird -----\tcodebase_community",
    "572": "SELECT ViewCount FROM posts WHERE Title = 'Integration of Weka and/or RapidMiner into Informatica PowerCenter/Developer'\t----- bird -----\tcodebase_community",
    "573": "SELECT Text FROM comments WHERE Score = 17\t----- bird -----\tcodebase_community",
    "574": "SELECT DisplayName FROM users WHERE WebsiteUrl = 'http://stackoverflow.com'\t----- bird -----\tcodebase_community",
    "575": "SELECT T1.Name FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.DisplayName = 'SilentGhost'\t----- bird -----\tcodebase_community",
    "576": "SELECT T2.DisplayName FROM comments AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Text = 'thank you user93!'\t----- bird -----\tcodebase_community",
    "577": "SELECT Text FROM comments WHERE UserId = (SELECT Id FROM users WHERE DisplayName = 'A Lion')\t----- bird -----\tcodebase_community",
    "578": "SELECT T1.DisplayName, T1.Reputation FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T2.Title = 'Understanding what Dassault iSight is doing?'\t----- bird -----\tcodebase_community",
    "579": "SELECT Text FROM comments WHERE PostId = (SELECT Id FROM posts WHERE Title = 'How does gentle boosting differ from AdaBoost?')\t----- bird -----\tcodebase_community",
    "580": "SELECT T2.DisplayName FROM users AS T2 INNER JOIN badges AS T1 ON T2.Id = T1.UserId WHERE T1.Name = 'Necromancer' LIMIT 10;\t----- bird -----\tcodebase_community",
    "581": "SELECT T1.DisplayName FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.LastEditorUserId WHERE T2.Title = 'Open source tools for visualizing multi-dimensional data'\t----- bird -----\tcodebase_community",
    "582": "SELECT T2.Title FROM posts AS T1 INNER JOIN users AS T2 ON T1.LastEditorUserId = T2.Id WHERE T2.DisplayName LIKE 'Vebjorn Ljosa'\t----- bird -----\tcodebase_community",
    "583": "SELECT SUM(T1.Score), T2.WebsiteUrl FROM posts AS T1 INNER JOIN users AS T2 ON T1.LastEditorUserId = T2.Id WHERE T2.DisplayName = 'Yevgeny'\t----- bird -----\tcodebase_community",
    "584": "SELECT c.Text FROM comments c JOIN postHistory ph ON c.PostId = ph.PostId JOIN posts p ON ph.PostId = p.Id WHERE p.Title = 'Why square the difference instead of taking the absolute value in standard deviation?' AND ph.UserId = c.UserId;\t----- bird -----\tcodebase_community",
    "585": "SELECT SUM(T1.BountyAmount) FROM posts AS T1 WHERE T1.Title LIKE '%data%'\t----- bird -----\tcodebase_community",
    "586": "SELECT T1.DisplayName FROM users AS T1 INNER JOIN votes AS T2 ON T1.Id = T2.UserId INNER JOIN posts AS T3 ON T2.PostId = T3.Id WHERE T2.BountyAmount = 50 AND T3.Title LIKE '%variance%'\t----- bird -----\tcodebase_community",
    "587": "SELECT AVG(T1.ViewCount), T1.Title, T2.Text, T1.Score FROM posts AS T1 INNER JOIN tags AS T2 ON T1.Id = T2.ExcerptPostId WHERE T2.TagName = 'humor'\t----- bird -----\tcodebase_community",
    "588": "SELECT COUNT(Id) FROM comments WHERE UserId = 13\t----- bird -----\tcodebase_community",
    "589": "SELECT Id FROM users WHERE Reputation = (SELECT MAX(Reputation) FROM users)\t----- bird -----\tcodebase_community",
    "590": "SELECT Id FROM users ORDER BY Views ASC LIMIT 1\t----- bird -----\tcodebase_community",
    "591": "SELECT COUNT(DISTINCT UserId) FROM badges WHERE Name = 'Supporter' AND strftime('%Y', Date) = '2011';\t----- bird -----\tcodebase_community",
    "592": "SELECT COUNT(UserId) FROM badges GROUP BY UserId HAVING COUNT(Name) > 5\t----- bird -----\tcodebase_community",
    "593": "SELECT COUNT(b.Id) FROM badges b JOIN users u ON b.UserId = u.Id WHERE u.Location = 'New York' AND b.Name IN ('Supporter', 'Teacher')\t----- bird -----\tcodebase_community",
    "594": "SELECT T1.DisplayName, T1.Reputation FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T2.Id = 1\t----- bird -----\tcodebase_community",
    "595": "SELECT T3.UserId FROM postHistory AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id INNER JOIN users AS T3 ON T1.UserId = T3.Id WHERE T2.Views >= 1000 GROUP BY T3.UserId HAVING COUNT(T1.Id) = 1;\t----- bird -----\tcodebase_community",
    "596": "SELECT T2.DisplayName, T1.Name FROM comments AS T3 INNER JOIN users AS T2 ON T3.UserId = T2.Id INNER JOIN badges AS T1 ON T2.Id = T1.UserId GROUP BY T3.UserId ORDER BY COUNT(T3.Id) DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "597": "SELECT COUNT(T1.Id) FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T1.Location = 'India' AND T2.Name = 'Teacher'\t----- bird -----\tcodebase_community",
    "598": "SELECT ((CAST(COUNT(CASE WHEN strftime('%Y', Date) = '2010' AND Name = 'Students' THEN 1 END) AS REAL) / COUNT(Name) - CAST(COUNT(CASE WHEN strftime('%Y', Date) = '2011' AND Name = 'Students' THEN 1 END) AS REAL) / COUNT(Name)) * 100) AS percentage_difference FROM badges\t----- bird -----\tcodebase_community",
    "599": "SELECT DISTINCT PostHistoryTypeId, COUNT(DISTINCT UserId) FROM postHistory WHERE PostId = 3720 AND Comment IS NOT NULL;\t----- bird -----\tcodebase_community",
    "600": "SELECT T2.Id, T2.Title, T2.ViewCount FROM postLinks AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T1.RelatedPostId = 61217\t----- bird -----\tcodebase_community",
    "601": "SELECT Score, LinkTypeId FROM posts WHERE Id = 395\t----- bird -----\tcodebase_community",
    "602": "SELECT T1.Id AS Post_ID, T1.OwnerUserId AS User_ID FROM posts AS T1 WHERE T1.Score > 60;\t----- bird -----\tcodebase_community",
    "603": "SELECT SUM(FavoriteCount) FROM posts WHERE OwnerUserId = 686 AND CreationDate LIKE '2011%'\t----- bird -----\tcodebase_community",
    "604": "SELECT AVG(T1.UpVotes) AS avg_up_votes, AVG(T2.Age) AS avg_age FROM users AS T2 INNER JOIN posts AS T1 ON T1.OwnerUserId = T2.Id GROUP BY T1.OwnerUserId HAVING COUNT(T1.OwnerUserId) > 10\t----- bird -----\tcodebase_community",
    "605": "SELECT COUNT(UserId) FROM badges WHERE Name = 'Announcer'\t----- bird -----\tcodebase_community",
    "606": "SELECT Name FROM badges WHERE Date = '2010-07-19 19:39:08'\t----- bird -----\tcodebase_community",
    "607": "SELECT COUNT(Id) FROM comments WHERE Score > 60\t----- bird -----\tcodebase_community",
    "608": "SELECT Text FROM comments WHERE CreationDate = '2010-07-19 19:25:47'\t----- bird -----\tcodebase_community",
    "609": "SELECT COUNT(Id) FROM posts WHERE Score = 10\t----- bird -----\tcodebase_community",
    "610": "SELECT b.Name FROM badges AS b INNER JOIN users AS u ON b.UserId = u.Id WHERE u.Reputation = (SELECT MAX(Reputation) FROM users)\t----- bird -----\tcodebase_community",
    "611": "SELECT T2.Reputation FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T2.Date = '2010-07-19 19:39:08.0'\t----- bird -----\tcodebase_community",
    "612": "SELECT T1.Name FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.DisplayName = 'Pierre'\t----- bird -----\tcodebase_community",
    "613": "SELECT T1.Date FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.Location = 'Rochester, NY'\t----- bird -----\tcodebase_community",
    "614": "SELECT COUNT(DISTINCT UserId) * 100 / (SELECT COUNT(DISTINCT UserId) FROM badges WHERE Name = 'Teacher') FROM badges WHERE Name = 'Teacher'\t----- bird -----\tcodebase_community",
    "615": "SELECT (COUNT(T1.UserId) / (SELECT COUNT(UserId) FROM badges WHERE Name = 'Organizer')) * 100 AS Percentage FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.Age BETWEEN 13 AND 18 AND T1.Name = 'Organizer'\t----- bird -----\tcodebase_community",
    "616": "SELECT T2.Score FROM comments AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T2.CreationDate = '2010-07-19 19:19:56.0'\t----- bird -----\tcodebase_community",
    "617": "SELECT Text FROM comments WHERE PostId = (SELECT Id FROM posts WHERE CreaionDate = '2010-07-19 19:37:33.0')\t----- bird -----\tcodebase_community",
    "618": "SELECT Age FROM users WHERE Location = 'Vienna, Austria'\t----- bird -----\tcodebase_community",
    "619": "SELECT COUNT(DISTINCT T1.UserId) FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Name = 'Supporter' AND T2.Age BETWEEN 19 AND 65\t----- bird -----\tcodebase_community",
    "620": "SELECT SUM(ViewCount) FROM users INNER JOIN badges ON users.Id = badges.UserId WHERE badges.Date = '2010-07-19 19:39:08.0'\t----- bird -----\tcodebase_community",
    "621": "SELECT b.Name FROM badges b JOIN users u ON b.UserId = u.Id WHERE u.Reputation = (SELECT MIN(Reputation) FROM users)\t----- bird -----\tcodebase_community",
    "622": "SELECT Name FROM badges WHERE UserId = (SELECT Id FROM users WHERE DisplayName = 'Sharpie');\t----- bird -----\tcodebase_community",
    "623": "SELECT COUNT(T1.Id) FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.Age > 65 AND T1.Name = 'Supporter'\t----- bird -----\tcodebase_community",
    "624": "SELECT DisplayName FROM users WHERE Id = 30;\t----- bird -----\tcodebase_community",
    "625": "SELECT COUNT(*) FROM users WHERE Location = 'New York'\t----- bird -----\tcodebase_community",
    "626": "SELECT COUNT(*) FROM votes WHERE YEAR(CreationDate) = 2010\t----- bird -----\tcodebase_community",
    "627": "SELECT COUNT(Id) FROM users WHERE Age BETWEEN 19 AND 65\t----- bird -----\tcodebase_community",
    "628": "SELECT T.DisplayName FROM users AS T ORDER BY T.Views DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "629": "SELECT CAST(COUNT(CASE WHEN strftime('%Y', CreationDate) = '2010' THEN 1 ELSE 0 END) AS REAL) / COUNT(CASE WHEN strftime('%Y', CreationDate) = '2011' THEN 1 ELSE 0 END) FROM votes;\t----- bird -----\tcodebase_community",
    "630": "SELECT T2.TagName FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId INNER JOIN postTags AS T3 ON T2.Id = T3.PostId INNER JOIN tags AS T4 ON T3.TagId = T4.Id WHERE T1.DisplayName = 'John Stauffer'\t----- bird -----\tcodebase_community",
    "631": "SELECT COUNT(*) FROM posts WHERE OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'Daniel Vassallo')\t----- bird -----\tcodebase_community",
    "632": "SELECT COUNT(*) FROM votes AS v INNER JOIN users AS u ON v.UserId = u.Id WHERE u.DisplayName = 'Harlan'\t----- bird -----\tcodebase_community",
    "633": "SELECT T1.Id FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'slashnick' ORDER BY T1.AnswerCount DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "634": "SELECT Title FROM posts WHERE OwnerDisplayName IN ('Harvey Motulsky', 'Noah Snyder') GROUP BY Title ORDER BY SUM(ViewCount) DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "635": "SELECT COUNT(*) FROM posts WHERE OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'Matt Parker') AND Id IN (SELECT PostId FROM votes GROUP BY PostId HAVING COUNT(*) > 4)\t----- bird -----\tcodebase_community",
    "636": "SELECT COUNT(*) FROM comments AS c INNER JOIN users AS u ON c.UserId = u.Id WHERE u.DisplayName = 'Neil McGuigan' AND c.Score < 60;\t----- bird -----\tcodebase_community",
    "637": "SELECT T2.TagName FROM posts AS T1 INNER JOIN tags AS T2 ON T1.Tags LIKE '%' || T2.TagName || '%' LEFT JOIN comments AS T3 ON T1.Id = T3.PostId INNER JOIN users AS T4 ON T1.OwnerUserId = T4.Id WHERE T4.DisplayName = 'Mark Meckes' AND T3.Id IS NULL;\t----- bird -----\tcodebase_community",
    "638": "SELECT T1.DisplayName FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T2.Name = 'Organizer'\t----- bird -----\tcodebase_community",
    "639": "SELECT CAST(SUM(IIF(T2.TagName = 'r', 1, 0)) AS REAL) * 100 / COUNT(T1.PostId) FROM posts AS T1 INNER JOIN tags AS T2 ON T1.Tags LIKE '%' || T2.TagName || '%' WHERE T1.OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'Community')\t----- bird -----\tcodebase_community",
    "640": "SELECT SUM(CASE WHEN T1.DisplayName = 'Mornington' THEN T2.ViewCount ELSE 0 END) - SUM(CASE WHEN T1.DisplayName = 'Amos' THEN T2.ViewCount ELSE 0 END) AS difference FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId;\t----- bird -----\tcodebase_community",
    "641": "SELECT COUNT(DISTINCT b.UserId) FROM badges AS b INNER JOIN users AS u ON b.UserId = u.Id WHERE b.Name = 'commentator' AND strftime('%Y', b.Date) = '2014'\t----- bird -----\tcodebase_community",
    "642": "SELECT COUNT(*) FROM posts WHERE CreationDate BETWEEN '2010-07-21 00:00:00' AND '2010-07-21 23:59:59'\t----- bird -----\tcodebase_community",
    "643": "SELECT DisplayName, Age FROM users ORDER BY Views DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "644": "SELECT LastEditDate, LastEditorUserId FROM posts WHERE Title = 'Detecting a given face in a database of facial images'\t----- bird -----\tcodebase_community",
    "645": "SELECT COUNT(Id) FROM comments WHERE UserId = 13 AND Score < 60\t----- bird -----\tcodebase_community",
    "646": "SELECT P.Title, C.UserDisplayName FROM posts AS P INNER JOIN comments AS C ON P.Id = C.PostId WHERE C.Score > 60;\t----- bird -----\tcodebase_community",
    "647": "SELECT b.Name FROM badges b JOIN users u ON b.UserId = u.Id WHERE u.Location = 'North Pole' AND year(b.Date) = 2011;\t----- bird -----\tcodebase_community",
    "648": "SELECT u.DisplayName, u.WebsiteUrl FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE p.FavoriteCount > 150;\t----- bird -----\tcodebase_community",
    "649": "SELECT COUNT(*) AS post_history_counts, MAX(CreationDate) AS last_edit_date FROM postHistory WHERE PostId = (SELECT Id FROM posts WHERE Title = 'What is the best introductory Bayesian statistics textbook?')\t----- bird -----\tcodebase_community",
    "650": "SELECT T1.LastAccessDate, T1.Location FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T2.Name = 'Outliers'\t----- bird -----\tcodebase_community",
    "651": "SELECT T2.Title FROM posts AS T1 INNER JOIN postLinks AS T2 ON T1.Id = T2.RelatedPostId WHERE T1.Title = 'How to tell if something happened in a data set which monitors a value over time'\t----- bird -----\tcodebase_community",
    "652": "SELECT p.Id, b.Name FROM posts p JOIN users u ON p.OwnerUserId = u.Id JOIN badges b ON u.Id = b.UserId WHERE u.DisplayName = 'Samuel' AND YEAR(p.CreationDate) = 2013 AND YEAR(b.Date) = 2013;\t----- bird -----\tcodebase_community",
    "653": "SELECT OwnerDisplayName FROM posts ORDER BY ViewCount DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "654": "SELECT T1.DisplayName, T1.Location FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId INNER JOIN tags AS T3 ON T3.ExcerptPostId = T2.Id WHERE T3.TagName = 'hypothesis-testing'\t----- bird -----\tcodebase_community",
    "655": "SELECT T2.Title, T1.LinkTypeId FROM postLinks AS T1 INNER JOIN posts AS T2 ON T1.RelatedPostId = T2.Id WHERE T2.Title = 'What are principal component scores?'\t----- bird -----\tcodebase_community",
    "656": "SELECT posts.OwnerDisplayName AS ParentDisplayName FROM posts WHERE posts.ParentId IS NOT NULL AND posts.Score = (SELECT MAX(Score) FROM posts WHERE ParentId IS NOT NULL)\t----- bird -----\tcodebase_community",
    "657": "SELECT T1.DisplayName, T1.WebsiteUrl FROM users AS T1 INNER JOIN votes AS T2 ON T1.Id = T2.UserId WHERE T2.VoteTypeId = 8 ORDER BY T2.BountyAmount DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "658": "SELECT Title FROM posts ORDER BY ViewCount DESC LIMIT 5;\t----- bird -----\tcodebase_community",
    "659": "SELECT COUNT(Id) FROM tags WHERE Count BETWEEN 5000 AND 7000\t----- bird -----\tcodebase_community",
    "660": "SELECT T.OwnerUserId FROM posts AS T WHERE T.FavoriteCount = (SELECT MAX(FavoriteCount) FROM posts)\t----- bird -----\tcodebase_community",
    "661": "SELECT Age FROM users WHERE Reputation = (SELECT MAX(Reputation) FROM users)\t----- bird -----\tcodebase_community",
    "662": "SELECT COUNT(*) FROM posts WHERE Id IN (SELECT PostId FROM votes WHERE BountyAmount = 50) AND STRFTIME('%Y', CreationDate) = '2011'\t----- bird -----\tcodebase_community",
    "663": "SELECT Id FROM users WHERE Age = (SELECT MIN(Age) FROM users)\t----- bird -----\tcodebase_community",
    "664": "SELECT P.Score FROM posts AS P INNER JOIN tags AS T ON P.Tags LIKE '%' || T.TagName || '%' ORDER BY T.Count DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "665": "SELECT COUNT(T1.Id) / 12 AS average_monthly_links FROM postLinks AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE strftime('%Y', T1.CreationDate) = '2010' AND T2.AnswerCount <= 2;\t----- bird -----\tcodebase_community",
    "666": "SELECT Id FROM posts WHERE Id IN (SELECT PostId FROM votes WHERE UserId = 1465) ORDER BY FavoriteCount DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "667": "SELECT T1.Title FROM posts AS T1 INNER JOIN postLinks AS T2 ON T1.Id = T2.PostId ORDER BY T2.CreationDate LIMIT 1\t----- bird -----\tcodebase_community",
    "668": "SELECT u.DisplayName FROM users AS u INNER JOIN badges AS b ON u.Id = b.UserId GROUP BY u.DisplayName ORDER BY COUNT(b.Name) DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "669": "SELECT MIN(v.CreationDate) FROM votes v JOIN users u ON v.UserId = u.Id WHERE u.DisplayName = 'chl'\t----- bird -----\tcodebase_community",
    "670": "SELECT MIN(posts.CreaionDate) AS First_Post_Date FROM posts INNER JOIN users ON posts.OwnerUserId = users.Id WHERE users.Age = (SELECT MIN(Age) FROM users)\t----- bird -----\tcodebase_community",
    "671": "SELECT T1.UserDisplayName FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Name = 'Autobiographer' ORDER BY T1.Date ASC LIMIT 1\t----- bird -----\tcodebase_community",
    "672": "SELECT COUNT(T1.Id) FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T1.Location = 'United Kingdom' AND T2.FavoriteCount >= 4\t----- bird -----\tcodebase_community",
    "673": "SELECT AVG(PostId) FROM votes WHERE UserId IN (SELECT Id FROM users WHERE Age = (SELECT MAX(Age) FROM users))\t----- bird -----\tcodebase_community",
    "674": "SELECT DisplayName FROM users WHERE Reputation = (SELECT MAX(Reputation) FROM users)\t----- bird -----\tcodebase_community",
    "675": "SELECT COUNT(Id) FROM users WHERE Reputation > 2000 AND Views > 1000\t----- bird -----\tcodebase_community",
    "676": "SELECT DisplayName FROM users WHERE Age BETWEEN 19 AND 65\t----- bird -----\tcodebase_community",
    "677": "SELECT COUNT(*) FROM posts WHERE OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'Jay Stevens') AND YEAR(CreationDate) = 2010;\t----- bird -----\tcodebase_community",
    "678": "SELECT T1.Id, T1.Title FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'Harvey Motulsky' ORDER BY T1.ViewCount DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "679": "SELECT p.Id, p.Title FROM posts p WHERE p.Score = (SELECT MAX(Score) FROM posts)\t----- bird -----\tcodebase_community",
    "680": "SELECT AVG(P.Score) FROM posts AS P INNER JOIN users AS U ON P.OwnerUserId = U.Id WHERE U.DisplayName = 'Stephen Turner'\t----- bird -----\tcodebase_community",
    "681": "SELECT T1.DisplayName FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T2.ViewCount > 20000 AND YEAR(T2.CreaionDate) = 2011\t----- bird -----\tcodebase_community",
    "682": "SELECT T1.Id, T1.OwnerDisplayName FROM posts AS T1 WHERE T1.FavoriteCount = ( SELECT MAX(FavoriteCount) FROM posts WHERE STRFTIME('%Y', CreationDate) = '2010' )\t----- bird -----\tcodebase_community",
    "683": "SELECT CAST(COUNT(CASE WHEN T1.CreationDate = 2011 AND T2.Reputation > 1000 THEN T3.Id ELSE NULL END) AS REAL) * 100 / COUNT(T3.Id) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id INNER JOIN users AS T3 ON T1.OwnerUserId = T3.Id\t----- bird -----\tcodebase_community",
    "684": "SELECT CAST(COUNT(CASE WHEN Age BETWEEN 13 AND 18 THEN 1 END) AS REAL) * 100 / COUNT(Id) FROM users;\t----- bird -----\tcodebase_community",
    "685": "SELECT T1.ViewCount, T2.DisplayName FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T1.Title = 'Computer Game Datasets'\t----- bird -----\tcodebase_community",
    "686": "SELECT COUNT(*) FROM posts WHERE ViewCount > (SELECT AVG(ViewCount) FROM posts)\t----- bird -----\tcodebase_community",
    "687": "SELECT COUNT(*) FROM comments WHERE PostId = (SELECT Id FROM posts WHERE Score = (SELECT MAX(Score) FROM posts))\t----- bird -----\tcodebase_community",
    "688": "SELECT COUNT(*) FROM posts WHERE ViewCount > 35000 AND CommentCount = 0\t----- bird -----\tcodebase_community",
    "689": "SELECT U.DisplayName, U.Location FROM posts AS P INNER JOIN users AS U ON P.LastEditorUserId = U.Id WHERE P.Id = 183;\t----- bird -----\tcodebase_community",
    "690": "SELECT Name FROM badges WHERE UserId = (SELECT Id FROM users WHERE DisplayName = 'Emmett') ORDER BY Date DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "691": "SELECT COUNT(Id) FROM users WHERE Age BETWEEN 19 AND 65 AND UpVotes > 5000\t----- bird -----\tcodebase_community",
    "692": "SELECT strftime('%J', b.Date) - strftime('%J', u.CreationDate) AS TimeToGetBadge FROM badges AS b INNER JOIN users AS u ON b.UserId = u.Id WHERE u.DisplayName = 'Zolomon'\t----- bird -----\tcodebase_community",
    "693": "SELECT COUNT(posts.Id) AS num_posts, COUNT(comments.Id) AS num_comments FROM posts JOIN users ON posts.OwnerUserId = users.Id JOIN comments ON comments.UserId = users.Id WHERE users.CreationDate = (SELECT MAX(CreationDate) FROM users)\t----- bird -----\tcodebase_community",
    "694": "SELECT C.Text, U.UserDisplayName FROM comments AS C INNER JOIN posts AS P ON C.PostId = P.Id INNER JOIN users AS U ON C.UserId = U.Id WHERE P.Title = 'Analysing wind data with R' ORDER BY C.CreationDate DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "695": "SELECT COUNT(*) FROM badges WHERE Name = 'Citizen Patrol'\t----- bird -----\tcodebase_community",
    "696": "SELECT COUNT(*) FROM posts WHERE Tags LIKE '%careers%'\t----- bird -----\tcodebase_community",
    "697": "SELECT Reputation, ViewCount FROM users WHERE DisplayName = 'Jarrod Dixon'\t----- bird -----\tcodebase_community",
    "698": "SELECT COUNT(*) FROM comments WHERE PostId = (SELECT Id FROM posts WHERE Title = 'Clustering 1D data') UNION SELECT COUNT(*) FROM posts WHERE ParentId = (SELECT Id FROM posts WHERE Title = 'Clustering 1D data')\t----- bird -----\tcodebase_community",
    "699": "SELECT CreationDate FROM users WHERE DisplayName = 'IrishStat'\t----- bird -----\tcodebase_community",
    "700": "SELECT COUNT(Id) FROM votes WHERE BountyAmount >= 30\t----- bird -----\tcodebase_community",
    "701": "SELECT CAST(COUNT(T1.Id) AS REAL) * 100 / (SELECT COUNT(T1.Id) FROM posts AS T1 WHERE T1.OwnerUserId = (SELECT MAX(Reputation) FROM users)) AS percentage FROM posts AS T1 WHERE T1.OwnerUserId = (SELECT MAX(Reputation) FROM users) AND T1.Score >= 50;\t----- bird -----\tcodebase_community",
    "702": "SELECT COUNT(Id) FROM posts WHERE Score < 20\t----- bird -----\tcodebase_community",
    "703": "SELECT COUNT(Id) FROM tags WHERE Id < 15 AND Count <= 20;\t----- bird -----\tcodebase_community",
    "704": "SELECT ExcerptPostId, WikiPostId FROM tags WHERE TagName = 'sample'\t----- bird -----\tcodebase_community",
    "705": "SELECT T1.Reputation, T1.UpVotes FROM users AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.UserId WHERE T2.Text = 'fine, you win :)'\t----- bird -----\tcodebase_community",
    "706": "SELECT T2.Text FROM comments AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T2.Title = 'How can I adapt ANOVA for binary data?'\t----- bird -----\tcodebase_community",
    "707": "SELECT T2.Text FROM posts AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.PostId WHERE T1.ViewCount BETWEEN 100 AND 150 ORDER BY T2.Score DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "708": "SELECT T2.CreationDate, T1.Age FROM users AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.UserId WHERE T2.Text LIKE '%http://%'\t----- bird -----\tcodebase_community",
    "709": "SELECT COUNT(DISTINCT c.PostId) FROM comments c JOIN posts p ON c.PostId = p.Id WHERE c.Score = 0 AND p.ViewCount < 5;\t----- bird -----\tcodebase_community",
    "710": "SELECT COUNT(T1.Id) FROM comments AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T2.CommentCount = 1 AND T1.Score = 0\t----- bird -----\tcodebase_community",
    "711": "SELECT COUNT(DISTINCT users.Id) FROM comments INNER JOIN users ON comments.UserId = users.Id WHERE comments.Score = 0 AND users.Age = 40\t----- bird -----\tcodebase_community",
    "712": "SELECT posts.Id, comments.Text FROM posts JOIN comments ON posts.Id = comments.PostId WHERE posts.Title = 'Group differences on a five point Likert item'\t----- bird -----\tcodebase_community",
    "713": "SELECT T1.UpVotes FROM users AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.UserId WHERE T2.Text = 'R is also lazy evaluated.'\t----- bird -----\tcodebase_community",
    "714": "SELECT T1.Text FROM comments AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.DisplayName = 'Harvey Motulsky'\t----- bird -----\tcodebase_community",
    "715": "SELECT UserDisplayName FROM comments WHERE Score BETWEEN 1 AND 5 AND UserId IN (SELECT Id FROM users WHERE DownVotes = 0)\t----- bird -----\tcodebase_community",
    "716": "SELECT CAST(COUNT(CASE WHEN UpVotes = 0 THEN UserId END) AS REAL) * 100 / COUNT(UserId) FROM comments WHERE Score BETWEEN 5 AND 10;\t----- bird -----\tcodebase_community",
    "717": "SELECT T2.power_name FROM superhero AS T1 INNER JOIN hero_power AS T3 ON T1.id = T3.hero_id INNER JOIN superpower AS T2 ON T3.power_id = T2.id WHERE T1.superhero_name = '3-D Man'\t----- bird -----\tsuperhero",
    "718": "SELECT COUNT(hero_id) FROM hero_power INNER JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'Super Strength'\t----- bird -----\tsuperhero",
    "719": "SELECT COUNT(T1.superhero_name) FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T3.power_name = 'Super Strength' AND T1.height_cm > 200;\t----- bird -----\tsuperhero",
    "720": "SELECT full_name FROM superhero WHERE id IN (SELECT hero_id FROM hero_power GROUP BY hero_id HAVING COUNT(power_id) > 15)\t----- bird -----\tsuperhero",
    "721": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T2.colour = 'Blue'\t----- bird -----\tsuperhero",
    "722": "SELECT T2.colour FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.skin_colour_id = T2.id WHERE T1.superhero_name = 'Apocalypse'\t----- bird -----\tsuperhero",
    "723": "SELECT COUNT(*) FROM superhero AS s INNER JOIN colour AS c ON s.eye_colour_id = c.id INNER JOIN hero_power AS hp ON s.id = hp.hero_id INNER JOIN superpower AS sp ON hp.power_id = sp.id WHERE c.colour = 'Blue' AND sp.power_name = 'Agility'\t----- bird -----\tsuperhero",
    "724": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id INNER JOIN colour AS T3 ON T1.hair_colour_id = T3.id WHERE T2.colour = 'Blue' AND T3.colour = 'Blond'\t----- bird -----\tsuperhero",
    "725": "SELECT COUNT(*) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'Marvel Comics'\t----- bird -----\tsuperhero",
    "726": "SELECT T1.full_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'Marvel Comics' ORDER BY T1.height_cm DESC LIMIT 1\t----- bird -----\tsuperhero",
    "727": "SELECT T2.publisher_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.superhero_name = 'Sauron';\t----- bird -----\tsuperhero",
    "728": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id INNER JOIN colour AS T3 ON T1.eye_colour_id = T3.id WHERE T2.publisher_name = 'Marvel Comics' AND T3.colour = 'Blue'\t----- bird -----\tsuperhero",
    "729": "SELECT AVG(height_cm) FROM superhero INNER JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher.publisher_name = 'Marvel Comics';\t----- bird -----\tsuperhero",
    "730": "SELECT CAST(COUNT(CASE WHEN T5.power_name = 'Super Strength' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T1.id) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id INNER JOIN hero_power AS T3 ON T1.id = T3.hero_id INNER JOIN superpower AS T5 ON T3.power_id = T5.id WHERE T2.publisher_name = 'Marvel Comics'\t----- bird -----\tsuperhero",
    "731": "SELECT COUNT(*) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'DC Comics'\t----- bird -----\tsuperhero",
    "732": "SELECT T4.publisher_name FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN attribute AS T3 ON T2.attribute_id = T3.id INNER JOIN publisher AS T4 ON T1.publisher_id = T4.id WHERE T3.attribute_name = 'Speed' ORDER BY T2.attribute_value LIMIT 1;\t----- bird -----\tsuperhero",
    "733": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id INNER JOIN publisher AS T3 ON T1.publisher_id = T3.id WHERE T2.colour = 'Gold' AND T3.publisher_name = 'Marvel Comics'\t----- bird -----\tsuperhero",
    "734": "SELECT T2.publisher_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.superhero_name = 'Blue Beetle II'\t----- bird -----\tsuperhero",
    "735": "SELECT COUNT(*) FROM superhero WHERE hair_colour_id = (SELECT id FROM colour WHERE colour = 'Blond')\t----- bird -----\tsuperhero",
    "736": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN attribute AS T3 ON T2.attribute_id = T3.id WHERE T3.attribute_name = 'Intelligence' ORDER BY T2.attribute_value LIMIT 1\t----- bird -----\tsuperhero",
    "737": "SELECT T2.race FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T1.superhero_name = 'Copycat';\t----- bird -----\tsuperhero",
    "738": "SELECT COUNT(DISTINCT T1.id) FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN attribute AS T3 ON T2.attribute_id = T3.id WHERE T3.attribute_name = 'Durability' AND T2.attribute_value < 50\t----- bird -----\tsuperhero",
    "739": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T3.power_name = 'Death Touch'\t----- bird -----\tsuperhero",
    "740": "SELECT COUNT(T1.superhero_name) FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id INNER JOIN hero_attribute AS T3 ON T1.id = T3.hero_id INNER JOIN attribute AS T4 ON T3.attribute_id = T4.id WHERE T2.gender = 'Female' AND T4.attribute_name = 'Strength' AND T3.attribute_value = 100\t----- bird -----\tsuperhero",
    "741": "SELECT superhero.superhero_name FROM superhero JOIN hero_power ON superhero.id = hero_power.hero_id GROUP BY superhero.superhero_name ORDER BY COUNT(hero_power.power_id) DESC LIMIT 1\t----- bird -----\tsuperhero",
    "742": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T2.race = 'Vampire'\t----- bird -----\tsuperhero",
    "743": "SELECT CAST(COUNT(CASE WHEN T1.alignment = 'Bad' THEN T2.id ELSE NULL END) AS REAL) * 100 / COUNT(T2.id) FROM alignment AS T1 INNER JOIN superhero AS T2 ON T1.id = T2.alignment_id INNER JOIN publisher AS T3 ON T2.publisher_id = T3.id WHERE T3.publisher_name = 'Marvel Comics'\t----- bird -----\tsuperhero",
    "744": "SELECT COUNT(CASE WHEN T2.publisher_name = 'Marvel Comics' THEN T1.id ELSE NULL END) - COUNT(CASE WHEN T2.publisher_name = 'DC Comics' THEN T1.id ELSE NULL END) AS diff FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id;\t----- bird -----\tsuperhero",
    "745": "SELECT id FROM publisher WHERE publisher_name = 'Star Trek'\t----- bird -----\tsuperhero",
    "746": "SELECT AVG(attribute_value) FROM hero_attribute\t----- bird -----\tsuperhero",
    "747": "SELECT COUNT(*) FROM superhero WHERE full_name IS NULL\t----- bird -----\tsuperhero",
    "748": "SELECT C.colour FROM superhero AS S INNER JOIN colour AS C ON S.eye_colour_id = C.id WHERE S.id = 75;\t----- bird -----\tsuperhero",
    "749": "SELECT T2.power_name FROM superhero AS T1 INNER JOIN hero_power AS T3 ON T1.id = T3.hero_id INNER JOIN superpower AS T2 ON T3.power_id = T2.id WHERE T1.superhero_name = 'Deathlok'\t----- bird -----\tsuperhero",
    "750": "SELECT AVG(weight_kg) FROM superhero WHERE gender_id = 2\t----- bird -----\tsuperhero",
    "751": "SELECT T2.power_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN gender AS T3 ON T1.gender_id = T3.id INNER JOIN superpower AS T4 ON T2.power_id = T4.id WHERE T3.gender = 'Male' LIMIT 5\t----- bird -----\tsuperhero",
    "752": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T2.race = 'Alien'\t----- bird -----\tsuperhero",
    "753": "SELECT T1.superhero_name FROM superhero AS T1 WHERE T1.height_cm BETWEEN 170 AND 190 AND T1.eye_colour_id = 1;\t----- bird -----\tsuperhero",
    "754": "SELECT T2.power_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T1.id = 56\t----- bird -----\tsuperhero",
    "755": "SELECT T1.full_name FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T2.race = 'Demi-God' LIMIT 5\t----- bird -----\tsuperhero",
    "756": "SELECT COUNT(*) FROM superhero WHERE alignment_id = (SELECT id FROM alignment WHERE alignment = 'Bad')\t----- bird -----\tsuperhero",
    "757": "SELECT T1.race FROM superhero AS T1 WHERE T1.weight_kg = 169\t----- bird -----\tsuperhero",
    "758": "SELECT c.colour FROM superhero s JOIN colour c ON s.hair_colour_id = c.id WHERE s.height_cm = 185 AND s.race_id = (SELECT id FROM race WHERE race = 'human');\t----- bird -----\tsuperhero",
    "759": "SELECT C.colour FROM superhero AS S INNER JOIN colour AS C ON S.eye_colour_id = C.id WHERE S.weight_kg = (SELECT MAX(weight_kg) FROM superhero)\t----- bird -----\tsuperhero",
    "760": "SELECT CAST(COUNT(CASE WHEN T1.publisher_id = 13 THEN T2.id ELSE NULL END) AS REAL) * 100 / COUNT(T2.id) FROM superhero AS T2 INNER JOIN publisher AS T1 ON T2.publisher_id = T1.id WHERE T2.height_cm BETWEEN 150 AND 180;\t----- bird -----\tsuperhero",
    "761": "SELECT T1.full_name FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id WHERE T2.gender = 'M' AND T1.weight_kg > (SELECT AVG(weight_kg) * 0.79 FROM superhero WHERE gender_id = (SELECT id FROM gender WHERE gender = 'M'))\t----- bird -----\tsuperhero",
    "762": "SELECT T2.power_name FROM superhero AS T1 INNER JOIN hero_power AS T3 ON T1.id = T3.hero_id INNER JOIN superpower AS T2 ON T3.power_id = T2.id GROUP BY T2.power_name ORDER BY COUNT(T2.power_name) DESC LIMIT 1\t----- bird -----\tsuperhero",
    "763": "SELECT T2.attribute_value FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN attribute AS T3 ON T2.attribute_id = T3.id WHERE T1.superhero_name = 'Abomination'\t----- bird -----\tsuperhero",
    "764": "SELECT SP.power_name FROM superpower AS SP INNER JOIN hero_power AS HP ON SP.id = HP.power_id WHERE HP.hero_id = 1\t----- bird -----\tsuperhero",
    "765": "SELECT COUNT(DISTINCT hero_id) FROM hero_power INNER JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'stealth'\t----- bird -----\tsuperhero",
    "766": "SELECT T1.full_name FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN attribute AS T3 ON T2.attribute_id = T3.id WHERE T3.attribute_name = 'strength' ORDER BY T2.attribute_value DESC LIMIT 1\t----- bird -----\tsuperhero",
    "767": "SELECT CAST(COUNT(T1.id) AS REAL) / SUM(IIF(T1.skin_colour_id = 1, 1, 0)) FROM superhero AS T1\t----- bird -----\tsuperhero",
    "768": "SELECT COUNT(*) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'Dark Horse Comics'\t----- bird -----\tsuperhero",
    "769": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id INNER JOIN hero_attribute AS T3 ON T1.id = T3.hero_id INNER JOIN attribute AS T4 ON T3.attribute_id = T4.id WHERE T4.attribute_name = 'durability' AND T2.publisher_name = 'Dark Horse Comics' GROUP BY T1.superhero_name ORDER BY MAX(T3.attribute_value) DESC LIMIT 1\t----- bird -----\tsuperhero",
    "770": "SELECT C.colour FROM superhero AS S INNER JOIN colour AS C ON S.eye_colour_id = C.id WHERE S.full_name = 'Abraham Sapien'\t----- bird -----\tsuperhero",
    "771": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T3.power_name = 'Flight'\t----- bird -----\tsuperhero",
    "772": "SELECT C.colour AS eye_colour, C2.colour AS hair_colour, C3.colour AS skin_colour FROM superhero AS S INNER JOIN colour AS C ON S.eye_colour_id = C.id INNER JOIN colour AS C2 ON S.hair_colour_id = C2.id INNER JOIN colour AS C3 ON S.skin_colour_id = C3.id INNER JOIN gender AS G ON S.gender_id = G.id INNER JOIN publisher AS P ON S.publisher_id = P.id WHERE G.gender = 'Female' AND P.publisher_name = 'Dark Horse Comics'\t----- bird -----\tsuperhero",
    "773": "SELECT T1.superhero_name, T2.publisher_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.hair_colour_id = T1.skin_colour_id AND T1.hair_colour_id = T1.eye_colour_id\t----- bird -----\tsuperhero",
    "774": "SELECT race.race FROM superhero INNER JOIN race ON superhero.race_id = race.id WHERE superhero.superhero_name = 'A-Bomb'\t----- bird -----\tsuperhero",
    "775": "SELECT CAST(COUNT(CASE WHEN T3.colour = 'Blue' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T1.id) FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id INNER JOIN colour AS T3 ON T1.eye_colour_id = T3.id WHERE T2.gender = 'Female'\t----- bird -----\tsuperhero",
    "776": "SELECT superhero_name, race FROM superhero WHERE full_name = 'Charles Chandler'\t----- bird -----\tsuperhero",
    "777": "SELECT T2.gender FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id WHERE T1.superhero_name = 'Agent 13'\t----- bird -----\tsuperhero",
    "778": "SELECT T2.superhero_name FROM superhero AS T2 INNER JOIN hero_power AS T1 ON T2.id = T1.hero_id INNER JOIN superpower AS T3 ON T1.power_id = T3.id WHERE T3.power_name = 'Adaptation'\t----- bird -----\tsuperhero",
    "779": "SELECT COUNT(T2.power_id) FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id WHERE T1.superhero_name = 'Amazo'\t----- bird -----\tsuperhero",
    "780": "SELECT T2.power_name FROM superhero AS T1 INNER JOIN hero_power AS T3 ON T1.id = T3.hero_id INNER JOIN superpower AS T2 ON T3.power_id = T2.id WHERE T1.full_name = 'Hunter Zolomon'\t----- bird -----\tsuperhero",
    "781": "SELECT height_cm FROM superhero INNER JOIN colour ON superhero.eye_colour_id = colour.id WHERE colour.colour = 'Amber'\t----- bird -----\tsuperhero",
    "782": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id INNER JOIN colour AS T3 ON T1.hair_colour_id = T3.id WHERE T2.colour = 'Black' AND T3.colour = 'Black'\t----- bird -----\tsuperhero",
    "783": "SELECT T1.colour FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.skin_colour_id = (SELECT id FROM colour WHERE colour = 'Gold')\t----- bird -----\tsuperhero",
    "784": "SELECT T1.full_name FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T2.race = 'Vampire'\t----- bird -----\tsuperhero",
    "785": "SELECT superhero_name FROM superhero WHERE alignment_id = (SELECT id FROM alignment WHERE alignment = 'Neutral')\t----- bird -----\tsuperhero",
    "786": "SELECT COUNT(hero_id) FROM hero_attribute WHERE attribute_id = (SELECT id FROM attribute WHERE attribute_name = 'Strength') AND attribute_value = (SELECT MAX(attribute_value) FROM hero_attribute WHERE attribute_id = (SELECT id FROM attribute WHERE attribute_name = 'Strength'))\t----- bird -----\tsuperhero",
    "787": "SELECT T6.race, T5.alignment FROM superhero AS T1 INNER JOIN race AS T6 ON T1.race_id = T6.id INNER JOIN alignment AS T5 ON T1.alignment_id = T5.id WHERE T1.superhero_name = 'Cameron Hicks'\t----- bird -----\tsuperhero",
    "788": "SELECT CAST(COUNT(CASE WHEN T1.gender_id = (SELECT id FROM gender WHERE gender = 'Female') AND T2.publisher_name = 'Marvel Comics' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(CASE WHEN T2.publisher_name = 'Marvel Comics' THEN 1 ELSE NULL END) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id\t----- bird -----\tsuperhero",
    "789": "SELECT AVG(weight_kg) FROM superhero WHERE race_id = (SELECT id FROM race WHERE race = 'Alien');\t----- bird -----\tsuperhero",
    "790": "SELECT SUM(CASE WHEN T1.full_name = 'Emil Blonsky' THEN T1.weight_kg ELSE 0 END) - SUM(CASE WHEN T1.full_name = 'Charles Chandler' THEN T1.weight_kg ELSE 0 END) FROM superhero AS T1\t----- bird -----\tsuperhero",
    "791": "SELECT superhero.superhero_name, AVG(superhero.height_cm) FROM superhero GROUP BY superhero.superhero_name;\t----- bird -----\tsuperhero",
    "792": "SELECT T2.power_name FROM superhero AS T1 INNER JOIN hero_power AS T3 ON T1.id = T3.hero_id INNER JOIN superpower AS T2 ON T3.power_id = T2.id WHERE T1.superhero_name = 'Abomination'\t----- bird -----\tsuperhero",
    "793": "SELECT COUNT(*) FROM superhero WHERE race_id = 21 AND gender_id = 1\t----- bird -----\tsuperhero",
    "794": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN attribute AS T3 ON T2.attribute_id = T3.id WHERE T3.attribute_name = 'Speed' ORDER BY T2.attribute_value DESC LIMIT 1\t----- bird -----\tsuperhero",
    "795": "SELECT COUNT(*) FROM superhero WHERE alignment_id = 3\t----- bird -----\tsuperhero",
    "796": "SELECT T2.attribute_name, T1.attribute_value FROM superhero AS T3 INNER JOIN hero_attribute AS T1 ON T3.id = T1.hero_id INNER JOIN attribute AS T2 ON T1.attribute_id = T2.id WHERE T3.superhero_name = '3-D Man'\t----- bird -----\tsuperhero",
    "797": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id INNER JOIN colour AS T3 ON T1.hair_colour_id = T3.id WHERE T2.colour = 'blue' AND T3.colour = 'brown'\t----- bird -----\tsuperhero",
    "798": "SELECT P.publisher_name FROM superhero AS S JOIN publisher AS P ON S.publisher_id = P.id WHERE S.superhero_name IN ('Hawkman', 'Karate Kid', 'Speedy')\t----- bird -----\tsuperhero",
    "799": "SELECT COUNT(*) FROM superhero WHERE publisher_id IS NULL;\t----- bird -----\tsuperhero",
    "800": "SELECT CAST(COUNT(CASE WHEN T2.eye_colour_id = 7 THEN T1.superhero_name END) AS REAL) * 100 / COUNT(T1.superhero_name) FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id\t----- bird -----\tsuperhero",
    "801": "SELECT CAST(SUM(CASE WHEN gender_id = 1 THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN gender_id = 2 THEN 1 ELSE 0 END) FROM superhero\t----- bird -----\tsuperhero",
    "802": "SELECT superhero_name FROM superhero ORDER BY height_cm DESC LIMIT 1;\t----- bird -----\tsuperhero",
    "803": "SELECT id FROM superpower WHERE power_name = 'cryokinesis'\t----- bird -----\tsuperhero",
    "804": "SELECT T1.superhero_name FROM superhero AS T1 WHERE T1.id = 294\t----- bird -----\tsuperhero",
    "805": "SELECT full_name FROM superhero WHERE weight_kg = 0 OR weight_kg IS NULL\t----- bird -----\tsuperhero",
    "806": "SELECT colour.colour FROM superhero INNER JOIN colour ON superhero.eye_colour_id = colour.id WHERE superhero.full_name = 'Karen Beecher-Duncan'\t----- bird -----\tsuperhero",
    "807": "SELECT T2.power_name FROM superhero AS T1 INNER JOIN hero_power AS T3 ON T1.id = T3.hero_id INNER JOIN superpower AS T2 ON T3.power_id = T2.id WHERE T1.full_name = 'Helen Parr'\t----- bird -----\tsuperhero",
    "808": "SELECT T6.race FROM superhero AS T6 WHERE T6.weight_kg = 108 AND T6.height_cm = 188\t----- bird -----\tsuperhero",
    "809": "SELECT publisher.publisher_name FROM superhero INNER JOIN publisher ON superhero.publisher_id = publisher.id WHERE superhero.id = 38\t----- bird -----\tsuperhero",
    "810": "SELECT T3.race FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN race AS T3 ON T1.race_id = T3.id WHERE T2.attribute_value = (SELECT MAX(attribute_value) FROM hero_attribute)\t----- bird -----\tsuperhero",
    "811": "SELECT T3.alignment, T5.power_name FROM superhero AS T1 INNER JOIN alignment AS T3 ON T1.alignment_id = T3.id INNER JOIN hero_power AS T4 ON T1.id = T4.hero_id INNER JOIN superpower AS T5 ON T4.power_id = T5.id WHERE T1.superhero_name = 'Atom IV'\t----- bird -----\tsuperhero",
    "812": "SELECT T1.full_name FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T2.colour = 'Blue' LIMIT 5\t----- bird -----\tsuperhero",
    "813": "SELECT AVG(T1.attribute_value) FROM hero_attribute AS T1 INNER JOIN superhero AS T2 ON T1.hero_id = T2.id WHERE T2.alignment_id = 3\t----- bird -----\tsuperhero",
    "814": "SELECT T3.colour FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN colour AS T3 ON T1.skin_colour_id = T3.id WHERE T2.attribute_value = 100;\t----- bird -----\tsuperhero",
    "815": "SELECT COUNT(*) FROM superhero WHERE alignment_id = 1 AND gender_id = 2\t----- bird -----\tsuperhero",
    "816": "SELECT superhero.superhero_name FROM superhero INNER JOIN hero_attribute ON superhero.id = hero_attribute.hero_id WHERE hero_attribute.attribute_value BETWEEN 75 AND 80;\t----- bird -----\tsuperhero",
    "817": "SELECT race.race FROM superhero INNER JOIN colour ON superhero.hair_colour_id = colour.id INNER JOIN gender ON superhero.gender_id = gender.id INNER JOIN race ON superhero.race_id = race.id WHERE colour.colour = 'blue' AND gender.gender = 'male'\t----- bird -----\tsuperhero",
    "818": "SELECT CAST(COUNT(CASE WHEN T1.gender_id = 2 THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T1.alignment_id) FROM superhero T1 WHERE T1.alignment_id = 2\t----- bird -----\tsuperhero",
    "819": "SELECT SUM(CASE WHEN T1.eye_colour_id = 7 THEN 1 ELSE 0 END) - SUM(CASE WHEN T1.eye_colour_id = 1 THEN 1 ELSE 0 END) FROM superhero AS T1 LEFT JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.weight_kg = 0 OR T1.weight_kg IS NULL;\t----- bird -----\tsuperhero",
    "820": "SELECT HA.attribute_value FROM superhero AS HS INNER JOIN hero_attribute AS HA ON HS.id = HA.hero_id INNER JOIN attribute AS A ON HA.attribute_id = A.id WHERE HS.superhero_name = 'Hulk' AND A.attribute_name = 'Strength'\t----- bird -----\tsuperhero",
    "821": "SELECT T2.power_name FROM superhero AS T1 INNER JOIN hero_power AS T3 ON T1.id = T3.hero_id INNER JOIN superpower AS T2 ON T3.power_id = T2.id WHERE T1.superhero_name = 'Ajax'\t----- bird -----\tsuperhero",
    "822": "SELECT COUNT(*) FROM superhero INNER JOIN colour ON superhero.skin_colour_id = colour.id INNER JOIN alignment ON superhero.alignment_id = alignment.id WHERE colour.colour = 'Green' AND alignment.alignment = 'Bad'\t----- bird -----\tsuperhero",
    "823": "SELECT COUNT(*) FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id INNER JOIN publisher AS T3 ON T1.publisher_id = T3.id WHERE T2.gender = 'Female' AND T3.publisher_name = 'Marvel Comics'\t----- bird -----\tsuperhero",
    "824": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T3.power_name = 'Wind Control' ORDER BY T1.superhero_name ASC;\t----- bird -----\tsuperhero",
    "825": "SELECT T1.gender FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T3.power_name = 'Phoenix Force'\t----- bird -----\tsuperhero",
    "826": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'DC Comics' ORDER BY T1.weight_kg DESC LIMIT 1\t----- bird -----\tsuperhero",
    "827": "SELECT AVG(height_cm) FROM superhero WHERE race_id <> (SELECT id FROM race WHERE race = 'Human') AND publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Dark Horse Comics');\t----- bird -----\tsuperhero",
    "828": "SELECT COUNT(*) FROM superhero JOIN hero_attribute ON superhero.id = hero_attribute.hero_id JOIN attribute ON hero_attribute.attribute_id = attribute.id WHERE attribute.attribute_name = 'Speed' AND hero_attribute.attribute_value = 100\t----- bird -----\tsuperhero",
    "829": "SELECT COUNT(CASE WHEN T2.publisher_name = 'DC Comics' THEN T1.id ELSE NULL END) - COUNT(CASE WHEN T2.publisher_name = 'Marvel Comics' THEN T1.id ELSE NULL END) AS difference FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id\t----- bird -----\tsuperhero",
    "830": "SELECT T2.attribute_name FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id WHERE T1.superhero_name = 'Black Panther' ORDER BY T2.attribute_value LIMIT 1\t----- bird -----\tsuperhero",
    "831": "SELECT colour.colour FROM superhero JOIN colour ON superhero.eye_colour_id = colour.id WHERE superhero.superhero_name = 'Abomination'\t----- bird -----\tsuperhero",
    "832": "SELECT superhero_name FROM superhero ORDER BY height_cm DESC LIMIT 1\t----- bird -----\tsuperhero",
    "833": "SELECT superhero_name FROM superhero WHERE full_name = 'Charles Chandler';\t----- bird -----\tsuperhero",
    "834": "SELECT CAST(COUNT(CASE WHEN T2.gender = 'Female' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(*) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'George Lucas'\t----- bird -----\tsuperhero",
    "835": "SELECT CAST(COUNT(CASE WHEN T1.alignment = 'Good' THEN T1.id ELSE NULL END) AS REAL) * 100 / COUNT(T1.id) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id INNER JOIN alignment AS T3 ON T1.alignment_id = T3.id WHERE T2.publisher_name = 'Marvel Comics'\t----- bird -----\tsuperhero",
    "836": "SELECT COUNT(*) FROM superhero WHERE full_name LIKE 'John%'\t----- bird -----\tsuperhero",
    "837": "SELECT hero_id FROM hero_attribute ORDER BY attribute_value LIMIT 1\t----- bird -----\tsuperhero",
    "838": "SELECT full_name FROM superhero WHERE superhero_name = 'Alien'\t----- bird -----\tsuperhero",
    "839": "SELECT T1.full_name FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.weight_kg < 100 AND T2.colour = 'brown'\t----- bird -----\tsuperhero",
    "840": "SELECT T2.attribute_value FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN attribute AS T3 ON T2.attribute_id = T3.id WHERE T1.superhero_name = 'Aquababy'\t----- bird -----\tsuperhero",
    "841": "SELECT T1.weight_kg, T2.race FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T1.id = 40\t----- bird -----\tsuperhero",
    "842": "SELECT AVG(height_cm) FROM superhero WHERE alignment_id = (SELECT id FROM alignment WHERE alignment = 'Neutral')\t----- bird -----\tsuperhero",
    "843": "SELECT hero_id FROM superhero INNER JOIN hero_power ON superhero.id = hero_power.hero_id INNER JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'Intelligence'\t----- bird -----\tsuperhero",
    "844": "SELECT C.colour FROM superhero AS S INNER JOIN colour AS C ON S.eye_colour_id = C.id WHERE S.superhero_name = 'Blackwulf'\t----- bird -----\tsuperhero",
    "845": "SELECT T2.power_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id WHERE T1.height_cm > (SELECT AVG(height_cm) * 0.8 FROM superhero)\t----- bird -----\tsuperhero",
    "846": "SELECT D.driverRef FROM qualifying AS Q INNER JOIN drivers AS D ON Q.driverId = D.driverId WHERE Q.raceId = 18 AND Q.q1 = (SELECT MAX(q1) FROM qualifying WHERE raceId = 18 LIMIT 5)\t----- bird -----\tformula_1",
    "847": "SELECT D.surname FROM drivers AS D INNER JOIN qualifying AS Q ON D.driverId = Q.driverId WHERE Q.raceId = 19 AND Q.q2 = (SELECT MIN(q2) FROM qualifying WHERE raceId = 19)\t----- bird -----\tformula_1",
    "848": "SELECT T1.year FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T2.location = 'Shanghai'\t----- bird -----\tformula_1",
    "849": "SELECT T1.url FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T2.name = 'Circuit de Barcelona-Catalunya'\t----- bird -----\tformula_1",
    "850": "SELECT T2.name FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T2.country = 'Germany'\t----- bird -----\tformula_1",
    "851": "SELECT circuit.name, constructorStandings.position FROM circuits INNER JOIN races ON circuits.circuitId = races.circuitId INNER JOIN constructorResults ON races.raceId = constructorResults.raceId INNER JOIN constructors ON constructorResults.constructorId = constructors.constructorId INNER JOIN constructorStandings ON constructorResults.constructorId = constructorStandings.constructorId WHERE constructors.name = 'Renault'\t----- bird -----\tformula_1",
    "852": "SELECT COUNT(raceId) FROM races WHERE year = 2010 AND circuitId NOT IN (SELECT circuitId FROM circuits WHERE country NOT IN ('Asia', 'Europe'))\t----- bird -----\tformula_1",
    "853": "SELECT T1.name FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T2.country = 'Spain'\t----- bird -----\tformula_1",
    "854": "SELECT lat, lng FROM circuits INNER JOIN races ON circuits.circuitId = races.circuitId WHERE races.name = 'Australian Grand Prix'\t----- bird -----\tformula_1",
    "855": "SELECT T1.url FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T2.name = 'Sepang International Circuit'\t----- bird -----\tformula_1",
    "856": "SELECT T1.time FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T2.name = 'Sepang International Circuit'\t----- bird -----\tformula_1",
    "857": "SELECT T1.lat, T1.lng FROM circuits AS T1 INNER JOIN races AS T2 ON T1.circuitId = T2.circuitId WHERE T2.name = 'Abu Dhabi Grand Prix'\t----- bird -----\tformula_1",
    "858": "SELECT C.country FROM constructors AS C INNER JOIN constructorResults AS CR ON C.constructorId = CR.constructorId WHERE CR.raceId = 24 AND CR.points = 1;\t----- bird -----\tformula_1",
    "859": "SELECT q1 FROM qualifying WHERE driverId = (SELECT driverId FROM drivers WHERE forename = 'Bruno' AND surname = 'Senna') AND raceId = 354;\t----- bird -----\tformula_1",
    "860": "SELECT T1.nationality FROM drivers AS T1 INNER JOIN qualifying AS T2 ON T1.driverId = T2.driverId WHERE T2.q2 = '0:01:40' AND T2.raceId = 355\t----- bird -----\tformula_1",
    "861": "SELECT T1.number FROM drivers AS T1 INNER JOIN qualifying AS T2 ON T1.driverId = T2.driverId WHERE T2.raceId = 903 AND T2.q3 = '0:01:54'\t----- bird -----\tformula_1",
    "862": "SELECT COUNT(DISTINCT T1.driverId) FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.name = 'Bahrain Grand Prix' AND T2.year = 2007 AND T1.time IS NULL\t----- bird -----\tformula_1",
    "863": "SELECT T2.year FROM races AS T1 INNER JOIN seasons AS T2 ON T1.year = T2.year WHERE T1.raceId = 901\t----- bird -----\tformula_1",
    "864": "SELECT COUNT(T1.driverId) FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.date = '2015-11-29' AND T1.time IS NOT NULL\t----- bird -----\tformula_1",
    "865": "SELECT Drivers.forename, Drivers.surname FROM Drivers INNER JOIN Results ON Drivers.driverId = Results.driverId WHERE Results.raceId = 592 AND Results.time IS NOT NULL ORDER BY Drivers.dob ASC LIMIT 1\t----- bird -----\tformula_1",
    "866": "SELECT drivers.forename, drivers.surname, drivers.url FROM lapTimes JOIN drivers ON lapTimes.driverId = drivers.driverId WHERE lapTimes.time = '0:01:27' AND lapTimes.raceId = 161\t----- bird -----\tformula_1",
    "867": "SELECT D.nationality FROM results AS R INNER JOIN drivers AS D ON R.driverId = D.driverId WHERE R.raceId = 933 ORDER BY R.fastestLapSpeed DESC LIMIT 1\t----- bird -----\tformula_1",
    "868": "SELECT c.lat, c.lng FROM circuits c INNER JOIN races r ON c.circuitId = r.circuitId WHERE r.name = 'Malaysian Grand Prix'\t----- bird -----\tformula_1",
    "869": "SELECT T2.url FROM constructorStandings AS T1 INNER JOIN constructors AS T2 ON T1.constructorId = T2.constructorId WHERE T1.points = (SELECT MAX(points) FROM constructorStandings WHERE raceId = 9) AND T1.raceId = 9\t----- bird -----\tformula_1",
    "870": "SELECT T1.q1 FROM qualifying AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T2.forename = 'Lucas' AND T2.surname = 'di Grassi' AND T1.raceId = 345;\t----- bird -----\tformula_1",
    "871": "SELECT T2.nationality FROM qualifying AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.q2 = '0:01:15' AND T1.raceId = 347\t----- bird -----\tformula_1",
    "872": "SELECT T2.code FROM qualifying AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.raceId = 45 AND T1.q3 = '0:01:33'\t----- bird -----\tformula_1",
    "873": "SELECT T1.time FROM results AS T1 WHERE T1.raceId = 743 AND T1.driverId = (SELECT T2.driverId FROM drivers AS T2 WHERE T2.forename = 'Bruce' AND T2.surname = 'McLaren')\t----- bird -----\tformula_1",
    "874": "SELECT D.forename, D.surname FROM results AS R INNER JOIN drivers AS D ON R.driverId = D.driverId INNER JOIN races AS RA ON R.raceId = RA.raceId WHERE RA.name = 'San Marino Grand Prix' AND RA.year = 2006 AND R.position = 2\t----- bird -----\tformula_1",
    "875": "SELECT T2.year FROM races AS T1 INNER JOIN seasons AS T2 ON T1.year = T2.year WHERE T1.raceId = 901\t----- bird -----\tformula_1",
    "876": "SELECT COUNT(DISTINCT T1.driverId) FROM Results AS T1 INNER JOIN Races AS T2 ON T1.raceId = T2.raceId WHERE T2.date = '2015-11-29' AND T1.position IS NOT NULL\t----- bird -----\tformula_1",
    "877": "SELECT d.forename, d.surname FROM results r JOIN drivers d ON r.driverId = d.driverId WHERE r.raceId = 872 AND r.time IS NOT NULL ORDER BY d.dob DESC LIMIT 1\t----- bird -----\tformula_1",
    "878": "SELECT T2.forename || ' ' || T2.surname AS full_name FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.raceId = 348 ORDER BY T1.time ASC LIMIT 1\t----- bird -----\tformula_1",
    "879": "SELECT T1.nationality FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T2.fastestLapSpeed = (SELECT MAX(fastestLapSpeed) FROM results)\t----- bird -----\tformula_1",
    "880": "SELECT ((T1.fastestLapSpeed - T2.fastestLapSpeed) * 100 / T1.fastestLapSpeed) AS percentage FROM results AS T1 INNER JOIN results AS T2 ON T1.raceId = 853 AND T2.raceId = 854 WHERE T1.driverId = (SELECT driverId FROM drivers WHERE forename = 'Paul' AND surname = 'di Resta')\t----- bird -----\tformula_1",
    "881": "SELECT CAST(COUNT(CASE WHEN T2.time IS NOT NULL THEN 1 END) AS REAL) * 100 / COUNT(T2.driverId) FROM races AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId WHERE T1.date = '1983-07-16'\t----- bird -----\tformula_1",
    "882": "SELECT MIN(year) FROM races WHERE circuitId = (SELECT circuitId FROM circuits WHERE name = 'Marina Bay Street Circuit')\t----- bird -----\tformula_1",
    "883": "SELECT COUNT(*) FROM races WHERE year = 2005; SELECT name FROM races WHERE year = 2005 ORDER BY name DESC;\t----- bird -----\tformula_1",
    "884": "SELECT name FROM races WHERE date = (SELECT MIN(date) FROM races) SELECT name FROM races WHERE year = (SELECT year(MIN(date)) FROM races) AND month = (SELECT month(MIN(date)) FROM races) AND raceId != (SELECT raceId FROM races WHERE date = (SELECT MIN(date) FROM races))\t----- bird -----\tformula_1",
    "885": "SELECT T1.name, T1.date FROM races AS T1 INNER JOIN seasons AS T2 ON T1.year = T2.year WHERE T2.year = 1999 ORDER BY T1.round DESC LIMIT 1\t----- bird -----\tformula_1",
    "886": "SELECT year FROM races GROUP BY year ORDER BY COUNT(round) DESC LIMIT 1\t----- bird -----\tformula_1",
    "887": "SELECT name FROM races WHERE year = 2017 AND raceId NOT IN (SELECT raceId FROM races WHERE year = 2000)\t----- bird -----\tformula_1",
    "888": "SELECT T1.country, T2.name, T2.location FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T1.name = 'European Grand Prix' ORDER BY T1.year LIMIT 1\t----- bird -----\tformula_1",
    "889": "SELECT T1.year FROM seasons AS T1 INNER JOIN races AS T2 ON T1.year = T2.year INNER JOIN circuits AS T3 ON T2.circuitId = T3.circuitId WHERE T3.name = 'Brands Hatch' AND T3.country = 'UK' ORDER BY T1.year DESC LIMIT 1\t----- bird -----\tformula_1",
    "890": "SELECT COUNT(DISTINCT T1.year) AS Seasons_hosted FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T2.name = 'Silverstone Circuit' AND T1.name = 'British Grand Prix'\t----- bird -----\tformula_1",
    "891": "SELECT T3.forename, T3.surname FROM races AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId INNER JOIN drivers AS T3 ON T2.driverId = T3.driverId WHERE T1.year = 2010 AND T1.name = 'Singapore Grand Prix' ORDER BY T2.position;\t----- bird -----\tformula_1",
    "892": "SELECT T1.forename, T1.surname FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId GROUP BY T1.forename, T1.surname ORDER BY SUM(T2.points) DESC LIMIT 1\t----- bird -----\tformula_1",
    "893": "SELECT T2.forename || ' ' || T2.surname AS DriverName, T1.points FROM results AS T1 INNER JOIN drivers AS T2 ON T2.driverId = T1.driverId INNER JOIN races AS T3 ON T3.raceId = T1.raceId WHERE T3.year = 2017 AND T3.name = 'Chinese Grand Prix' ORDER BY T1.points DESC LIMIT 3\t----- bird -----\tformula_1",
    "894": "SELECT Drivers.forename, Drivers.surname, Races.name FROM LapTimes INNER JOIN Drivers ON LapTimes.driverId = Drivers.driverId INNER JOIN Races ON LapTimes.raceId = Races.raceId WHERE LapTimes.time = (SELECT MIN(time) FROM LapTimes)\t----- bird -----\tformula_1",
    "895": "SELECT AVG(milliseconds) FROM lapTimes WHERE driverId = (SELECT driverId FROM drivers WHERE forename = 'Sebastian' AND surname = 'Vettel') AND raceId = (SELECT raceId FROM races WHERE year = 2009 AND name = 'Chinese Grand Prix')\t----- bird -----\tformula_1",
    "896": "SELECT CAST(SUM(CASE WHEN surname = 'Hamilton' AND year >= 2010 AND position > 1 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(raceId) FROM results WHERE surname = 'Hamilton' AND year >= 2010\t----- bird -----\tformula_1",
    "897": "SELECT T1.forename, T1.surname, T1.nationality, AVG(T2.points) FROM drivers AS T1 INNER JOIN driverStandings AS T2 ON T1.driverId = T2.driverId GROUP BY T1.driverId ORDER BY COUNT(T2.wins) DESC LIMIT 1\t----- bird -----\tformula_1",
    "898": "SELECT 2022 - year(dob) + 1 AS age, forename, surname FROM drivers WHERE nationality = 'Japanese' ORDER BY dob DESC LIMIT 1\t----- bird -----\tformula_1",
    "899": "SELECT T1.name FROM circuits AS T1 JOIN races AS T2 ON T1.circuitId = T2.circuitId WHERE T2.year BETWEEN 1990 AND 2000 GROUP BY T1.name HAVING COUNT(T2.raceId) = 4;\t----- bird -----\tformula_1",
    "900": "SELECT C.name AS circuit_name, C.location, R.name AS race_name FROM circuits AS C INNER JOIN races AS R ON C.circuitId = R.circuitId INNER JOIN seasons AS S ON R.year = S.year WHERE C.country = 'USA' AND S.year = 2006;\t----- bird -----\tformula_1",
    "901": "SELECT r.name AS Race_Name, c.name AS Circuit_Name, c.location FROM races r JOIN circuits c ON r.circuitId = c.circuitId WHERE SUBSTR(r.date, 1, 4) = '2005' AND SUBSTR(r.date, 6, 2) = '09';\t----- bird -----\tformula_1",
    "902": "SELECT T2.name FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T1.forename = 'Alex' AND T1.surname = 'Yoong' AND T2.position < 10\t----- bird -----\tformula_1",
    "903": "SELECT COUNT(T1.resultId) FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T1.raceId = T3.raceId INNER JOIN circuits AS T4 ON T3.circuitId = T4.circuitId WHERE T2.forename = 'Michael' AND T2.surname = 'Schumacher' AND T4.name = 'Sepang International Circuit' AND T1.position = 1\t----- bird -----\tformula_1",
    "904": "SELECT races.name, races.year FROM results JOIN races ON results.raceId = races.raceId JOIN drivers ON results.driverId = drivers.driverId WHERE drivers.forename = 'Michael' AND drivers.surname = 'Schumacher' ORDER BY results.milliseconds ASC LIMIT 1\t----- bird -----\tformula_1",
    "905": "SELECT AVG(points) FROM results INNER JOIN drivers ON results.driverId = drivers.driverId WHERE drivers.forename = 'Eddie' AND drivers.surname = 'Irvine' AND results.year = 2000\t----- bird -----\tformula_1",
    "906": "SELECT races.name, results.points FROM drivers INNER JOIN results ON drivers.driverId = results.driverId INNER JOIN races ON results.raceId = races.raceId WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton' ORDER BY races.year LIMIT 1\t----- bird -----\tformula_1",
    "907": "SELECT races.name, circuits.country FROM races INNER JOIN circuits ON races.circuitId = circuits.circuitId WHERE races.year = 2017 ORDER BY races.date;\t----- bird -----\tformula_1",
    "908": "SELECT T2.name, T1.year, T3.location FROM races AS T1 INNER JOIN circuits AS T3 ON T1.circuitId = T3.circuitId INNER JOIN ( SELECT raceId, MAX(laps) AS max_laps FROM results GROUP BY raceId ) AS T4 ON T1.raceId = T4.raceId INNER JOIN results AS T5 ON T4.raceId = T5.raceId AND T4.max_laps = T5.laps INNER JOIN seasons AS T2 ON T1.year = T2.year;\t----- bird -----\tformula_1",
    "909": "SELECT CAST(SUM(IIF(T1.country = 'Germany', 1, 0)) AS REAL) * 100 / COUNT(T1.raceId) FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T2.country = 'Germany' AND T1.name = 'European Grand Prix'\t----- bird -----\tformula_1",
    "910": "SELECT lat, lng FROM circuits WHERE name = 'Silverstone Circuit'\t----- bird -----\tformula_1",
    "911": "SELECT T1.name FROM circuits AS T1 WHERE T1.name IN ('Silverstone Circuit', 'Hockenheimring', 'Hungaroring') ORDER BY T1.lat DESC LIMIT 1\t----- bird -----\tformula_1",
    "912": "SELECT circuitRef FROM circuits WHERE name = 'Marina Bay Street Circuit'\t----- bird -----\tformula_1",
    "913": "SELECT T1.country FROM circuits AS T1 WHERE T1.alt = (SELECT MAX(alt) FROM circuits)\t----- bird -----\tformula_1",
    "914": "SELECT COUNT(driverId) AS driver_count FROM drivers WHERE code IS NULL\t----- bird -----\tformula_1",
    "915": "SELECT nationality FROM drivers WHERE dob = (SELECT MIN(dob) FROM drivers)\t----- bird -----\tformula_1",
    "916": "SELECT T1.surname FROM drivers AS T1 WHERE T1.nationality = 'italian'\t----- bird -----\tformula_1",
    "917": "SELECT T1.url FROM drivers AS T1 WHERE T1.forename = 'Anthony' AND T1.surname = 'Davidson'\t----- bird -----\tformula_1",
    "918": "SELECT driverRef FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton'\t----- bird -----\tformula_1",
    "919": "SELECT C.name FROM circuits AS C INNER JOIN races AS R ON C.circuitId = R.circuitId WHERE R.year = 2009 AND R.name = 'Spanish Grand Prix';\t----- bird -----\tformula_1",
    "920": "SELECT T1.year FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T2.name = 'Silverstone Circuit'\t----- bird -----\tformula_1",
    "921": "SELECT R.url FROM races AS R INNER JOIN circuits AS C ON R.circuitId = C.circuitId WHERE C.name = 'Silverstone Circuit'\t----- bird -----\tformula_1",
    "922": "SELECT T1.time FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId INNER JOIN seasons AS T3 ON T1.year = T3.year WHERE T3.year = 2010 AND T2.country = 'Abu Dhabi' AND T2.name = 'Abu Dhabi Circuit';\t----- bird -----\tformula_1",
    "923": "SELECT COUNT(T1.raceId) FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T2.country = 'Italy'\t----- bird -----\tformula_1",
    "924": "SELECT T1.date FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T2.name = 'Barcelona-Catalunya'\t----- bird -----\tformula_1",
    "925": "SELECT c.url FROM circuits AS c INNER JOIN races AS r ON c.circuitId = r.circuitId INNER JOIN seasons AS s ON r.year = s.year WHERE s.year = 2009 AND r.name = 'Spanish Grand Prix'\t----- bird -----\tformula_1",
    "926": "SELECT MIN(fastestLapTime) FROM results WHERE driverId = (SELECT driverId FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton')\t----- bird -----\tformula_1",
    "927": "SELECT D.forename, D.surname FROM drivers AS D INNER JOIN results AS R ON D.driverId = R.driverId WHERE R.fastestLapSpeed = (SELECT MAX(fastestLapSpeed) FROM results WHERE fastestLapSpeed IS NOT NULL)\t----- bird -----\tformula_1",
    "928": "SELECT T2.driverRef FROM results AS T1 INNER JOIN drivers AS T2 ON T2.driverId = T1.driverId INNER JOIN races AS T3 ON T3.raceId = T1.raceId WHERE T3.name = 'Australian Grand Prix' AND T3.year = 2008 AND T1.position = 1\t----- bird -----\tformula_1",
    "929": "SELECT T2.name, T3.forename, T3.surname FROM races AS T1 JOIN circuits AS T2 ON T1.circuitId = T2.circuitId JOIN drivers AS T3 ON T1.raceId = T3.driverId WHERE T3.forename = 'Lewis' AND T3.surname = 'Hamilton'\t----- bird -----\tformula_1",
    "930": "SELECT races.name FROM races INNER JOIN results ON races.raceId = results.raceId INNER JOIN drivers ON results.driverId = drivers.driverId WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton' ORDER BY results.rank ASC LIMIT 1\t----- bird -----\tformula_1",
    "931": "SELECT MAX(fastestLapSpeed) FROM results WHERE raceId = (SELECT raceId FROM races WHERE year = 2009 AND name = 'Spanish Grand Prix')\t----- bird -----\tformula_1",
    "932": "SELECT T2.year FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T1.forename = 'Lewis' AND T1.surname = 'Hamilton'\t----- bird -----\tformula_1",
    "933": "SELECT positionOrder FROM results INNER JOIN drivers ON results.driverId = drivers.driverId INNER JOIN races ON results.raceId = races.raceId WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton' AND races.year = 2008 AND races.name = 'Australian Grand Prix'\t----- bird -----\tformula_1",
    "934": "SELECT forename, surname FROM drivers INNER JOIN results ON drivers.driverId = results.driverId INNER JOIN races ON results.raceId = races.raceId WHERE races.year = 2008 AND races.name = 'Australian Grand Prix' AND results.grid = 4\t----- bird -----\tformula_1",
    "935": "SELECT COUNT(DISTINCT driverId) FROM results WHERE raceId = (SELECT raceId FROM races WHERE name = 'Australian Grand Prix' AND year = 2008) AND time IS NOT NULL\t----- bird -----\tformula_1",
    "936": "SELECT T1.fastestLapTime FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T1.raceId = T3.raceId WHERE T2.forename = 'Lewis' AND T2.surname = 'Hamilton' AND T3.year = 2008 AND T3.name = 'Australian Grand Prix'\t----- bird -----\tformula_1",
    "937": "SELECT T1.time FROM results AS T1 JOIN races AS T2 ON T1.raceId = T2.raceId JOIN drivers AS T3 ON T1.driverId = T3.driverId WHERE T2.year = 2008 AND T2.name = 'Australian Grand Prix' AND T1.position = 2;\t----- bird -----\tformula_1",
    "938": "SELECT T2.forename, T2.surname, T2.url FROM results AS T1 JOIN drivers AS T2 ON T1.driverId = T2.driverId JOIN races AS T3 ON T1.raceId = T3.raceId WHERE T3.year = 2008 AND T3.name = 'Australian Grand Prix' AND T1.position = 1 AND T1.time LIKE '__:__:__.___'\t----- bird -----\tformula_1",
    "939": "SELECT COUNT(T1.driverId) FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T2.raceId = T3.raceId WHERE T1.nationality = 'American' AND T3.year = 2008 AND T3.name = 'Australian Grand Prix'\t----- bird -----\tformula_1",
    "940": "SELECT COUNT(DISTINCT T1.driverId) FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.year = 2008 AND T2.name = 'Australian Grand Prix' AND T1.time IS NOT NULL\t----- bird -----\tformula_1",
    "941": "SELECT SUM(T2.points) FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T1.forename = 'Lewis' AND T1.surname = 'Hamilton' AND T2.position IS NOT NULL\t----- bird -----\tformula_1",
    "942": "SELECT AVG(SUBSTR(fastestLapTime, 1, 2) * 60 + SUBSTR(fastestLapTime, 4, 2) + SUBSTR(fastestLapTime, 7) / 1000) FROM results INNER JOIN drivers ON results.driverId = drivers.driverId WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton'\t----- bird -----\tformula_1",
    "943": "SELECT CAST(COUNT(CASE WHEN time IS NOT NULL THEN 1 END) AS REAL) * 100 / COUNT(raceId) FROM results WHERE raceId = (SELECT raceId FROM races WHERE name = 'Australian Grand Prix' AND year = 2008)\t----- bird -----\tformula_1",
    "944": "SELECT ((MAX(CAST(SUBSTR(T1.time, 1, 2) AS REAL) * 3600 + CAST(SUBSTR(T1.time, 4, 2) AS REAL) * 60 + CAST(SUBSTR(T1.time, 7, 2) AS REAL) + CAST(SUBSTR(T1.time, 10, 3) AS REAL)) - (MIN(CAST(SUBSTR(T1.time, 1, 2) AS REAL) * 3600 + CAST(SUBSTR(T1.time, 4, 2) AS REAL) * 60 + CAST(SUBSTR(T1.time, 7, 2) AS REAL) + CAST(SUBSTR(T1.time, 10, 3) AS REAL)))) * 100 / (MIN(CAST(SUBSTR(T1.time, 1, 2) AS REAL) * 3600 + CAST(SUBSTR(T1.time,\t----- bird -----\tformula_1",
    "945": "SELECT COUNT(*) FROM circuits WHERE location = 'Melbourne' AND country = 'Australia'\t----- bird -----\tformula_1",
    "946": "SELECT location, lat, lng FROM circuits WHERE country = 'USA'\t----- bird -----\tformula_1",
    "947": "SELECT COUNT(*) FROM drivers WHERE nationality = 'British' AND STRFTIME('%Y', dob) > 1980;\t----- bird -----\tformula_1",
    "948": "SELECT AVG(points) AS avg_points FROM constructorResults INNER JOIN constructors ON constructorResults.constructorId = constructors.constructorId WHERE nationality = 'British'\t----- bird -----\tformula_1",
    "949": "SELECT constructors.name FROM constructors INNER JOIN constructorStandings ON constructors.constructorId = constructorStandings.constructorId ORDER BY constructorStandings.points DESC LIMIT 1\t----- bird -----\tformula_1",
    "950": "SELECT constructors.name FROM constructors LEFT JOIN constructorResults ON constructors.constructorId = constructorResults.constructorId WHERE constructorResults.raceId = 291 AND constructorResults.points = 0;\t----- bird -----\tformula_1",
    "951": "SELECT COUNT(T1.constructorId) FROM constructorStandings AS T1 INNER JOIN constructors AS T2 ON T1.constructorId = T2.constructorId INNER JOIN races AS T3 ON T1.raceId = T3.raceId WHERE T2.nationality = 'Japanese' AND T1.points = 0 GROUP BY T1.constructorId HAVING COUNT(T1.raceId) = 2\t----- bird -----\tformula_1",
    "952": "SELECT C.name FROM constructors AS C INNER JOIN constructorStandings AS CS ON C.constructorId = CS.constructorId WHERE CS.position = 1;\t----- bird -----\tformula_1",
    "953": "SELECT COUNT(T1.constructorId) FROM constructorResults AS T1 INNER JOIN constructors AS T2 ON T1.constructorId = T2.constructorId INNER JOIN races AS T3 ON T1.raceId = T3.raceId WHERE T2.nationality = 'French' AND T3.laps > 50\t----- bird -----\tformula_1",
    "954": "SELECT CAST(COUNT(DISTINCT R.driverId) * 100.0 / COUNT(DISTINCT R2.driverId) AS REAL) AS race_completion_percentage FROM results AS R INNER JOIN races AS RA ON R.raceId = RA.raceId INNER JOIN drivers AS D ON R.driverId = D.driverId INNER JOIN seasons AS S ON RA.year = S.year INNER JOIN (SELECT DISTINCT driverId FROM results WHERE time IS NOT NULL) AS R2 ON R.driverId = R2.driverId WHERE D.nationality = 'Japanese' AND S.year BETWEEN 2007 AND 2009;\t----- bird -----\tformula_1",
    "955": "SELECT T1.year, AVG(strftime('%s', T2.time)) AS averageTimeInSeconds FROM seasons AS T1 INNER JOIN races AS T2 ON T1.year = T2.year INNER JOIN results AS T3 ON T2.raceId = T3.raceId WHERE T3.position = 1 AND T3.time IS NOT NULL GROUP BY T1.year\t----- bird -----\tformula_1",
    "956": "SELECT forename, surname FROM drivers INNER JOIN results ON drivers.driverId = results.driverId WHERE STRFTIME('%Y', dob) > '1975' AND results.rank = 2\t----- bird -----\tformula_1",
    "957": "SELECT COUNT(DISTINCT T2.driverId) FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T2.nationality = 'Italian' AND T1.time IS NULL\t----- bird -----\tformula_1",
    "958": "SELECT forename, surname FROM drivers WHERE driverId = (SELECT driverId FROM results WHERE fastestLapTime = (SELECT MIN(fastestLapTime) FROM results WHERE fastestLapTime IS NOT NULL))\t----- bird -----\tformula_1",
    "959": "SELECT MAX(results.fastestLap) AS fastest_lap_number FROM results JOIN races ON results.raceId = races.raceId JOIN seasons ON races.year = seasons.year WHERE seasons.year = 2009 AND results.position = 1;\t----- bird -----\tformula_1",
    "960": "SELECT AVG(fastestLapSpeed) FROM results INNER JOIN races ON results.raceId = races.raceId WHERE races.name = 'Spanish Grand Prix' AND races.year = 2009\t----- bird -----\tformula_1",
    "961": "SELECT races.name, seasons.year FROM races INNER JOIN seasons ON races.year = seasons.year INNER JOIN results ON races.raceId = results.raceId WHERE results.milliseconds IS NOT NULL ORDER BY results.milliseconds ASC LIMIT 1\t----- bird -----\tformula_1",
    "962": "SELECT CAST(SUM(CASE WHEN SUBSTR(dob, 1, 4) < '1985' AND T1.laps > 50 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.driverId) FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T2.raceId = T3.raceId WHERE T3.year BETWEEN 2000 AND 2005;\t----- bird -----\tformula_1",
    "963": "SELECT COUNT(T1.driverId) FROM drivers AS T1 INNER JOIN lapTimes AS T2 ON T1.driverId = T2.driverId WHERE T1.nationality = 'French' AND T2.milliseconds < 120000\t----- bird -----\tformula_1",
    "964": "SELECT code FROM drivers WHERE nationality = 'America'\t----- bird -----\tformula_1",
    "965": "SELECT raceId FROM races WHERE year = 2009;\t----- bird -----\tformula_1",
    "966": "SELECT COUNT(DISTINCT driverId) FROM results WHERE raceId = 18\t----- bird -----\tformula_1",
    "967": "SELECT T1.code FROM drivers AS T1 ORDER BY T1.dob DESC LIMIT 3 SELECT COUNT(T1.driverId) FROM drivers AS T1 WHERE T1.nationality = 'Dutch' AND T1.driverId IN (SELECT T2.driverId FROM drivers AS T2 ORDER BY T2.dob DESC LIMIT 3)\t----- bird -----\tformula_1",
    "968": "SELECT driverRef FROM drivers WHERE forename = 'Robert' AND surname = 'Kubica'\t----- bird -----\tformula_1",
    "969": "SELECT COUNT(driverId) FROM drivers WHERE nationality = 'Australian' AND strftime('%Y', dob) = '1980'\t----- bird -----\tformula_1",
    "970": "SELECT forename, surname FROM drivers WHERE nationality = 'German' AND dob BETWEEN '1980-01-01' AND '1990-12-31' ORDER BY time LIMIT 3\t----- bird -----\tformula_1",
    "971": "SELECT driverRef FROM drivers WHERE nationality = 'German' ORDER BY dob ASC LIMIT 1\t----- bird -----\tformula_1",
    "972": "SELECT driverId, code FROM drivers WHERE year(dob) = 1971 AND driverId IN (SELECT driverId FROM results WHERE fastestLapTime IS NOT NULL)\t----- bird -----\tformula_1",
    "973": "SELECT forename, surname FROM drivers WHERE nationality = 'Spanish' AND year(dob) < 1982 ORDER BY time DESC LIMIT 10\t----- bird -----\tformula_1",
    "974": "SELECT T1.year FROM races AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId WHERE T2.fastestLapTime IS NOT NULL ORDER BY T2.fastestLapTime ASC LIMIT 1\t----- bird -----\tformula_1",
    "975": "SELECT races.year FROM races INNER JOIN results ON races.raceId = results.raceId ORDER BY results.time ASC LIMIT 1\t----- bird -----\tformula_1",
    "976": "SELECT driverId FROM lapTimes WHERE lap = 1 ORDER BY time ASC LIMIT 5\t----- bird -----\tformula_1",
    "977": "SELECT COUNT(T1.resultId) FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId INNER JOIN status AS T3 ON T1.statusId = T3.statusId WHERE T1.raceId > 50 AND T1.raceId < 100 AND T3.status = 'Disqualified' AND T1.time IS NOT NULL\t----- bird -----\tformula_1",
    "978": "SELECT COUNT(circuitId), location, lat, lng FROM circuits WHERE country = 'Austria'\t----- bird -----\tformula_1",
    "979": "SELECT T1.round FROM races AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId WHERE T2.time IS NOT NULL GROUP BY T1.round ORDER BY COUNT(T2.driverId) DESC LIMIT 1\t----- bird -----\tformula_1",
    "980": "SELECT D.driverRef, D.nationality, D.dob FROM drivers AS D INNER JOIN qualifying AS Q ON D.driverId = Q.driverId WHERE Q.raceId = 23 AND Q.q2 IS NOT NULL\t----- bird -----\tformula_1",
    "981": "SELECT T3.forename, T3.surname, T1.date, T1.time FROM races AS T1 INNER JOIN qualifying AS T2 ON T1.raceId = T2.raceId INNER JOIN drivers AS T3 ON T2.driverId = T3.driverId WHERE T3.dob = (SELECT MAX(year(dob)) FROM drivers) ORDER BY T1.date LIMIT 1\t----- bird -----\tformula_1",
    "982": "SELECT COUNT(T1.driverId) FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T1.nationality = 'American' AND T2.statusId = 2;\t----- bird -----\tformula_1",
    "983": "SELECT T2.name, T2.url FROM constructors AS T1 INNER JOIN constructorStandings AS T2 ON T1.constructorId = T2.constructorId WHERE T1.nationality = 'Italian' ORDER BY T2.points DESC LIMIT 1;\t----- bird -----\tformula_1",
    "984": "SELECT T1.url FROM constructors AS T1 INNER JOIN constructorStandings AS T2 ON T1.constructorId = T2.constructorId WHERE T2.wins = (SELECT MAX(wins) FROM constructorStandings)\t----- bird -----\tformula_1",
    "985": "SELECT T1.forename, T1.surname FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T2.raceId = T3.raceId WHERE T3.name = 'French Grand Prix' AND T2.laps >= 3 ORDER BY T2.time DESC LIMIT 1\t----- bird -----\tformula_1",
    "986": "SELECT raceId, MIN(milliseconds) FROM lapTimes WHERE lap = 1 ORDER BY milliseconds ASC LIMIT 1\t----- bird -----\tformula_1",
    "987": "SELECT AVG(fastestLapTime) FROM results WHERE raceId = (SELECT raceId FROM races WHERE name = 'United States Grand Prix' AND year = 2006) AND rank < 11;\t----- bird -----\tformula_1",
    "988": "SELECT T2.forename, T2.surname, AVG(T1.milliseconds) AS avg_duration FROM pitStops AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE strftime('%Y', T2.dob) BETWEEN '1980' AND '1985' AND T2.nationality = 'German' GROUP BY T1.driverId ORDER BY avg_duration LIMIT 5\t----- bird -----\tformula_1",
    "989": "SELECT T2.forename || ' ' || T2.surname AS Champion, T1.time FROM races AS T1 JOIN results AS T2 ON T1.raceId = T2.raceId WHERE T1.year = 2008 AND T1.name = 'Canadian Grand Prix' AND T2.position = 1\t----- bird -----\tformula_1",
    "990": "SELECT C.constructorRef, C.url FROM results AS R JOIN races AS RA ON R.raceId = RA.raceId JOIN constructors AS C ON R.constructorId = C.constructorId WHERE RA.name = 'Singapore Grand Prix' AND RA.year = 2009 ORDER BY R.time LIMIT 1\t----- bird -----\tformula_1",
    "991": "SELECT forename || ' ' || surname AS full_name, dob FROM drivers WHERE nationality = 'Austrian' AND year(dob) BETWEEN 1981 AND 1991\t----- bird -----\tformula_1",
    "992": "SELECT forename || ' ' || surname AS full_name, url AS Wikipedia_page, dob AS date_of_birth FROM drivers WHERE nationality = 'German' AND year(dob) BETWEEN '1971' AND '1985' ORDER BY dob DESC\t----- bird -----\tformula_1",
    "993": "SELECT c.location, c.country, c.lat, c.lng FROM circuits c WHERE c.name = 'Hungaroring';\t----- bird -----\tformula_1",
    "994": "SELECT MAX(C.points) AS Score, C.name, C.nationality FROM constructors AS C JOIN constructorResults AS CR ON C.constructorId = CR.constructorId JOIN races AS R ON CR.raceId = R.raceId WHERE R.name = 'Monaco Grand Prix' AND R.year BETWEEN 1980 AND 2010 GROUP BY C.name, C.nationality ORDER BY Score DESC LIMIT 1\t----- bird -----\tformula_1",
    "995": "SELECT AVG(T2.points) FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T1.raceId = T3.raceId WHERE T2.forename = 'Lewis' AND T2.surname = 'Hamilton' AND T3.name = 'Turkish Grand Prix'\t----- bird -----\tformula_1",
    "996": "SELECT AVG(raceId) FROM races WHERE year BETWEEN 2000 AND 2010\t----- bird -----\tformula_1",
    "997": "SELECT nationality FROM drivers GROUP BY nationality ORDER BY COUNT(nationality) DESC LIMIT 1\t----- bird -----\tformula_1",
    "998": "SELECT SUM(points) FROM results WHERE positionOrder = 91\t----- bird -----\tformula_1",
    "999": "SELECT T1.name FROM races AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId WHERE T2.fastestLapTime = (SELECT MIN(fastestLapTime) FROM results)\t----- bird -----\tformula_1",
    "1000": "SELECT Circuits.location || ', ' || Circuits.country AS full_location FROM Races INNER JOIN Circuits ON Races.circuitId = Circuits.circuitId WHERE Races.date = (SELECT MAX(date) FROM Races)\t----- bird -----\tformula_1",
    "1001": "SELECT T2.forename, T2.surname FROM qualifying AS T1 JOIN drivers AS T2 ON T1.driverId = T2.driverId JOIN races AS T3 ON T1.raceId = T3.raceId WHERE T1.position = 1 AND T1.q3 = (SELECT MIN(q3) FROM qualifying WHERE raceId = T1.raceId AND q3 IS NOT NULL) AND T3.year = 2008 AND T3.name = 'Marina Bay Street Circuit'\t----- bird -----\tformula_1",
    "1002": "SELECT drivers.forename || ' ' || drivers.surname AS full_name, drivers.nationality, races.name FROM drivers INNER JOIN results ON drivers.driverId = results.driverId INNER JOIN races ON results.raceId = races.raceId WHERE drivers.dob = (SELECT MAX(dob) FROM drivers)\t----- bird -----\tformula_1",
    "1003": "SELECT COUNT(T1.statusId) FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T1.raceId = T3.raceId WHERE T3.name = 'Canadian Grand Prix' AND T2.driverId = (SELECT T4.driverId FROM results AS T4 INNER JOIN drivers AS T5 ON T4.driverId = T5.driverId WHERE T4.statusId = 3 GROUP BY T4.driverId ORDER BY COUNT(T4.statusId) DESC LIMIT 1) AND T1.statusId = 3;\t----- bird -----\tformula_1",
    "1004": "SELECT T1.forename, T1.surname, COUNT(T2.wins) AS total_wins FROM drivers AS T1 INNER JOIN driverStandings AS T2 ON T1.driverId = T2.driverId WHERE T1.dob = (SELECT MIN(dob) FROM drivers) GROUP BY T1.forename, T1.surname;\t----- bird -----\tformula_1",
    "1005": "SELECT MAX(duration) AS longest_pitstop_duration FROM pitStops;\t----- bird -----\tformula_1",
    "1006": "SELECT MIN(milliseconds) AS fastest_lap_time FROM lapTimes\t----- bird -----\tformula_1",
    "1007": "SELECT MAX(duration) FROM pitStops WHERE driverId = (SELECT driverId FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton')\t----- bird -----\tformula_1",
    "1008": "SELECT T1.lap FROM pitStops AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId INNER JOIN drivers AS T3 ON T1.driverId = T3.driverId WHERE T2.year = 2011 AND T2.name = 'Australian Grand Prix' AND T3.forename = 'Lewis' AND T3.surname = 'Hamilton'\t----- bird -----\tformula_1",
    "1009": "SELECT T1.forename, T1.surname, T2.duration FROM drivers AS T1 INNER JOIN pitStops AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T2.raceId = T3.raceId WHERE T3.name = 'Australian Grand Prix' AND T3.year = 2011\t----- bird -----\tformula_1",
    "1010": "SELECT T1.time FROM lapTimes AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T1.raceId = T3.raceId WHERE T2.forename = 'Lewis' AND T2.surname = 'Hamilton' AND T2.code = 'HAM' AND T3.name = 'Formula_1' ORDER BY T1.milliseconds ASC LIMIT 1\t----- bird -----\tformula_1",
    "1011": "SELECT T2.forename, T2.surname FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.time = (SELECT MIN(time) FROM results)\t----- bird -----\tformula_1",
    "1012": "SELECT T1.position FROM results AS T1 JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T2.forename = 'Lewis' AND T2.surname = 'Hamilton' AND T1.fastestLap = 1\t----- bird -----\tformula_1",
    "1013": "SELECT MIN(time) AS lap_record FROM lapTimes AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId INNER JOIN circuits AS T3 ON T2.circuitId = T3.circuitId WHERE T3.name = 'Austrian Grand Prix Circuit'\t----- bird -----\tformula_1",
    "1014": "SELECT T1.name AS circuit_name, T2.forename || ' ' || T2.surname AS driver_name, T3.time AS lap_record FROM circuits AS T1 INNER JOIN races AS T4 ON T1.circuitId = T4.circuitId INNER JOIN results AS T5 ON T4.raceId = T5.raceId INNER JOIN drivers AS T2 ON T5.driverId = T2.driverId INNER JOIN lapTimes AS T3 ON T5.raceId = T3.raceId AND T5.driverId = T3.driverId WHERE T1.country = 'Italy' ORDER BY T3.milliseconds ASC LIMIT 1\t----- bird -----\tformula_1",
    "1015": "SELECT races.name FROM races INNER JOIN lapTimes ON races.raceId = lapTimes.raceId INNER JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.name = 'Austrian Grand Prix Circuit' ORDER BY lapTimes.time ASC LIMIT 1\t----- bird -----\tformula_1",
    "1016": "SELECT T1.time, T2.duration FROM lapTimes AS T1 INNER JOIN pitStops AS T2 ON T1.raceId = T2.raceId AND T1.driverId = T2.driverId INNER JOIN races AS T3 ON T1.raceId = T3.raceId INNER JOIN circuits AS T4 ON T3.circuitId = T4.circuitId WHERE T1.time = (SELECT MIN(time) FROM lapTimes WHERE raceId = T1.raceId AND driverId = T1.driverId) AND T4.name = 'Austrian Grand Prix Circuit'\t----- bird -----\tformula_1",
    "1017": "SELECT c.lat, c.lng FROM circuits c INNER JOIN races r ON c.circuitId = r.circuitId INNER JOIN results res ON r.raceId = res.raceId WHERE res.fastestLapTime = '1:29.488'\t----- bird -----\tformula_1",
    "1018": "SELECT AVG(milliseconds) FROM pitStops WHERE driverId = (SELECT driverId FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton')\t----- bird -----\tformula_1",
    "1019": "SELECT AVG(T1.milliseconds) FROM lapTimes AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId INNER JOIN circuits AS T3 ON T2.circuitId = T3.circuitId WHERE T3.country = 'Italy'\t----- bird -----\tformula_1",
    "1020": "SELECT player_api_id FROM Player_Attributes WHERE overall_rating = (SELECT MAX(overall_rating) FROM Player_Attributes)\t----- bird -----\teuropean_football_2",
    "1021": "SELECT T1.player_name, T1.height FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id ORDER BY T1.height DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1022": "SELECT PA.attacking_work_rate FROM Player_Attributes AS PA INNER JOIN Player AS P ON PA.player_api_id = P.player_api_id WHERE PA.potential = (SELECT MIN(potential) FROM Player_Attributes)\t----- bird -----\teuropean_football_2",
    "1023": "SELECT COUNT(T1.id) FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.overall_rating >= 60 AND T1.overall_rating < 65 AND T1.defensive_work_rate = 'low'\t----- bird -----\teuropean_football_2",
    "1024": "SELECT player_api_id FROM Player_Attributes ORDER BY crossing DESC LIMIT 5;\t----- bird -----\teuropean_football_2",
    "1025": "SELECT L.name FROM League AS L INNER JOIN Match AS M ON L.id = M.league_id WHERE M.season = '2015/2016' GROUP BY L.name ORDER BY SUM(M.home_team_goal + M.away_team_goal) DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1026": "SELECT T1.team_long_name FROM Team AS T1 INNER JOIN Match AS T2 ON T1.team_api_id = T2.home_team_api_id WHERE T2.season = '2015/2016' AND (T2.home_team_goal - T2.away_team_goal) < 0 GROUP BY T1.team_long_name ORDER BY COUNT(*) LIMIT 1\t----- bird -----\teuropean_football_2",
    "1027": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id ORDER BY T2.penalties DESC LIMIT 10\t----- bird -----\teuropean_football_2",
    "1028": "SELECT T2.team_long_name AS AwayTeam, COUNT(T1.away_team_goal) AS Wins FROM Match AS T1 INNER JOIN Team AS T2 ON T1.away_team_api_id = T2.team_api_id INNER JOIN League AS T3 ON T1.league_id = T3.id WHERE T3.name = 'Scotland Premier League' AND T1.season = '2009/2010' AND (T1.away_team_goal - T1.home_team_goal) > 0 GROUP BY T2.team_long_name ORDER BY Wins DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1029": "SELECT Team.team_long_name, Team_Attributes.buildUpPlaySpeed FROM Team INNER JOIN Team_Attributes ON Team.team_api_id = Team_Attributes.team_api_id WHERE Team_Attributes.buildUpPlaySpeed IN (SELECT MAX(buildUpPlaySpeed) FROM Team_Attributes ORDER BY buildUpPlaySpeed DESC LIMIT 4)\t----- bird -----\teuropean_football_2",
    "1030": "SELECT T2.name FROM Match AS T1 INNER JOIN League AS T2 ON T1.league_id = T2.id WHERE T1.home_team_goal = T1.away_team_goal AND T1.season = '2015/2016' GROUP BY T2.name ORDER BY SUM(T1.home_team_goal = T1.away_team_goal) DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1031": "SELECT (DATETIME('now') - birthday) AS age FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.sprint_speed >= 97 AND T2.date >= '2013-01-01 00:00:00' AND T2.date <= '2015-12-31 00:00:00'\t----- bird -----\teuropean_football_2",
    "1032": "SELECT T2.name AS League_Name, COUNT(T1.league_id) AS Matches_Played FROM `Match` AS T1 INNER JOIN League AS T2 ON T1.league_id = T2.id GROUP BY T1.league_id ORDER BY COUNT(T1.league_id) DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1033": "SELECT AVG(height) FROM Player WHERE birthday >= '1990-01-01 00:00:00' AND birthday < '1996-01-01 00:00:00'\t----- bird -----\teuropean_football_2",
    "1034": "SELECT T1.player_api_id FROM Player_Attributes AS T1 WHERE T1.overall_rating > (SELECT AVG(overall_rating) FROM Player_Attributes WHERE SUBSTR(date, 1, 4) = '2010') AND SUBSTR(T1.date, 1, 4) = '2010' ORDER BY T1.overall_rating DESC;\t----- bird -----\teuropean_football_2",
    "1035": "SELECT team_fifa_api_id FROM Team_Attributes WHERE buildUpPlaySpeed BETWEEN 51 AND 59\t----- bird -----\teuropean_football_2",
    "1036": "SELECT T1.team_long_name FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.buildUpPlayPassing > (SELECT AVG(buildUpPlayPassing) FROM Team_Attributes WHERE buildUpPlayPassing IS NOT NULL) AND strftime('%Y', T2.date) = '2012'\t----- bird -----\teuropean_football_2",
    "1037": "SELECT CAST(SUM(CASE WHEN preferred_foot = 'left' AND birthday BETWEEN '1987-01-01 00:00:00' AND '1992-12-31 00:00:00' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(player_fifa_api_id) FROM Player;\t----- bird -----\teuropean_football_2",
    "1038": "SELECT L.name AS League, SUM(M.home_team_goal + M.away_team_goal) AS Total_Goals FROM Match AS M INNER JOIN League AS L ON M.league_id = L.id GROUP BY L.name ORDER BY Total_Goals ASC LIMIT 5;\t----- bird -----\teuropean_football_2",
    "1039": "SELECT AVG(long_shots) FROM Player_Attributes WHERE player_fifa_api_id = (SELECT player_fifa_api_id FROM Player WHERE player_name = 'Ahmed Samir Farag')\t----- bird -----\teuropean_football_2",
    "1040": "SELECT Player.player_name FROM Player INNER JOIN Player_Attributes ON Player.player_fifa_api_id = Player_Attributes.player_fifa_api_id WHERE Player.height > 180 GROUP BY Player.player_name ORDER BY AVG(Player_Attributes.heading_accuracy) DESC LIMIT 10\t----- bird -----\teuropean_football_2",
    "1041": "SELECT T2.team_long_name FROM Team_Attributes AS T1 INNER JOIN Team AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.buildUpPlayDribblingClass = 'Normal' AND T1.date >= '2014-01-01 00:00:00' AND T1.date <= '2014-01-31 00:00:00' GROUP BY T1.team_api_id HAVING AVG(chanceCreationPassing) > (SELECT AVG(chanceCreationPassing) FROM Team_Attributes WHERE date >= '2014-01-01 00:00:00' AND date <= '2014-01-31 00:00:00') ORDER BY AVG(chanceCreationPassing) DESC;\t----- bird -----\teuropean_football_2",
    "1042": "SELECT L.name FROM League AS L JOIN Match AS M ON L.id = M.league_id WHERE M.season = '2009/2010' GROUP BY L.name HAVING AVG(M.home_team_goal) > AVG(M.away_team_goal)\t----- bird -----\teuropean_football_2",
    "1043": "SELECT T1.team_short_name FROM Team AS T1 WHERE T1.team_long_name = 'Queens Park Rangers'\t----- bird -----\teuropean_football_2",
    "1044": "SELECT Player_name FROM Player WHERE substr(birthday,1,4) = '1970' AND substr(birthday,6,2) = '10'\t----- bird -----\teuropean_football_2",
    "1045": "SELECT attacking_work_rate FROM Player_Attributes INNER JOIN Player ON Player_Attributes.player_api_id = Player.player_api_id WHERE Player.player_name = 'Franco Zennaro'\t----- bird -----\teuropean_football_2",
    "1046": "SELECT T2.buildUpPlayPositioningClass FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.team_long_name = 'ADO Den Haag'\t----- bird -----\teuropean_football_2",
    "1047": "SELECT T1.heading_accuracy FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Francois Affolter' AND T1.date = '2014-09-18 00:00:00'\t----- bird -----\teuropean_football_2",
    "1048": "SELECT T1.overall_rating FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Gabriel Tamas' AND strftime('%Y', T1.date) = '2011'\t----- bird -----\teuropean_football_2",
    "1049": "SELECT COUNT(*) FROM Match WHERE season = '2015/2016' AND league_id = (SELECT id FROM League WHERE name = 'Scotland Premier League')\t----- bird -----\teuropean_football_2",
    "1050": "SELECT preferred_foot FROM Player ORDER BY birthday DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1051": "SELECT Player.player_name FROM Player INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE potential = (SELECT MAX(potential) FROM Player_Attributes)\t----- bird -----\teuropean_football_2",
    "1052": "SELECT COUNT(T1.id) FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.weight < 130 AND T1.preferred_foot = 'left'\t----- bird -----\teuropean_football_2",
    "1053": "SELECT Team.team_short_name FROM Team INNER JOIN Team_Attributes ON Team.team_api_id = Team_Attributes.team_api_id WHERE Team_Attributes.chanceCreationPassingClass = 'Risky'\t----- bird -----\teuropean_football_2",
    "1054": "SELECT defensive_work_rate FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'David Wilson')\t----- bird -----\teuropean_football_2",
    "1055": "SELECT T2.birthday FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id ORDER BY T2.overall_rating DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1056": "SELECT L.name FROM League AS L INNER JOIN Country AS C ON L.country_id = C.id WHERE C.name = 'Netherlands'\t----- bird -----\teuropean_football_2",
    "1057": "SELECT AVG(home_team_goal) FROM Match INNER JOIN Country ON Match.country_id = Country.id WHERE Country.name = 'Poland' AND Match.season = '2010/2011'\t----- bird -----\teuropean_football_2",
    "1058": "SELECT Player.player_name FROM Player JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE Player.height = (SELECT MAX(height) FROM Player) OR Player.height = (SELECT MIN(height) FROM Player) GROUP BY Player.player_name ORDER BY AVG(Player_Attributes.finishing) DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1059": "SELECT player_name FROM Player WHERE height > 180\t----- bird -----\teuropean_football_2",
    "1060": "SELECT COUNT(*) FROM Player WHERE strftime('%Y', birthday) > '1990'\t----- bird -----\teuropean_football_2",
    "1061": "SELECT COUNT(T1.id) FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name LIKE 'Adam%' AND T2.weight > 170\t----- bird -----\teuropean_football_2",
    "1062": "SELECT T2.player_name FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.overall_rating > 80 AND strftime('%Y', T1.date) BETWEEN '2008' AND '2010';\t----- bird -----\teuropean_football_2",
    "1063": "SELECT overall_rating FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Aaron Doran');\t----- bird -----\teuropean_football_2",
    "1064": "SELECT Player_Name FROM Player_Attributes WHERE preferred_foot = 'left'\t----- bird -----\teuropean_football_2",
    "1065": "SELECT T1.team_long_name FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.buildUpPlaySpeedClass = 'Fast'\t----- bird -----\teuropean_football_2",
    "1066": "SELECT T2.buildUpPlayPassingClass FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.team_short_name = 'CLB'\t----- bird -----\teuropean_football_2",
    "1067": "SELECT team_short_name FROM Team INNER JOIN Team_Attributes ON Team.team_api_id = Team_Attributes.team_api_id WHERE buildUpPlayPassing > 70\t----- bird -----\teuropean_football_2",
    "1068": "SELECT AVG(overall_rating) FROM Player_Attributes WHERE height > 170 AND strftime('%Y', date) BETWEEN '2010' AND '2015'\t----- bird -----\teuropean_football_2",
    "1069": "SELECT player_name FROM Player ORDER BY height LIMIT 1\t----- bird -----\teuropean_football_2",
    "1070": "SELECT T2.name FROM League AS T1 INNER JOIN Country AS T2 ON T1.country_id = T2.id WHERE T1.name = 'Italy Serie A'\t----- bird -----\teuropean_football_2",
    "1071": "SELECT team_short_name FROM Team WHERE team_api_id IN (SELECT team_api_id FROM Team_Attributes WHERE buildUpPlaySpeed = 31 AND buildUpPlayDribbling = 53 AND buildUpPlayPassing = 32)\t----- bird -----\teuropean_football_2",
    "1072": "SELECT AVG(overall_rating) FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Aaron Doran')\t----- bird -----\teuropean_football_2",
    "1073": "SELECT COUNT(*) FROM Match AS T1 INNER JOIN League AS T2 ON T1.league_id = T2.id WHERE T2.name = 'Germany 1. Bundesliga' AND strftime('%Y-%m', T1.date) BETWEEN '2008-08' AND '2008-10'\t----- bird -----\teuropean_football_2",
    "1074": "SELECT team_short_name FROM Team INNER JOIN Match ON Team.team_api_id = Match.home_team_api_id WHERE Match.home_team_goal = 10\t----- bird -----\teuropean_football_2",
    "1075": "SELECT player_name FROM Player WHERE balance = (SELECT MAX(balance) FROM Player WHERE potential = 61)\t----- bird -----\teuropean_football_2",
    "1076": "SELECT AVG(T1.ball_control) - AVG(T2.ball_control) FROM Player_Attributes AS T1 INNER JOIN Player AS T3 ON T1.player_api_id = T3.player_api_id INNER JOIN Player_Attributes AS T2 ON T2.player_api_id = T3.player_api_id WHERE T1.player_name = 'Abdou Diallo' AND T2.player_name = 'Aaron Appindangoye'\t----- bird -----\teuropean_football_2",
    "1077": "SELECT team_long_name FROM Team WHERE team_short_name = 'GEN'\t----- bird -----\teuropean_football_2",
    "1078": "SELECT CASE WHEN (SELECT DOB FROM Player WHERE Player_Name = 'Aaron Lennon') < (SELECT DOB FROM Player WHERE Player_Name = 'Abdelaziz Barrada') THEN 'Aaron Lennon' ELSE 'Abdelaziz Barrada' END as Older_Player;\t----- bird -----\teuropean_football_2",
    "1079": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id ORDER BY T1.height DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1080": "SELECT COUNT(T1.id) FROM Player_Attributes AS T1 WHERE T1.preferred_foot = 'left' AND T1.attacking_work_rate = 'low'\t----- bird -----\teuropean_football_2",
    "1081": "SELECT COUNTry.name FROM COUNTry INNER JOIN League ON COUNTry.id = League.country_id WHERE League.name = 'Belgium Jupiler League'\t----- bird -----\teuropean_football_2",
    "1082": "SELECT T2.name FROM League AS T1 INNER JOIN Country AS T2 ON T1.country_id = T2.id WHERE T2.name = 'Germany'\t----- bird -----\teuropean_football_2",
    "1083": "SELECT Player.player_name FROM Player INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id ORDER BY Player_Attributes.overall_rating DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1084": "SELECT COUNT(*) FROM Player_Attributes WHERE STRFTIME('%Y', (SELECT birthday FROM Player WHERE Player.player_api_id = Player_Attributes.player_api_id)) < '1986' AND defensive_work_rate = 'high'\t----- bird -----\teuropean_football_2",
    "1085": "SELECT Player.player_name FROM Player JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE Player.player_name IN ('Alexis', 'Ariel Borysiuk', 'Arouna Kone') ORDER BY Player_Attributes.crossing DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1086": "SELECT heading_accuracy FROM Player_Attributes INNER JOIN Player ON Player_Attributes.player_api_id = Player.player_api_id WHERE Player.player_name = 'Ariel Borysiuk'\t----- bird -----\teuropean_football_2",
    "1087": "SELECT COUNT(T1.id) FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.height > 180 AND T1.volleys > 70\t----- bird -----\teuropean_football_2",
    "1088": "SELECT Player.player_name FROM Player INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE Player_Attributes.volleys > 70 AND Player_Attributes.dribbling > 70\t----- bird -----\teuropean_football_2",
    "1089": "SELECT COUNT(*) FROM Match AS T1 INNER JOIN Country AS T2 ON T1.country_id = T2.id WHERE T1.season = '2008/2009' AND T2.name = 'Belgium'\t----- bird -----\teuropean_football_2",
    "1090": "SELECT T1.long_passing FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id ORDER BY T1.birthday ASC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1091": "SELECT COUNT(id) FROM Match WHERE league_id = (SELECT id FROM League WHERE name = 'Belgium Jupiler League') AND strftime('%Y', date) = '2009' AND strftime('%m', date) = '04'\t----- bird -----\teuropean_football_2",
    "1092": "SELECT L.name FROM League AS L INNER JOIN Match AS M ON L.id = M.league_id WHERE M.season = '2008/2009' GROUP BY L.name ORDER BY COUNT(M.id) DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1093": "SELECT AVG(overall_rating) FROM Player_Attributes WHERE strftime('%Y', birthday) < '1986'\t----- bird -----\teuropean_football_2",
    "1094": "SELECT CAST((T1.overall_rating - T2.overall_rating) * 100.0 / T2.overall_rating AS REAL) FROM Player_Attributes AS T1 INNER JOIN Player AS T3 ON T1.player_api_id = T3.player_api_id INNER JOIN Player AS T4 ON T1.player_api_id = T4.player_api_id WHERE T3.player_name = 'Ariel Borysiuk' AND T4.player_name = 'Paulin Puel'\t----- bird -----\teuropean_football_2",
    "1095": "SELECT AVG(buildUpPlaySpeed) FROM Team_Attributes AS T1 INNER JOIN Team AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.team_long_name = 'Heart of Midlothian'\t----- bird -----\teuropean_football_2",
    "1096": "SELECT AVG(T1.overall_rating) FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Pietro Marino'\t----- bird -----\teuropean_football_2",
    "1097": "SELECT SUM(T1.crossing) FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Aaron Lennox'\t----- bird -----\teuropean_football_2",
    "1098": "SELECT MAX(chanceCreationPassing) AS highest_chance_creation_passing, chanceCreationPassingClass FROM Team_Attributes WHERE team_api_id = (SELECT team_api_id FROM Team WHERE team_long_name = 'Ajax')\t----- bird -----\teuropean_football_2",
    "1099": "SELECT preferred_foot FROM Player_Attributes INNER JOIN Player ON Player_Attributes.player_api_id = Player.player_api_id WHERE Player.player_name = 'Abdou Diallo'\t----- bird -----\teuropean_football_2",
    "1100": "SELECT MAX(T1.overall_rating) FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Dorlan Pabon'\t----- bird -----\teuropean_football_2",
    "1101": "SELECT AVG(away_team_goal) FROM Match WHERE away_team_api_id = (SELECT team_api_id FROM Team WHERE team_long_name = 'Parma') AND country_id = (SELECT id FROM Country WHERE name = 'Italy')\t----- bird -----\teuropean_football_2",
    "1102": "SELECT Player.player_name FROM Player INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE Player_Attributes.overall_rating = 77 AND Player_Attributes.date = '2016-06-23' ORDER BY Player.birthday ASC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1103": "SELECT T1.overall_rating FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Aaron Mooy' AND T1.date = '2016-02-04 00:00:00'\t----- bird -----\teuropean_football_2",
    "1104": "SELECT potential FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Francesco Parravicini') AND date = '2010-08-30 00:00:00'\t----- bird -----\teuropean_football_2",
    "1105": "SELECT attacking_work_rate FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Francesco Migliore') AND date = '2015-05-01'\t----- bird -----\teuropean_football_2",
    "1106": "SELECT T1.defensive_work_rate FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Kevin Berigaud' AND T1.date = '2013-02-22 00:00:00'\t----- bird -----\teuropean_football_2",
    "1107": "SELECT T2.date FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'Kevin Constant' ORDER BY T2.crossing DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1108": "SELECT buildUpPlaySpeedClass FROM Team_Attributes INNER JOIN Team ON Team_Attributes.team_api_id = Team.team_api_id WHERE Team.team_long_name = 'Willem II' AND Team_Attributes.date = '2012-02-22 00:00:00'\t----- bird -----\teuropean_football_2",
    "1109": "SELECT T1.buildUpPlayDribblingClass FROM Team_Attributes AS T1 INNER JOIN Team AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.team_short_name = 'LEI' AND T1.date = '2015-09-10 00:00:00'\t----- bird -----\teuropean_football_2",
    "1110": "SELECT T2.buildUpPlayPassingClass FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.team_long_name = 'FC Lorient' AND T2.date = '2010-02-22'\t----- bird -----\teuropean_football_2",
    "1111": "SELECT T2.chanceCreationPassingClass FROM Match AS T1 INNER JOIN Team AS T2 ON T1.home_team_api_id = T2.team_api_id WHERE T2.team_long_name = 'PEC Zwolle' AND T1.date = '2013-09-20 00:00:00'\t----- bird -----\teuropean_football_2",
    "1112": "SELECT T2.chanceCreationCrossingClass FROM Team AS T1 INNER JOIN Match AS T2 ON T1.team_api_id = T2.home_team_api_id WHERE T1.team_long_name = 'Hull City' AND T2.date = '2010-02-22 00:00:00'\t----- bird -----\teuropean_football_2",
    "1113": "SELECT T2.defenceAggressionClass FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.team_long_name = 'Hannover 96' AND T2.date = '2015-09-10 00:00:00'\t----- bird -----\teuropean_football_2",
    "1114": "SELECT AVG(overall_rating) FROM Player_Attributes WHERE player_api_id IN (SELECT player_api_id FROM Player WHERE player_name = 'Marko Arnautovic') AND date BETWEEN '2007-02-22 00:00:00' AND '2016-04-21 00:00:00'\t----- bird -----\teuropean_football_2",
    "1115": "SELECT (CAST((T1.overall_rating - T2.overall_rating) AS REAL) / T1.overall_rating) * 100 FROM Player_Attributes AS T1 INNER JOIN Player AS P1 ON T1.player_api_id = P1.player_api_id INNER JOIN Player_Attributes AS T2 ON P2.player_name = 'Jordan Bowery' WHERE P1.player_name = 'Landon Donovan' AND T1.date = '2013/7/12'\t----- bird -----\teuropean_football_2",
    "1116": "SELECT T1.player_name FROM Player AS T1 ORDER BY T1.height DESC LIMIT 5\t----- bird -----\teuropean_football_2",
    "1117": "SELECT player_api_id FROM Player ORDER BY weight DESC LIMIT 10\t----- bird -----\teuropean_football_2",
    "1118": "SELECT player_name FROM Player WHERE (strftime('%Y', 'now') - strftime('%Y', birthday)) >= 35\t----- bird -----\teuropean_football_2",
    "1119": "SELECT SUM(home_team_goal) FROM Match WHERE home_player_1 IN (SELECT player_api_id FROM Player WHERE player_name = 'Aaron Lennon') OR home_player_2 IN (SELECT player_api_id FROM Player WHERE player_name = 'Aaron Lennon') OR home_player_3 IN (SELECT player_api_id FROM Player WHERE player_name = 'Aaron Lennon') OR home_player_4 IN (SELECT player_api_id FROM Player WHERE player_name = 'Aaron Lennon') OR home_player_5 IN (SELECT player_api_id FROM Player WHERE player_name = 'Aaron Lennon') OR home_player_6 IN (SELECT player_api_id FROM Player WHERE player_name = 'Aaron Lennon') OR home_player_7 IN (SELECT player_api_id FROM Player WHERE player_name = 'Aaron Lennon') OR home_player_8 IN (SELECT player_api_id FROM Player WHERE player_name = 'Aaron Lennon') OR home_player_9 IN (SELECT player_api_id FROM Player WHERE player_name = 'Aaron Lennon') OR home_player_\t----- bird -----\teuropean_football_2",
    "1120": "SELECT SUM(T1.away_team_goal) FROM Match AS T1 INNER JOIN Player AS T2 ON T1.away_player_1 = T2.player_api_id OR T1.away_player_2 = T2.player_api_id WHERE T2.player_name = 'Daan Smith' OR T2.player_name = 'Filipe Ferreira'\t----- bird -----\teuropean_football_2",
    "1121": "SELECT SUM(M.home_team_goal) FROM Match AS M INNER JOIN Player AS P ON M.home_player_1 = P.player_api_id OR M.home_player_2 = P.player_api_id OR M.home_player_3 = P.player_api_id OR M.home_player_4 = P.player_api_id OR M.home_player_5 = P.player_api_id OR M.home_player_6 = P.player_api_id OR M.home_player_7 = P.player_api_id OR M.home_player_8 = P.player_api_id OR M.home_player_9 = P.player_api_id OR M.home_player_10 = P.player_api_id OR M.home_player_11 = P.player_api_id WHERE (strftime('%Y', 'now') - strftime('%Y', P.birthday)) <= 30;\t----- bird -----\teuropean_football_2",
    "1122": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id ORDER BY T2.overall_rating DESC LIMIT 10\t----- bird -----\teuropean_football_2",
    "1123": "SELECT Player.player_name FROM Player INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE Player_Attributes.potential = (SELECT MAX(potential) FROM Player_Attributes)\t----- bird -----\teuropean_football_2",
    "1124": "SELECT Player.player_name FROM Player_Attributes INNER JOIN Player ON Player_Attributes.player_api_id = Player.player_api_id WHERE Player_Attributes.attacking_work_rate = 'high'\t----- bird -----\teuropean_football_2",
    "1125": "SELECT Player.player_name FROM Player INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE Player_Attributes.finishing = 1 ORDER BY strftime('%Y', CURRENT_TIMESTAMP) - strftime('%Y', Player.birthday) DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1126": "SELECT Player.player_name FROM Player INNER JOIN Country ON Player.birthCountry = Country.name WHERE Country.name = 'Belgium'\t----- bird -----\teuropean_football_2",
    "1127": "SELECT Player.player_name, Country.name FROM Player JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id JOIN Country ON Player.country_id = Country.id WHERE Player_Attributes.vision >= 90;\t----- bird -----\teuropean_football_2",
    "1128": "SELECT Country.name FROM Country JOIN Player ON Country.id = Player.country_id GROUP BY Country.name ORDER BY AVG(Player.weight) DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1129": "SELECT T1.team_long_name FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.buildUpPlaySpeedClass = 'Slow'\t----- bird -----\teuropean_football_2",
    "1130": "SELECT T2.team_short_name FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.chanceCreationPassingClass = 'Safe'\t----- bird -----\teuropean_football_2",
    "1131": "SELECT AVG(T2.height) FROM Player AS T1 INNER JOIN Country AS T2 ON T1.country_id = T2.id WHERE T2.name = 'Italy'\t----- bird -----\teuropean_football_2",
    "1132": "SELECT player_name FROM Player WHERE height > 180 ORDER BY player_name LIMIT 3;\t----- bird -----\teuropean_football_2",
    "1133": "SELECT COUNT(player_api_id) FROM Player WHERE player_name LIKE 'Aaron%' AND SUBSTR(birthday, 1, 4) > '1990'\t----- bird -----\teuropean_football_2",
    "1134": "SELECT T1.jumping AS Player6_Jumping, T2.jumping AS Player23_Jumping, T1.jumping - T2.jumping AS Difference FROM Player_Attributes AS T1 INNER JOIN Player_Attributes AS T2 ON T2.id = 23 WHERE T1.id = 6;\t----- bird -----\teuropean_football_2",
    "1135": "SELECT player_api_id FROM Player_Attributes WHERE potential = (SELECT MIN(potential) FROM Player_Attributes) AND preferred_foot = 'right' ORDER BY potential LIMIT 3\t----- bird -----\teuropean_football_2",
    "1136": "SELECT COUNT(*) FROM Player_Attributes WHERE crossing = (SELECT MAX(crossing) FROM Player_Attributes) AND preferred_foot = 'left'\t----- bird -----\teuropean_football_2",
    "1137": "SELECT (CAST(COUNT(CASE WHEN stamina > 80 AND strength > 80 THEN 1 ELSE 0 END) AS REAL) / COUNT(*)) * 100 FROM Player_Attributes;\t----- bird -----\teuropean_football_2",
    "1138": "SELECT T2.name FROM League AS T1 INNER JOIN Country AS T2 ON T1.country_id = T2.id WHERE T1.name = 'Poland Ekstraklasa'\t----- bird -----\teuropean_football_2",
    "1139": "SELECT home_team_goal, away_team_goal FROM Match WHERE date LIKE '2008-09-24%' AND league_id = (SELECT id FROM League WHERE name = 'Belgian Jupiler League')\t----- bird -----\teuropean_football_2",
    "1140": "SELECT T1.sprint_speed, T1.agility, T1.acceleration FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Alexis Blin'\t----- bird -----\teuropean_football_2",
    "1141": "SELECT T2.buildUpPlaySpeedClass FROM Team_Attributes AS T1 INNER JOIN Team AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.team_long_name = 'KSV Cercle Brugge'\t----- bird -----\teuropean_football_2",
    "1142": "SELECT COUNT(*) FROM Match WHERE season = '2015/2016' AND league_id = (SELECT id FROM League WHERE name = 'Italian Serie A')\t----- bird -----\teuropean_football_2",
    "1143": "SELECT MAX(home_team_goal) FROM Match WHERE league_id = (SELECT id FROM League WHERE name = 'Netherlands Eredivisie') AND home_team_goal IS NOT NULL;\t----- bird -----\teuropean_football_2",
    "1144": "SELECT Player.player_name, Player_Attributes.finishing, Player_Attributes.curve FROM Player INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE Player.weight = (SELECT MAX(weight) FROM Player)\t----- bird -----\teuropean_football_2",
    "1145": "SELECT T2.team_long_name FROM Match AS T1 INNER JOIN Team AS T2 ON T1.league_id = T2.id WHERE T1.season = '2015/2016' GROUP BY T2.team_long_name ORDER BY COUNT(T1.id) DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1146": "SELECT T2.team_long_name FROM Match AS T1 INNER JOIN Team AS T2 ON T1.away_team_api_id = T2.team_api_id ORDER BY T1.away_team_goal DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1147": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id ORDER BY T2.overall_rating DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1148": "SELECT CAST(COUNT(CASE WHEN T1.height < 180 AND T2.overall_rating > 70 THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T1.id) FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id;\t----- bird -----\teuropean_football_2",
    "1149": "SELECT COUNT(CASE WHEN SEX = 'M' AND Admission = '+' THEN ID END) AS InPatientMale, COUNT(CASE WHEN SEX = 'M' AND Admission = '-' THEN ID END) AS OutPatientMale, ABS(COUNT(CASE WHEN SEX = 'M' AND Admission = '+' THEN ID END) - COUNT(CASE WHEN SEX = 'M' AND Admission = '-' THEN ID END)) AS DeviationPercentage FROM Patient\t----- bird -----\tthrombosis_prediction",
    "1150": "SELECT CAST(SUM(CASE WHEN SEX = 'F' AND SUBSTR(Birthday, 1, 4) > '1930' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(ID) FROM Patient WHERE SEX = 'F';\t----- bird -----\tthrombosis_prediction",
    "1151": "SELECT CAST(COUNT(CASE WHEN strftime('%Y', Birthday) BETWEEN '1930' AND '1940' AND Admission = '+' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(*) FROM Patient\t----- bird -----\tthrombosis_prediction",
    "1152": "SELECT CAST(SUM(CASE WHEN T1.Admission = '+' THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN T1.Admission = '-' THEN 1 ELSE 0 END) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.Diagnosis = 'SLE'\t----- bird -----\tthrombosis_prediction",
    "1153": "SELECT Diagnosis, Date FROM Examination WHERE ID = 30609\t----- bird -----\tthrombosis_prediction",
    "1154": "SELECT T1.SEX, T1.Birthday, T2.`Examination Date`, T2.Symptoms FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.ID = 163109;\t----- bird -----\tthrombosis_prediction",
    "1155": "SELECT T1.ID, T2.SEX, T2.Birthday FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.LDH > 500\t----- bird -----\tthrombosis_prediction",
    "1156": "SELECT T1.ID, ROUND((strftime('%Y', 'now') - strftime('%Y', T2.Birthday)) - (strftime('%m-%d', 'now') < strftime('%m-%d', T2.Birthday)) AS age FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.RVVT = '+'\t----- bird -----\tthrombosis_prediction",
    "1157": "SELECT T1.ID, T1.SEX, T1.Diagnosis FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.Thrombosis = 2;\t----- bird -----\tthrombosis_prediction",
    "1158": "SELECT * FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE STRFTIME('%Y', Patient.Birthday) = '1937' AND `T-CHO` >= '250';\t----- bird -----\tthrombosis_prediction",
    "1159": "SELECT ID, SEX, Diagnosis FROM Patient WHERE ID IN (SELECT ID FROM Laboratory WHERE ALB < 3.5)\t----- bird -----\tthrombosis_prediction",
    "1160": "SELECT CAST(COUNT(CASE WHEN T1.SEX = 'F' AND (T2.TP < 6.0 OR T2.TP > 8.5) THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID\t----- bird -----\tthrombosis_prediction",
    "1161": "SELECT AVG(`aCL IgG`) AS average_aCL_IgG_concentration FROM Examination AS E INNER JOIN Patient AS P ON E.ID = P.ID WHERE P.Admission = '+' AND (strftime('%Y', 'now') - strftime('%Y', P.Birthday)) >= 50\t----- bird -----\tthrombosis_prediction",
    "1162": "SELECT COUNT(*) FROM Patient WHERE SEX = 'F' AND YEAR(Description) = '1997' AND Admission = '-'\t----- bird -----\tthrombosis_prediction",
    "1163": "SELECT YEAR(`First Date`) - YEAR(Birthday) AS age FROM Patient ORDER BY age ASC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1164": "SELECT COUNT(T1.ID) FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.Thrombosis = 1 AND T2.SEX = 'F' AND YEAR(T1.`Examination Date`) = 1997\t----- bird -----\tthrombosis_prediction",
    "1165": "SELECT MAX(year(Birthday)) - MIN(year(Birthday)) AS age_gap FROM Patient WHERE ID IN (SELECT ID FROM Laboratory WHERE TG >= 200)\t----- bird -----\tthrombosis_prediction",
    "1166": "SELECT E.Symptoms, E.Diagnosis FROM Examination AS E INNER JOIN Patient AS P ON E.ID = P.ID WHERE P.Birthday = (SELECT MIN(Birthday) FROM Patient)\t----- bird -----\tthrombosis_prediction",
    "1167": "SELECT COUNT(DISTINCT T1.ID) / 12 AS avg FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND T2.Date BETWEEN '1998-01-01' AND '1998-12-31'\t----- bird -----\tthrombosis_prediction",
    "1168": "SELECT MAX(T1.`First Date`) AS `Laboratory Completion Date`, strftime('%Y', T1.`First Date`) - strftime('%Y', T2.Birthday) AS `Age at Initial Hospital Arrival` FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T2.Diagnosis = 'SJS' ORDER BY T2.Birthday DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1169": "SELECT CAST(SUM(CASE WHEN L.UA <= 8.0 AND P.SEX = 'M' THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN L.UA <= 6.5 AND P.SEX = 'F' THEN 1 ELSE 0 END) FROM Laboratory AS L INNER JOIN Patient AS P ON L.ID = P.ID WHERE (L.UA <= 8.0 AND P.SEX = 'M') OR (L.UA <= 6.5 AND P.SEX = 'F')\t----- bird -----\tthrombosis_prediction",
    "1170": "SELECT COUNT(*) FROM Patient AS T1 LEFT JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.`Examination Date` IS NULL OR (strftime('%Y', T2.`Examination Date`) - strftime('%Y', T1.`First Date`)) >= 1\t----- bird -----\tthrombosis_prediction",
    "1171": "SELECT COUNT(DISTINCT E.ID) FROM Examination AS E INNER JOIN Patient AS P ON E.ID = P.ID WHERE strftime('%Y', P.Birthday) < 18 AND E.`Examination Date` BETWEEN '1990-01-01' AND '1993-12-31'\t----- bird -----\tthrombosis_prediction",
    "1172": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND T2.`T-BIL` > 2.0;\t----- bird -----\tthrombosis_prediction",
    "1173": "SELECT T1.Diagnosis FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.`Examination Date` BETWEEN '1985-01-01' AND '1995-12-31' GROUP BY T1.Diagnosis ORDER BY COUNT(T1.Diagnosis) DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1174": "SELECT AVG(1991 - STRFTIME('%Y', T2.Birthday)) FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.`Examination Date` BETWEEN '1991-10-01' AND '1991-10-30'\t----- bird -----\tthrombosis_prediction",
    "1175": "SELECT SUBTRACT(strftime('%Y', E.`Examination Date`), strftime('%Y', P.Birthday)) AS Age, E.Diagnosis FROM Examination AS E INNER JOIN Patient AS P ON E.ID = P.ID WHERE HGB = (SELECT MAX(HGB) FROM Examination)\t----- bird -----\tthrombosis_prediction",
    "1176": "SELECT `ANA` FROM Examination WHERE ID = 3605340 AND `Examination Date` = '1996-12-02'\t----- bird -----\tthrombosis_prediction",
    "1177": "SELECT `T-CHO` FROM Laboratory WHERE ID = 2927464 AND Date = '1995-09-04' AND `T-CHO` < 250\t----- bird -----\tthrombosis_prediction",
    "1178": "SELECT SEX FROM Patient WHERE ID = (SELECT ID FROM Examination WHERE Diagnosis = 'AORTITIS' ORDER BY `Examination Date` LIMIT 1)\t----- bird -----\tthrombosis_prediction",
    "1179": "SELECT T1.`aCL IgM` FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T2.Diagnosis = 'SLE' AND T2.Description = '1994-02-19' AND T1.`Examination Date` = '1993-11-12'\t----- bird -----\tthrombosis_prediction",
    "1180": "SELECT SEX FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE L.GPT = 9 AND L.Date = '1992-06-12'\t----- bird -----\tthrombosis_prediction",
    "1181": "SELECT STRFTIME('%Y', '1992-01-01') - STRFTIME('%Y', T1.Birthday) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.UA = '8.4' AND T2.Date = '1991-10-21'\t----- bird -----\tthrombosis_prediction",
    "1182": "SELECT COUNT(ID) FROM Laboratory WHERE ID IN (SELECT ID FROM Patient WHERE `First Date` = '1991-06-13' AND Diagnosis = 'SJS') AND Date BETWEEN '1995-01-01' AND '1995-12-31'\t----- bird -----\tthrombosis_prediction",
    "1183": "SELECT T2.Diagnosis FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.`First Date` = '1997-01-27' AND T2.Diagnosis = 'SLE'\t----- bird -----\tthrombosis_prediction",
    "1184": "SELECT T1.Symptoms FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T2.Birthday = '1959-03-01' AND T1.`Examination Date` = '1993-09-27'\t----- bird -----\tthrombosis_prediction",
    "1185": "SELECT ((MAX(CASE WHEN L.Date LIKE '1981-12-%' THEN L.`T-CHO` ELSE 0 END) - MAX(CASE WHEN L.Date LIKE '1981-11-%' THEN L.`T-CHO` ELSE 0 END)) * 100 / MAX(CASE WHEN L.Date LIKE '1981-11-%' THEN L.`T-CHO` ELSE 1 END)) AS Decrease_Rate FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE P.Birthday = '1959-02-18'\t----- bird -----\tthrombosis_prediction",
    "1186": "SELECT T1.ID FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.Diagnosis = 'Behcet' AND T2.`Examination Date` BETWEEN '1970-01-01' AND '1997-12-31'\t----- bird -----\tthrombosis_prediction",
    "1187": "SELECT T1.ID FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.`Examination Date` BETWEEN '1987-07-06' AND '1996-01-31' AND T2.GPT > 30 AND T2.ALB < 4;\t----- bird -----\tthrombosis_prediction",
    "1188": "SELECT COUNT(ID), ID FROM Patient WHERE SEX = 'F' AND YEAR(Birthday) = 1964 AND Admission = '+'\t----- bird -----\tthrombosis_prediction",
    "1189": "SELECT COUNT(T1.ID) FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.Thrombosis = 2 AND T1.`ANA Pattern` = 'S' AND T1.`aCL IgM` > ( SELECT AVG(T3.`aCL IgM`) * 1.2 FROM Examination AS T3 )\t----- bird -----\tthrombosis_prediction",
    "1190": "SELECT CAST(SUM(CASE WHEN T1.UA <= 6.5 AND T2.`U-PRO` > 0 AND T2.`U-PRO` < 30 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) AS percentage FROM Laboratory AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.`U-PRO` > 0 AND T2.`U-PRO` < 30\t----- bird -----\tthrombosis_prediction",
    "1191": "SELECT CAST(SUM(CASE WHEN T1.SEX = 'M' AND YEAR(T1.`First Date`) = 1981 AND T2.Diagnosis = 'BEHCET' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE YEAR(T1.`First Date`) = 1981\t----- bird -----\tthrombosis_prediction",
    "1192": "SELECT T1.ID, T1.Description FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Admission = '-' AND T2.Date LIKE '1991-10%' AND T2.`T-BIL` < 2.0\t----- bird -----\tthrombosis_prediction",
    "1193": "SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.`ANA Pattern` != 'p' AND T1.SEX = 'F' AND T1.Birthday BETWEEN '1980-01-01' AND '1989-12-31'\t----- bird -----\tthrombosis_prediction",
    "1194": "SELECT T2.SEX FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID INNER JOIN Laboratory AS T3 ON T1.ID = T3.ID WHERE T1.Diagnosis = 'PSS' AND T3.CRP = '2+' AND T3.CRE = 1 AND T3.LDH = 123\t----- bird -----\tthrombosis_prediction",
    "1195": "SELECT AVG(ALB) FROM Laboratory AS L INNER JOIN Patient AS P ON L.ID = P.ID WHERE P.SEX = 'F' AND L.PLT > 400 AND P.Diagnosis = 'SLE'\t----- bird -----\tthrombosis_prediction",
    "1196": "SELECT Symptoms FROM Examination WHERE Diagnosis = 'SLE' GROUP BY Symptoms ORDER BY COUNT(Symptoms) DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1197": "SELECT T1.`First Date`, T1.Diagnosis FROM Patient AS T1 WHERE T1.ID = 48473\t----- bird -----\tthrombosis_prediction",
    "1198": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'F' AND T2.Diagnosis = 'APS'\t----- bird -----\tthrombosis_prediction",
    "1199": "SELECT COUNT(DISTINCT T1.ID) FROM Laboratory AS T1 WHERE YEAR(T1.Date) = 1997 AND (T1.TP < 6 OR T1.TP > 8.5)\t----- bird -----\tthrombosis_prediction",
    "1200": "SELECT CAST(SUM(CASE WHEN T1.Symptoms LIKE '%thrombocytopenia%' THEN 1 ELSE 0 END) AS REAL) * 100 / SUM(CASE WHEN T1.Diagnosis LIKE '%SLE%' THEN 1 ELSE 0 END) FROM Examination AS T1\t----- bird -----\tthrombosis_prediction",
    "1201": "SELECT CAST(SUM(CASE WHEN T2.SEX = 'F' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.ID) AS percentage FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE strftime('%Y', T1.Birthday) = '1980' AND T2.Diagnosis = 'RA'\t----- bird -----\tthrombosis_prediction",
    "1202": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND T2.`Examination Date` BETWEEN '1995-01-01' AND '1997-12-31' AND T2.Diagnosis = 'BEHCET' AND T1.Admission = '-'\t----- bird -----\tthrombosis_prediction",
    "1203": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'F' AND T2.WBC < 3.5\t----- bird -----\tthrombosis_prediction",
    "1204": "SELECT julianday(Examination.`Examination Date`) - julianday(Patient.`First Date`) AS days_until_evaluation FROM Examination INNER JOIN Patient ON Examination.ID = Patient.ID WHERE Patient.ID = 821298;\t----- bird -----\tthrombosis_prediction",
    "1205": "SELECT CASE WHEN SEX = 'M' AND UA > 8.0 THEN 'Above normal range' WHEN SEX = 'M' AND UA <= 8.0 THEN 'Within normal range' WHEN SEX = 'F' AND UA > 6.5 THEN 'Above normal range' WHEN SEX = 'F' AND UA <= 6.5 THEN 'Within normal range' END AS Uric_Acid_Range FROM Laboratory WHERE ID = 57266\t----- bird -----\tthrombosis_prediction",
    "1206": "SELECT T2.\"Date\" FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.GOT >= 60 AND T1.ID = 48473;\t----- bird -----\tthrombosis_prediction",
    "1207": "SELECT T2.SEX, T2.Birthday FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.GOT < 60 AND year(T1.Date) = 1994\t----- bird -----\tthrombosis_prediction",
    "1208": "SELECT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND T2.GPT >= 60;\t----- bird -----\tthrombosis_prediction",
    "1209": "SELECT Diagnosis FROM Patient WHERE ID IN (SELECT ID FROM Laboratory WHERE GPT > 60) ORDER BY Birthday ASC\t----- bird -----\tthrombosis_prediction",
    "1210": "SELECT AVG(LDH) FROM Laboratory WHERE LDH < 500\t----- bird -----\tthrombosis_prediction",
    "1211": "SELECT T1.ID, (strftime('%Y', 'now') - strftime('%Y', T1.Birthday)) AS age FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.LDH BETWEEN 600 AND 800\t----- bird -----\tthrombosis_prediction",
    "1212": "SELECT T1.Admission, COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.ALP < 300 GROUP BY T1.Admission\t----- bird -----\tthrombosis_prediction",
    "1213": "SELECT ID FROM Patient WHERE Birthday = '1982-04-01' SELECT ID FROM Laboratory WHERE ALP < 300 AND ID = (SELECT ID FROM Patient WHERE Birthday = '1982-04-01')\t----- bird -----\tthrombosis_prediction",
    "1214": "SELECT Patient.ID, Patient.SEX, Patient.Birthday FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.TP < 6.0;\t----- bird -----\tthrombosis_prediction",
    "1215": "SELECT TP - 8.5 AS Deviation FROM Laboratory AS L INNER JOIN Patient AS P ON L.ID = P.ID WHERE P.SEX = 'F' AND L.TP > 8.5\t----- bird -----\tthrombosis_prediction",
    "1216": "SELECT * FROM Patient WHERE SEX = 'M' AND (ALB <= 3.5 OR ALB >= 5.5) ORDER BY Birthday DESC\t----- bird -----\tthrombosis_prediction",
    "1217": "SELECT T1.ID, T1.ALB, CASE WHEN T1.ALB >= 3.5 AND T1.ALB <= 5.5 THEN 'Within Normal Range' ELSE 'Not Within Normal Range' END AS Albumin_Status FROM Patient AS T1 WHERE STRFTIME('%Y', T1.Birthday) = '1982'\t----- bird -----\tthrombosis_prediction",
    "1218": "SELECT COUNT(DISTINCT T1.ID) * 100.0 / (SELECT COUNT(DISTINCT ID) FROM Patient WHERE SEX = 'F') AS Percentage FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE (T1.UA > 8.0 AND T2.SEX = 'M') OR (T1.UA > 6.5 AND T2.SEX = 'F')\t----- bird -----\tthrombosis_prediction",
    "1219": "SELECT AVG(UA) FROM Laboratory WHERE UA < 8.0 AND SEX = 'M' OR UA < 6.5 AND SEX = 'F'\t----- bird -----\tthrombosis_prediction",
    "1220": "SELECT T1.ID, T1.SEX, T1.Birthday FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.UN = 29\t----- bird -----\tthrombosis_prediction",
    "1221": "SELECT T1.ID, T1.SEX, T1.Birthday FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.UN < 30 AND T1.Diagnosis = 'RA'\t----- bird -----\tthrombosis_prediction",
    "1222": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND T2.CRE >= 1.5\t----- bird -----\tthrombosis_prediction",
    "1223": "SELECT CASE WHEN SUM(CASE WHEN T1.SEX = 'M' AND T2.CRE >= 1.5 THEN 1 ELSE 0 END) > SUM(CASE WHEN T1.SEX = 'F' AND T2.CRE >= 1.5 THEN 1 ELSE 0 END) THEN 'True' ELSE 'False' END AS Result FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID;\t----- bird -----\tthrombosis_prediction",
    "1224": "SELECT Patient.ID, Patient.SEX, Patient.Birthday FROM Laboratory INNER JOIN Patient ON Laboratory.ID = Patient.ID WHERE `T-BIL` = (SELECT MAX(`T-BIL`) FROM Laboratory)\t----- bird -----\tthrombosis_prediction",
    "1225": "SELECT SEX, COUNT(ID) FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE L.`T-BIL` >= 2.0 GROUP BY SEX\t----- bird -----\tthrombosis_prediction",
    "1226": "SELECT T1.ID, T2.`T-CHO` FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.`T-CHO` = (SELECT MAX(`T-CHO`) FROM Laboratory) ORDER BY T1.Birthday ASC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1227": "SELECT SUM(YEAR(date('now')) - YEAR(T1.birthday)) / COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND T2.`T-CHO` >= 250\t----- bird -----\tthrombosis_prediction",
    "1228": "SELECT T1.ID, T1.Diagnosis FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.TG > 300\t----- bird -----\tthrombosis_prediction",
    "1229": "SELECT COUNT(DISTINCT P.ID) FROM Patient P JOIN Laboratory L ON P.ID = L.ID WHERE L.TG >= 200 AND (strftime('%Y', 'now') - strftime('%Y', P.Birthday)) > 50\t----- bird -----\tthrombosis_prediction",
    "1230": "SELECT DISTINCT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Admission = '-' AND T2.CPK < 250\t----- bird -----\tthrombosis_prediction",
    "1231": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE strftime('%Y', T1.Birthday) BETWEEN '1936' AND '1956' AND T1.SEX = 'M' AND T2.CPK >= 250\t----- bird -----\tthrombosis_prediction",
    "1232": "SELECT T1.ID, T1.SEX, (CAST(strftime('%Y', 'now') AS INTEGER) - CAST(strftime('%Y', T1.Birthday) AS INTEGER)) AS age FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.GLU >= 180 AND T2.`T-CHO` < 250;\t----- bird -----\tthrombosis_prediction",
    "1233": "SELECT T1.ID, T2.GLU FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE year(T1.Description) >= 1991 AND T2.GLU < 180\t----- bird -----\tthrombosis_prediction",
    "1234": "SELECT T1.ID, T1.SEX, T1.Birthday FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.WBC <= 3.5 OR T2.WBC >= 9.0 GROUP BY T1.SEX ORDER BY T1.Birthday ASC;\t----- bird -----\tthrombosis_prediction",
    "1235": "SELECT T1.ID, (CAST(STRFTIME('%Y', CURRENT_TIMESTAMP) AS INTEGER) - CAST(STRFTIME('%Y', T1.Birthday) AS INTEGER)) AS Age, T1.Diagnosis FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.RBC < 3.5;\t----- bird -----\tthrombosis_prediction",
    "1236": "SELECT T2.ID, T2.SEX, T2.Birthday, T2.Admission FROM Patient AS T2 INNER JOIN Laboratory AS T1 ON T1.ID = T2.ID WHERE T2.SEX = 'F' AND (YEAR(CURRENT_TIMESTAMP) - YEAR(T2.Birthday)) >= 50 AND (T1.RBC <= 3.5 OR T1.RBC >= 6.0) AND T2.Admission = '+'\t----- bird -----\tthrombosis_prediction",
    "1237": "SELECT T1.ID, T2.SEX FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Admission = '-' AND T2.HGB < 10\t----- bird -----\tthrombosis_prediction",
    "1238": "SELECT T1.ID, T1.SEX FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID INNER JOIN Laboratory AS T3 ON T1.ID = T3.ID WHERE T1.Diagnosis = 'SLE' AND T1.Birthday = (SELECT MIN(Birthday) FROM Patient WHERE Diagnosis = 'SLE') AND T3.HGB > 10 AND T3.HGB < 17\t----- bird -----\tthrombosis_prediction",
    "1239": "SELECT T1.ID, ROUND((strftime('%Y', 'now') - strftime('%Y', T1.Birthday)) - (strftime('%m-%d', 'now') < strftime('%m-%d', T1.Birthday)) AS age FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.HCT >= 52 GROUP BY T1.ID HAVING COUNT(T1.ID) > 2\t----- bird -----\tthrombosis_prediction",
    "1240": "SELECT AVG(HCT) FROM Laboratory WHERE Date LIKE '1991%' AND HCT < 29\t----- bird -----\tthrombosis_prediction",
    "1241": "SELECT SUM(CASE WHEN PLT < 100 THEN 1 ELSE 0 END) - SUM(CASE WHEN PLT > 400 THEN 1 ELSE 0 END) AS difference FROM Laboratory\t----- bird -----\tthrombosis_prediction",
    "1242": "SELECT T1.ID, T1.SEX, T1.Birthday, T2.PLT FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.Date LIKE '1984%' AND (strftime('%Y', 'now') - strftime('%Y', T1.Birthday)) < 50 AND T2.PLT BETWEEN 100 AND 400;\t----- bird -----\tthrombosis_prediction",
    "1243": "SELECT CAST(SUM(CASE WHEN T1.PT >= 14 AND T2.SEX = 'F' THEN 1 ELSE 0 END) AS REAL) * 100 / SUM(CASE WHEN T1.PT >= 14 THEN 1 ELSE 0 END) FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE strftime('%Y', 'now') - strftime('%Y', T2.Birthday) > 55\t----- bird -----\tthrombosis_prediction",
    "1244": "SELECT T2.ID, T2.SEX, T2.Birthday, T2.Description, T2.`First Date`, T2.Admission, T2.Diagnosis FROM Patient AS T2 INNER JOIN Laboratory AS T1 ON T2.ID = T1.ID WHERE year(T2.`First Date`) > 1992 AND T1.PT < 14;\t----- bird -----\tthrombosis_prediction",
    "1245": "SELECT COUNT(*) FROM Examination WHERE `Examination Date` > '1997-01-01' AND APTT < 45\t----- bird -----\tthrombosis_prediction",
    "1246": "SELECT COUNT(DISTINCT p.ID) FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE l.APTT > 45 AND p.Thrombosis = 3\t----- bird -----\tthrombosis_prediction",
    "1247": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND T2.WBC BETWEEN 3.5 AND 9.0 AND (T2.FG <= 150 OR T2.FG >= 450)\t----- bird -----\tthrombosis_prediction",
    "1248": "SELECT COUNT(DISTINCT P.ID) FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE P.Birthday > '1980-01-01' AND L.FG NOT BETWEEN 150 AND 450;\t----- bird -----\tthrombosis_prediction",
    "1249": "SELECT Diagnosis FROM Examination INNER JOIN Patient ON Examination.ID = Patient.ID WHERE `U-PRO` >= 30\t----- bird -----\tthrombosis_prediction",
    "1250": "SELECT T1.ID FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.`U-PRO` > 0 AND T1.`U-PRO` < 30 AND T2.Diagnosis = 'SLE'\t----- bird -----\tthrombosis_prediction",
    "1251": "SELECT COUNT(DISTINCT T1.ID) FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.`aCL IgG` < 900 AND T1.Symptoms = 'abortion'\t----- bird -----\tthrombosis_prediction",
    "1252": "SELECT COUNT(DISTINCT T1.ID) FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.`aCL IgG` BETWEEN 900 AND 2000 AND T1.Symptoms IS NOT NULL\t----- bird -----\tthrombosis_prediction",
    "1253": "SELECT T2.Diagnosis FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.IGA BETWEEN 80 AND 500 ORDER BY T1.IGA DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1254": "SELECT COUNT(ID) FROM Laboratory WHERE IGA BETWEEN 80 AND 500 AND strftime('%Y', `First Date`) >= '1990'\t----- bird -----\tthrombosis_prediction",
    "1255": "SELECT Diagnosis FROM Examination WHERE `aCL IgM` NOT BETWEEN 40 AND 400 GROUP BY Diagnosis ORDER BY COUNT(Diagnosis) DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1256": "SELECT COUNT(*) FROM Patient WHERE ID NOT IN (SELECT ID FROM Laboratory WHERE CRP LIKE '+' OR CRP LIKE '-' OR CRP < 1.0) AND Description IS NULL\t----- bird -----\tthrombosis_prediction",
    "1257": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.CRP NOT IN('+-', '-') AND T2.CRP >= 1.0 AND (YEAR(CURDATE()) - YEAR(T1.Birthday)) < 18\t----- bird -----\tthrombosis_prediction",
    "1258": "SELECT COUNT(DISTINCT P.ID) FROM Patient P INNER JOIN Laboratory L ON P.ID = L.ID WHERE L.RA IN ('-', '+-') AND L.KCT = '+'\t----- bird -----\tthrombosis_prediction",
    "1259": "SELECT T2.Diagnosis FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Birthday > '1995-01-01' AND T2.RA IN ('-', '+-')\t----- bird -----\tthrombosis_prediction",
    "1260": "SELECT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.RF < 20 AND (strftime('%Y', 'now') - strftime('%Y', T1.Birthday)) > 60\t----- bird -----\tthrombosis_prediction",
    "1261": "SELECT COUNT(Patient.ID) FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE RF < 20 AND Thrombosis = '0'\t----- bird -----\tthrombosis_prediction",
    "1262": "SELECT COUNT(DISTINCT T1.ID) FROM Laboratory AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.C3 > 35 AND T2.\"ANA Pattern\" = 'P'\t----- bird -----\tthrombosis_prediction",
    "1263": "SELECT T1.ID FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.HCT < 29 OR T2.HCT > 52 ORDER BY T1.`aCL IgA` DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1264": "SELECT COUNT(DISTINCT T1.ID) FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Diagnosis = 'APS' AND T1.Thrombosis = 1 AND T2.C4 > 10\t----- bird -----\tthrombosis_prediction",
    "1265": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE (T2.RNP = '-' OR T2.RNP = '+-') AND T1.Admission = '+'\t----- bird -----\tthrombosis_prediction",
    "1266": "SELECT Birthday FROM Patient WHERE ID IN ( SELECT ID FROM Laboratory WHERE RNP NOT IN ('-', '+-') ) ORDER BY Birthday DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1267": "SELECT COUNT(*) FROM Examination WHERE SM IN ('-', '+-') AND Thrombosis = '1'\t----- bird -----\tthrombosis_prediction",
    "1268": "SELECT ID FROM Patient WHERE ID IN (SELECT ID FROM Laboratory WHERE SM NOT IN ('-', '+-')) ORDER BY Birthday DESC LIMIT 3\t----- bird -----\tthrombosis_prediction",
    "1269": "SELECT ID FROM Examination WHERE `Examination Date` >= '1997-01-01' AND SC170 IN ('-', '+-')\t----- bird -----\tthrombosis_prediction",
    "1270": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.SC170 IN ('-', '+-') AND T1.SEX = 'M' AND T2.Symptoms = 'vertigo'\t----- bird -----\tthrombosis_prediction",
    "1271": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.SSA IN ('-', '+-') AND strftime('%Y', T1.`First Date`) < '1990'\t----- bird -----\tthrombosis_prediction",
    "1272": "SELECT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.SSA NOT IN ('-', '+-') ORDER BY T1.`First Date` LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1273": "SELECT COUNT(DISTINCT T1.ID) FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.SSB IN ('-', '+-') AND T1.Diagnosis = 'SLE'\t----- bird -----\tthrombosis_prediction",
    "1274": "SELECT COUNT(DISTINCT T1.ID) FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.SSB IN ('-', '+-') AND T1.Symptoms IS NOT NULL\t----- bird -----\tthrombosis_prediction",
    "1275": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.CENTROMEA IN ('-', '+-') AND T2.SSB IN ('-', '+-') AND T1.SEX = 'M'\t----- bird -----\tthrombosis_prediction",
    "1276": "SELECT T2.Diagnosis FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.DNA >= 8\t----- bird -----\tthrombosis_prediction",
    "1277": "SELECT COUNT(DISTINCT T1.ID) FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.DNA < 8 AND T2.Description IS NULL\t----- bird -----\tthrombosis_prediction",
    "1278": "SELECT COUNT(DISTINCT T1.ID) FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.`DNA-II` >= 8 AND T2.Admission = '+'\t----- bird -----\tthrombosis_prediction",
    "1279": "SELECT CAST(COUNT(CASE WHEN T1.GOT >= 60 AND T2.Diagnosis = 'SLE' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(CASE WHEN T1.GOT >= 60 THEN 1 ELSE NULL END) FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID\t----- bird -----\tthrombosis_prediction",
    "1280": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Sex = 'M' AND T2.GOT < 60\t----- bird -----\tthrombosis_prediction",
    "1281": "SELECT MIN(Birthday) FROM Patient WHERE ID IN (SELECT ID FROM Laboratory WHERE GOT >= 60)\t----- bird -----\tthrombosis_prediction",
    "1282": "SELECT Birthday FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE GPT < 60 ORDER BY GPT DESC LIMIT 3\t----- bird -----\tthrombosis_prediction",
    "1283": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.GOT < 60 AND T1.Sex = 'M'\t----- bird -----\tthrombosis_prediction",
    "1284": "SELECT T1.`First Date` FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.LDH < 500 ORDER BY T2.LDH DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1285": "SELECT MAX(`First Date`) FROM Patient WHERE ID IN (SELECT ID FROM Laboratory WHERE LDH >= 500)\t----- bird -----\tthrombosis_prediction",
    "1286": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.ALP >= 300 AND T1.Admission = '+'\t----- bird -----\tthrombosis_prediction",
    "1287": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Admission = '-' AND T2.ALP < 300;\t----- bird -----\tthrombosis_prediction",
    "1288": "SELECT T2.Diagnosis FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.TP < 6.0\t----- bird -----\tthrombosis_prediction",
    "1289": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.Diagnosis = 'SJS' AND T2.TP > 6.0 AND T2.TP < 8.5\t----- bird -----\tthrombosis_prediction",
    "1290": "SELECT `Examination Date` FROM Examination WHERE ALB = (SELECT MAX(ALB) FROM Laboratory WHERE ALB > 3.5 AND ALB < 5.5)\t----- bird -----\tthrombosis_prediction",
    "1291": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Sex = 'M' AND T2.ALB > 3.5 AND T2.ALB < 5.5 AND T2.TP BETWEEN 6.0 AND 8.5\t----- bird -----\tthrombosis_prediction",
    "1292": "SELECT T1.`aCL IgG`, T1.`aCL IgM`, T1.`aCL IgA` FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID INNER JOIN Patient AS T3 ON T1.ID = T3.ID WHERE T3.SEX = 'F' AND T2.UA = (SELECT MAX(UA) FROM Laboratory WHERE UA <= 6.50)\t----- bird -----\tthrombosis_prediction",
    "1293": "SELECT MAX(ANA) FROM Examination WHERE ID IN (SELECT ID FROM Laboratory WHERE CRE < 1.5)\t----- bird -----\tthrombosis_prediction",
    "1294": "SELECT T1.ID FROM Examination AS T1 WHERE T1.CRE < 1.5 AND T1.\"aCL IgA\" = (SELECT MAX(\"aCL IgA\") FROM Examination)\t----- bird -----\tthrombosis_prediction",
    "1295": "SELECT COUNT(DISTINCT T1.ID) FROM Laboratory AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.`T-BIL` >= 2.0 AND T2.`ANA Pattern` LIKE '%P%'\t----- bird -----\tthrombosis_prediction",
    "1296": "SELECT T1.ANA FROM Laboratory AS T1 WHERE T1.`T-BIL` < 2.0 ORDER BY T1.`T-BIL` DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1297": "SELECT COUNT(T1.ID) FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.`T-CHO` >= 250 AND T1.KCT = '-'\t----- bird -----\tthrombosis_prediction",
    "1298": "SELECT COUNT(DISTINCT T1.ID) FROM Laboratory AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.`T-CHO` < 250 AND T2.`ANA Pattern` = 'P'\t----- bird -----\tthrombosis_prediction",
    "1299": "SELECT COUNT(T1.ID) FROM (SELECT DISTINCT L.ID FROM Laboratory AS L WHERE L.TG < 200 AND L.ID IN (SELECT E.ID FROM Examination AS E WHERE E.Symptoms IS NOT NULL)) T1\t----- bird -----\tthrombosis_prediction",
    "1300": "SELECT Diagnosis FROM Laboratory INNER JOIN Patient ON Laboratory.ID = Patient.ID WHERE TG < 200 ORDER BY TG DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1301": "SELECT T1.ID FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID INNER JOIN Laboratory AS T3 ON T1.ID = T3.ID WHERE T2.Thrombosis = 0 AND T3.CPK < 250\t----- bird -----\tthrombosis_prediction",
    "1302": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.CPK < 250 AND (T2.KCT = '+' OR T2.RVVT = '+' OR T2.LAC = '+')\t----- bird -----\tthrombosis_prediction",
    "1303": "SELECT MIN(Birthday) FROM Patient WHERE ID IN (SELECT ID FROM Laboratory WHERE GLU > 180)\t----- bird -----\tthrombosis_prediction",
    "1304": "SELECT COUNT(*) FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE L.GLU < 180 AND L.Thrombosis = 0\t----- bird -----\tthrombosis_prediction",
    "1305": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Admission = '+' AND T2.WBC >= 3.5 AND T2.WBC <= 9.0;\t----- bird -----\tthrombosis_prediction",
    "1306": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID INNER JOIN Laboratory AS T3 ON T1.ID = T3.ID WHERE T1.Diagnosis = 'SLE' AND T3.WBC >= 3.5 AND T3.WBC <= 9.0\t----- bird -----\tthrombosis_prediction",
    "1307": "SELECT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE (T2.RBC <= 3.5 OR T2.RBC >= 6.0) AND T1.Admission = '-'\t----- bird -----\tthrombosis_prediction",
    "1308": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.PLT > 100 AND T2.PLT < 400 AND T1.Diagnosis IS NOT NULL\t----- bird -----\tthrombosis_prediction",
    "1309": "SELECT T1.PLATELET_LEVEL FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.PLATELET_LEVEL > 100 AND T1.PLATELET_LEVEL < 400 AND T2.Diagnosis = 'MCTD'\t----- bird -----\tthrombosis_prediction",
    "1310": "SELECT AVG(PT) AS avg_prothrombin_time FROM Laboratory AS L INNER JOIN Patient AS P ON L.ID = P.ID WHERE P.SEX = 'M' AND L.PT < 14;\t----- bird -----\tthrombosis_prediction",
    "1311": "SELECT COUNT(DISTINCT T1.ID) FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE (T1.Thrombosis = 1 OR T1.Thrombosis = 2) AND T2.PT < 14\t----- bird -----\tthrombosis_prediction",
    "1312": "SELECT T2.major_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.first_name = 'Angela' AND T1.last_name = 'Sanders'\t----- bird -----\tstudent_club",
    "1313": "SELECT COUNT(*) FROM member WHERE link_to_major IN (SELECT major_id FROM major WHERE college = 'College of Engineering')\t----- bird -----\tstudent_club",
    "1314": "SELECT first_name, last_name FROM member WHERE link_to_major IN (SELECT major_id FROM major WHERE department = 'Art and Design')\t----- bird -----\tstudent_club",
    "1315": "SELECT COUNT(link_to_member) FROM attendance WHERE link_to_event = (SELECT event_id FROM event WHERE event_name = 'Women\\'s Soccer') AND link_to_member IN (SELECT member_id FROM member WHERE link_to_major = (SELECT major_id FROM major WHERE major_name = 'Student_Club'))\t----- bird -----\tstudent_club",
    "1316": "SELECT phone FROM member JOIN attendance ON member.member_id = attendance.link_to_member JOIN event ON attendance.link_to_event = event.event_id WHERE event.event_name = 'Women\\'s Soccer'\t----- bird -----\tstudent_club",
    "1317": "SELECT COUNT(*) FROM member AS T1 INNER JOIN attendance AS T2 ON T1.member_id = T2.link_to_member INNER JOIN event AS T3 ON T2.link_to_event = T3.event_id WHERE T3.event_name = \"Women's Soccer\" AND T1.link_to_major = (SELECT major_id FROM major WHERE major_name = 'Student_Club') AND T1.t_shirt_size = 'Medium'\t----- bird -----\tstudent_club",
    "1318": "SELECT T1.event_name FROM event AS T1 INNER JOIN attendance AS T2 ON T1.event_id = T2.link_to_event INNER JOIN member AS T3 ON T2.link_to_member = T3.member_id INNER JOIN major AS T4 ON T3.link_to_major = T4.major_id WHERE T4.department = 'Student_Club' GROUP BY T1.event_name ORDER BY COUNT(T2.link_to_event) DESC LIMIT 1\t----- bird -----\tstudent_club",
    "1319": "SELECT T2.college FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.position = 'Vice President'\t----- bird -----\tstudent_club",
    "1320": "SELECT T1.event_name FROM event AS T1 INNER JOIN attendance AS T2 ON T1.event_id = T2.link_to_event INNER JOIN member AS T3 ON T2.link_to_member = T3.member_id WHERE T3.first_name = 'Maya' AND T3.last_name = 'Mclean'\t----- bird -----\tstudent_club",
    "1321": "SELECT COUNT(*) FROM attendance JOIN event ON attendance.link_to_event = event.event_id JOIN member ON attendance.link_to_member = member.member_id WHERE member.first_name = 'Sacha' AND member.last_name = 'Harrison' AND event.event_date LIKE '%2019%' AND event.type = 'Student_Club'\t----- bird -----\tstudent_club",
    "1322": "SELECT COUNT(T1.event_id) FROM event AS T1 INNER JOIN attendance AS T2 ON T1.event_id = T2.link_to_event INNER JOIN member AS T3 ON T2.link_to_member = T3.member_id WHERE T1.type = 'Meeting' AND T1.event_id IN (SELECT link_to_event FROM attendance GROUP BY link_to_event HAVING COUNT(link_to_member) > 10)\t----- bird -----\tstudent_club",
    "1323": "SELECT event_name FROM event WHERE event_id IN (SELECT link_to_event FROM attendance GROUP BY link_to_event HAVING COUNT(link_to_member) > 20)\t----- bird -----\tstudent_club",
    "1324": "SELECT COUNT(T1.event_id) / COUNT(DISTINCT T1.event_name) FROM event AS T1 WHERE T1.type = 'Meeting' AND YEAR(T1.event_date) = 2020\t----- bird -----\tstudent_club",
    "1325": "SELECT expense_description, MAX(cost) FROM expense WHERE expense_description LIKE '%club events%'\t----- bird -----\tstudent_club",
    "1326": "SELECT COUNT(*) FROM member WHERE link_to_major = (SELECT major_id FROM major WHERE major_name = 'Environmental Engineering')\t----- bird -----\tstudent_club",
    "1327": "SELECT T1.first_name, T1.last_name FROM member AS T1 INNER JOIN attendance AS T2 ON T1.member_id = T2.link_to_member INNER JOIN event AS T3 ON T2.link_to_event = T3.event_id WHERE T3.event_name = 'Laugh Out Loud'\t----- bird -----\tstudent_club",
    "1328": "SELECT T1.last_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Law and Constitutional Studies'\t----- bird -----\tstudent_club",
    "1329": "SELECT T3.county FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T1.first_name = 'Sherri' AND T1.last_name = 'Ramsey'\t----- bird -----\tstudent_club",
    "1330": "SELECT T2.college FROM Major AS T1 INNER JOIN Member AS T2 ON T1.major_id = T2.link_to_major WHERE T2.first_name = 'Tyler' AND T2.last_name = 'Hewitt'\t----- bird -----\tstudent_club",
    "1331": "SELECT SUM(amount) AS total_funds_received FROM income WHERE link_to_member = (SELECT member_id FROM member WHERE position = 'Vice President')\t----- bird -----\tstudent_club",
    "1332": "SELECT SUM(e.spent) FROM budget e JOIN expense ex ON e.budget_id = ex.link_to_budget JOIN event ev ON e.link_to_event = ev.event_id WHERE e.category = 'Food' AND ev.event_name = 'September Meeting'\t----- bird -----\tstudent_club",
    "1333": "SELECT T3.city, T3.state FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id INNER JOIN zip_code AS T3 ON T1.zip = T3.zip_code WHERE T1.position = 'President' AND T2.major_name = 'Student_Club'\t----- bird -----\tstudent_club",
    "1334": "SELECT T1.first_name, T1.last_name FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T2.state = 'Illinois'\t----- bird -----\tstudent_club",
    "1335": "SELECT SUM(T1.spent) FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T1.category = 'Advertisement' AND T2.event_name = 'September Meeting'\t----- bird -----\tstudent_club",
    "1336": "SELECT T2.department FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.first_name = 'Pierce' AND T1.last_name = 'Guidi'\t----- bird -----\tstudent_club",
    "1337": "SELECT SUM(amount) FROM budget WHERE link_to_event = (SELECT event_id FROM event WHERE event_name = 'October Speaker')\t----- bird -----\tstudent_club",
    "1338": "SELECT expense_id, expense_description, approved FROM expense WHERE link_to_budget IN (SELECT budget_id FROM budget WHERE link_to_event IN (SELECT event_id FROM event WHERE event_name = 'October Meeting' AND event_date = '2019-10-08')) ORDER BY expense_date;\t----- bird -----\tstudent_club",
    "1339": "SELECT SUM(T1.cost) / COUNT(DISTINCT T1.link_to_event) AS total_avg_cost FROM expense AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id INNER JOIN event AS T3 ON T1.link_to_event = T3.event_id WHERE T2.first_name = 'Elijah' AND T2.last_name = 'Allen' AND (MONTH(T1.expense_date) = 9 OR MONTH(T1.expense_date) = 10)\t----- bird -----\tstudent_club",
    "1340": "SELECT SUM(CASE WHEN strftime('%Y', T1.event_date) = '2019' THEN T2.spent ELSE 0 END) - SUM(CASE WHEN strftime('%Y', T1.event_date) = '2020' THEN T2.spent ELSE 0 END) FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T1.type = 'Student_Club'\t----- bird -----\tstudent_club",
    "1341": "SELECT location FROM event WHERE event_name = 'Spring Budget Review'\t----- bird -----\tstudent_club",
    "1342": "SELECT SUM(cost) FROM expense WHERE expense_description = 'Posters' AND expense_date = '2019-09-04'\t----- bird -----\tstudent_club",
    "1343": "SELECT remaining FROM budget WHERE category = 'Food' ORDER BY amount DESC LIMIT 1\t----- bird -----\tstudent_club",
    "1344": "SELECT notes FROM income WHERE source = 'Fundraising' AND date_received = '2019-09-14'\t----- bird -----\tstudent_club",
    "1345": "SELECT COUNT(*) FROM major WHERE college = 'College of Humanities and Social Sciences'\t----- bird -----\tstudent_club",
    "1346": "SELECT phone FROM member WHERE first_name = 'Carlo' AND last_name = 'Jacobs'\t----- bird -----\tstudent_club",
    "1347": "SELECT T3.county FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code INNER JOIN zip_code AS T3 ON T1.zip = T3.zip_code WHERE T1.first_name = 'Adela' AND T1.last_name = 'O'Gallagher'\t----- bird -----\tstudent_club",
    "1348": "SELECT COUNT(budget_id) FROM budget WHERE event_status = 'November Meeting' AND remaining < 0\t----- bird -----\tstudent_club",
    "1349": "SELECT SUM(amount) FROM budget WHERE link_to_event = (SELECT event_id FROM event WHERE event_name = 'September Speaker')\t----- bird -----\tstudent_club",
    "1350": "SELECT T1.event_status FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event INNER JOIN expense AS T3 ON T2.budget_id = T3.link_to_budget WHERE T3.expense_description = 'Post Cards, Posters' AND T3.expense_date = '2019-8-20'\t----- bird -----\tstudent_club",
    "1351": "SELECT T2.major_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.first_name = 'Brent' AND T1.last_name = 'Thomason'\t----- bird -----\tstudent_club",
    "1352": "SELECT COUNT(*) FROM member WHERE link_to_major = (SELECT major_id FROM major WHERE major_name = 'Human Development and Family Studies') AND t_shirt_size = 'Large'\t----- bird -----\tstudent_club",
    "1353": "SELECT T2.type FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T1.first_name = 'Christof' AND T1.last_name = 'Nielson'\t----- bird -----\tstudent_club",
    "1354": "SELECT T2.major_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.position = 'Vice President'\t----- bird -----\tstudent_club",
    "1355": "SELECT T3.state FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code INNER JOIN zip_code AS T3 ON T1.zip = T3.zip_code WHERE T1.first_name = 'Sacha' AND T1.last_name = 'Harrison'\t----- bird -----\tstudent_club",
    "1356": "SELECT T2.department FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.position = 'President'\t----- bird -----\tstudent_club",
    "1357": "SELECT T2.date_received FROM income AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.first_name = 'Connor' AND T2.last_name = 'Hilton' AND T1.source = 'Dues'\t----- bird -----\tstudent_club",
    "1358": "SELECT T.first_name, T.last_name FROM (SELECT M.first_name, M.last_name, I.date_received FROM member AS M INNER JOIN income AS I ON M.member_id = I.link_to_member WHERE I.source = 'Dues' ORDER BY I.date_received ASC LIMIT 1) AS T\t----- bird -----\tstudent_club",
    "1359": "SELECT SUM(CASE WHEN category = 'Advertisement' AND event_name = 'Yearly Kickoff' THEN amount ELSE 0 END) / SUM(CASE WHEN category = 'Advertisement' AND event_name = 'October Meeting' THEN amount ELSE 0 END) AS num FROM budget INNER JOIN event ON budget.link_to_event = event.event_id;\t----- bird -----\tstudent_club",
    "1360": "SELECT SUM(CASE WHEN T1.category = 'Parking' THEN T2.amount ELSE 0 END) * 100 / SUM(T2.amount) FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.event_name = 'November Speaker'\t----- bird -----\tstudent_club",
    "1361": "SELECT SUM(cost) FROM expense WHERE expense_description = 'Pizza'\t----- bird -----\tstudent_club",
    "1362": "SELECT COUNT(DISTINCT T2.city) FROM zip_code AS T1 INNER JOIN zip_code AS T2 ON T1.county = T2.county AND T1.state = T2.state WHERE T1.county = 'Orange County' AND T1.state = 'Virginia'\t----- bird -----\tstudent_club",
    "1363": "SELECT major_name FROM major WHERE college = 'College of Humanities and Social Sciences'\t----- bird -----\tstudent_club",
    "1364": "SELECT T3.city, T3.county, T3.state FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code INNER JOIN city AS T3 ON T2.city = T3.city WHERE T1.first_name = 'Amy' AND T1.last_name = 'Firth'\t----- bird -----\tstudent_club",
    "1365": "SELECT expense_description FROM expense WHERE link_to_budget = (SELECT budget_id FROM budget ORDER BY remaining LIMIT 1)\t----- bird -----\tstudent_club",
    "1366": "SELECT T2.first_name, T2.last_name FROM event AS T1 INNER JOIN attendance AS T3 ON T1.event_id = T3.link_to_event INNER JOIN member AS T2 ON T3.link_to_member = T2.member_id WHERE T1.event_name = 'October Meeting';\t----- bird -----\tstudent_club",
    "1367": "SELECT T.college FROM major AS T INNER JOIN member AS M ON T.major_id = M.link_to_major GROUP BY T.college ORDER BY COUNT(M.member_id) DESC LIMIT 1\t----- bird -----\tstudent_club",
    "1368": "SELECT major_name FROM member INNER JOIN major ON member.link_to_major = major.major_id WHERE phone = '809-555-3360'\t----- bird -----\tstudent_club",
    "1369": "SELECT event_name FROM event WHERE event_id = (SELECT link_to_event FROM budget WHERE amount = (SELECT MAX(amount) FROM budget))\t----- bird -----\tstudent_club",
    "1370": "SELECT T1.expense_description FROM expense AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.position = 'Vice President'\t----- bird -----\tstudent_club",
    "1371": "SELECT COUNT(T1.link_to_member) FROM attendance AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.event_name = 'Women''s Soccer'\t----- bird -----\tstudent_club",
    "1372": "SELECT T2.date_received FROM member AS T1 INNER JOIN income AS T2 ON T1.member_id = T2.link_to_member WHERE T1.first_name = 'Casey' AND T1.last_name = 'Mason'\t----- bird -----\tstudent_club",
    "1373": "SELECT COUNT(*) FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T2.state = 'Maryland'\t----- bird -----\tstudent_club",
    "1374": "SELECT COUNT(*) FROM attendance AS A INNER JOIN member AS M ON A.link_to_member = M.member_id WHERE M.phone = '954-555-6240'\t----- bird -----\tstudent_club",
    "1375": "SELECT T1.first_name, T1.last_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.department = 'School of Applied Sciences, Technology and Education'\t----- bird -----\tstudent_club",
    "1376": "SELECT T1.event_name FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T1.status = 'Closed' ORDER BY T2.spent / T2.amount DESC LIMIT 1\t----- bird -----\tstudent_club",
    "1377": "SELECT COUNT(*) FROM member WHERE position = 'President'\t----- bird -----\tstudent_club",
    "1378": "SELECT MAX(spent) FROM budget\t----- bird -----\tstudent_club",
    "1379": "SELECT COUNT(event_id) FROM event WHERE type = 'Meeting' AND STRFTIME('%Y', event_date) = '2020'\t----- bird -----\tstudent_club",
    "1380": "SELECT SUM(spent) FROM budget WHERE category = 'Food'\t----- bird -----\tstudent_club",
    "1381": "SELECT T2.first_name, T2.last_name FROM attendance AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id GROUP BY T1.link_to_member HAVING COUNT(T1.link_to_event) > 7\t----- bird -----\tstudent_club",
    "1382": "SELECT T2.first_name, T2.last_name FROM major AS T1 INNER JOIN member AS T2 ON T1.major_id = T2.link_to_major INNER JOIN attendance AS T3 ON T2.member_id = T3.link_to_member INNER JOIN event AS T4 ON T3.link_to_event = T4.event_id WHERE T1.major_name = 'Interior Design' AND T4.event_name = 'Community Theater';\t----- bird -----\tstudent_club",
    "1383": "SELECT T1.first_name, T1.last_name FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T2.city = 'Georgetown' AND T2.state = 'South Carolina'\t----- bird -----\tstudent_club",
    "1384": "SELECT COUNT(income_id) FROM income WHERE link_to_member = (SELECT member_id FROM member WHERE first_name = 'Grant' AND last_name = 'Gilmour')\t----- bird -----\tstudent_club",
    "1385": "SELECT T2.first_name, T2.last_name FROM income AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T1.amount > 40\t----- bird -----\tstudent_club",
    "1386": "SELECT SUM(cost) FROM expense WHERE link_to_event = (SELECT event_id FROM event WHERE event_name = 'Yearly Kickoff')\t----- bird -----\tstudent_club",
    "1387": "SELECT M.first_name, M.last_name FROM member M JOIN budget B ON M.member_id = B.link_to_event JOIN event E ON B.link_to_event = E.event_id WHERE E.event_name = 'Yearly Kickoff'\t----- bird -----\tstudent_club",
    "1388": "SELECT first_name, last_name, source FROM member JOIN income ON member.member_id = income.link_to_member WHERE income.amount = (SELECT MAX(amount) FROM income)\t----- bird -----\tstudent_club",
    "1389": "SELECT event_name FROM event INNER JOIN budget ON event.event_id = budget.link_to_event ORDER BY budget.amount LIMIT 1\t----- bird -----\tstudent_club",
    "1390": "SELECT SUM(CASE WHEN e.event_name = 'Yearly Kickoff' THEN b.cost ELSE 0 END) * 100 / SUM(b.cost) FROM event e INNER JOIN budget b ON e.event_id = b.link_to_event\t----- bird -----\tstudent_club",
    "1391": "SELECT CAST(SUM(CASE WHEN major_name = 'Finance' THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN major_name = 'Physics' THEN 1 ELSE 0 END) AS ratio FROM major;\t----- bird -----\tstudent_club",
    "1392": "SELECT source, SUM(amount) as total_amount FROM income WHERE date_received BETWEEN '2019-09-01' AND '2019-09-30' GROUP BY source ORDER BY total_amount DESC LIMIT 1\t----- bird -----\tstudent_club",
    "1393": "SELECT T1.first_name, T1.last_name, T1.email FROM member AS T1 WHERE T1.position = 'Secretary'\t----- bird -----\tstudent_club",
    "1394": "SELECT COUNT(*) FROM member WHERE link_to_major = (SELECT major_id FROM major WHERE major_name = 'Physics Teaching')\t----- bird -----\tstudent_club",
    "1395": "SELECT COUNT(T2.link_to_member) FROM event AS T1 INNER JOIN attendance AS T2 ON T1.event_id = T2.link_to_event WHERE T1.event_name = 'Community Theater' AND STRFTIME('%Y', T1.event_date) = '2019'\t----- bird -----\tstudent_club",
    "1396": "SELECT COUNT(T1.event_id), T2.major_name FROM event AS T1 INNER JOIN attendance AS T3 ON T1.event_id = T3.link_to_event INNER JOIN member AS T4 ON T3.link_to_member = T4.member_id INNER JOIN major AS T2 ON T4.link_to_major = T2.major_id WHERE T4.first_name = 'Luisa' AND T4.last_name = 'Guidi'\t----- bird -----\tstudent_club",
    "1397": "SELECT AVG(spent) FROM budget WHERE category = 'Food' AND event_status = 'Closed'\t----- bird -----\tstudent_club",
    "1398": "SELECT T1.event_name FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T2.category = 'Advertisement' ORDER BY T2.spent DESC LIMIT 1\t----- bird -----\tstudent_club",
    "1399": "SELECT CASE WHEN T1.first_name = 'Maya' AND T1.last_name = 'Mclean' THEN 'Yes' ELSE 'No' END AS attended_event FROM member AS T1 INNER JOIN attendance AS T2 ON T1.member_id = T2.link_to_member INNER JOIN event AS T3 ON T2.link_to_event = T3.event_id WHERE T3.event_name = 'Women''s Soccer'\t----- bird -----\tstudent_club",
    "1400": "SELECT CAST(COUNT(CASE WHEN type = 'Community Service' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(event_id) FROM event WHERE event_date BETWEEN '2019-01-01' AND '2019-12-31'\t----- bird -----\tstudent_club",
    "1401": "SELECT cost FROM expense WHERE expense_description = 'Posters' AND link_to_event = (SELECT event_id FROM event WHERE event_name = 'September Speaker')\t----- bird -----\tstudent_club",
    "1402": "SELECT t_shirt_size FROM member GROUP BY t_shirt_size ORDER BY COUNT(t_shirt_size) DESC LIMIT 1\t----- bird -----\tstudent_club",
    "1403": "SELECT event_name FROM event WHERE status = 'Closed' AND event_id IN ( SELECT link_to_event FROM budget WHERE remaining < 0 ORDER BY remaining ASC LIMIT 1 )\t----- bird -----\tstudent_club",
    "1404": "SELECT T2.expense_description, SUM(T1.cost) FROM expense AS T1 INNER JOIN budget AS T2 ON T1.link_to_budget = T2.budget_id INNER JOIN event AS T3 ON T2.link_to_event = T3.event_id WHERE T3.event_name = 'October Meeting' AND T1.approved = 'Yes' GROUP BY T2.expense_description\t----- bird -----\tstudent_club",
    "1405": "SELECT T1.category, T1.amount FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.event_name = 'April Speaker' ORDER BY T1.amount ASC;\t----- bird -----\tstudent_club",
    "1406": "SELECT budget_id FROM budget WHERE category = 'Food' ORDER BY amount DESC LIMIT 1\t----- bird -----\tstudent_club",
    "1407": "SELECT budget_id, category, amount FROM budget WHERE category = 'Advertisement' ORDER BY amount DESC LIMIT 3\t----- bird -----\tstudent_club",
    "1408": "SELECT SUM(cost) FROM expense WHERE expense_description = 'Parking'\t----- bird -----\tstudent_club",
    "1409": "SELECT SUM(cost) FROM expense WHERE expense_date = '2019-08-20'\t----- bird -----\tstudent_club",
    "1410": "SELECT T1.first_name, T1.last_name, SUM(T2.cost) AS total_cost FROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member WHERE T1.member_id = 'rec4BLdZHS2Blfp4v' GROUP BY T1.first_name, T1.last_name;\t----- bird -----\tstudent_club",
    "1411": "SELECT T1.expense_description FROM expense AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.first_name = 'Sacha' AND T2.last_name = 'Harrison'\t----- bird -----\tstudent_club",
    "1412": "SELECT T1.expense_description FROM expense AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.t_shirt_size = 'X-Large'\t----- bird -----\tstudent_club",
    "1413": "SELECT T2.zip FROM member T1 INNER JOIN expense T2 ON T1.member_id = T2.link_to_member WHERE T2.cost < 50\t----- bird -----\tstudent_club",
    "1414": "SELECT T2.major_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.first_name = 'Phillip' AND T1.last_name = 'Cullen'\t----- bird -----\tstudent_club",
    "1415": "SELECT T1.position FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Business'\t----- bird -----\tstudent_club",
    "1416": "SELECT COUNT(T1.member_id) FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Business' AND T1.t_shirt_size = 'Medium'\t----- bird -----\tstudent_club",
    "1417": "SELECT T1.type FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T2.remaining > 30\t----- bird -----\tstudent_club",
    "1418": "SELECT T1.category FROM event AS T1 WHERE T1.location = 'MU 215'\t----- bird -----\tstudent_club",
    "1419": "SELECT category FROM event WHERE event_date = '2020-03-24T12:00:00'\t----- bird -----\tstudent_club",
    "1420": "SELECT T2.major_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.position = 'Vice President'\t----- bird -----\tstudent_club",
    "1421": "SELECT CAST(SUM(CASE WHEN T1.position = 'Member' AND T2.major_name = 'Mathematics' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.member_id) FROM member AS T1 LEFT JOIN major AS T2 ON T1.link_to_major = T2.major_id;\t----- bird -----\tstudent_club",
    "1422": "SELECT T1.category FROM event AS T1 WHERE T1.location = 'MU 215'\t----- bird -----\tstudent_club",
    "1423": "SELECT COUNT(income_id) FROM income WHERE amount = 50\t----- bird -----\tstudent_club",
    "1424": "SELECT COUNT(*) FROM member WHERE position = 'Member' AND t_shirt_size = 'X-Large'\t----- bird -----\tstudent_club",
    "1425": "SELECT COUNT(major_id) FROM major WHERE college = 'College of Agriculture and Applied Sciences' AND department = 'School of Applied Sciences, Technology and Education'\t----- bird -----\tstudent_club",
    "1426": "SELECT T1.last_name, T2.department, T2.college FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Environmental Engineering'\t----- bird -----\tstudent_club",
    "1427": "SELECT T1.category FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.location = 'MU 215' AND T2.type = 'Guest Speaker' AND T1.spent = 0\t----- bird -----\tstudent_club",
    "1428": "SELECT zip_code.city, zip_code.state FROM member INNER JOIN major ON member.link_to_major = major.major_id INNER JOIN zip_code ON member.zip = zip_code.zip_code WHERE major.department = 'Electrical and Computer Engineering Department' AND member.position = 'Member'\t----- bird -----\tstudent_club",
    "1429": "SELECT T1.event_name FROM event AS T1 INNER JOIN attendance AS T2 ON T1.event_id = T2.link_to_event INNER JOIN member AS T3 ON T2.link_to_member = T3.member_id INNER JOIN major AS T4 ON T3.link_to_major = T4.major_id INNER JOIN zip_code AS T5 ON T3.zip = T5.zip_code WHERE T1.type = 'Social' AND T3.position = 'Vice President' AND T5.city = '900 E. Washington St.'\t----- bird -----\tstudent_club",
    "1430": "SELECT T2.last_name, T2.position FROM expense AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T1.expense_description = 'Pizza' AND T1.expense_date = '2019-09-10'\t----- bird -----\tstudent_club",
    "1431": "SELECT T2.last_name FROM member AS T1 INNER JOIN attendance AS T2 ON T1.member_id = T2.link_to_member INNER JOIN event AS T3 ON T2.link_to_event = T3.event_id WHERE T1.position = 'Member' AND T3.event_name = 'Women''s Soccer'\t----- bird -----\tstudent_club",
    "1432": "SELECT CAST(COUNT(T1.amount) AS REAL) * 100 / COUNT(T2.member_id) FROM income AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.t_shirt_size = 'Medium' AND T1.amount = 50\t----- bird -----\tstudent_club",
    "1433": "SELECT T2.country FROM zip_code AS T1 INNER JOIN country AS T2 ON T1.zip_code = T2.zip_code WHERE T1.type = 'PO Box' GROUP BY T2.country;\t----- bird -----\tstudent_club",
    "1434": "SELECT T1.zip_code FROM zip_code AS T1 INNER JOIN city AS T2 ON T1.city = T2.city INNER JOIN state AS T3 ON T1.state = T3.state WHERE T2.county = 'San Juan Municipio' AND T3.state = 'Puerto Rico' AND T1.type = 'PO Box'\t----- bird -----\tstudent_club",
    "1435": "SELECT T1.event_name FROM event AS T1 WHERE T1.type = 'Game' AND T1.status = 'Closed' AND T1.event_date BETWEEN '2019-03-15' AND '2020-03-20'\t----- bird -----\tstudent_club",
    "1436": "SELECT T1.link_to_event FROM expense AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T1.cost > 50\t----- bird -----\tstudent_club",
    "1437": "SELECT T1.first_name, T1.last_name, T1.email, T2.link_to_event FROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member WHERE T2.approved = 'true' AND T2.expense_date BETWEEN '2019-01-10' AND '2019-11-19'\t----- bird -----\tstudent_club",
    "1438": "SELECT major.college FROM member INNER JOIN major ON member.link_to_major = major.major_id WHERE member.first_name = 'Katy' AND member.link_to_major = 'rec1N0upiVLy5esTO'\t----- bird -----\tstudent_club",
    "1439": "SELECT T1.phone FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Business' AND T2.college = 'College of Agriculture and Applied Sciences'\t----- bird -----\tstudent_club",
    "1440": "SELECT T2.email FROM expense AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T1.cost > 20 AND T1.expense_date BETWEEN '2019-09-10' AND '2019-11-19'\t----- bird -----\tstudent_club",
    "1441": "SELECT COUNT(*) FROM member WHERE link_to_major IN (SELECT major_id FROM major WHERE major_name = 'education') AND position = 'Member'\t----- bird -----\tstudent_club",
    "1442": "SELECT CAST(SUM(CASE WHEN remaining < 0 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(event_id) FROM budget\t----- bird -----\tstudent_club",
    "1443": "SELECT event_id, location, status FROM event WHERE event_date BETWEEN '2019-11-01' AND '2020-03-31'\t----- bird -----\tstudent_club",
    "1444": "SELECT expense_description FROM expense GROUP BY expense_description HAVING AVG(cost) > 50\t----- bird -----\tstudent_club",
    "1445": "SELECT first_name, last_name FROM member WHERE t_shirt_size = 'X-Large'\t----- bird -----\tstudent_club",
    "1446": "SELECT CAST(COUNT(CASE WHEN type = 'PO Box' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(zip_code) FROM zip_code;\t----- bird -----\tstudent_club",
    "1447": "SELECT event_name, location FROM event INNER JOIN budget ON event.event_id = budget.link_to_event WHERE budget.remaining > 0;\t----- bird -----\tstudent_club",
    "1448": "SELECT event_name, event_date FROM event WHERE event_id IN (SELECT link_to_event FROM expense WHERE expense_description = 'Pizza' AND cost > 50 AND cost < 100)\t----- bird -----\tstudent_club",
    "1449": "SELECT T2.first_name, T2.last_name, T3.major_name FROM member AS T2 INNER JOIN major AS T3 ON T2.link_to_major = T3.major_id INNER JOIN expense AS T4 ON T2.member_id = T4.link_to_member WHERE T4.cost > 100;\t----- bird -----\tstudent_club",
    "1450": "SELECT T3.city, T3.state FROM event AS T1 INNER JOIN income AS T2 ON T1.event_id = T2.link_to_event INNER JOIN zip_code AS T3 ON T1.location = T3.city GROUP BY T1.event_id HAVING COUNT(T2.income_id) > 40\t----- bird -----\tstudent_club",
    "1451": "SELECT T1.first_name, T1.last_name, T2.cost FROM member AS T1 INNER JOIN ( SELECT link_to_member, SUM(cost) AS cost FROM expense WHERE link_to_member IN ( SELECT link_to_member FROM expense GROUP BY link_to_member HAVING COUNT(DISTINCT link_to_event) > 1 ) GROUP BY link_to_member ORDER BY cost DESC LIMIT 1 ) AS T2 ON T1.member_id = T2.link_to_member;\t----- bird -----\tstudent_club",
    "1452": "SELECT AVG(cost) FROM expense WHERE link_to_member IN (SELECT member_id FROM member WHERE position != 'Member')\t----- bird -----\tstudent_club",
    "1453": "SELECT T1.event_name FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T2.category = 'Parking' AND T2.cost < (SELECT SUM(cost) / COUNT(event_id) FROM budget WHERE category = 'Parking')\t----- bird -----\tstudent_club",
    "1454": "SELECT SUM(cost) * 100 / COUNT(event_id) AS percentage_cost_game_events FROM expense WHERE link_to_event IN (SELECT event_id FROM event WHERE type = 'Game')\t----- bird -----\tstudent_club",
    "1455": "SELECT T1.budget_id FROM budget AS T1 INNER JOIN expense AS T2 ON T1.budget_id = T2.link_to_budget WHERE T2.expense_description = 'Water, chips, cookies' ORDER BY T2.cost DESC LIMIT 1\t----- bird -----\tstudent_club",
    "1456": "SELECT T2.first_name, T2.last_name FROM expense AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id GROUP BY T2.first_name, T2.last_name ORDER BY MAX(T1.cost) DESC LIMIT 5\t----- bird -----\tstudent_club",
    "1457": "SELECT T2.first_name, T2.last_name, T2.phone FROM expense AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T1.cost > (SELECT AVG(cost) FROM expense)\t----- bird -----\tstudent_club",
    "1458": "SELECT ( (SELECT COUNT(*) FROM member WHERE zip IN (SELECT zip_code FROM zip_code WHERE state = 'Maine') AND position = 'Member') * 100 / (SELECT COUNT(*) FROM member WHERE zip IN (SELECT zip_code FROM zip_code WHERE state = 'Maine')), (SELECT COUNT(*) FROM member WHERE zip IN (SELECT zip_code FROM zip_code WHERE state = 'Vermont') AND position = 'Member') * 100 / (SELECT COUNT(*) FROM member WHERE zip IN (SELECT zip_code FROM zip_code WHERE state = 'Vermont')) ) AS difference;\t----- bird -----\tstudent_club",
    "1459": "SELECT major_name, department FROM major INNER JOIN member ON major.major_id = member.link_to_major WHERE member.first_name = 'Garrett' AND member.last_name = 'Gerke'\t----- bird -----\tstudent_club",
    "1460": "SELECT T2.first_name, T2.last_name, T1.cost FROM expense AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T1.expense_description = 'Water, Veggie tray, supplies'\t----- bird -----\tstudent_club",
    "1461": "SELECT last_name, phone FROM member WHERE link_to_major = (SELECT major_id FROM major WHERE major_name = 'Elementary Education')\t----- bird -----\tstudent_club",
    "1462": "SELECT T1.category, T1.amount FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.event_name = 'January Speaker'\t----- bird -----\tstudent_club",
    "1463": "SELECT event_name FROM event INNER JOIN budget ON event.event_id = budget.link_to_event WHERE budget.category = 'Food'\t----- bird -----\tstudent_club",
    "1464": "SELECT T1.first_name, T1.last_name, T2.amount FROM member AS T1 INNER JOIN income AS T2 ON T1.member_id = T2.link_to_member WHERE T2.date_received = '9/9/2019'\t----- bird -----\tstudent_club",
    "1465": "SELECT T1.category FROM budget AS T1 INNER JOIN expense AS T2 ON T1.budget_id = T2.link_to_budget WHERE T2.expense_description = 'Posters'\t----- bird -----\tstudent_club",
    "1466": "SELECT m.first_name, m.last_name, ma.college FROM member m JOIN major ma ON m.link_to_major = ma.major_id WHERE m.position = 'Secretary'\t----- bird -----\tstudent_club",
    "1467": "SELECT SUM(T1.spent), T2.event_name FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T1.category = 'Speaker Gifts'\t----- bird -----\tstudent_club",
    "1468": "SELECT City FROM member WHERE first_name = 'Garrett' AND last_name = 'Girke'\t----- bird -----\tstudent_club",
    "1469": "SELECT T2.first_name, T2.last_name, T2.position FROM member AS T2 INNER JOIN zip_code AS T1 ON T2.zip = T1.zip_code WHERE T1.city = 'Lincolnton' AND T1.state = 'North Carolina' AND T1.zip_code = 28092\t----- bird -----\tstudent_club",
    "1470": "SELECT COUNT(GasStationID) FROM gasstations WHERE Country = 'CZE' AND Segment = 'Premium'\t----- bird -----\tdebit_card_specializing",
    "1471": "SELECT CAST(SUM(CASE WHEN Currency = 'EUR' THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN Currency = 'CZK' THEN 1 ELSE 0 END) FROM customers\t----- bird -----\tdebit_card_specializing",
    "1472": "SELECT T1.CustomerID, T2.Segment FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Date BETWEEN '201201' AND '201212' AND T2.Segment = 'LAM' ORDER BY T1.Consumption LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1473": "SELECT AVG(Consumption) / 12 FROM yearmonth WHERE Date BETWEEN '201301' AND '201312' AND CustomerID IN (SELECT CustomerID FROM customers WHERE Segment = 'SME')\t----- bird -----\tdebit_card_specializing",
    "1474": "SELECT customers.CustomerID, SUM(transactions_1k.Amount) AS TotalConsumption FROM customers JOIN transactions_1k ON customers.CustomerID = transactions_1k.CustomerID WHERE customers.Currency = 'CZK' AND transactions_1k.Date BETWEEN '201101' AND '201112' GROUP BY customers.CustomerID ORDER BY TotalConsumption DESC;\t----- bird -----\tdebit_card_specializing",
    "1475": "SELECT COUNT(CustomerID) FROM customers WHERE Segment = 'KAM' AND CustomerID IN (SELECT CustomerID FROM yearmonth WHERE Date BETWEEN '201201' AND '201212' AND Consumption < 30000)\t----- bird -----\tdebit_card_specializing",
    "1476": "SELECT SUM(CASE WHEN C.Currency = 'CZK' THEN Y.Consumption ELSE 0 END) - SUM(CASE WHEN C.Currency = 'EUR' THEN Y.Consumption ELSE 0 END) AS Difference_in_Consumption FROM customers AS C INNER JOIN yearmonth AS Y ON C.CustomerID = Y.CustomerID WHERE Y.Date BETWEEN '201201' AND '201212'\t----- bird -----\tdebit_card_specializing",
    "1477": "SELECT STRFTIME('%Y', T1.Date) AS Year, SUM(T1.Consumption * T2.Price) AS Total_EUR_Paid FROM yearmonth AS T1 INNER JOIN transactions_1k AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Currency = 'EUR' GROUP BY STRFTIME('%Y', T1.Date) ORDER BY Total_EUR_Paid DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1478": "SELECT Segment FROM yearmonth GROUP BY Segment ORDER BY SUM(Consumption) ASC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1479": "SELECT SUBSTR(Date, 1, 4) AS Year, SUM(Consumption) AS TotalConsumption FROM yearmonth WHERE Currency = 'CZK' GROUP BY SUBSTR(Date, 1, 4) ORDER BY TotalConsumption DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1480": "SELECT Date, MAX(Consumption) FROM yearmonth WHERE CustomerID IN (SELECT CustomerID FROM customers WHERE Segment = 'SME') AND SUBSTR(Date, 1, 4) = '2013' GROUP BY SUBSTR(Date, 6, 2) ORDER BY MAX(Consumption) DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1481": "SELECT (SUM(T1.Consumption) / COUNT(T1.CustomerID)) AS SME_avg_consumption, (SELECT (SUM(T1.Consumption) / COUNT(T1.CustomerID)) FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Segment = 'LAM' AND T1.Date BETWEEN '201301' AND '201312') AS LAM_avg_consumption, (SELECT (SUM(T1.Consumption) / COUNT(T1.CustomerID)) FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Segment = 'KAM' AND T1.Date BETWEEN '201301' AND '201312') AS KAM_avg_consumption FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Date BETWEEN '201301' AND '201312' AND\t----- bird -----\tdebit_card_specializing",
    "1482": "SELECT Segment, MAX((T2.Consumption - T1.Consumption) / T2.Consumption * 100) AS Max_Increase_Percentage, MIN((T2.Consumption - T1.Consumption) / T2.Consumption * 100) AS Min_Increase_Percentage FROM yearmonth AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Date LIKE '2012%' AND T2.Date LIKE '2013%' GROUP BY Segment\t----- bird -----\tdebit_card_specializing",
    "1483": "SELECT SUM(Consumption) FROM yearmonth WHERE CustomerID = 6 AND Date BETWEEN '201308' AND '201311'\t----- bird -----\tdebit_card_specializing",
    "1484": "SELECT COUNT(DISTINCT GasStationID) AS DiscountGasStationsCzech FROM gasstations WHERE Segment = 'Discount' AND Country = 'Czech Republic' SELECT COUNT(DISTINCT GasStationID) AS DiscountGasStationsSlovakia FROM gasstations WHERE Segment = 'Discount' AND Country = 'Slovakia' SELECT (DiscountGasStationsCzech - DiscountGasStationsSlovakia) AS MoreDiscountGasStations FROM gasstations\t----- bird -----\tdebit_card_specializing",
    "1485": "SELECT SUM(Y1.Consumption) - SUM(Y2.Consumption) AS difference FROM yearmonth AS Y1 JOIN yearmonth AS Y2 ON Y1.CustomerID = 7 AND Y2.CustomerID = 5 WHERE Y1.Date = '201304' AND Y2.Date = '201304'\t----- bird -----\tdebit_card_specializing",
    "1486": "SELECT COUNT(CustomerID) FROM customers WHERE Segment = 'SME' AND Currency = 'Czech koruna' - COUNT(CustomerID) FROM customers WHERE Segment = 'SME' AND Currency = 'Euro' as \"Amount of more SMEs\"\t----- bird -----\tdebit_card_specializing",
    "1487": "SELECT customers.CustomerID, customers.Segment, customers.Currency, MAX(yearmonth.Consumption) FROM customers INNER JOIN yearmonth ON customers.CustomerID = yearmonth.CustomerID WHERE customers.Segment = 'LAM' AND customers.Currency = 'Euro' AND yearmonth.Date = '201310'\t----- bird -----\tdebit_card_specializing",
    "1488": "SELECT T1.CustomerID, MAX(T2.Consumption) AS MaxConsumption FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Segment = 'KAM' GROUP BY T1.CustomerID ORDER BY MaxConsumption DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1489": "SELECT SUM(Consumption) AS total_consumption FROM yearmonth WHERE Date = '201305' AND CustomerID IN (SELECT CustomerID FROM customers WHERE Segment = 'KAM')\t----- bird -----\tdebit_card_specializing",
    "1490": "SELECT CAST(COUNT(CASE WHEN T1.Segment = 'LAM' AND T2.Consumption > 46.73 THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(CASE WHEN T1.Segment = 'LAM' THEN 1 ELSE NULL END) FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID;\t----- bird -----\tdebit_card_specializing",
    "1491": "SELECT Country, COUNT(GasStationID) AS TotalValueForMoneyGasStations FROM gasstations WHERE Segment = 'value for money' GROUP BY Country\t----- bird -----\tdebit_card_specializing",
    "1492": "SELECT CAST(SUM(CASE WHEN Segment = 'KAM' AND Currency = 'Euro' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(CustomerID) FROM customers\t----- bird -----\tdebit_card_specializing",
    "1493": "SELECT (CAST(COUNT(T1.CustomerID) AS REAL) / (SELECT COUNT(CustomerID) FROM customers)) * 100 FROM yearmonth AS T1 WHERE T1.Date LIKE '201202%' AND T1.Consumption > 528.3\t----- bird -----\tdebit_card_specializing",
    "1494": "SELECT CAST(SUM(CASE WHEN Segment = 'premium' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM gasstations WHERE Country = 'Slovakia'\t----- bird -----\tdebit_card_specializing",
    "1495": "SELECT CustomerID FROM yearmonth WHERE Date = '201309' ORDER BY Consumption DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1496": "SELECT T1.Segment FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Date = '201309' GROUP BY T1.Segment ORDER BY SUM(T2.Consumption) ASC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1497": "SELECT T1.CustomerID FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Segment = 'SME' AND T2.Date = '201206' ORDER BY T2.Consumption ASC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1498": "SELECT MAX(Consumption) FROM yearmonth WHERE SUBSTR(Date, 1, 4) = '2012'\t----- bird -----\tdebit_card_specializing",
    "1499": "SELECT MAX(SUM(T2.Consumption)) / 12 AS biggest_monthly_consumption FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Currency = 'euro' GROUP BY T2.Date\t----- bird -----\tdebit_card_specializing",
    "1500": "SELECT T2.Description FROM transactions_1k AS T1 INNER JOIN products AS T2 ON T1.ProductID = T2.ProductID WHERE T1.Date LIKE '201309%'\t----- bird -----\tdebit_card_specializing",
    "1501": "SELECT DISTINCT Country FROM gasstations WHERE GasStationID IN (SELECT GasStationID FROM transactions_1k WHERE SUBSTR(Date, 1, 6) = '201306')\t----- bird -----\tdebit_card_specializing",
    "1502": "SELECT ChainID FROM gasstations WHERE GasStationID IN (SELECT GasStationID FROM transactions_1k WHERE Currency = 'Euro')\t----- bird -----\tdebit_card_specializing",
    "1503": "SELECT T2.Description FROM transactions_1k AS T1 INNER JOIN products AS T2 ON T1.ProductID = T2.ProductID INNER JOIN customers AS T3 ON T1.CustomerID = T3.CustomerID WHERE T3.Currency = 'Euro'\t----- bird -----\tdebit_card_specializing",
    "1504": "SELECT AVG(Price) FROM transactions_1k WHERE Date LIKE '2012-01%'\t----- bird -----\tdebit_card_specializing",
    "1505": "SELECT COUNT(T1.CustomerID) FROM customers AS T1 INNER JOIN transactions_1k AS T2 ON T1.CustomerID = T2.CustomerID INNER JOIN yearmonth AS T3 ON T1.CustomerID = T3.CustomerID WHERE T1.Currency = 'Euro' AND T3.Consumption > 1000\t----- bird -----\tdebit_card_specializing",
    "1506": "SELECT p.Description FROM products p JOIN transactions_1k t ON p.ProductID = t.ProductID JOIN gasstations g ON t.GasStationID = g.GasStationID WHERE g.Country = 'CZE'\t----- bird -----\tdebit_card_specializing",
    "1507": "SELECT T1.Time FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T2.ChainID = 11\t----- bird -----\tdebit_card_specializing",
    "1508": "SELECT COUNT(TransactionID) FROM transactions_1k WHERE GasStationID IN (SELECT GasStationID FROM gasstations WHERE Country = 'CZE') AND Price > 1000\t----- bird -----\tdebit_card_specializing",
    "1509": "SELECT COUNT(*) FROM transactions_1k WHERE GasStationID IN (SELECT GasStationID FROM gasstations WHERE Country = 'CZE') AND Date > '2012-01-01'\t----- bird -----\tdebit_card_specializing",
    "1510": "SELECT AVG(Price) FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T2.Country = 'CZE'\t----- bird -----\tdebit_card_specializing",
    "1511": "SELECT AVG(Price) FROM transactions_1k WHERE CustomerID IN (SELECT CustomerID FROM customers WHERE Currency = 'Euro')\t----- bird -----\tdebit_card_specializing",
    "1512": "SELECT T1.CustomerID, SUM(T2.Amount) AS TotalAmountPaid FROM transactions_1k AS T1 INNER JOIN customers AS T3 ON T1.CustomerID = T3.CustomerID WHERE T1.Date = '2012-08-25' GROUP BY T1.CustomerID ORDER BY TotalAmountPaid DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1513": "SELECT Country FROM gasstations WHERE GasStationID = (SELECT GasStationID FROM transactions_1k WHERE Date = '2012-08-25' ORDER BY Time LIMIT 1)\t----- bird -----\tdebit_card_specializing",
    "1514": "SELECT T1.Currency FROM customers AS T1 INNER JOIN transactions_1k AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Time = '16:25:00' AND T2.Date = '2012-08-24'\t----- bird -----\tdebit_card_specializing",
    "1515": "SELECT T1.Segment FROM customers AS T1 INNER JOIN transactions_1k AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Date = '2012-08-23' AND T2.Time = '21:20:00'\t----- bird -----\tdebit_card_specializing",
    "1516": "SELECT COUNT(*) FROM transactions_1k WHERE Date = '2012-08-26' AND Time < '13:00:00' AND Currency = 'EUR'\t----- bird -----\tdebit_card_specializing",
    "1517": "SELECT Segment FROM customers WHERE CustomerID = (SELECT MIN(CustomerID) FROM customers)\t----- bird -----\tdebit_card_specializing",
    "1518": "SELECT T2.Country FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE STRFTIME('%Y-%m-%d',T1.Date) = '2012-08-24' AND T1.Time = '12:42:00'\t----- bird -----\tdebit_card_specializing",
    "1519": "SELECT ProductID FROM transactions_1k WHERE Date = '2012-08-23' AND Time = '21:20:00'\t----- bird -----\tdebit_card_specializing",
    "1520": "SELECT SUM(Amount) AS Total_Expenses, Date, Consumption FROM transactions_1k INNER JOIN yearmonth ON transactions_1k.CustomerID = yearmonth.CustomerID WHERE Date LIKE '2012-01%' AND Amount = 124.05 GROUP BY transactions_1k.CustomerID, Date, Consumption\t----- bird -----\tdebit_card_specializing",
    "1521": "SELECT COUNT(TransactionID) FROM transactions_1k INNER JOIN gasstations ON transactions_1k.GasStationID = gasstations.GasStationID WHERE Time >= '08:00' AND Time < '09:00' AND Date = '2012-08-26' AND gasstations.Country = 'CZE'\t----- bird -----\tdebit_card_specializing",
    "1522": "SELECT T1.Currency FROM customers AS T1 INNER JOIN transactions_1k AS T2 ON T1.CustomerID = T2.CustomerID INNER JOIN yearmonth AS T3 ON T1.CustomerID = T3.CustomerID WHERE T3.Date LIKE '201306' AND T2.Amount = 214582.17\t----- bird -----\tdebit_card_specializing",
    "1523": "SELECT Country FROM gasstations WHERE GasStationID = (SELECT GasStationID FROM \"transactions_1k\" WHERE CardID = 667467)\t----- bird -----\tdebit_card_specializing",
    "1524": "SELECT T1.Country FROM customers AS T1 INNER JOIN transactions_1k AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Amount = 548.4 AND T2.Date = '2012-08-24'\t----- bird -----\tdebit_card_specializing",
    "1525": "SELECT COUNT(DISTINCT CustomerID) / (SELECT COUNT(DISTINCT CustomerID) FROM customers) AS percentage FROM transactions_1k WHERE Date = '2012-08-25' AND Currency = 'EUR'\t----- bird -----\tdebit_card_specializing",
    "1526": "SELECT ((T1.Consumption - T2.Consumption) / T1.Consumption) AS Consumption_Decrease_Rate FROM yearmonth AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Date LIKE '2012%' AND T2.Date LIKE '2013%' AND T1.CustomerID IN (SELECT CustomerID FROM transactions_1k WHERE Price = 634.8 AND Date = '2012-08-25')\t----- bird -----\tdebit_card_specializing",
    "1527": "SELECT GasStationID FROM transactions_1k GROUP BY GasStationID ORDER BY SUM(Amount * Price) DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1528": "SELECT CAST(SUM(CASE WHEN T1.Segment = 'premium' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.CustomerID) FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Segment = 'SVK'\t----- bird -----\tdebit_card_specializing",
    "1529": "SELECT SUM(Price) FROM transactions_1k WHERE CustomerID = 38508 SELECT SUM(Price) FROM transactions_1k WHERE CustomerID = 38508 AND Date LIKE '201201%'\t----- bird -----\tdebit_card_specializing",
    "1530": "SELECT Description FROM products INNER JOIN transactions_1k ON products.ProductID = transactions_1k.ProductID GROUP BY Description ORDER BY SUM(Amount) DESC LIMIT 5\t----- bird -----\tdebit_card_specializing",
    "1531": "SELECT T1.CustomerID, T2.First, T2.Last, AVG(T1.Price / T1.Amount) AS AvgPricePerItem, T2.Currency FROM transactions_1k AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID GROUP BY T1.CustomerID ORDER BY SUM(T1.Price) DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1532": "SELECT Country FROM gasstations WHERE GasStationID = (SELECT GasStationID FROM transactions_1k WHERE ProductID = 2 ORDER BY Price DESC LIMIT 1)\t----- bird -----\tdebit_card_specializing",
    "1533": "SELECT T1.Consumption FROM yearmonth AS T1 INNER JOIN transactions_1k AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.ProductID = 5 AND T2.Price / T2.Amount > 29.00 AND T1.Date LIKE '201208%'\t----- bird -----\tdebit_card_specializing"
}