{
    "0": "SELECT MAX(`Percent (%) Eligible Free (K-12)`) FROM frpm WHERE `County Name` = 'Alameda County';\t----- bird -----\tcalifornia_schools",
    "1": "SELECT TOP 3 `Percent (%) Eligible Free (Ages 5-17)` FROM frpm WHERE `Educational Option Type` = 'Continuation School' ORDER BY `Percent (%) Eligible Free (Ages 5-17)` ASC;\t----- bird -----\tcalifornia_schools",
    "2": "SELECT T1.Zip FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.`Charter School (Y/N)` = 1 AND T1.County = 'Fresno County Office of Education'\t----- bird -----\tcalifornia_schools",
    "3": "SELECT MailStreet, MailCity, MailZip, MailState FROM schools WHERE CDSCode = ( SELECT CDSCode FROM frpm WHERE `FRPM Count (K-12)` = ( SELECT MAX(`FRPM Count (K-12)`) FROM frpm ) )\t----- bird -----\tcalifornia_schools",
    "4": "SELECT T2.Phone FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.`Charter School (Y/N)` = 1 AND T2.OpenDate > '2000-01-01'\t----- bird -----\tcalifornia_schools",
    "5": "SELECT COUNT(*) FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T2.AvgScrMath < 400 AND T1.Virtual = 'F'\t----- bird -----\tcalifornia_schools",
    "6": "SELECT s.school FROM satscores AS s INNER JOIN schools AS sc ON s.cds = sc.CDSCode WHERE s.NumTstTakr > 500 AND sc.Magnet = 1;\t----- bird -----\tcalifornia_schools",
    "7": "SELECT T3.Phone FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode INNER JOIN schools AS T3 ON T1.NumTstTakr = (SELECT MAX(NumTstTakr) FROM satscores WHERE NumGE1500 > 0)\t----- bird -----\tcalifornia_schools",
    "8": "SELECT T2.NumTstTakr FROM frpm AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T1.`FRPM Count (K-12)` = (SELECT MAX(`FRPM Count (K-12)`) FROM frpm)\t----- bird -----\tcalifornia_schools",
    "9": "SELECT COUNT(*) FROM satscores INNER JOIN schools ON satscores.cds = schools.CDSCode WHERE AvgScrMath > 560 AND FundingType = 'Charter'\t----- bird -----\tcalifornia_schools",
    "10": "SELECT T1.`FRPM Count (Ages 5-17)` FROM frpm AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T2.AvgScrRead = (SELECT MAX(AvgScrRead) FROM satscores)\t----- bird -----\tcalifornia_schools",
    "11": "SELECT CDSCode FROM frpm WHERE (`Enrollment (K-12)` + `Enrollment (Ages 5-17)`) > 500\t----- bird -----\tcalifornia_schools",
    "12": "SELECT MAX(`Percent (%) Eligible Free (Ages 5-17)`) FROM frpm WHERE CDSCode IN ( SELECT cds FROM satscores WHERE NumTstTakr > 0 AND CAST(NumGE1500 AS REAL) / NumTstTakr > 0.3 )\t----- bird -----\tcalifornia_schools",
    "13": "SELECT Phone FROM schools JOIN satscores ON schools.CDSCode = satscores.cds ORDER BY (satscores.NumGE1500 / satscores.NumTstTakr) DESC LIMIT 3;\t----- bird -----\tcalifornia_schools",
    "14": "SELECT T1.`NCESSchool`, T1.`School` FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.`CDSCode` = T2.`CDSCode` ORDER BY T2.`Enrollment (Ages 5-17)` DESC LIMIT 0, 5\t----- bird -----\tcalifornia_schools",
    "15": "SELECT DISTINCT dname FROM frpm WHERE active = 1 ORDER BY AvgScrRead DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "16": "SELECT COUNT(*) FROM schools WHERE County = 'Alameda' AND CDSCode IN (SELECT cds FROM satscores WHERE NumTstTakr < 100)\t----- bird -----\tcalifornia_schools",
    "17": "SELECT CharterNum FROM schools WHERE CDSCode IN (SELECT cds FROM satscores WHERE AvgScrWrite = 499)\t----- bird -----\tcalifornia_schools",
    "18": "SELECT COUNT(*) FROM schools AS S INNER JOIN frpm AS F ON S.CDSCode = F.CDSCode INNER JOIN satscores AS SAT ON S.CDSCode = SAT.cds WHERE S.County = 'Contra Costa' AND F.`Charter Funding Type` = 'Directly funded' AND SAT.NumTstTakr <= 250;\t----- bird -----\tcalifornia_schools",
    "19": "SELECT schools.Phone FROM schools INNER JOIN satscores ON schools.CDSCode = satscores.cds WHERE satscores.AvgScrMath = (SELECT MAX(AvgScrMath) FROM satscores)\t----- bird -----\tcalifornia_schools",
    "20": "SELECT COUNT(*) FROM frpm WHERE `County Name` = 'Amador' AND `Low Grade` = '9' AND `High Grade` = '12'\t----- bird -----\tcalifornia_schools",
    "21": "SELECT COUNT(*) FROM frpm WHERE `County Name` = 'Los Angeles' AND `Free Meal Count (K-12)` > 500 AND `FRPM Count (K-12)` < 700\t----- bird -----\tcalifornia_schools",
    "22": "SELECT satscores.sname FROM satscores INNER JOIN schools ON satscores.cds = schools.CDSCode WHERE schools.County = 'Contra Costa' ORDER BY satscores.NumTstTakr DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "23": "SELECT s.School, s.Street FROM frpm AS f INNER JOIN schools AS s ON f.CDSCode = s.CDSCode WHERE ABS(f.`Enrollment (K-12)` - f.`Enrollment (Ages 5-17)`) > 30;\t----- bird -----\tcalifornia_schools",
    "24": "SELECT s.school FROM schools s JOIN frpm f ON s.CDSCode = f.CDSCode JOIN satscores ss ON s.CDSCode = ss.cds WHERE f.`Percent (%) Eligible Free (K-12)` > 0.1 AND ss.NumGE1500 > 0;\t----- bird -----\tcalifornia_schools",
    "25": "SELECT s.School, s.FundingType FROM schools s INNER JOIN satscores ss ON s.CDSCode = ss.cds WHERE s.County = 'Riverside' GROUP BY s.School HAVING AVG(ss.AvgScrMath) > 400;\t----- bird -----\tcalifornia_schools",
    "26": "SELECT s.School, s.Street || ', ' || s.City || ', ' || s.State || ', ' || s.Zip AS Full_Address FROM schools s JOIN frpm f ON s.CDSCode = f.CDSCode WHERE f.`FRPM Count (Ages 5-17)` > 800 AND s.County = 'Monterey' AND s.GSoffered = '12'\t----- bird -----\tcalifornia_schools",
    "27": "SELECT s.School, s.Phone, AVG(ss.AvgScrWrite) AS AvgWritingScore FROM schools AS s INNER JOIN satscores AS ss ON s.CDSCode = ss.cds WHERE s.OpenDate > '1991-01-01' OR s.ClosedDate < '2000-01-01' GROUP BY s.School, s.Phone;\t----- bird -----\tcalifornia_schools",
    "28": "SELECT schools.School, schools.DOCType FROM frpm INNER JOIN schools ON frpm.CDSCode = schools.CDSCode WHERE schools.FundingType = 'Local' AND (frpm.`Enrollment (K-12)` - frpm.`Enrollment (Ages 5-17)`) > (SELECT AVG(frpm.`Enrollment (K-12)` - frpm.`Enrollment (Ages 5-17)`) FROM frpm)\t----- bird -----\tcalifornia_schools",
    "29": "SELECT MIN(OpenDate) FROM schools WHERE GSoffered = 'K-12' ORDER BY Enrollment DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "30": "SELECT DISTINCT T3.City FROM schools AS T3 INNER JOIN frpm AS T1 ON T3.CDSCode = T1.CDSCode INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T2.enroll12 IS NOT NULL ORDER BY T2.enroll12 ASC LIMIT 5;\t----- bird -----\tcalifornia_schools",
    "31": "SELECT (`Free Meal Count (K-12)` / `Enrollment (K-12)`) AS Eligible_Free_Rate FROM frpm WHERE `School Type` = 'K-12' ORDER BY `Enrollment (K-12)` DESC LIMIT 11, 2\t----- bird -----\tcalifornia_schools",
    "32": "SELECT TOP 5 schools with the highest free or reduced price meal count in grades 1-12 and ownership code 66, along with the eligible free or reduced price meal rate: ```sql SELECT s.School, s.`FRPM Count (K-12)` / s.`Enrollment (K-12)` AS Eligible_Free_Reduced_Meal_Rate FROM schools AS s JOIN frpm AS f ON s.CDSCode = f.CDSCode WHERE s.`Ownership Code` = 66 ORDER BY s.`FRPM Count (K-12)` DESC LIMIT 5; ```\t----- bird -----\tcalifornia_schools",
    "33": "SELECT s.School, s.Website FROM frpm f JOIN schools s ON f.CDSCode = s.CDSCode WHERE f.`Free Meal Count (Ages 5-17)` >= 1900 AND f.`Free Meal Count (Ages 5-17)` <= 2000;\t----- bird -----\tcalifornia_schools",
    "34": "SELECT `Free Meal Count (Ages 5-17)` / `Enrollment (Ages 5-17)` FROM frpm WHERE `School Name` = 'Kacey Gibson'\t----- bird -----\tcalifornia_schools",
    "35": "SELECT s.AdmEmail1 FROM frpm AS f INNER JOIN schools AS s ON f.CDSCode = s.CDSCode WHERE f.`Charter School (Y/N)` = 1 ORDER BY f.`Enrollment (K-12)` ASC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "36": "SELECT AdmFName1, AdmLName1 FROM schools WHERE CDSCode = ( SELECT cds FROM satscores WHERE NumGE1500 = ( SELECT MAX(NumGE1500) FROM satscores ) )\t----- bird -----\tcalifornia_schools",
    "37": "SELECT T3.Street, T3.City, T3.Zip, T3.State FROM schools AS T3 INNER JOIN satscores AS T2 ON T3.CDSCode = T2.cds WHERE T2.NumGE1500 / T2.NumTstTakr = (SELECT MIN(NumGE1500 / NumTstTakr) FROM satscores)\t----- bird -----\tcalifornia_schools",
    "38": "SELECT Website FROM schools WHERE County = 'Los Angeles' AND CDSCode IN (SELECT cds FROM satscores WHERE NumTstTakr BETWEEN 2000 AND 3000)\t----- bird -----\tcalifornia_schools",
    "39": "SELECT AVG(NumTstTakr) FROM satscores JOIN schools ON satscores.cds = schools.CDSCode WHERE schools.County = 'Fresno' AND schools.OpenDate BETWEEN '1980-01-01' AND '1980-12-31';\t----- bird -----\tcalifornia_schools",
    "40": "SELECT Phone FROM schools WHERE District = 'Fresno Unified' ORDER BY AvgScrRead ASC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "41": "SELECT s.sname, s.AvgScrRead FROM satscores AS s INNER JOIN schools AS sc ON s.cds = sc.CDSCode WHERE sc.Virtual = 'F' ORDER BY s.AvgScrRead DESC LIMIT 5\t----- bird -----\tcalifornia_schools",
    "42": "SELECT schools.EdOpsName FROM satscores INNER JOIN schools ON satscores.cds = schools.CDSCode ORDER BY satscores.AvgScrMath DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "43": "SELECT AVG(T2.AvgScrMath) AS average_math_score, T1.cname AS county_name FROM satscores AS T2 INNER JOIN schools AS T1 ON T1.CDSCode = T2.cds WHERE T2.AvgScrMath + T2.AvgScrRead + T2.AvgScrWrite = ( SELECT MIN(T3.AvgScrMath + T3.AvgScrRead + T3.AvgScrWrite) FROM satscores AS T3 )\t----- bird -----\tcalifornia_schools",
    "44": "SELECT AVG(AvgScrWrite), schools.City FROM satscores INNER JOIN schools ON satscores.cds = schools.CDSCode WHERE NumTstTakr = (SELECT MAX(NumTstTakr) FROM satscores WHERE NumGE1500 >= 1500)\t----- bird -----\tcalifornia_schools",
    "45": "SELECT s.School, AVG(ss.AvgScrWrite) AS AverageWritingScore FROM schools s INNER JOIN satscores ss ON s.CDSCode = ss.cds WHERE s.AdmFName1 = 'Ricci' AND s.AdmLName1 = 'Ulrich' GROUP BY s.School;\t----- bird -----\tcalifornia_schools",
    "46": "SELECT State, School, SUM(`Enrollment (K-12)`) AS TotalEnrollment FROM frpm JOIN schools ON frpm.CDSCode = schools.CDSCode WHERE schools.DOC = 31 GROUP BY State, School ORDER BY TotalEnrollment DESC;\t----- bird -----\tcalifornia_schools",
    "47": "SELECT COUNT(school) / 12 AS monthly_avg_schools_opened FROM schools WHERE County = 'Alameda' AND DOC = 52 AND OpenDate LIKE '1980%'\t----- bird -----\tcalifornia_schools",
    "48": "SELECT CAST(SUM(CASE WHEN DOC = '54' AND County = 'Orange' THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN DOC = '52' AND County = 'Orange' THEN 1 ELSE 0 END) FROM schools;\t----- bird -----\tcalifornia_schools",
    "49": "SELECT schools.County, schools.School, schools.ClosedDate FROM schools WHERE schools.StatusType = 'Closed' GROUP BY schools.County ORDER BY COUNT(schools.School) DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "50": "SELECT s.MailStreet, s.School FROM satscores AS ss INNER JOIN schools AS s ON ss.cds = s.CDSCode WHERE ss.AvgScrMath = ( SELECT DISTINCT AvgScrMath FROM satscores ORDER BY AvgScrMath DESC LIMIT 1 OFFSET 5 )\t----- bird -----\tcalifornia_schools",
    "51": "SELECT T1.MailStreet, T2.sname FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T2.AvgScrRead = (SELECT MIN(AvgScrRead) FROM satscores)\t----- bird -----\tcalifornia_schools",
    "52": "SELECT COUNT(*) FROM satscores AS S INNER JOIN schools AS SCH ON S.cds = SCH.CDSCode WHERE (S.AvgScrRead + S.AvgScrMath + S.AvgScrWrite) >= 1500 AND SCH.MailCity = 'Lakeport'\t----- bird -----\tcalifornia_schools",
    "53": "SELECT SUM(NumTstTakr) FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T2.MailCity = 'Fresno'\t----- bird -----\tcalifornia_schools",
    "54": "SELECT schools.School, schools.MailZip FROM schools WHERE schools.AdmFName1 = 'Avetik' AND schools.AdmLName1 = 'Atoian'\t----- bird -----\tcalifornia_schools",
    "55": "SELECT COUNT(CASE WHEN County = 'Colusa' THEN CDSCode ELSE NULL END) / COUNT(CASE WHEN County = 'Humboldt' THEN CDSCode ELSE NULL END) FROM schools WHERE MailState = 'CA'\t----- bird -----\tcalifornia_schools",
    "56": "SELECT COUNT(*) FROM schools WHERE State = 'CA' AND County = 'San Joaquin' AND StatusType = 'Active' AND MailState = 'CA'\t----- bird -----\tcalifornia_schools",
    "57": "SELECT schools.Phone, schools.Ext FROM satscores JOIN schools ON satscores.cds = schools.CDSCode ORDER BY satscores.AvgScrWrite DESC LIMIT 1 OFFSET 332;\t----- bird -----\tcalifornia_schools",
    "58": "SELECT T1.Phone, T1.Ext, T1.School FROM schools AS T1 WHERE T1.Zip = '95203-3704'\t----- bird -----\tcalifornia_schools",
    "59": "SELECT T2.Website FROM schools AS T2 WHERE T2.AdmFName1 = 'Mike' AND T2.AdmLName1 = 'Larson' OR T2.AdmFName1 = 'Dante' AND T2.AdmLName1 = 'Alvarez' OR T2.AdmFName2 = 'Mike' AND T2.AdmLName2 = 'Larson' OR T2.AdmFName2 = 'Dante' AND T2.AdmLName2 = 'Alvarez' OR T2.AdmFName3 = 'Mike' AND T2.AdmLName3 = 'Larson' OR T2.AdmFName3 = 'Dante' AND T2.AdmLName3 = 'Alvarez'\t----- bird -----\tcalifornia_schools",
    "60": "SELECT T1.Website FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.Virtual = 'P' AND T1.Charter = 1 AND T1.County = 'San Joaquin'\t----- bird -----\tcalifornia_schools",
    "61": "SELECT COUNT(schools.CDSCode) FROM schools WHERE schools.City = 'Hickman' AND schools.Charter = 1 AND schools.DOC = 52\t----- bird -----\tcalifornia_schools",
    "62": "SELECT COUNT(*) FROM schools WHERE County = 'Los Angeles' AND Charter = 0 AND (`Free Meal Count (K-12)` * 100 / `Enrollment (K-12)`) < 0.18;\t----- bird -----\tcalifornia_schools",
    "63": "SELECT s.School, s.City, s.AdmFName1 || ' ' || s.AdmLName1 AS Administrator1, s.AdmFName2 || ' ' || s.AdmLName2 AS Administrator2, s.AdmFName3 || ' ' || s.AdmLName3 AS Administrator3 FROM schools s WHERE s.Charter = 1 AND s.CharterNum = '00D2'\t----- bird -----\tcalifornia_schools",
    "64": "SELECT COUNT(*) FROM schools WHERE MailCity = 'Hickman' AND CharterNum = '00D4'\t----- bird -----\tcalifornia_schools",
    "65": "SELECT (CAST(SUM(CASE WHEN Charter Funding Type = 'locally funded' THEN 1 ELSE 0 END) AS REAL) / COUNT(*)) * 100 FROM frpm WHERE `County Name` = 'Santa Clara'\t----- bird -----\tcalifornia_schools",
    "66": "SELECT COUNT(*) FROM schools WHERE OpenDate BETWEEN '2000-01-01' AND '2005-12-31' AND County = 'Stanislaus' AND FundingType = 'Directly Funded'\t----- bird -----\tcalifornia_schools",
    "67": "SELECT SUM(T1.Enrollment) FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.`Academic Year` = '1989' AND T2.City = 'San Francisco' AND T2.StatusType = 'Closed' AND T1.`District Type` = 'Community College District'\t----- bird -----\tcalifornia_schools",
    "68": "SELECT T1.County FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.ClosedDate BETWEEN '1980-01-01' AND '1989-12-31' AND T1.SOC = '11' GROUP BY T1.County ORDER BY COUNT(T1.CDSCode) DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "69": "SELECT schools.NCESDist FROM schools WHERE schools.SOC = '31'\t----- bird -----\tcalifornia_schools",
    "70": "SELECT COUNT(CDSCode) FROM schools WHERE County = 'Alpine' AND StatusType = 'Active' AND (EdOpsName = 'District Community Day School' OR EdOpsName = 'District Community Day School (Closed)')\t----- bird -----\tcalifornia_schools",
    "71": "SELECT DISTINCT District Code FROM frpm WHERE `School Name` = 'Fresno' AND `Magnet` = 0;\t----- bird -----\tcalifornia_schools",
    "72": "SELECT SUM(`Enrollment (Ages 5-17)`) FROM frpm WHERE `School Name` = 'State Special School' AND `District Name` = 'Fremont' AND `Academic Year` = '2014-2015' AND EdOpsCode = 'SSS'\t----- bird -----\tcalifornia_schools",
    "73": "SELECT FRPMCount_Ages_5_17 FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.School = 'Youth Authority School' AND T2.MailStreet = 'PO Box 1040' AND T1.`Enrollment (Ages 5-17)` IS NOT NULL;\t----- bird -----\tcalifornia_schools",
    "74": "SELECT `Low Grade` FROM frpm WHERE `District Type` = 'SPECON' AND NCESDist = '613360'\t----- bird -----\tcalifornia_schools",
    "75": "SELECT T1.`School Name`, T1.`Educational Option Type` FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.`NSLP Provision Status` = 'Breakfast Provision 2' AND T1.`County Code` = 37;\t----- bird -----\tcalifornia_schools",
    "76": "SELECT T3.City FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode INNER JOIN satscores AS T3 ON T1.CDSCode = T3.cds WHERE T1.County = 'Merced' AND T1.EILCode = 'HS' AND T2.`NSLP Provision Status` = '2' AND T2.`Low Grade` = '9' AND T2.`High Grade` = '12'\t----- bird -----\tcalifornia_schools",
    "77": "SELECT schools.`School`, frpm.`Percent (%) Eligible FRPM (Ages 5-17)` FROM schools JOIN frpm ON schools.`CDSCode` = frpm.`CDSCode` WHERE schools.`County` = 'Los Angeles' AND schools.`GSserved` = 'K-9'\t----- bird -----\tcalifornia_schools",
    "78": "SELECT T2.`GSserved` FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.City = 'Adelanto' GROUP BY T2.`GSserved` ORDER BY COUNT(T2.`GSserved`) DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "79": "SELECT T1.County, COUNT(T1.School) AS Num_Schools FROM schools AS T1 WHERE T1.City IN ('San Diego', 'Santa Barbara') AND T1.Virtual = 'F' GROUP BY T1.County ORDER BY Num_Schools DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "80": "SELECT T1.`School Name`, T1.Latitude, T1.`School Type` FROM schools AS T1 WHERE T1.Latitude = (SELECT MAX(Latitude) FROM schools)\t----- bird -----\tcalifornia_schools",
    "81": "SELECT City, `Low Grade`, `School Name` FROM frpm JOIN schools ON frpm.CDSCode = schools.CDSCode WHERE State = 'CA' ORDER BY Latitude ASC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "82": "SELECT MAX(schools.Longitude), schools.`Low Grade`, schools.`High Grade` FROM schools WHERE schools.Longitude = (SELECT MAX(Longitude) FROM schools)\t----- bird -----\tcalifornia_schools",
    "83": "SELECT COUNT(schools.CDSCode) FROM schools WHERE schools.GSoffered = 'K-8' AND schools.Magnet = 1 AND schools.EdOpsCode = 'Multiple Provision Types'; SELECT City, COUNT(schools.CDSCode) FROM schools WHERE schools.GSoffered = 'K-8' GROUP BY City;\t----- bird -----\tcalifornia_schools",
    "84": "SELECT AdmFName1, District FROM schools GROUP BY AdmFName1, District ORDER BY COUNT(AdmFName1) DESC LIMIT 2\t----- bird -----\tcalifornia_schools",
    "85": "SELECT `District Code` FROM frpm WHERE CDSCode IN (SELECT cds FROM satscores WHERE AdmFName1 = 'Alusine')\t----- bird -----\tcalifornia_schools",
    "86": "SELECT T1.AdmLName1, T2.District, T2.County, T2.School FROM schools AS T2 INNER JOIN satscores AS T3 ON T2.CDSCode = T3.cds INNER JOIN frpm AS T4 ON T2.CDSCode = T4.CDSCode WHERE T2.CharterNum = '40'\t----- bird -----\tcalifornia_schools",
    "87": "SELECT AdmEmail1 FROM schools WHERE County = 'San Bernardino' AND District = 'San Bernardino City Unified' AND OpenDate BETWEEN '1/1/2009' AND '12/31/2010' AND (EdOpsCode = '62' OR EdOpsCode = '54')\t----- bird -----\tcalifornia_schools",
    "88": "SELECT T2.AdmEmail1, T3.School FROM satscores AS T1 INNER JOIN schools AS T3 ON T1.cds = T3.CDSCode INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T1.NumGE1500 = (SELECT MAX(NumGE1500) FROM satscores)\t----- bird -----\tcalifornia_schools",
    "89": "SELECT COUNT(DISTINCT T1.account_id) FROM disp AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN client AS T3 ON T1.client_id = T3.client_id INNER JOIN district AS T4 ON T3.district_id = T4.district_id INNER JOIN trans AS T5 ON T2.account_id = T5.account_id WHERE T1.type = 'POPLATEK PO OBRATU' AND T4.A3 = 'East Bohemia'\t----- bird -----\tfinancial",
    "90": "SELECT COUNT(DISTINCT T1.account_id) FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.A3 = 'Prague'\t----- bird -----\tfinancial",
    "91": "SELECT AVG(A12) AS avg_unemployment_1995, AVG(A13) AS avg_unemployment_1996 FROM district WHERE A11 = 1995 OR A11 = 1996\t----- bird -----\tfinancial",
    "92": "SELECT COUNT(DISTINCT district_id) FROM client INNER JOIN district ON client.district_id = district.district_id WHERE gender = 'F' GROUP BY district_id HAVING AVG(A11) > 6000 AND AVG(A11) < 10000;\t----- bird -----\tfinancial",
    "93": "SELECT COUNT(T1.client_id) FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.gender = 'M' AND T2.A3 = 'North Bohemia' AND T2.A11 > 8000\t----- bird -----\tfinancial",
    "94": "SELECT account.account_id FROM account JOIN disp ON account.account_id = disp.account_id JOIN client ON disp.client_id = client.client_id WHERE client.gender = 'F' AND client.birth_date = (SELECT MIN(birth_date) FROM client WHERE gender = 'F') AND client.birth_date = (SELECT MAX(birth_date) FROM client WHERE gender = 'F') AND client.district_id = (SELECT district_id FROM district WHERE A11 = (SELECT MIN(A11) FROM district)) AND client.district_id = (SELECT district_id FROM district WHERE A11 = (SELECT MAX(A11) FROM district)) SELECT (SELECT MAX(A11) FROM district) - (SELECT MIN(A11) FROM district) as Gap\t----- bird -----\tfinancial",
    "95": "SELECT account.account_id FROM account JOIN disp ON account.account_id = disp.account_id JOIN client ON disp.client_id = client.client_id GROUP BY account.account_id HAVING client.birth_date = (SELECT birth_date FROM client ORDER BY year DESC, month DESC, day DESC LIMIT 1) ORDER BY AVG(client.A11) DESC;\t----- bird -----\tfinancial",
    "96": "SELECT COUNT(client.client_id) FROM client JOIN disp ON client.client_id = disp.client_id JOIN account ON disp.account_id = account.account_id WHERE account.frequency = 'POPLATEK TYDNE' AND disp.type = 'OWNER'\t----- bird -----\tfinancial",
    "97": "SELECT c.client_id, c.gender, c.birth_date FROM client c JOIN disp d ON c.client_id = d.client_id WHERE d.type = 'DISPONENT' AND c.frequency = 'POPLATEK PO OBRATU'\t----- bird -----\tfinancial",
    "98": "SELECT MIN(amount) as lowest_approved_amount, account_id FROM loan WHERE STRFTIME('%Y', date) = '1997' GROUP BY account_id HAVING frequency = 'POPLATEK TYDNE'\t----- bird -----\tfinancial",
    "99": "SELECT MAX(amount) FROM loan WHERE duration > 12 AND account_id IN (SELECT account_id FROM account WHERE date >= '1993-01-01' AND date < '1994-01-01')\t----- bird -----\tfinancial",
    "100": "SELECT COUNT(T1.client_id) FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.gender = 'F' AND T1.birth_date < '1950-01-01' AND T2.A2 = 'Slokolov'\t----- bird -----\tfinancial",
    "101": "SELECT T1.account_id FROM account AS T1 INNER JOIN trans AS T2 ON T1.account_id = T2.account_id WHERE T2.date = (SELECT MIN(date) FROM trans WHERE date LIKE '1995%')\t----- bird -----\tfinancial",
    "102": "SELECT T1.account_id, T1.date FROM account AS T1 INNER JOIN trans AS T2 ON T1.account_id = T2.account_id WHERE T1.date < '1997-01-01' AND T2.balance > 3000;\t----- bird -----\tfinancial",
    "103": "SELECT client_id FROM client WHERE client_id IN ( SELECT client_id FROM disp WHERE disp_id IN ( SELECT disp_id FROM card WHERE issued = '1994-03-03' ) )\t----- bird -----\tfinancial",
    "104": "SELECT MIN(date) AS account_opened_date FROM account WHERE account_id IN (SELECT account_id FROM trans WHERE amount = 840 AND STRFTIME('%Y-%m-%d', date) = '1998-10-14')\t----- bird -----\tfinancial",
    "105": "SELECT D1.district_id FROM loan AS L INNER JOIN account AS A ON L.account_id = A.account_id INNER JOIN district AS D1 ON A.district_id = D1.district_id WHERE STRFTIME('%Y-%m-%d', L.date) = '1994-08-25'\t----- bird -----\tfinancial",
    "106": "SELECT MAX(amount) AS biggest_transaction_amount FROM trans WHERE account_id IN ( SELECT account_id FROM card WHERE issued = '1996-10-21' )\t----- bird -----\tfinancial",
    "107": "SELECT c.gender FROM client c JOIN account a ON c.district_id = a.district_id JOIN district d ON c.district_id = d.district_id WHERE a.date = (SELECT MAX(date) FROM account) AND d.A11 = (SELECT MAX(A11) FROM district)\t----- bird -----\tfinancial",
    "108": "SELECT T3.amount FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN account AS T3 ON T2.account_id = T3.account_id INNER JOIN loan AS T4 ON T3.account_id = T4.account_id INNER JOIN trans AS T5 ON T3.account_id = T5.account_id WHERE T4.amount = (SELECT MAX(amount) FROM loan) AND T5.date = (SELECT MIN(date) FROM trans WHERE account_id = T3.account_id)\t----- bird -----\tfinancial",
    "109": "SELECT COUNT(client_id) FROM client WHERE district_id IN (SELECT district_id FROM district WHERE A2 = 'Jesenik') AND gender = 'F'\t----- bird -----\tfinancial",
    "110": "SELECT T2.disp_id FROM trans AS T1 INNER JOIN disp AS T2 ON T1.account_id = T2.account_id WHERE T1.amount = 5100 AND T1.date = '1998-09-02'\t----- bird -----\tfinancial",
    "111": "SELECT COUNT(account_id) FROM account WHERE district_id = (SELECT district_id FROM district WHERE A2 = 'Litomerice') AND date >= '1996-01-01' AND date <= '1996-12-31'\t----- bird -----\tfinancial",
    "112": "SELECT d.A2 FROM client c JOIN disp d ON c.client_id = d.client_id WHERE c.gender = 'F' AND c.birth_date = '1976-01-29'\t----- bird -----\tfinancial",
    "113": "SELECT T1.birth_date FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN account AS T3 ON T2.account_id = T3.account_id INNER JOIN loan AS T4 ON T3.account_id = T4.account_id WHERE T4.amount = 98832 AND T4.date = '1996-01-03'\t----- bird -----\tfinancial",
    "114": "SELECT account_id FROM account INNER JOIN district ON account.district_id = district.district_id INNER JOIN disp ON account.account_id = disp.account_id INNER JOIN client ON disp.client_id = client.client_id WHERE district.A3 = 'Prague' ORDER BY account.date LIMIT 1;\t----- bird -----\tfinancial",
    "115": "SELECT CAST(COUNT(CASE WHEN c.gender = 'M' THEN 1 END) AS REAL) * 100 / COUNT(c.client_id) FROM client c JOIN district d ON c.district_id = d.district_id WHERE d.A3 = 'south Bohemia' AND d.A4 = (SELECT MAX(A4) FROM district WHERE A3 = 'south Bohemia')\t----- bird -----\tfinancial",
    "116": "SELECT CAST((SUM(CASE WHEN T1.`date` = '1998-12-27' THEN T1.balance * 1 ELSE 0 END) - SUM(CASE WHEN T1.`date` = '1993-03-22' THEN T1.balance * 1 ELSE 0 END) AS REAL) * 100 / SUM(CASE WHEN T1.`date` = '1993-03-22' THEN T1.balance * 1 ELSE 0 END) FROM trans AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN loan AS T3 ON T2.account_id = T3.account_id WHERE T3.date = '1993-07-05'\t----- bird -----\tfinancial",
    "117": "SELECT SUM(CASE WHEN status = 'A' THEN amount ELSE 0 END) * 100 / SUM(amount) FROM loan;\t----- bird -----\tfinancial",
    "118": "SELECT (CAST(SUM(CASE WHEN status = 'C' THEN 1 ELSE 0 END) AS REAL) / COUNT(account_id)) * 100 FROM loan WHERE amount < 100000;\t----- bird -----\tfinancial",
    "119": "SELECT a.account_id, d.A2 AS district_name, d.A3 AS district_region FROM account a JOIN disp ON a.account_id = disp.account_id JOIN client ON disp.client_id = client.client_id JOIN district d ON client.district_id = d.district_id JOIN card ON disp.disp_id = card.disp_id WHERE a.date = '1993' AND card.issued > a.date AND card.type = 'POPLATEK PO OBRATU'\t----- bird -----\tfinancial",
    "120": "SELECT T1.account_id, T1.frequency FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id INNER JOIN client AS T3 ON T2.district_id = T3.district_id WHERE T2.A2 = 'east Bohemia' AND T3.birth_date BETWEEN '1995-01-01' AND '2000-12-31'\t----- bird -----\tfinancial",
    "121": "SELECT account_id, date FROM account WHERE district_id = (SELECT district_id FROM district WHERE A2 = 'Prachatice')\t----- bird -----\tfinancial",
    "122": "SELECT A2, A3 FROM district WHERE district_id = (SELECT district_id FROM account WHERE account_id = (SELECT account_id FROM loan WHERE loan_id = '4990'))\t----- bird -----\tfinancial",
    "123": "SELECT T1.account_id, T2.A2 AS district, T2.A3 AS region FROM loan AS T1 INNER JOIN district AS T2 ON T1.account_id = T2.district_id WHERE T1.amount > 300000\t----- bird -----\tfinancial",
    "124": "SELECT T1.loan_id, T2.A3, T2.A11 FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T1.duration = 60;\t----- bird -----\tfinancial",
    "125": "SELECT DISTINCT d.A2 AS district, ((d.A13 - d.A12) / d.A12) * 100 AS unemployment_increment_rate FROM district AS d INNER JOIN client AS c ON d.district_id = c.district_id INNER JOIN disp AS dp ON c.client_id = dp.client_id INNER JOIN account AS a ON dp.account_id = a.account_id INNER JOIN loan AS l ON a.account_id = l.account_id WHERE l.status = 'D' AND l.date < '1996-01-01'\t----- bird -----\tfinancial",
    "126": "SELECT (CAST((SUM(CASE WHEN T1.A2 = 'Decin' THEN 1 ELSE 0 END) AS REAL) * 100) / COUNT(T1.account_id) FROM account AS T1 WHERE strftime('%Y', T1.date) = '1993'\t----- bird -----\tfinancial",
    "127": "SELECT account_id FROM account WHERE frequency = 'POPLATEK MESICNE'\t----- bird -----\tfinancial",
    "128": "SELECT T.A2, COUNT(T.client_id) AS num_female_account_holders FROM ( SELECT T1.client_id, T2.A2 FROM client AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T1.gender = 'F' ) AS T GROUP BY T.A2 ORDER BY num_female_account_holders DESC LIMIT 10\t----- bird -----\tfinancial",
    "129": "SELECT T1.A2 AS district_name, SUM(T2.amount) AS total_withdrawal_amount FROM district AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id INNER JOIN trans AS T3 ON T2.account_id = T3.account_id WHERE T3.type = 'VYDAJ' AND T3.date LIKE '1996-01%' GROUP BY T1.A2 ORDER BY total_withdrawal_amount DESC LIMIT 10\t----- bird -----\tfinancial",
    "130": "SELECT COUNT(DISTINCT T1.client_id) FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN account AS T3 ON T2.account_id = T3.account_id INNER JOIN district AS T4 ON T1.district_id = T4.district_id WHERE T4.A3 = 'South Bohemia' AND T2.type != 'Credit Card'\t----- bird -----\tfinancial",
    "131": "SELECT A3 FROM district WHERE district_id IN (SELECT district_id FROM client WHERE client_id IN (SELECT client_id FROM disp WHERE account_id IN (SELECT account_id FROM loan WHERE status = 'C' OR status = 'D'))) ORDER BY district_id DESC LIMIT 1;\t----- bird -----\tfinancial",
    "132": "SELECT AVG(amount) FROM loan WHERE account_id IN (SELECT account_id FROM disp WHERE client_id IN (SELECT client_id FROM client WHERE gender = 'M'))\t----- bird -----\tfinancial",
    "133": "SELECT A2, A4 FROM district WHERE A13 = (SELECT MAX(A13) FROM district WHERE A13 IS NOT NULL)\t----- bird -----\tfinancial",
    "134": "SELECT COUNT(account_id) FROM account WHERE district_id = ( SELECT district_id FROM district WHERE A16 = ( SELECT MAX(A16) FROM district WHERE district_id IN ( SELECT district_id FROM crime WHERE date LIKE '%1996%' GROUP BY district_id ORDER BY COUNT(case_number) DESC LIMIT 1 ) ) )\t----- bird -----\tfinancial",
    "135": "SELECT COUNT(T1.account_id) FROM account AS T1 INNER JOIN disp AS T2 ON T1.account_id = T2.account_id INNER JOIN card AS T3 ON T2.disp_id = T3.disp_id INNER JOIN trans AS T4 ON T1.account_id = T4.account_id WHERE T4.balance < 0 AND T4.operation = 'VYBER KARTOU' AND T1.frequency = 'POPLATEK MESICNE'\t----- bird -----\tfinancial",
    "136": "SELECT COUNT(T1.loan_id) FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T1.amount >= 250000 AND T2.frequency = 'POPLATEK MESICNE' AND T1.date BETWEEN '1995-01-01' AND '1997-12-31' AND T1.status = 'approved'\t----- bird -----\tfinancial",
    "137": "SELECT COUNT(account_id) FROM loan WHERE status = 'C' AND account_id IN (SELECT account_id FROM account WHERE district_id = 1)\t----- bird -----\tfinancial",
    "138": "SELECT COUNT(DISTINCT T3.client_id) AS male_clients FROM district AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id INNER JOIN disp AS T3 ON T2.account_id = T3.account_id INNER JOIN client AS T4 ON T3.client_id = T4.client_id WHERE T1.district_id = ( SELECT T1.district_id FROM district AS T1 ORDER BY T1.A15 DESC LIMIT 1 OFFSET 1 )\t----- bird -----\tfinancial",
    "139": "SELECT COUNT(T1.card_id) FROM card AS T1 INNER JOIN disp AS T2 ON T1.disp_id = T2.disp_id WHERE T1.type = 'gold' AND T2.type = 'disponent'\t----- bird -----\tfinancial",
    "140": "SELECT COUNT(account_id) FROM account WHERE district_id = (SELECT district_id FROM district WHERE A2 = 'Pisek')\t----- bird -----\tfinancial",
    "141": "SELECT A2 FROM district AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id INNER JOIN trans AS T3 ON T2.account_id = T3.account_id WHERE T3.amount > 10000 AND T3.date BETWEEN '1997-01-01' AND '1997-12-31'\t----- bird -----\tfinancial",
    "142": "SELECT account_id FROM `order` WHERE bank_to = 'Pisek' AND k_symbol = 'SIPO'\t----- bird -----\tfinancial",
    "143": "SELECT T1.account_id FROM account AS T1 INNER JOIN disp AS T2 ON T1.account_id = T2.account_id INNER JOIN card AS T3 ON T2.disp_id = T3.disp_id WHERE T3.type = 'gold' AND T3.type = 'junior'\t----- bird -----\tfinancial",
    "144": "SELECT AVG(T1.amount) FROM trans AS T1 INNER JOIN disp AS T2 ON T1.account_id = T2.account_id INNER JOIN card AS T3 ON T2.disp_id = T3.disp_id WHERE T1.type = 'VYBER KARTOU' AND STRFTIME('%Y', T1.date) = '2021'\t----- bird -----\tfinancial",
    "145": "SELECT T1.client_id FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN trans AS T3 ON T2.account_id = T3.account_id WHERE T3.type = 'VYBER KARTOU' AND YEAR(T3.date) = 1998 GROUP BY T1.client_id HAVING AVG(T3.amount) < (SELECT AVG(amount) FROM trans WHERE type = 'VYBER KARTOU' AND YEAR(date) = 1998)\t----- bird -----\tfinancial",
    "146": "SELECT client.client_id FROM client JOIN disp ON client.client_id = disp.client_id JOIN card ON disp.disp_id = card.disp_id JOIN account ON disp.account_id = account.account_id JOIN loan ON account.account_id = loan.account_id WHERE client.gender = 'F' AND card.type = 'credit card' AND loan.status = 'active'\t----- bird -----\tfinancial",
    "147": "SELECT COUNT(*) FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.gender = 'F' AND T2.A3 = 'South Bohemia'\t----- bird -----\tfinancial",
    "148": "SELECT T1.account_id FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id INNER JOIN disp AS T3 ON T1.account_id = T3.account_id WHERE T2.A2 = 'Tabor' AND T3.type = 'OWNER'\t----- bird -----\tfinancial",
    "149": "SELECT DISTINCT type FROM disp INNER JOIN account ON disp.account_id = account.account_id INNER JOIN district ON account.district_id = district.district_id WHERE type != 'OWNER' AND district.A11 > 8000 AND district.A11 <= 9000;\t----- bird -----\tfinancial",
    "150": "SELECT COUNT(DISTINCT T1.account_id) FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id INNER JOIN trans AS T3 ON T1.account_id = T3.account_id WHERE T2.A3 = 'North Bohemia' AND T3.bank = 'AB'\t----- bird -----\tfinancial",
    "151": "SELECT A2 FROM district WHERE district_id IN (SELECT district_id FROM account WHERE account_id IN (SELECT account_id FROM trans WHERE type = 'VYDAJ'))\t----- bird -----\tfinancial",
    "152": "SELECT AVG(A15) FROM district WHERE A15 > 4000 AND district_id IN (SELECT district_id FROM account WHERE date >= '1997-01-01')\t----- bird -----\tfinancial",
    "153": "SELECT COUNT(T1.card_id) FROM card AS T1 INNER JOIN disp AS T2 ON T1.disp_id = T2.disp_id INNER JOIN account AS T3 ON T2.account_id = T3.account_id INNER JOIN client AS T4 ON T2.client_id = T4.client_id WHERE T1.type = 'classic' AND T2.type = 'OWNER'\t----- bird -----\tfinancial",
    "154": "SELECT COUNT(T1.client_id) FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.gender = 'M' AND T2.A2 = 'Hl.m. Praha'\t----- bird -----\tfinancial",
    "155": "SELECT (CAST(COUNT(CASE WHEN type = 'gold' AND issued < '1998-01-01' THEN 1 END) AS REAL) * 100 / COUNT(*)) as percentage FROM card\t----- bird -----\tfinancial",
    "156": "SELECT T2.client_id, T2.gender FROM account AS T1 INNER JOIN loan AS T2 ON T1.account_id = T2.account_id INNER JOIN disp AS T3 ON T1.account_id = T3.account_id INNER JOIN client AS T4 ON T3.client_id = T4.client_id ORDER BY T2.amount DESC LIMIT 1\t----- bird -----\tfinancial",
    "157": "SELECT SUM(A15) FROM district WHERE district_id = (SELECT district_id FROM account WHERE account_id = 532)\t----- bird -----\tfinancial",
    "158": "SELECT district_id FROM account WHERE account_id = (SELECT account_id FROM `order` WHERE order_id = 33333)\t----- bird -----\tfinancial",
    "159": "SELECT T1.amount, T1.date FROM trans AS T1 INNER JOIN disp AS T2 ON T1.account_id = T2.account_id WHERE T1.type = 'VYDAJ' AND T2.client_id = 3356;\t----- bird -----\tfinancial",
    "160": "SELECT COUNT(account.account_id) FROM account JOIN loan ON account.account_id = loan.account_id WHERE account.frequency = 'POPLATEK TYDNE' AND loan.amount < 200000;\t----- bird -----\tfinancial",
    "161": "SELECT card.type FROM card JOIN disp ON card.disp_id = disp.disp_id JOIN client ON disp.client_id = client.client_id WHERE client.client_id = 13539\t----- bird -----\tfinancial",
    "162": "SELECT A3 FROM client INNER JOIN district ON client.district_id = district.district_id WHERE client.client_id = 3541\t----- bird -----\tfinancial",
    "163": "SELECT T2.A2 AS district_name FROM district AS T2 INNER JOIN account AS T1 ON T1.district_id = T2.district_id INNER JOIN loan AS T3 ON T1.account_id = T3.account_id WHERE T3.status = 'A' GROUP BY T2.A2 ORDER BY COUNT(T1.account_id) DESC LIMIT 1\t----- bird -----\tfinancial",
    "164": "SELECT client.client_id FROM `order` JOIN disp ON `order`.account_id = disp.account_id JOIN client ON disp.client_id = client.client_id WHERE `order`.order_id = 32423\t----- bird -----\tfinancial",
    "165": "SELECT T1.trans_id, T1.date, T1.type, T1.operation, T1.amount, T1.balance, T1.k_symbol, T1.bank, T1.account FROM trans AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T3.district_id = 5;\t----- bird -----\tfinancial",
    "166": "SELECT COUNT(*) FROM account WHERE district_id IN (SELECT district_id FROM district WHERE A3 = 'Jesenik')\t----- bird -----\tfinancial",
    "167": "SELECT T1.client_id FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN card AS T3 ON T2.disp_id = T3.disp_id WHERE T3.issued >= '1997-01-01' AND T3.type = 'junior'\t----- bird -----\tfinancial",
    "168": "SELECT COUNT(client_id) * 100.0 / (SELECT COUNT(client_id) FROM client WHERE district_id IN (SELECT district_id FROM district WHERE A11 > 10000)) AS percentage_female_clients FROM client WHERE gender = 'F' AND district_id IN (SELECT district_id FROM district WHERE A11 > 10000)\t----- bird -----\tfinancial",
    "169": "SELECT ((SELECT SUM(amount) FROM loan WHERE account_id IN (SELECT account_id FROM disp WHERE client_id IN (SELECT client_id FROM client WHERE gender = 'M')) AND date = '1997') - (SELECT SUM(amount) FROM loan WHERE account_id IN (SELECT account_id FROM disp WHERE client_id IN (SELECT client_id FROM client WHERE gender = 'M')) AND date = '1996')) / (SELECT SUM(amount) FROM loan WHERE account_id IN (SELECT account_id FROM disp WHERE client_id IN (SELECT client_id FROM client WHERE gender = 'M')) AND date = '1996') * 100;\t----- bird -----\tfinancial",
    "170": "SELECT COUNT(T1.trans_id) FROM trans AS T1 INNER JOIN card AS T2 ON T1.account_id = T2.account_id WHERE T1.operation = 'VYBER KARTOU' AND STRFTIME('%Y', T1.date) > '1995'\t----- bird -----\tfinancial",
    "171": "SELECT SUM(CASE WHEN A3 = 'North Bohemia' THEN A16 ELSE 0 END) - SUM(CASE WHEN A3 = 'East Bohemia' THEN A16 ELSE 0 END) AS Difference_in_Crimes FROM district WHERE A16 IS NOT NULL AND strftime('%Y', date) = '1996'\t----- bird -----\tfinancial",
    "172": "SELECT COUNT(*) FROM disp WHERE account_id BETWEEN 1 AND 10 AND type IN ('OWNER', 'DISPONENT')\t----- bird -----\tfinancial",
    "173": "SELECT COUNT(*) FROM trans WHERE account_id = 3 AND operation = 'account statement' SELECT SUM(amount) FROM trans WHERE account_id = 3 AND operation = 'debit' AND k_symbol = '3539'\t----- bird -----\tfinancial",
    "174": "SELECT T1.birth_date FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN account AS T3 ON T2.account_id = T3.account_id WHERE T3.account_id = 130\t----- bird -----\tfinancial",
    "175": "SELECT COUNT(*) FROM disp JOIN account ON disp.account_id = account.account_id WHERE disp.type = 'owner' AND account.frequency = 'POPLATEK PO OBRATU'\t----- bird -----\tfinancial",
    "176": "SELECT SUM(amount) FROM loan WHERE account_id = (SELECT account_id FROM disp WHERE client_id = 992) AND status = 'D' SELECT status, SUM(payments) FROM loan WHERE account_id = (SELECT account_id FROM disp WHERE client_id = 992) GROUP BY status\t----- bird -----\tfinancial",
    "177": "SELECT SUM(balance) AS TotalBalance, CASE WHEN T3.gender = 'M' THEN 'Man' WHEN T3.gender = 'F' THEN 'Woman' END AS AccountOwnerGender FROM trans AS T1 INNER JOIN disp AS T2 ON T1.account_id = T2.account_id INNER JOIN client AS T3 ON T2.client_id = T3.client_id WHERE T1.trans_id = 851 AND T3.client_id = 4\t----- bird -----\tfinancial",
    "178": "SELECT c.type FROM client cl JOIN disp d ON cl.client_id = d.client_id JOIN card c ON d.disp_id = c.disp_id WHERE cl.client_id = 9;\t----- bird -----\tfinancial",
    "179": "SELECT SUM(amount) FROM trans WHERE account_id IN (SELECT account_id FROM disp WHERE client_id = 617) AND date LIKE '1998%'\t----- bird -----\tfinancial",
    "180": "SELECT c.client_id, c.birth_date FROM client c JOIN district d ON c.district_id = d.district_id WHERE c.birth_date BETWEEN '1983-01-01' AND '1987-12-31' AND d.A6 = 'East Bohemia';\t----- bird -----\tfinancial",
    "181": "SELECT client_id FROM client WHERE gender = 'F' ORDER BY client_id DESC LIMIT 3\t----- bird -----\tfinancial",
    "182": "SELECT COUNT(T1.gender) FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN account AS T3 ON T2.account_id = T3.account_id INNER JOIN trans AS T4 ON T3.account_id = T4.account_id WHERE T1.gender = 'M' AND T1.birth_date BETWEEN '1974-01-01' AND '1976-12-31' AND T4.type = 'SIPO' AND T4.amount > 4000\t----- bird -----\tfinancial",
    "183": "SELECT COUNT(account_id) FROM account WHERE district_id IN (SELECT district_id FROM district WHERE A4 = 'Beroun') AND date > '1996-01-01'\t----- bird -----\tfinancial",
    "184": "SELECT COUNT(DISTINCT c.client_id) FROM client c JOIN disp d ON c.client_id = d.client_id JOIN card ca ON d.disp_id = ca.disp_id WHERE c.gender = 'F' AND ca.type = 'junior credit card'\t----- bird -----\tfinancial",
    "185": "SELECT CAST(COUNT(CASE WHEN c.gender = 'F' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(*) FROM client c JOIN disp d ON c.client_id = d.client_id JOIN account a ON d.account_id = a.account_id JOIN district dist ON c.district_id = dist.district_id WHERE dist.A3 = 'Prague'\t----- bird -----\tfinancial",
    "186": "SELECT CAST(SUM(CASE WHEN T1.gender = 'M' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.gender) FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN account AS T3 ON T2.account_id = T3.account_id WHERE T3.frequency = 'POPLATEK TYDNE'\t----- bird -----\tfinancial",
    "187": "SELECT COUNT(T1.client_id) FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN account AS T3 ON T2.account_id = T3.account_id WHERE T3.frequency = 'POPLATEK TYDNE'\t----- bird -----\tfinancial",
    "188": "SELECT T1.account_id FROM account AS T1 INNER JOIN loan AS T2 ON T1.account_id = T2.account_id WHERE T2.duration > 24 AND T2.amount = ( SELECT MIN(amount) FROM loan WHERE account_id = T1.account_id ) AND T1.date < '1997-01-01'\t----- bird -----\tfinancial",
    "189": "SELECT account.account_id FROM account JOIN disp ON account.account_id = disp.account_id JOIN client ON disp.client_id = client.client_id WHERE client.gender = 'F' ORDER BY client.birth_date ASC, district.A11 ASC LIMIT 1;\t----- bird -----\tfinancial",
    "190": "SELECT COUNT(DISTINCT T1.client_id) FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE strftime('%Y', T1.birth_date) = '1920' AND T2.A3 = 'east Bohemia'\t----- bird -----\tfinancial",
    "191": "SELECT COUNT(*) FROM loan JOIN account ON loan.account_id = account.account_id WHERE duration = 24 AND frequency = 'POPLATEK TYDNE'\t----- bird -----\tfinancial",
    "192": "SELECT AVG(amount) FROM loan WHERE status = 'C' AND account_id IN (SELECT account_id FROM trans WHERE k_symbol = 'POPLATEK PO OBRATU')\t----- bird -----\tfinancial",
    "193": "SELECT T2.client_id, T1.district_id FROM disp AS T1 INNER JOIN client AS T2 ON T1.client_id = T2.client_id WHERE T1.type = 'OWNER' AND T2.client_id NOT IN (SELECT T2.client_id FROM disp AS T1 INNER JOIN client AS T2 ON T1.client_id = T2.client_id WHERE T1.type <> 'OWNER')\t----- bird -----\tfinancial",
    "194": "SELECT T1.client_id, DATEDIFF(CURDATE(), T1.birth_date) AS age FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN card AS T3 ON T2.disp_id = T3.disp_id WHERE T3.type = 'gold' AND T1.client_id IN (SELECT DISTINCT client_id FROM loan)\t----- bird -----\tfinancial",
    "195": "SELECT T.bond_type FROM ( SELECT T2.bond_type, COUNT(T2.bond_type) AS num FROM bond AS T2 GROUP BY T2.bond_type ) AS T ORDER BY T.num DESC LIMIT 1\t----- bird -----\ttoxicology",
    "196": "SELECT COUNT(DISTINCT T1.molecule_id) AS NonCarcinogenic_with_Chlorine FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '-' AND T2.element = 'cl'\t----- bird -----\ttoxicology",
    "197": "SELECT AVG(CASE WHEN element = 'O' THEN 1 ELSE 0 END) FROM atom WHERE molecule_id IN ( SELECT molecule_id FROM bond WHERE bond_type = '-' )\t----- bird -----\ttoxicology",
    "198": "SELECT SUM(CASE WHEN T3.label = '+' AND T2.bond_type = '-' THEN 1 ELSE 0 END) / COUNT(T1.atom_id) FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN molecule AS T3 ON T1.molecule_id = T3.molecule_id\t----- bird -----\ttoxicology",
    "199": "SELECT COUNT(*) AS NonCarciNums FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'na' AND T2.label = '-'\t----- bird -----\ttoxicology",
    "200": "SELECT T1.molecule_id FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '#' AND T2.label = '+'\t----- bird -----\ttoxicology",
    "201": "SELECT CAST(SUM(CASE WHEN T1.element = 'c' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.atom_id) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN bond AS T3 ON T2.molecule_id = T3.molecule_id WHERE T3.bond_type = ' = '\t----- bird -----\ttoxicology",
    "202": "SELECT COUNT(*) FROM bond WHERE bond_type = '#'\t----- bird -----\ttoxicology",
    "203": "SELECT COUNT(*) FROM atom WHERE element != 'br'\t----- bird -----\ttoxicology",
    "204": "SELECT COUNT(*) AS Carcinogenic_count FROM molecule WHERE molecule_id BETWEEN 'TR000' AND 'TR099' AND label = '+';\t----- bird -----\ttoxicology",
    "205": "SELECT molecule_id FROM atom WHERE element = 'si'\t----- bird -----\ttoxicology",
    "206": "SELECT element FROM atom WHERE molecule_id = ( SELECT molecule_id FROM bond WHERE bond_id = 'TR004_8_9' )\t----- bird -----\ttoxicology",
    "207": "SELECT DISTINCT element FROM atom INNER JOIN bond ON atom.molecule_id = bond.molecule_id WHERE bond.bond_type = ' = ';\t----- bird -----\ttoxicology",
    "208": "SELECT T2.label, COUNT(T1.atom_id) AS num_atoms FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'h' GROUP BY T2.label ORDER BY num_atoms DESC LIMIT 1;\t----- bird -----\ttoxicology",
    "209": "SELECT T2.bond_type FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T1.element = 'te'\t----- bird -----\ttoxicology",
    "210": "SELECT atom_id, atom_id2 FROM connected JOIN bond ON connected.bond_id = bond.bond_id WHERE bond.bond_type = '-'\t----- bird -----\ttoxicology",
    "211": "SELECT T1.atom_id, T2.atom_id AS connected_atom FROM connected INNER JOIN atom AS T1 ON connected.atom_id = T1.atom_id INNER JOIN atom AS T2 ON connected.atom_id2 = T2.atom_id INNER JOIN bond ON connected.bond_id = bond.bond_id INNER JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE molecule.label = '-'\t----- bird -----\ttoxicology",
    "212": "SELECT element, COUNT(*) AS num_elements FROM atom INNER JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.label = '-' GROUP BY element ORDER BY num_elements LIMIT 1;\t----- bird -----\ttoxicology",
    "213": "SELECT bond_type FROM bond JOIN connected ON bond.molecule_id = connected.bond_id JOIN atom ON connected.atom_id = atom.atom_id WHERE atom.atom_id = 'TR004_8' OR atom.atom_id = 'TR004_20'\t----- bird -----\ttoxicology",
    "214": "SELECT m.label FROM molecule AS m INNER JOIN atom AS a ON m.molecule_id = a.molecule_id WHERE a.element != 'sn' AND m.label NOT IN ('+', '-')\t----- bird -----\ttoxicology",
    "215": "SELECT COUNT(*) FROM atom a JOIN molecule m ON a.molecule_id = m.molecule_id JOIN bond b ON b.molecule_id = m.molecule_id WHERE (a.element = 'i' OR a.element = 's') AND b.bond_type = '-'\t----- bird -----\ttoxicology",
    "216": "SELECT a.atom_id, c.atom_id2 FROM connected c JOIN bond b ON c.bond_id = b.bond_id JOIN atom a ON c.atom_id = a.atom_id WHERE b.bond_type = '#'\t----- bird -----\ttoxicology",
    "217": "SELECT T1.atom_id FROM connected AS T1 INNER JOIN atom AS T2 ON T1.atom_id2 = T2.atom_id INNER JOIN molecule AS T3 ON T2.molecule_id = T3.molecule_id WHERE T3.molecule_id = 'TR181'\t----- bird -----\ttoxicology",
    "218": "SELECT CAST(SUM(CASE WHEN T1.element = 'f' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.molecule_id) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN bond AS T3 ON T2.molecule_id = T3.molecule_id WHERE T2.label = '+'\t----- bird -----\ttoxicology",
    "219": "SELECT CAST(SUM(IIF(bond_type = '#', 1, 0)) AS REAL) * 100 / COUNT(bond_id) FROM bond WHERE bond_id IN (SELECT bond_id FROM connected WHERE atom_id IN (SELECT atom_id FROM atom WHERE molecule_id IN (SELECT molecule_id FROM molecule WHERE label = '+')))\t----- bird -----\ttoxicology",
    "220": "SELECT element FROM atom WHERE molecule_id = 'TR000' ORDER BY element LIMIT 3;\t----- bird -----\ttoxicology",
    "221": "SELECT a.atom_id, b.atom_id FROM connected c JOIN atom a ON c.atom_id = a.atom_id JOIN atom b ON c.atom_id2 = b.atom_id JOIN bond d ON c.bond_id = d.bond_id WHERE d.molecule_id = 'TR001' AND d.bond_id = 'TR001_2_6'\t----- bird -----\ttoxicology",
    "222": "SELECT SUM(CASE WHEN label = '+' THEN 1 ELSE 0 END) - SUM(CASE WHEN label = '-' THEN 1 ELSE 0 END) AS difference FROM molecule;\t----- bird -----\ttoxicology",
    "223": "SELECT atom_id, atom_id2 FROM connected WHERE bond_id = 'TR_000_2_5'\t----- bird -----\ttoxicology",
    "224": "SELECT bond_id FROM connected WHERE atom_id2 = 'TR000_2'\t----- bird -----\ttoxicology",
    "225": "SELECT T2.label FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.bond_type = ' = ' GROUP BY T1.label ORDER BY T1.label ASC LIMIT 0, 5\t----- bird -----\ttoxicology",
    "226": "SELECT CAST(COUNT(CASE WHEN bond_type = ' = ' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(bond_id) FROM bond WHERE molecule_id = 'TR008'\t----- bird -----\ttoxicology",
    "227": "SELECT CAST(SUM(CASE WHEN label = '+' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(molecule_id) as percent FROM molecule\t----- bird -----\ttoxicology",
    "228": "SELECT CAST(SUM(CASE WHEN T1.element = 'h' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.atom_id) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.molecule_id = 'TR206'\t----- bird -----\ttoxicology",
    "229": "SELECT bond_type FROM bond WHERE molecule_id = 'TR000'\t----- bird -----\ttoxicology",
    "230": "SELECT T1.element, T2.label FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.molecule_id = 'TR060'\t----- bird -----\ttoxicology",
    "231": "SELECT T2.bond_type, T3.label FROM connected AS T1 INNER JOIN bond AS T2 ON T1.bond_id = T2.bond_id INNER JOIN molecule AS T3 ON T2.molecule_id = T3.molecule_id WHERE T2.molecule_id = 'TR018' GROUP BY T2.bond_type ORDER BY COUNT(T2.bond_type) DESC LIMIT 1;\t----- bird -----\ttoxicology",
    "232": "SELECT m.`molecule_id`, m.`label` FROM `molecule` m JOIN `bond` b ON m.`molecule_id` = b.`molecule_id` WHERE b.`bond_type` = '-' AND m.`label` = '-' GROUP BY m.`molecule_id` HAVING COUNT(*) = 1 ORDER BY m.`molecule_id` ASC LIMIT 3\t----- bird -----\ttoxicology",
    "233": "SELECT Bond.bond_type FROM Bond JOIN Molecule ON Bond.molecule_id = Molecule.molecule_id WHERE Molecule.molecule_id = 'TR006' ORDER BY Bond.bond_type LIMIT 2\t----- bird -----\ttoxicology",
    "234": "SELECT COUNT(*) FROM connected WHERE (atom_id = 'TR009_12' OR atom_id2 = 'TR009_12') AND bond_id LIKE 'TR009_%'\t----- bird -----\ttoxicology",
    "235": "SELECT COUNT(DISTINCT T1.molecule_id) AS Num_molecules FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '+' AND T2.element = 'br'\t----- bird -----\ttoxicology",
    "236": "SELECT bond.bond_type, connected.atom_id, connected.atom_id2 FROM bond JOIN connected ON bond.bond_id = connected.bond_id WHERE bond.bond_id = 'TR001_6_9'\t----- bird -----\ttoxicology",
    "237": "SELECT T2.label, CASE WHEN T2.label = '+' THEN 'Carcinogenic' ELSE 'Not Carcinogenic' END AS Carcinogenicity FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.atom_id = 'TR001_10'\t----- bird -----\ttoxicology",
    "238": "SELECT COUNT(*) FROM bond WHERE bond_type = '#'\t----- bird -----\ttoxicology",
    "239": "SELECT COUNT(bond_id) FROM connected WHERE atom_id = 'TR%_19' OR atom_id2 = 'TR%_19'\t----- bird -----\ttoxicology",
    "240": "SELECT T1.element FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.molecule_id = 'TR004';\t----- bird -----\ttoxicology",
    "241": "SELECT COUNT(*) AS NonCarcinogenicMolecules FROM molecule WHERE label = '-'\t----- bird -----\ttoxicology",
    "242": "SELECT m.molecule_id FROM atom a JOIN molecule m ON a.molecule_id = m.molecule_id WHERE SUBSTRING(a.atom_id, 7, 2) BETWEEN 21 AND 25 AND m.label = '+'\t----- bird -----\ttoxicology",
    "243": "SELECT bond_id FROM bond WHERE molecule_id IN ( SELECT molecule_id FROM atom WHERE element = 'p' OR element = 'n' GROUP BY molecule_id HAVING COUNT(DISTINCT element) = 2 )\t----- bird -----\ttoxicology",
    "244": "SELECT T2.label FROM molecule AS T2 INNER JOIN bond AS T1 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = ' = ' GROUP BY T2.label ORDER BY COUNT(*) DESC LIMIT 1;\t----- bird -----\ttoxicology",
    "245": "SELECT CAST(COUNT(bond_id) AS REAL) / COUNT(atom_id) FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE element = 'i'\t----- bird -----\ttoxicology",
    "246": "SELECT T2.bond_type, T2.bond_id FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id OR T1.atom_id = T2.atom_id2 INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T1.atom_id = 'atom_45'\t----- bird -----\ttoxicology",
    "247": "SELECT element FROM atom WHERE element IN ('cl', 'c', 'h', 'o', 's', 'n', 'p', 'na', 'br', 'f', 'i', 'sn', 'pb', 'te', 'ca') AND atom_id NOT IN (SELECT atom_id FROM connected)\t----- bird -----\ttoxicology",
    "248": "SELECT a.atom_id, c.bond_id FROM atom a JOIN bond b ON a.molecule_id = b.molecule_id JOIN connected c ON a.atom_id = c.atom_id WHERE b.bond_type = '#' AND b.molecule_id = 'TR447'\t----- bird -----\ttoxicology",
    "249": "SELECT element FROM atom WHERE molecule_id = 'TR144_8_19'\t----- bird -----\ttoxicology",
    "250": "SELECT T1.molecule_id, T1.label, COUNT(T2.bond_id) AS double_bonds FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '+' AND T2.bond_type = ' = ' GROUP BY T1.molecule_id, T1.label ORDER BY COUNT(T2.bond_id) DESC LIMIT 1;\t----- bird -----\ttoxicology",
    "251": "SELECT element, COUNT(element) AS element_count FROM atom WHERE molecule_id IN (SELECT molecule_id FROM molecule WHERE label = '+') GROUP BY element ORDER BY element_count LIMIT 1;\t----- bird -----\ttoxicology",
    "252": "SELECT T2.atom_id2 FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T2.bond_id IS NOT NULL AND T1.element = 'pb'\t----- bird -----\ttoxicology",
    "253": "SELECT T1.element FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id WHERE T1.bond_type = '#' GROUP BY T1.element HAVING COUNT(T1.element) = 3;\t----- bird -----\ttoxicology",
    "254": "SELECT COUNT(bond_id) * 100 / (SELECT COUNT(atom_id) FROM atom GROUP BY element ORDER BY COUNT(element) DESC LIMIT 1) FROM bond;\t----- bird -----\ttoxicology",
    "255": "SELECT CAST(SUM(CASE WHEN T2.bond_type = '-' AND T3.label = '+' THEN 1 ELSE 0 END) AS REAL) / COUNT(T2.bond_id) FROM bond AS T2 INNER JOIN molecule AS T3 ON T2.molecule_id = T3.molecule_id\t----- bird -----\ttoxicology",
    "256": "SELECT COUNT(*) FROM atom WHERE element IN ('c', 'h')\t----- bird -----\ttoxicology",
    "257": "SELECT T2.atom_id2 FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T1.element = 's'\t----- bird -----\ttoxicology",
    "258": "SELECT T2.bond_type FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'sn'\t----- bird -----\ttoxicology",
    "259": "SELECT COUNT(DISTINCT element) FROM atom AS A INNER JOIN bond AS B ON A.molecule_id = B.molecule_id WHERE B.bond_type = '-'\t----- bird -----\ttoxicology",
    "260": "SELECT COUNT(DISTINCT A.atom_id) FROM atom A JOIN bond B ON A.molecule_id = B.molecule_id JOIN connected C ON A.atom_id = C.atom_id JOIN atom A2 ON C.atom_id2 = A2.atom_id JOIN bond B2 ON A2.molecule_id = B2.molecule_id WHERE (A.element = 'p' OR A.element = 'br') AND B.bond_type = '#' AND B2.bond_type = '#'\t----- bird -----\ttoxicology",
    "261": "SELECT T2.bond_id FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '+';\t----- bird -----\ttoxicology",
    "262": "SELECT T1.molecule_id FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '-' AND T2.label = '-'\t----- bird -----\ttoxicology",
    "263": "SELECT CAST(SUM(CASE WHEN T1.element = 'cl' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.atom_id) FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.bond_type = '-'\t----- bird -----\ttoxicology",
    "264": "SELECT T1.label FROM molecule AS T1 WHERE T1.molecule_id IN ('TR000', 'TR001', 'TR002')\t----- bird -----\ttoxicology",
    "265": "SELECT molecule_id FROM molecule WHERE label = '-'\t----- bird -----\ttoxicology",
    "266": "SELECT COUNT(DISTINCT T1.molecule_id) AS Total_carcinogenic_molecules FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '+' AND T1.molecule_id BETWEEN 'TR000' AND 'TR030';\t----- bird -----\ttoxicology",
    "267": "SELECT B.bond_type FROM bond AS B INNER JOIN molecule AS M ON B.molecule_id = M.molecule_id WHERE M.molecule_id BETWEEN 'TR000' AND 'TR050'\t----- bird -----\ttoxicology",
    "268": "SELECT element FROM atom WHERE molecule_id = (SELECT molecule_id FROM bond WHERE bond_id = 'TR001_10_11')\t----- bird -----\ttoxicology",
    "269": "SELECT COUNT(bond_id) FROM bond JOIN atom ON bond.molecule_id = atom.molecule_id WHERE atom.element = 'i'\t----- bird -----\ttoxicology",
    "270": "SELECT MAX(T3.label) AS Max_label FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN bond AS T3 ON T2.molecule_id = T3.molecule_id WHERE T1.element = 'Ca'\t----- bird -----\ttoxicology",
    "271": "SELECT COUNT(*) AS count FROM connected AS c JOIN atom AS a ON c.atom_id = a.atom_id JOIN atom AS a2 ON c.atom_id2 = a2.atom_id WHERE c.bond_id = 'TR001_1_8' AND (a.element = 'cl' OR a2.element = 'cl') AND (a.element = 'c' OR a2.element = 'c')\t----- bird -----\ttoxicology",
    "272": "SELECT T1.molecule_id FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '#' AND T2.label = '-' AND T2.element = 'c' LIMIT 2;\t----- bird -----\ttoxicology",
    "273": "SELECT (CAST(SUM(CASE WHEN T1.element = 'cl' THEN 1 ELSE 0 END) AS REL) * 100) / COUNT(T1.molecule_id) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+'\t----- bird -----\ttoxicology",
    "274": "SELECT T1.element FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.molecule_id = 'TR001'\t----- bird -----\ttoxicology",
    "275": "SELECT molecule_id FROM bond WHERE bond_type = ' = '\t----- bird -----\ttoxicology",
    "276": "SELECT a.atom_id, c.atom_id2 FROM bond b JOIN connected c ON b.bond_id = c.bond_id JOIN atom a ON c.atom_id = a.atom_id WHERE b.bond_type = '#'\t----- bird -----\ttoxicology",
    "277": "SELECT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_id = 'TR005_16_26' AND T1.element IN ('cl', 'c', 'h', 'o', 's', 'n', 'p', 'na', 'br', 'f', 'i', 'sn', 'pb', 'te', 'ca')\t----- bird -----\ttoxicology",
    "278": "SELECT COUNT(DISTINCT T1.molecule_id) AS NonCarcinogenicSingleBond FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '-' AND T2.label = '-'\t----- bird -----\ttoxicology",
    "279": "SELECT T2.label FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_id = 'TR001_10_11';\t----- bird -----\ttoxicology",
    "280": "SELECT T2.bond_id, CASE WHEN T3.label = '+' THEN 'Carcinogenic' WHEN T3.label = '-' THEN 'Non-carcinogenic' END AS Carcinogenicity FROM connected AS T1 INNER JOIN bond AS T2 ON T1.bond_id = T2.bond_id INNER JOIN molecule AS T3 ON T2.molecule_id = T3.molecule_id WHERE T2.bond_type = '#'\t----- bird -----\ttoxicology",
    "281": "SELECT T2.element, COUNT(T2.element) AS element_count FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+' AND SUBSTR(T1.atom_id, 7, 1) = '4' AND T1.element IN ('cl', 'c', 'h', 'o', 's', 'n', 'p', 'na', 'br', 'f', 'i', 'sn', 'pb', 'te', 'ca') GROUP BY T2.element;\t----- bird -----\ttoxicology",
    "282": "SELECT T2.label, CAST(SUM(CASE WHEN T1.element = 'h' THEN 1 ELSE 0 END) AS REAL) / COUNT(T1.element) AS Hydrogen_Ratio FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'h' AND T1.molecule_id = 'TR006' GROUP BY T2.label\t----- bird -----\ttoxicology",
    "283": "SELECT T1.label, CASE WHEN T1.label = '+' THEN 'Carcinogenic' WHEN T1.label = '-' THEN 'Non-carcinogenic' END AS Carcinogenicity FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.element = 'ca'\t----- bird -----\ttoxicology",
    "284": "SELECT bond_type FROM bond WHERE molecule_id IN ( SELECT molecule_id FROM atom WHERE element = 'te' )\t----- bird -----\ttoxicology",
    "285": "SELECT T1.element FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.bond_id = 'TR001_10_11'\t----- bird -----\ttoxicology",
    "286": "SELECT CAST(SUM(CASE WHEN bond_type = '#' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(DISTINCT molecule_id) FROM bond;\t----- bird -----\ttoxicology",
    "287": "SELECT CAST(SUM(CASE WHEN bond_type = ' = ' THEN 1 ELSE 0 END) AS REAL) / COUNT(bond_id) * 100 FROM bond WHERE molecule_id = 'TR047'\t----- bird -----\ttoxicology",
    "288": "SELECT CASE WHEN T1.label = '+' THEN 'Carcinogenic' ELSE 'Not Carcinogenic' END AS Carcinogenicity FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.atom_id = 'TR001_1';\t----- bird -----\ttoxicology",
    "289": "SELECT CASE WHEN label = '+' THEN 'Yes' ELSE 'No' END AS Is_Carcinogenic FROM molecule WHERE molecule_id = 'TR151';\t----- bird -----\ttoxicology",
    "290": "SELECT T1.element FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = 'TR151' AND T1.element = 'cl'\t----- bird -----\ttoxicology",
    "291": "SELECT COUNT(DISTINCT T1.molecule_id) AS Carcinogenic_compounds FROM molecule AS T1 WHERE T1.label = '+';\t----- bird -----\ttoxicology",
    "292": "SELECT a.atom_id FROM atom a JOIN molecule m ON a.molecule_id = m.molecule_id WHERE m.molecule_id BETWEEN 'TR010' AND 'TR050' AND a.element = 'c'\t----- bird -----\ttoxicology",
    "293": "SELECT COUNT(*) AS num_atoms FROM atom WHERE molecule_id IN (SELECT molecule_id FROM molecule WHERE label = '+')\t----- bird -----\ttoxicology",
    "294": "SELECT T3.bond_id FROM bond AS T3 INNER JOIN molecule AS T4 ON T3.molecule_id = T4.molecule_id WHERE T3.bond_type = ' = ' AND T4.label = '+'\t----- bird -----\ttoxicology",
    "295": "SELECT COUNT(*) FROM atom WHERE molecule_id IN (SELECT molecule_id FROM molecule WHERE element = 'H' AND label = '+')\t----- bird -----\ttoxicology",
    "296": "SELECT molecule_id FROM bond b JOIN connected c ON b.bond_id = c.bond_id JOIN atom a ON c.atom_id = a.atom_id WHERE a.atom_id = 'TR00_1' AND b.bond_type = 'TR00_1_2'\t----- bird -----\ttoxicology",
    "297": "SELECT T1.atom_id FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'c' AND T2.label = '-'\t----- bird -----\ttoxicology",
    "298": "SELECT CAST(SUM(CASE WHEN T1.label = '+' AND T2.element = 'h' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(DISTINCT T1.molecule_id) FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.element = 'h' AND T1.label = '+'\t----- bird -----\ttoxicology",
    "299": "SELECT CASE WHEN label = '+' THEN 'Yes' ELSE 'No' END AS Is_Carcinogenic FROM molecule WHERE molecule_id = 'TR124';\t----- bird -----\ttoxicology",
    "300": "SELECT atom_id FROM atom WHERE molecule_id = 'TR186'\t----- bird -----\ttoxicology",
    "301": "SELECT bond_type FROM bond WHERE bond_id = 'TR007_4_19'\t----- bird -----\ttoxicology",
    "302": "SELECT element FROM atom WHERE molecule_id = (SELECT molecule_id FROM bond WHERE bond_id = 'TR001_2_4')\t----- bird -----\ttoxicology",
    "303": "SELECT COUNT(T1.bond_id) AS double_bonds, T2.label AS carcinogenic FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = ' = ' AND T2.molecule_id = 'TR006'\t----- bird -----\ttoxicology",
    "304": "SELECT T2.label AS Carcinogenic_Molecule, T1.element AS Element FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+' AND T1.element IN ('cl', 'c', 'h', 'o', 's', 'n', 'p', 'na', 'br', 'f', 'i', 'sn', 'pb', 'te', 'ca')\t----- bird -----\ttoxicology",
    "305": "SELECT B.bond_id, A.atom_id, C.atom_id2 FROM bond AS B JOIN connected AS C ON B.bond_id = C.bond_id JOIN atom AS A ON C.atom_id = A.atom_id WHERE B.bond_type = '-'\t----- bird -----\ttoxicology",
    "306": "SELECT m.label, GROUP_CONCAT(DISTINCT a.element) AS elements FROM molecule m JOIN bond b ON m.molecule_id = b.molecule_id JOIN atom a ON m.molecule_id = a.molecule_id WHERE b.bond_type = '#' GROUP BY m.molecule_id, m.label\t----- bird -----\ttoxicology",
    "307": "SELECT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_id = 'TR000_2_3'\t----- bird -----\ttoxicology",
    "308": "SELECT COUNT(*) FROM bond INNER JOIN connected ON bond.molecule_id = connected.bond_id INNER JOIN atom ON connected.atom_id = atom.atom_id WHERE atom.element = 'cl'\t----- bird -----\ttoxicology",
    "309": "SELECT atom.atom_id, COUNT(DISTINCT bond.bond_type) FROM atom JOIN molecule ON atom.molecule_id = molecule.molecule_id JOIN bond ON bond.molecule_id = molecule.molecule_id WHERE molecule.label = 'TR346' GROUP BY atom.atom_id\t----- bird -----\ttoxicology",
    "310": "SELECT COUNT(DISTINCT T1.molecule_id) AS DoubleBondMolecules, COUNT(DISTINCT T1.molecule_id) AS CarcinogenicMolecules FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '=' AND T2.label = '+'\t----- bird -----\ttoxicology",
    "311": "SELECT COUNT(DISTINCT M.molecule_id) FROM molecule M LEFT JOIN atom A ON M.molecule_id = A.molecule_id LEFT JOIN bond B ON M.molecule_id = B.molecule_id LEFT JOIN connected C ON A.atom_id = C.atom_id OR A.atom_id = C.atom_id2 WHERE A.element != 's' OR B.bond_type != '=';\t----- bird -----\ttoxicology",
    "312": "SELECT T2.label FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_id = 'TR001_2_4' AND T2.label = '+';\t----- bird -----\ttoxicology",
    "313": "SELECT COUNT(*) FROM atom WHERE molecule_id = 'TR005'\t----- bird -----\ttoxicology",
    "314": "SELECT COUNT(*) FROM bond WHERE bond_type = '-'\t----- bird -----\ttoxicology",
    "315": "SELECT T1.molecule_id, T1.label FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.element LIKE '%cl%' AND T1.label = '+'\t----- bird -----\ttoxicology",
    "316": "SELECT T1.molecule_id, T2.label FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'c' AND T2.label = '-'\t----- bird -----\ttoxicology",
    "317": "SELECT CAST(SUM(CASE WHEN M1.label = '+' AND A1.element = 'Cl' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(DISTINCT M1.molecule_id) AS percentage FROM molecule AS M1 INNER JOIN atom AS A1 ON M1.molecule_id = A1.molecule_id INNER JOIN connected AS C1 ON A1.atom_id = C1.atom_id OR A1.atom_id = C1.atom_id2\t----- bird -----\ttoxicology",
    "318": "SELECT molecule_id FROM bond WHERE bond_id = 'TR001_1_7'\t----- bird -----\ttoxicology",
    "319": "SELECT COUNT(element) FROM atom WHERE atom_id IN ( SELECT atom_id FROM connected WHERE bond_id = 'TR001_3_4' )\t----- bird -----\ttoxicology",
    "320": "SELECT bond_type FROM bond JOIN connected ON bond.molecule_id = connected.bond_id JOIN atom ON connected.atom_id = atom.atom_id WHERE atom.atom_id = 'TR000_1' AND connected.atom_id2 = 'TR000_2'\t----- bird -----\ttoxicology",
    "321": "SELECT m.label FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id WHERE a.atom_id = 'TR000_2' OR a.atom_id = 'TR000_4'\t----- bird -----\ttoxicology",
    "322": "SELECT T1.element FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.atom_id = 'TR000_1' AND T2.label = 'toxicology';\t----- bird -----\ttoxicology",
    "323": "SELECT CASE WHEN T1.label = '+' THEN 'Carcinogenic' WHEN T1.label = '-' THEN 'Non-carcinogenic' ELSE 'Unknown' END AS Carcinogenic_status FROM molecule AS T1 WHERE T1.molecule_id = 'TR000';\t----- bird -----\ttoxicology",
    "324": "SELECT SUM(CASE WHEN B.bond_type = '-' THEN 1 ELSE 0 END) * 100 / COUNT(A.atom_id) FROM atom A JOIN bond B ON A.molecule_id = B.molecule_id JOIN connected C ON A.atom_id = C.atom_id OR A.atom_id = C.atom_id2\t----- bird -----\ttoxicology",
    "325": "SELECT COUNT(DISTINCT T1.molecule_id) AS Carcinogenic_Nitrogen_Molecules FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'n' AND T2.label = '+'\t----- bird -----\ttoxicology",
    "326": "SELECT m.label FROM molecule AS m INNER JOIN atom AS a ON m.molecule_id = a.molecule_id INNER JOIN bond AS b ON m.molecule_id = b.molecule_id WHERE a.element = 'S' AND b.bond_type = '= ';\t----- bird -----\ttoxicology",
    "327": "SELECT T1.molecule_id, T2.label, COUNT(T1.atom_id) AS atom_count FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '-' GROUP BY T1.molecule_id HAVING COUNT(T1.atom_id) > 5;\t----- bird -----\ttoxicology",
    "328": "SELECT T1.element FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN connected AS T3 ON T1.atom_id = T3.atom_id INNER JOIN connected AS T4 ON T1.atom_id = T4.atom_id2 WHERE T2.bond_type = '=' AND T1.element IN ('cl', 'c', 'h', 'o', 's', 'n', 'p', 'na', 'br', 'f', 'i', 'sn', 'pb', 'te', 'ca') AND T2.molecule_id = 'TR024'\t----- bird -----\ttoxicology",
    "329": "SELECT T2.label FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '+' GROUP BY T1.molecule_id ORDER BY COUNT(T2.atom_id) DESC LIMIT 1\t----- bird -----\ttoxicology",
    "330": "SELECT CAST(SUM(CASE WHEN T1.label = '+' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(DISTINCT T1.molecule_id) FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN bond AS T3 ON T1.molecule_id = T3.molecule_id INNER JOIN connected AS T4 ON T2.atom_id = T4.atom_id WHERE T2.element = 'h' AND T3.bond_type = '#'\t----- bird -----\ttoxicology",
    "331": "SELECT COUNT(*) AS Carcinogenic_molecules FROM molecule WHERE label = '+'\t----- bird -----\ttoxicology",
    "332": "SELECT COUNT(DISTINCT T1.molecule_id) FROM `bond` AS T1 INNER JOIN `molecule` AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '-' AND T2.molecule_id BETWEEN 'TR004' AND 'TR010'\t----- bird -----\ttoxicology",
    "333": "SELECT COUNT(*) FROM atom WHERE molecule_id = 'TR008' AND element = 'c'\t----- bird -----\ttoxicology",
    "334": "SELECT T1.element FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.atom_id = 'TR004_7' AND T2.label = '-' AND T1.element != 'cl'\t----- bird -----\ttoxicology",
    "335": "SELECT COUNT(DISTINCT M.molecule_id) FROM molecule AS M INNER JOIN atom AS A ON M.molecule_id = A.molecule_id INNER JOIN bond AS B ON M.molecule_id = B.molecule_id INNER JOIN connected AS C ON A.atom_id = C.atom_id INNER JOIN atom AS A2 ON C.atom_id2 = A2.atom_id INNER JOIN bond AS B2 ON C.bond_id = B2.bond_id WHERE A.element = 'o' AND B.bond_type = ' = ' AND A2.element = 'o' AND B2.bond_type = ' = ';\t----- bird -----\ttoxicology",
    "336": "SELECT COUNT(DISTINCT T1.molecule_id) AS NonCarcinogenicTripleBonds FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '#' AND T2.label = '-'\t----- bird -----\ttoxicology",
    "337": "SELECT atom.element, bond.bond_type FROM atom JOIN bond ON atom.molecule_id = bond.molecule_id JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.molecule_id = 'TR016'\t----- bird -----\ttoxicology",
    "338": "SELECT atom_id FROM atom JOIN bond ON atom.molecule_id = bond.molecule_id JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.label = 'TR012' AND atom.element = 'c' AND bond.bond_type = ' = '\t----- bird -----\ttoxicology",
    "339": "SELECT T1.atom_id FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+' AND T1.element = 'o'\t----- bird -----\ttoxicology",
    "340": "SELECT * FROM cards WHERE cardKingdomFoilId = cardKingdomId AND cardKingdomId IS NOT NULL\t----- bird -----\tcard_games",
    "341": "SELECT * FROM cards WHERE borderColor = 'borderless' AND cardKingdomFoilId IS NULL AND cardKingdomId IS NULL\t----- bird -----\tcard_games",
    "342": "SELECT name FROM cards WHERE convertedManaCost > faceConvertedManaCost;\t----- bird -----\tcard_games",
    "343": "SELECT cards.name FROM cards INNER JOIN legalities ON cards.uuid = legalities.uuid WHERE cards.frameVersion = '2015' AND cards.edhrecRank < 100;\t----- bird -----\tcard_games",
    "344": "SELECT c.name FROM cards c JOIN legalities l ON c.uuid = l.uuid WHERE c.rarity = 'mythic' AND l.status = 'Banned' AND l.format = 'gladiator'\t----- bird -----\tcard_games",
    "345": "SELECT C.name, L.status FROM cards AS C INNER JOIN legalities AS L ON C.uuid = L.uuid WHERE C.types = 'Artifact' AND C.side IS NULL AND L.format = 'vintage'\t----- bird -----\tcard_games",
    "346": "SELECT T1.id, T1.artist FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE (T1.power = '*' OR T1.power IS NULL) AND T2.format = 'commander' AND T2.status = 'Legal'\t----- bird -----\tcard_games",
    "347": "SELECT T1.asciiName, T2.text, T1.hasContentWarning FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.uuid = T2.uuid WHERE T1.artist = 'Stephen Daniel' AND T1.hasContentWarning = 1;\t----- bird -----\tcard_games",
    "348": "SELECT T1.text FROM rulings AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T2.name = 'Sublime Epiphany' AND T2.number = '74s'\t----- bird -----\tcard_games",
    "349": "SELECT c.name, c.artist, c.isPromo FROM cards c JOIN rulings r ON c.uuid = r.uuid GROUP BY c.name, c.artist, c.isPromo ORDER BY COUNT(r.uuid) DESC LIMIT 1;\t----- bird -----\tcard_games",
    "350": "SELECT T2.language FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.name = 'Annul' AND T1.number = '29'\t----- bird -----\tcard_games",
    "351": "SELECT cards.name FROM cards INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE foreign_data.language = 'Japanese'\t----- bird -----\tcard_games",
    "352": "SELECT CAST(COUNT(T1.id) * 100.0 / (SELECT COUNT(*) FROM cards) AS REAL) FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.language = 'Chinese Simplified'\t----- bird -----\tcard_games",
    "353": "SELECT T1.name AS set_name, T2.totalSetSize AS total_cards_per_set FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.language = 'Italian';\t----- bird -----\tcard_games",
    "354": "SELECT COUNT(DISTINCT T1.type) FROM cards AS T1 WHERE T1.artist = 'Aaron Boyd'\t----- bird -----\tcard_games",
    "355": "SELECT T3.keyword_name FROM cards AS T1 INNER JOIN card_keywords AS T2 ON T1.uuid = T2.uuid INNER JOIN keyword AS T3 ON T2.keyword_id = T3.keyword_id WHERE T1.name = 'Angel of Mercy'\t----- bird -----\tcard_games",
    "356": "SELECT COUNT(*) FROM cards WHERE power = '*'\t----- bird -----\tcard_games",
    "357": "SELECT promoTypes FROM cards WHERE name = 'Duress'\t----- bird -----\tcard_games",
    "358": "SELECT borderColor FROM cards WHERE name = 'Ancestor\\'s Chosen'\t----- bird -----\tcard_games",
    "359": "SELECT type FROM cards WHERE name = 'Ancestor\\'s Chosen'\t----- bird -----\tcard_games",
    "360": "SELECT T2.language FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T1.name = 'Angel of Mercy'\t----- bird -----\tcard_games",
    "361": "SELECT COUNT(c.uuid) FROM legalities l JOIN cards c ON l.uuid = c.uuid WHERE l.status = 'restricted' AND c.isTextless = 0\t----- bird -----\tcard_games",
    "362": "SELECT T1.text FROM rulings AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T2.name = 'Condemn'\t----- bird -----\tcard_games",
    "363": "SELECT COUNT(cards.id) FROM cards JOIN legalities ON cards.uuid = legalities.uuid WHERE legalities.status = 'restricted' AND cards.isStarter = 1\t----- bird -----\tcard_games",
    "364": "SELECT T2.status FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.name = 'Cloudchaser Eagle'\t----- bird -----\tcard_games",
    "365": "SELECT T1.type FROM cards AS T1 WHERE T1.name = 'Benalish Knight';\t----- bird -----\tcard_games",
    "366": "SELECT T2.format FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.name = 'Benalish Knight';\t----- bird -----\tcard_games",
    "367": "SELECT artist FROM cards WHERE asciiName = 'Phyrexian'\t----- bird -----\tcard_games",
    "368": "SELECT CAST(COUNT(CASE WHEN borderColor = 'borderless' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(id) FROM cards;\t----- bird -----\tcard_games",
    "369": "SELECT COUNT(cards.id) FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE foreign_data.language = 'German' AND cards.isReprint = 1\t----- bird -----\tcard_games",
    "370": "SELECT COUNT(*) FROM cards INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE borderColor = 'borderless' AND language = 'Russian'\t----- bird -----\tcard_games",
    "371": "SELECT CAST(SUM(IIF(T1.language = 'French', 1, 0)) AS REAL) * 100 / COUNT(T1.id) FROM foreign_data AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T2.isStorySpotlight = 1;\t----- bird -----\tcard_games",
    "372": "SELECT COUNT(*) FROM cards WHERE toughness = '99'\t----- bird -----\tcard_games",
    "373": "SELECT name FROM cards WHERE artist = 'Aaron Boyd'\t----- bird -----\tcard_games",
    "374": "SELECT COUNT(id) FROM cards WHERE borderColor = 'black' AND availability = 'mtgo'\t----- bird -----\tcard_games",
    "375": "SELECT id FROM cards WHERE convertedManaCost = 0\t----- bird -----\tcard_games",
    "376": "SELECT T1.layout FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.keywords LIKE '%flying%'\t----- bird -----\tcard_games",
    "377": "SELECT COUNT(*) FROM cards WHERE originalType = 'Summon - Angel' AND subtypes != 'Angel'\t----- bird -----\tcard_games",
    "378": "SELECT T1.id FROM cards AS T1 WHERE T1.cardKingdomFoilId IS NOT NULL AND T1.cardKingdomId IS NOT NULL\t----- bird -----\tcard_games",
    "379": "SELECT id FROM cards WHERE duelDeck = 'a'\t----- bird -----\tcard_games",
    "380": "SELECT edhrecRank FROM cards WHERE frameVersion = '2015'\t----- bird -----\tcard_games",
    "381": "SELECT T1.artist FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.language = 'Chinese Simplified'\t----- bird -----\tcard_games",
    "382": "SELECT T1.name FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.availability = 'paper' AND T2.language = 'Japanese'\t----- bird -----\tcard_games",
    "383": "SELECT COUNT(*) FROM cards WHERE borderColor = 'white' AND id IN (SELECT id FROM legalities WHERE status = 'Banned')\t----- bird -----\tcard_games",
    "384": "SELECT cards.uuid, foreign_data.language FROM cards INNER JOIN legalities ON cards.uuid = legalities.uuid INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE legalities.format = 'legacy'\t----- bird -----\tcard_games",
    "385": "SELECT T2.text FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.uuid = T2.uuid WHERE T1.name = 'Beacon of Immortality'\t----- bird -----\tcard_games",
    "386": "SELECT COUNT(*) AS num_cards, T2.status FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.frameVersion = 'future' AND T2.status = 'legal'\t----- bird -----\tcard_games",
    "387": "SELECT name, colors FROM cards WHERE setCode = 'OGW'\t----- bird -----\tcard_games",
    "388": "SELECT cards.name, set_translations.language FROM cards JOIN set_translations ON cards.setCode = set_translations.setCode WHERE cards.setCode = '10E' AND cards.convertedManaCost = 5;\t----- bird -----\tcard_games",
    "389": "SELECT cards.name, rulings.date FROM cards JOIN rulings ON cards.uuid = rulings.uuid WHERE cards.originalType = 'Creature - Elf'\t----- bird -----\tcard_games",
    "390": "SELECT colors, format FROM cards JOIN legalities ON cards.uuid = legalities.uuid WHERE cards.id BETWEEN 1 AND 20;\t----- bird -----\tcard_games",
    "391": "SELECT c.name FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid WHERE c.originalType = 'Artifact' AND c.colors = 'B' AND fd.language <> 'English'\t----- bird -----\tcard_games",
    "392": "SELECT c.name FROM cards c JOIN rulings r ON c.uuid = r.uuid WHERE c.rarity = 'uncommon' ORDER BY r.date ASC LIMIT 3\t----- bird -----\tcard_games",
    "393": "SELECT COUNT(*) FROM cards WHERE artist = 'John Avon' AND hasFoil = 1 AND cardKingdomFoilId IS NOT NULL\t----- bird -----\tcard_games",
    "394": "SELECT COUNT(*) FROM cards WHERE borderColor = 'white' AND cardKingdomFoilId = cardKingdomId AND cardKingdomId IS NOT NULL\t----- bird -----\tcard_games",
    "395": "SELECT COUNT(*) FROM cards WHERE artist = 'UDON' AND availability = 'mtgo' AND hand = -1;\t----- bird -----\tcard_games",
    "396": "SELECT COUNT(id) FROM cards WHERE frameVersion = '1993' AND availability = 'paper' AND hasContentWarning = 1\t----- bird -----\tcard_games",
    "397": "SELECT manaCost FROM cards WHERE layout = 'normal' AND frameVersion = '2003' AND borderColor = 'black' AND availability = 'paper' AND availability = 'mtgo'\t----- bird -----\tcard_games",
    "398": "SELECT SUM(convertedManaCost) FROM cards WHERE artist = \"Rob Alexander\"\t----- bird -----\tcard_games",
    "399": "SELECT T1.subtypes, T1.supertypes FROM cards AS T1 WHERE T1.availability = 'arena'\t----- bird -----\tcard_games",
    "400": "SELECT T1.setCode FROM set_translations AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T1.language = 'Spanish'\t----- bird -----\tcard_games",
    "401": "SELECT CAST(SUM(IIF(hand = '+3', 1, 0)) AS REAL) * 100 / COUNT(id) FROM cards WHERE frameEffects = 'legendary';\t----- bird -----\tcard_games",
    "402": "SELECT CAST((SELECT COUNT(T1.id) FROM cards AS T1 WHERE T1.isStorySpotlight = 1 AND T1.isTextless = 0) AS REAL) * 100 / COUNT(id) AS percentage, T1.id FROM cards AS T1 WHERE T1.isStorySpotlight = 1 GROUP BY T1.id HAVING T1.isTextless = 0;\t----- bird -----\tcard_games",
    "403": "SELECT cards.name, CAST(SUM(CASE WHEN foreign_data.language = 'Spanish' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(cards.id) as percentage FROM cards INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid GROUP BY cards.name;\t----- bird -----\tcard_games",
    "404": "SELECT language FROM set_translations WHERE setCode = (SELECT code FROM sets WHERE baseSetSize = 309)\t----- bird -----\tcard_games",
    "405": "SELECT COUNT(*) FROM set_translations WHERE language = 'Portuguese (Brasil)' AND setCode IN (SELECT code FROM sets WHERE block = 'Commander')\t----- bird -----\tcard_games",
    "406": "SELECT T1.id FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.types = 'Creature' AND T1.subtypes LIKE '%Goblin%' AND T2.status = 'legal'\t----- bird -----\tcard_games",
    "407": "SELECT DISTINCT T1.subtypes FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.language = 'German' AND T1.subtypes IS NOT NULL UNION SELECT DISTINCT T1.supertypes FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.language = 'German' AND T1.supertypes IS NOT NULL;\t----- bird -----\tcard_games",
    "408": "SELECT COUNT(*) FROM cards WHERE power IS NULL AND text LIKE '%triggered ability%'\t----- bird -----\tcard_games",
    "409": "SELECT COUNT(*) FROM cards AS c INNER JOIN legalities AS l ON c.uuid = l.uuid INNER JOIN rulings AS r ON c.uuid = r.uuid WHERE l.format = 'pre-modern' AND r.text = 'This is a triggered mana ability' AND c.side IS NULL\t----- bird -----\tcard_games",
    "410": "SELECT T1.id FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.artist = 'Erica Yang' AND T2.format = 'pauper' AND T1.availability = 'paper'\t----- bird -----\tcard_games",
    "411": "SELECT artist FROM cards WHERE uuid IN (SELECT uuid FROM foreign_data WHERE text = \"Das perfekte Gegenmittel zu einer dichten Formation\")\t----- bird -----\tcard_games",
    "412": "SELECT FD.name FROM cards AS C INNER JOIN foreign_data AS FD ON C.uuid = FD.uuid WHERE C.type LIKE '%Creature%' AND C.layout = 'normal' AND C.borderColor = 'black' AND C.artist = 'Matthew D. Wilson' AND FD.language = 'French'\t----- bird -----\tcard_games",
    "413": "SELECT COUNT(c.id) FROM cards c JOIN rulings r ON c.uuid = r.uuid WHERE c.rarity = 'rare' AND r.date = '2009-01-10'\t----- bird -----\tcard_games",
    "414": "SELECT T2.language FROM sets AS T1 INNER JOIN foreign_data AS T2 ON T1.code = T2.uuid WHERE T1.baseSetSize = 180 AND T1.block = 'Ravnica'\t----- bird -----\tcard_games",
    "415": "SELECT CAST(COUNT(CASE WHEN T1.hasContentWarning = 0 THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T1.id) FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T2.format = 'commander' AND T2.status = 'legal';\t----- bird -----\tcard_games",
    "416": "SELECT CAST(SUM(IIF(T1.language = 'French' AND (T2.power IS NULL OR T2.power = '*'), 1, 0)) AS REAL) * 100 / COUNT(T2.power) FROM foreign_data AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid;\t----- bird -----\tcard_games",
    "417": "SELECT CAST(SUM(CASE WHEN T2.language = 'Japanese' AND T1.type = 'expansion' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM set_translations AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code;\t----- bird -----\tcard_games",
    "418": "SELECT T1.availability FROM cards AS T1 WHERE T1.artist = 'Daren Bader'\t----- bird -----\tcard_games",
    "419": "SELECT COUNT(*) FROM cards WHERE borderColor = 'borderless' AND edhrecRank > 12000;\t----- bird -----\tcard_games",
    "420": "SELECT COUNT(id) FROM cards WHERE isOversized = 1 OR isReprint = 1 OR isPromo = 1\t----- bird -----\tcard_games",
    "421": "SELECT T1.name FROM cards AS T1 INNER JOIN promotional_types AS T2 ON T1.uuid = T2.uuid WHERE (T1.power IS NULL OR T1.power = '*') AND T2.promoTypes = 'arenaleague' ORDER BY T1.name LIMIT 3\t----- bird -----\tcard_games",
    "422": "SELECT language FROM foreign_data WHERE multiverseid = 149934;\t----- bird -----\tcard_games",
    "423": "SELECT T1.cardKingdomFoilId, T1.cardKingdomId FROM cards AS T1 WHERE T1.cardKingdomFoilId IS NOT NULL AND T1.cardKingdomId IS NOT NULL ORDER BY T1.cardKingdomFoilId ASC, T1.cardKingdomId ASC LIMIT 0, 3\t----- bird -----\tcard_games",
    "424": "SELECT CAST(COUNT(CASE WHEN isTextless = 1 AND layout = 'normal' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(isTextless) FROM cards\t----- bird -----\tcard_games",
    "425": "SELECT number FROM cards WHERE side IS NULL AND subtypes LIKE '%Angel%' AND subtypes LIKE '%Wizard%' AND name NOT IN (SELECT name FROM cards WHERE side IS NOT NULL)\t----- bird -----\tcard_games",
    "426": "SELECT name FROM sets WHERE mtgoCode IS NULL OR mtgoCode = '' ORDER BY name ASC LIMIT 3\t----- bird -----\tcard_games",
    "427": "SELECT T2.language FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.name = 'Archenemy' AND T1.code = 'ARC'\t----- bird -----\tcard_games",
    "428": "SELECT sets.name, set_translations.translation FROM sets JOIN set_translations ON sets.code = set_translations.setCode WHERE sets.id = 5;\t----- bird -----\tcard_games",
    "429": "SELECT S.language, S.type FROM sets AS S WHERE S.id = 206;\t----- bird -----\tcard_games",
    "430": "SELECT T1.id, T1.name FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.language = 'Italian' AND T1.block = 'Shadowmoor' ORDER BY T1.name LIMIT 2\t----- bird -----\tcard_games",
    "431": "SELECT T1.id, T1.name FROM sets AS T1 WHERE T1.isForeignOnly = 1 AND T1.isFoilOnly = 1 AND T1.code IN (SELECT T2.setCode FROM set_translations AS T2 WHERE T2.language = 'Japanese')\t----- bird -----\tcard_games",
    "432": "SELECT T2.name FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.language = 'Russian' ORDER BY T1.baseSetSize DESC LIMIT 1\t----- bird -----\tcard_games",
    "433": "SELECT (CAST(COUNT(*) AS REAL) / (SELECT COUNT(*) FROM cards)) * 100 FROM cards INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE foreign_data.language = 'Chinese Simplified' AND cards.isOnlineOnly = 1;\t----- bird -----\tcard_games",
    "434": "SELECT COUNT(T1.code) FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.language = 'Japanese' AND (T1.mtgoCode IS NULL OR T1.mtgoCode = '')\t----- bird -----\tcard_games",
    "435": "SELECT COUNT(id) AS num_cards, id FROM cards WHERE borderColor = 'black'\t----- bird -----\tcard_games",
    "436": "SELECT COUNT(*) AS total_cards_with_extendedart_frame_effect, id FROM cards WHERE frameEffects = 'extendedart'\t----- bird -----\tcard_games",
    "437": "SELECT c.name FROM cards c WHERE c.borderColor = 'black' AND c.isFullArt = 1;\t----- bird -----\tcard_games",
    "438": "SELECT language FROM set_translations WHERE setCode = 174;\t----- bird -----\tcard_games",
    "439": "SELECT name FROM sets WHERE code = 'ALL'\t----- bird -----\tcard_games",
    "440": "SELECT T1.language FROM foreign_data AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T2.name = 'A Pedra Fellwar'\t----- bird -----\tcard_games",
    "441": "SELECT code FROM sets WHERE releaseDate = '2007-07-13'\t----- bird -----\tcard_games",
    "442": "SELECT T1.baseSetSize, T1.code FROM sets AS T1 WHERE T1.block = 'Masques' AND T1.block = 'Mirage';\t----- bird -----\tcard_games",
    "443": "SELECT code FROM sets WHERE type = 'expansion'\t----- bird -----\tcard_games",
    "444": "SELECT foreign_data.name, cards.type FROM foreign_data JOIN cards ON foreign_data.uuid = cards.uuid WHERE cards.watermark = 'Boros'\t----- bird -----\tcard_games",
    "445": "SELECT cards.type, foreign_data.language, foreign_data.flavorText FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE cards.watermark = 'colorpie'\t----- bird -----\tcard_games",
    "446": "SELECT CAST(SUM(IIF(T1.name = 'Abyssal Horror' AND T2.convertedManaCost = 10, 1, 0)) AS REAL) * 100 / COUNT(T2.convertedManaCost) FROM cards AS T2 INNER JOIN sets AS T1 ON T2.setCode = T1.code\t----- bird -----\tcard_games",
    "447": "SELECT T1.code FROM sets AS T1 INNER JOIN cards AS T2 ON T1.code = T2.setCode WHERE T2.type LIKE '%Commander%'\t----- bird -----\tcard_games",
    "448": "SELECT foreign_data.name AS foreign_name, cards.type FROM cards INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE cards.watermark = 'abzan'\t----- bird -----\tcard_games",
    "449": "SELECT language, type FROM cards WHERE watermark = 'Azorius'\t----- bird -----\tcard_games",
    "450": "SELECT COUNT(id) FROM cards WHERE artist = 'Aaron Miller' AND cardKingdomFoilId = cardKingdomId AND cardKingdomId IS NOT NULL\t----- bird -----\tcard_games",
    "451": "SELECT COUNT(id) FROM cards WHERE availability LIKE '%paper%' AND hand LIKE '+%'\t----- bird -----\tcard_games",
    "452": "SELECT name FROM cards WHERE isTextless = 0;\t----- bird -----\tcard_games",
    "453": "SELECT convertedManaCost FROM cards WHERE name = 'Ancestor`s Chosen'\t----- bird -----\tcard_games",
    "454": "SELECT COUNT(*) FROM cards WHERE borderColor = 'white' AND (power = '*' OR power IS NULL)\t----- bird -----\tcard_games",
    "455": "SELECT name FROM cards WHERE isPromo = 1 AND side IS NOT NULL\t----- bird -----\tcard_games",
    "456": "SELECT T1.subtypes, T1.supertypes FROM cards AS T1 WHERE T1.name = 'Molimo, Maro-Sorcerer'\t----- bird -----\tcard_games",
    "457": "SELECT purchaseUrls FROM cards WHERE promoTypes = 'bundle'\t----- bird -----\tcard_games",
    "458": "SELECT COUNT(DISTINCT artist) FROM cards WHERE borderColor = 'black' AND availability LIKE '%arena,mtgo%'\t----- bird -----\tcard_games",
    "459": "SELECT name FROM cards WHERE name IN ('Serra Angel', 'Shrine Keeper') ORDER BY convertedManaCost DESC LIMIT 1;\t----- bird -----\tcard_games",
    "460": "SELECT artist FROM cards WHERE flavorName = 'Battra, Dark Destroyer'\t----- bird -----\tcard_games",
    "461": "SELECT name FROM cards WHERE frameVersion = '2003' ORDER BY convertedManaCost DESC LIMIT 3\t----- bird -----\tcard_games",
    "462": "SELECT T2.translation FROM cards AS T1 INNER JOIN set_translations AS T2 ON T1.setCode = T2.setCode WHERE T1.name = 'Ancestor\\'s Chosen' AND T2.language = 'Italian'\t----- bird -----\tcard_games",
    "463": "SELECT COUNT(*) FROM set_translations WHERE setCode IN (SELECT code FROM sets WHERE id IN (SELECT id FROM cards WHERE name = 'Angel of Mercy'))\t----- bird -----\tcard_games",
    "464": "SELECT cards.name FROM cards INNER JOIN sets ON cards.setCode = sets.code INNER JOIN set_translations ON sets.code = set_translations.setCode WHERE set_translations.translation = 'Hauptset Zehnte Edition'\t----- bird -----\tcard_games",
    "465": "SELECT cards.name FROM cards INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE cards.name = 'Ancestor\\'s Chosen' AND foreign_data.language = 'Korean';\t----- bird -----\tcard_games",
    "466": "SELECT COUNT(*) FROM cards JOIN set_translations ON cards.setCode = set_translations.code WHERE set_translations.translation = 'Hauptset Zehnte Edition' AND cards.artist = 'Adam Rex'\t----- bird -----\tcard_games",
    "467": "SELECT baseSetSize FROM sets WHERE name = (SELECT setCode FROM set_translations WHERE translation = 'Hauptset Zehnte Edition')\t----- bird -----\tcard_games",
    "468": "SELECT translation FROM set_translations WHERE setCode = (SELECT code FROM sets WHERE name = 'Eighth Edition') AND language = 'Simplified Chinese'\t----- bird -----\tcard_games",
    "469": "SELECT S1.name FROM cards AS S1 INNER JOIN sets AS S2 ON S1.setCode = S2.code WHERE S1.name = 'Angel of Mercy' AND S2.mtgoCode IS NOT NULL;\t----- bird -----\tcard_games",
    "470": "SELECT T2.releaseDate FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T1.name = 'Ancestor''s Chosen'\t----- bird -----\tcard_games",
    "471": "SELECT s.type FROM sets s JOIN set_translations st ON s.code = st.setCode WHERE st.translation = 'Hauptset Zehnte Edition'\t----- bird -----\tcard_games",
    "472": "SELECT COUNT(T1.setCode) FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.block = 'Ice Age' AND T2.language = 'Italian'\t----- bird -----\tcard_games",
    "473": "SELECT CASE WHEN sets.isForeignOnly = 1 THEN 'Yes' ELSE 'No' END AS Available_Outside_US FROM cards JOIN sets ON cards.setCode = sets.code WHERE cards.name = 'Adarkar Valkyrie';\t----- bird -----\tcard_games",
    "474": "SELECT COUNT(DISTINCT T1.code) FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.language = 'Italian' AND T2.translation IS NOT NULL AND T1.baseSetSize < 10;\t----- bird -----\tcard_games",
    "475": "SELECT COUNT(*) FROM cards WHERE name = 'Coldsnap' AND borderColor = 'black';\t----- bird -----\tcard_games",
    "476": "SELECT cards.name FROM cards INNER JOIN sets ON cards.setCode = sets.code WHERE sets.name = 'Coldsnap' ORDER BY cards.convertedManaCost DESC LIMIT 1;\t----- bird -----\tcard_games",
    "477": "SELECT artist FROM cards WHERE setCode = 'CSP' AND artist IN ('Jeremy Jarvis', 'Aaron Miller', 'Chippy')\t----- bird -----\tcard_games",
    "478": "SELECT name FROM cards WHERE setCode = (SELECT code FROM sets WHERE name = 'Coldsnap') AND number = '4'\t----- bird -----\tcard_games",
    "479": "SELECT COUNT(T1.id) FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.name = 'Coldsnap' AND T1.convertedManaCost > 5 AND (T1.power = '*' OR T1.power IS NULL)\t----- bird -----\tcard_games",
    "480": "SELECT T2.flavorText FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.name = 'Ancestor''s Chosen' AND T2.language = 'Italian';\t----- bird -----\tcard_games",
    "481": "SELECT T2.language FROM foreign_data AS T2 INNER JOIN cards AS T1 ON T2.uuid = T1.uuid WHERE T1.name = 'Ancestor''s Chosen' AND T2.flavorText IS NOT NULL;\t----- bird -----\tcard_games",
    "482": "SELECT types FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE foreign_data.language = 'German' AND cards.name = 'Ancestor''s Chosen'\t----- bird -----\tcard_games",
    "483": "SELECT T2.text FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.uuid = T2.uuid INNER JOIN sets AS T3 ON T1.setCode = T3.code INNER JOIN set_translations AS T4 ON T3.code = T4.setCode WHERE T3.name = 'Coldsnap' AND T4.language = 'Italian'\t----- bird -----\tcard_games",
    "484": "SELECT T1.name FROM cards AS T1 INNER JOIN `language` AS T2 ON T1.language_id = T2.language_id INNER JOIN sets AS T3 ON T1.setCode = T3.code WHERE T2.`name` = 'Italian' AND T3.name = 'Coldsnap' ORDER BY T1.convertedManaCost DESC LIMIT 1;\t----- bird -----\tcard_games",
    "485": "SELECT r.date FROM rulings AS r INNER JOIN cards AS c ON r.uuid = c.uuid WHERE c.name = 'Reminisce';\t----- bird -----\tcard_games",
    "486": "SELECT (CAST(SUM(CASE WHEN T1.convertedManaCost = 7 THEN 1 ELSE 0 END) AS REAL) / CAST(SUM(T1.convertedManaCost) AS REAL)) * 100 FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.name = 'Coldsnap'\t----- bird -----\tcard_games",
    "487": "SELECT CAST(SUM(CASE WHEN T1.cardKingdomFoilId = T1.cardKingdomId AND T1.cardKingdomId IS NOT NULL THEN 1 ELSE 0 END) AS REAL) * 100 / SUM(CASE WHEN T2.name = 'Coldsnap' THEN 1 ELSE 0 END) FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.name = 'Coldsnap'\t----- bird -----\tcard_games",
    "488": "SELECT T1.code FROM sets AS T1 WHERE T1.releaseDate = '2017-07-14'\t----- bird -----\tcard_games",
    "489": "SELECT keyruneCode FROM sets WHERE code = 'PKHC'\t----- bird -----\tcard_games",
    "490": "SELECT mcmId FROM sets WHERE code = 'SS2'\t----- bird -----\tcard_games",
    "491": "SELECT T1.mcmName FROM sets AS T1 WHERE T1.releaseDate = '2017-06-09'\t----- bird -----\tcard_games",
    "492": "SELECT S.type FROM sets AS S WHERE S.name LIKE '%From the Vault: Lore%'\t----- bird -----\tcard_games",
    "493": "SELECT T2.parentCode FROM sets AS T1 INNER JOIN sets AS T2 ON T1.code = T2.parentCode WHERE T1.name = 'Commander 2014 Oversized'\t----- bird -----\tcard_games",
    "494": "SELECT c.name, r.text, c.hasContentWarning FROM cards AS c INNER JOIN rulings AS r ON c.uuid = r.uuid WHERE c.artist = 'Jim Pavelec' ORDER BY c.name;\t----- bird -----\tcard_games",
    "495": "SELECT sets.releaseDate FROM cards JOIN sets ON cards.setCode = sets.code WHERE cards.name = 'Evacuation'\t----- bird -----\tcard_games",
    "496": "SELECT T1.baseSetSize FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.translation = 'Rinascita di Alara'\t----- bird -----\tcard_games",
    "497": "SELECT T2.type FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.translation = 'Huiti\u00c3\u00a8me \u00c3\u00a9dition'\t----- bird -----\tcard_games",
    "498": "SELECT ST.translation FROM set_translations AS ST INNER JOIN cards AS C ON ST.setCode = C.setCode WHERE C.name = 'Tendo Ice Bridge' AND ST.language = 'French'\t----- bird -----\tcard_games",
    "499": "SELECT COUNT(translation) FROM set_translations WHERE setCode = (SELECT code FROM sets WHERE name = 'Salvat 2011') AND translation IS NOT NULL;\t----- bird -----\tcard_games",
    "500": "SELECT T2.translation FROM cards AS T1 INNER JOIN set_translations AS T2 ON T1.setCode = T2.setCode WHERE T1.name = 'Fellwar Stone' AND T2.language = 'Japanese'\t----- bird -----\tcard_games",
    "501": "SELECT c.name FROM cards c JOIN sets s ON c.setCode = s.code WHERE s.name = 'Journey into Nyx Hero''s Path' ORDER BY c.convertedManaCost DESC LIMIT 1;\t----- bird -----\tcard_games",
    "502": "SELECT T2.releaseDate FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.translation = 'Ola de fr\u00edo'\t----- bird -----\tcard_games",
    "503": "SELECT T1.type FROM sets AS T1 INNER JOIN cards AS T2 ON T1.code = T2.setCode WHERE T2.name = 'Samite Pilgrim'\t----- bird -----\tcard_games",
    "504": "SELECT COUNT(*) FROM cards WHERE setCode = (SELECT code FROM sets WHERE name = 'World Championship Decks 2004') AND convertedManaCost = 3;\t----- bird -----\tcard_games",
    "505": "SELECT T2.translation FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.name = 'Mirrodin' AND T2.language = 'Chinese Simplified'\t----- bird -----\tcard_games",
    "506": "SELECT CAST(SUM(IIF(T1.isNonFoilOnly = 1, 1, 0)) AS REAL) * 100 / COUNT(T1.language) FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.language = 'Japanese'\t----- bird -----\tcard_games",
    "507": "SELECT (SUM(T1.isOnlineOnly = 1) / SUM(T2.language = 'Portuguese (Brazil)')) * 100 FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.language = 'Portuguese (Brazil)'\t----- bird -----\tcard_games",
    "508": "SELECT DISTINCT availability FROM cards WHERE artist = 'Aleksi Briclot' AND isTextless = 1;\t----- bird -----\tcard_games",
    "509": "SELECT id FROM sets WHERE baseSetSize = (SELECT MAX(baseSetSize) FROM sets)\t----- bird -----\tcard_games",
    "510": "SELECT T1.artist FROM cards AS T1 WHERE T1.side IS NULL ORDER BY T1.convertedManaCost DESC LIMIT 1\t----- bird -----\tcard_games",
    "511": "SELECT T1.frameEffects FROM cards AS T1 WHERE T1.cardKingdomFoilId IS NOT NULL AND T1.cardKingdomId IS NOT NULL ORDER BY T1.frameEffects DESC LIMIT 1\t----- bird -----\tcard_games",
    "512": "SELECT COUNT(*) FROM cards WHERE (power IS NULL OR power = '*') AND hasFoil = 0 AND duelDeck = 'A'\t----- bird -----\tcard_games",
    "513": "SELECT id FROM sets WHERE type = 'Commander' AND totalSetSize = (SELECT MAX(totalSetSize) FROM sets WHERE type = 'Commander' AND isPartialPreview = 0)\t----- bird -----\tcard_games",
    "514": "SELECT c.name FROM cards c JOIN legalities l ON c.uuid = l.uuid WHERE l.format = 'duel' ORDER BY c.convertedManaCost DESC LIMIT 10;\t----- bird -----\tcard_games",
    "515": "SELECT MIN(c.originalReleaseDate) AS Oldest_Mythic_Release_Date, l.format AS Legal_Play_Format FROM cards c INNER JOIN legalities l ON c.uuid = l.uuid WHERE c.rarity = 'mythic' AND l.status = 'legal' ORDER BY c.originalReleaseDate ASC LIMIT 1\t----- bird -----\tcard_games",
    "516": "SELECT COUNT(*) FROM cards INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE cards.artist = 'Volkan Baga' AND foreign_data.language = 'French'\t----- bird -----\tcard_games",
    "517": "SELECT COUNT(*) FROM cards WHERE rarity = 'rare' AND types = 'Enchantment' AND name = 'Abundance' AND id IN (SELECT id FROM legalities WHERE format = 'Legal')\t----- bird -----\tcard_games",
    "518": "SELECT T2.format, T1.name FROM legalities AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T1.status = 'banned' GROUP BY T2.format ORDER BY COUNT(T1.status) DESC LIMIT 1\t----- bird -----\tcard_games",
    "519": "SELECT T2.language FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.name = 'Battlebond'\t----- bird -----\tcard_games",
    "520": "SELECT T.artist, L.format FROM cards AS T INNER JOIN legalities AS L ON T.uuid = L.uuid WHERE T.artist = (SELECT T1.artist FROM cards AS T1 GROUP BY T1.artist ORDER BY COUNT(T1.artist) LIMIT 1)\t----- bird -----\tcard_games",
    "521": "SELECT T1.status FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.frameVersion = '1997' AND T1.artist = 'D. Alexander Gregory' AND (T1.hasContentWarning = 1 OR T1.artist = 'Wizards of the Coast') AND T2.format = 'legacy'\t----- bird -----\tcard_games",
    "522": "SELECT T1.name, T2.format FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.edhrecRank = 1 AND T2.status = 'banned'\t----- bird -----\tcard_games",
    "523": "SELECT AVG(T1.id), MAX(COUNT(T2.language)) FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.releaseDate BETWEEN '2012-01-01' AND '2015-12-31'\t----- bird -----\tcard_games",
    "524": "SELECT artist FROM cards WHERE borderColor = 'black' AND availability = 'arena'\t----- bird -----\tcard_games",
    "525": "SELECT cards.uuid FROM legalities JOIN cards ON legalities.uuid = cards.uuid WHERE legalities.format = 'oldschool' AND (legalities.status = 'banned' OR legalities.status = 'restricted')\t----- bird -----\tcard_games",
    "526": "SELECT COUNT(id) FROM cards WHERE artist = 'Matthew D. Wilson' AND availability = 'paper'\t----- bird -----\tcard_games",
    "527": "SELECT text FROM rulings WHERE uuid IN (SELECT uuid FROM cards WHERE artist = 'Kev Walker') ORDER BY date DESC\t----- bird -----\tcard_games",
    "528": "SELECT T1.name, T2.format FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid INNER JOIN sets AS T3 ON T1.setCode = T3.code WHERE T3.name = 'Hour of Devastation' AND T2.status = 'legal';\t----- bird -----\tcard_games",
    "529": "SELECT T1.name FROM sets AS T1 LEFT JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.language NOT LIKE '%Japanese%' AND T2.language = 'Korean'\t----- bird -----\tcard_games",
    "530": "SELECT frameVersion, name FROM cards WHERE artist = 'Allen Williams'; SELECT name FROM cards JOIN legalities ON cards.uuid = legalities.uuid WHERE artist = 'Allen Williams' AND status = 'banned';\t----- bird -----\tcard_games",
    "531": "SELECT CASE WHEN (SELECT Reputation FROM users WHERE DisplayName = 'Harlan') > (SELECT Reputation FROM users WHERE DisplayName = 'Jarrod Dixon') THEN 'Harlan' ELSE 'Jarrod Dixon' END as HigherReputationUser;\t----- bird -----\tcodebase_community",
    "532": "SELECT DisplayName FROM users WHERE strftime('%Y', CreationDate) = '2014'\t----- bird -----\tcodebase_community",
    "533": "SELECT COUNT(*) FROM users WHERE LastAccessDate > '2014-09-01 00:00:00'\t----- bird -----\tcodebase_community",
    "534": "SELECT DisplayName FROM users ORDER BY Views DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "535": "SELECT COUNT(Id) FROM users WHERE UpVotes > 100 AND DownVotes > 1;\t----- bird -----\tcodebase_community",
    "536": "SELECT COUNT(*) FROM users WHERE Views > 10 AND strftime('%Y', CreationDate) > '2013'\t----- bird -----\tcodebase_community",
    "537": "SELECT COUNT(*) FROM posts WHERE OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'csgillespie')\t----- bird -----\tcodebase_community",
    "538": "SELECT Title FROM posts WHERE OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'csgillespie')\t----- bird -----\tcodebase_community",
    "539": "SELECT T1.DisplayName FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T2.Title = 'Eliciting priors from experts'\t----- bird -----\tcodebase_community",
    "540": "SELECT p.Title FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE u.DisplayName = 'csgillespie' ORDER BY p.ViewCount DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "541": "SELECT T1.DisplayName FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T2.FavoriteCount = (SELECT MAX(FavoriteCount) FROM posts)\t----- bird -----\tcodebase_community",
    "542": "SELECT SUM(P.CommentCount) FROM posts AS P INNER JOIN users AS U ON P.OwnerUserId = U.Id WHERE U.DisplayName = 'csgillespie'\t----- bird -----\tcodebase_community",
    "543": "SELECT P.Title, MAX(P.AnswerCount) FROM posts P JOIN users U ON P.OwnerUserId = U.Id WHERE U.DisplayName = 'csgillespie'\t----- bird -----\tcodebase_community",
    "544": "SELECT U.DisplayName FROM posts AS P INNER JOIN users AS U ON P.LastEditorUserId = U.Id WHERE P.Title = 'Examples for teaching: Correlation does not mean causation'\t----- bird -----\tcodebase_community",
    "545": "SELECT COUNT(*) FROM posts WHERE OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'csgillespie') AND ParentId IS NULL\t----- bird -----\tcodebase_community",
    "546": "SELECT T1.OwnerDisplayName FROM posts AS T1 WHERE T1.ClosedDate IS NOT NULL\t----- bird -----\tcodebase_community",
    "547": "SELECT COUNT(T1.Id) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.Age > 65 AND T1.Score >= 20;\t----- bird -----\tcodebase_community",
    "548": "SELECT T2.Location FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T1.Title = 'Eliciting priors from experts'\t----- bird -----\tcodebase_community",
    "549": "SELECT T2.Body FROM posts AS T1 INNER JOIN tags AS T2 ON T1.Id = T2.ExcerptPostId WHERE T2.TagName = \"bayesian\"\t----- bird -----\tcodebase_community",
    "550": "SELECT posts.Body FROM posts JOIN tags ON posts.Id = tags.ExcerptPostId ORDER BY tags.Count DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "551": "SELECT COUNT(*) AS badge_count FROM badges WHERE UserId = (SELECT Id FROM users WHERE DisplayName = 'csgillespie');\t----- bird -----\tcodebase_community",
    "552": "SELECT Name FROM badges WHERE UserId = (SELECT Id FROM users WHERE DisplayName = 'csgillespie')\t----- bird -----\tcodebase_community",
    "553": "SELECT COUNT(Id) FROM badges WHERE UserId = (SELECT Id FROM users WHERE DisplayName = 'csgillespie') AND strftime('%Y', Date) = '2011'\t----- bird -----\tcodebase_community",
    "554": "SELECT DisplayName FROM users WHERE Id = ( SELECT UserId FROM badges GROUP BY UserId ORDER BY COUNT(Id) DESC LIMIT 1 )\t----- bird -----\tcodebase_community",
    "555": "SELECT AVG(P.Score) FROM posts AS P INNER JOIN users AS U ON P.OwnerUserId = U.Id WHERE U.DisplayName = 'csgillespie'\t----- bird -----\tcodebase_community",
    "556": "SELECT AVG(badges) FROM users WHERE Views > 200;\t----- bird -----\tcodebase_community",
    "557": "SELECT CAST(SUM(CASE WHEN T1.Age > 65 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.Id) FROM posts AS T1 WHERE T1.Score > 20\t----- bird -----\tcodebase_community",
    "558": "SELECT COUNT(*) FROM votes WHERE UserId = 58 AND CreationDate LIKE '2010-07-19%'\t----- bird -----\tcodebase_community",
    "559": "SELECT CreationDate FROM votes GROUP BY CreationDate HAVING COUNT(Id) = (SELECT MAX(cnt) FROM (SELECT COUNT(Id) as cnt FROM votes GROUP BY CreationDate) as temp)\t----- bird -----\tcodebase_community",
    "560": "SELECT COUNT(*) FROM badges WHERE Name = 'Revival'\t----- bird -----\tcodebase_community",
    "561": "SELECT p.Title FROM posts p JOIN comments c ON p.Id = c.PostId WHERE c.Score = (SELECT MAX(Score) FROM comments)\t----- bird -----\tcodebase_community",
    "562": "SELECT COUNT(*) FROM comments WHERE PostId = (SELECT Id FROM posts WHERE ViewCount = 1910)\t----- bird -----\tcodebase_community",
    "563": "SELECT COUNT(T1.FavoriteCount) FROM posts AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.PostId WHERE T2.UserId = '3025' AND T2.CreationDate = '2014/4/23 20:29:39.0'\t----- bird -----\tcodebase_community",
    "564": "SELECT T1.Text FROM comments AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T2.ParentId = 107829 AND T2.CommentCount = 1\t----- bird -----\tcodebase_community",
    "565": "SELECT CASE WHEN p.ClosedDate IS NULL THEN 'Post was well-finished' ELSE 'Post was not well-finished' END AS PostStatus FROM posts p JOIN comments c ON p.Id = c.PostId WHERE c.UserId = '23853' AND c.CreationDate = '2013-07-12 09:08:18.0'\t----- bird -----\tcodebase_community",
    "566": "SELECT Reputation FROM users WHERE Id = (SELECT OwnerUserId FROM posts WHERE Id = '65041')\t----- bird -----\tcodebase_community",
    "567": "SELECT COUNT(*) FROM posts WHERE OwnerUserId = (SELECT Id FROM users WHERE DisplayName = \"Tiago Pasqualini\")\t----- bird -----\tcodebase_community",
    "568": "SELECT T1.UserDisplayName FROM votes AS T1 WHERE T1.Id = 6347;\t----- bird -----\tcodebase_community",
    "569": "SELECT COUNT(*) FROM votes INNER JOIN posts ON votes.PostId = posts.Id WHERE posts.Title LIKE '%data visualization%'\t----- bird -----\tcodebase_community",
    "570": "SELECT T1.Name FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.DisplayName = 'DatEpicCoderGuyWhoPrograms'\t----- bird -----\tcodebase_community",
    "571": "SELECT COUNT(DISTINCT post.Id) / COUNT(DISTINCT votes.Id) AS post_to_vote_ratio FROM posts AS post LEFT JOIN votes ON post.OwnerUserId = votes.UserId WHERE post.OwnerUserId = 24;\t----- bird -----\tcodebase_community",
    "572": "SELECT ViewCount FROM posts WHERE Title = 'Integration of Weka and/or RapidMiner into Informatica PowerCenter/Developer'\t----- bird -----\tcodebase_community",
    "573": "SELECT Text FROM comments WHERE Score = 17;\t----- bird -----\tcodebase_community",
    "574": "SELECT DisplayName FROM users WHERE WebsiteUrl = 'http://stackoverflow.com'\t----- bird -----\tcodebase_community",
    "575": "SELECT T1.Name FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.DisplayName = 'SilentGhost'\t----- bird -----\tcodebase_community",
    "576": "SELECT T2.DisplayName FROM comments AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Text = 'thank you user93!'\t----- bird -----\tcodebase_community",
    "577": "SELECT T1.Text FROM comments AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.DisplayName = 'A Lion';\t----- bird -----\tcodebase_community",
    "578": "SELECT T1.DisplayName, T2.Reputation FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T1.Title = 'Understanding what Dassault iSight is doing?'\t----- bird -----\tcodebase_community",
    "579": "SELECT Text FROM comments WHERE PostId = (SELECT Id FROM posts WHERE Title = 'How does gentle boosting differ from AdaBoost?')\t----- bird -----\tcodebase_community",
    "580": "SELECT T1.DisplayName FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T2.Name = 'Necromancer' LIMIT 10;\t----- bird -----\tcodebase_community",
    "581": "SELECT T2.DisplayName FROM posts AS T1 INNER JOIN users AS T2 ON T1.LastEditorUserId = T2.Id WHERE T1.Title = 'Open source tools for visualizing multi-dimensional data'\t----- bird -----\tcodebase_community",
    "582": "SELECT Title FROM posts WHERE LastEditorUserId IN (SELECT Id FROM users WHERE DisplayName = 'Vebjorn Ljosa')\t----- bird -----\tcodebase_community",
    "583": "SELECT SUM(P.Score), U.WebsiteUrl FROM posts AS P INNER JOIN users AS U ON P.LastEditorUserId = U.Id WHERE U.DisplayName = 'Yevgeny'\t----- bird -----\tcodebase_community",
    "584": "SELECT c.Text FROM comments c JOIN postHistory ph ON c.PostId = ph.PostId JOIN posts p ON ph.PostId = p.Id WHERE p.Title = 'Why square the difference instead of taking the absolute value in standard deviation?';\t----- bird -----\tcodebase_community",
    "585": "SELECT SUM(T1.BountyAmount) FROM votes AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T2.Title LIKE '%data%'\t----- bird -----\tcodebase_community",
    "586": "SELECT U.DisplayName FROM users AS U INNER JOIN votes AS V ON U.Id = V.UserId INNER JOIN posts AS P ON V.PostId = P.Id WHERE P.Title LIKE '%variance%' AND V.BountyAmount = 50;\t----- bird -----\tcodebase_community",
    "587": "SELECT AVG(T1.ViewCount), T2.Title, T3.Text, T3.Score FROM posts AS T1 INNER JOIN tags AS T2 ON T1.Tags = T2.TagName LEFT JOIN comments AS T3 ON T1.Id = T3.PostId WHERE T2.TagName = 'humor' GROUP BY T1.Id, T2.Title, T3.Text, T3.Score;\t----- bird -----\tcodebase_community",
    "588": "SELECT COUNT(*) FROM comments WHERE UserId = 13;\t----- bird -----\tcodebase_community",
    "589": "SELECT Id FROM users WHERE Reputation = (SELECT MAX(Reputation) FROM users)\t----- bird -----\tcodebase_community",
    "590": "SELECT T1.Id FROM users AS T1 ORDER BY T1.Views LIMIT 1\t----- bird -----\tcodebase_community",
    "591": "SELECT COUNT(DISTINCT UserId) FROM badges WHERE Name = 'Supporter' AND strftime('%Y', Date) = '2011';\t----- bird -----\tcodebase_community",
    "592": "SELECT COUNT(UserId) FROM badges GROUP BY UserId HAVING COUNT(Name) > 5\t----- bird -----\tcodebase_community",
    "593": "SELECT COUNT(users.Id) FROM users JOIN badges ON users.Id = badges.UserId WHERE users.Location = 'New York' AND (badges.Name = 'Supporter' OR badges.Name = 'Teacher')\t----- bird -----\tcodebase_community",
    "594": "SELECT u.DisplayName, u.Reputation FROM users u JOIN posts p ON u.Id = p.OwnerUserId WHERE p.Id = 1;\t----- bird -----\tcodebase_community",
    "595": "SELECT U.UserId FROM postHistory AS PH INNER JOIN posts AS P ON PH.PostId = P.Id INNER JOIN users AS U ON PH.UserId = U.Id WHERE P.ViewCount >= 1000 GROUP BY U.UserId HAVING COUNT(DISTINCT PH.PostId) = 1;\t----- bird -----\tcodebase_community",
    "596": "SELECT u.Id, u.DisplayName, b.Name FROM users u JOIN comments c ON u.Id = c.UserId JOIN badges b ON u.Id = b.UserId GROUP BY u.Id ORDER BY COUNT(c.Id) DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "597": "SELECT COUNT(T1.Id) FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T1.Location = 'India' AND T2.Name = 'Teacher'\t----- bird -----\tcodebase_community",
    "598": "SELECT ((COUNT(CASE WHEN Year(Date) = 2010 AND Name = 'Students' THEN 1 END) / COUNT(Name) * 100) - (COUNT(CASE WHEN Year(Date) = 2011 AND Name = 'Students' THEN 1 END) / COUNT(Name) * 100)) AS percentage_difference FROM badges;\t----- bird -----\tcodebase_community",
    "599": "SELECT DISTINCT PostHistoryTypeId, COUNT(DISTINCT UserId) FROM postHistory WHERE PostId = 3720 AND Comment IS NOT NULL;\t----- bird -----\tcodebase_community",
    "600": "SELECT T1.* FROM postLinks AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T1.RelatedPostId = 61217 SELECT ViewCount FROM posts WHERE Id = 61217\t----- bird -----\tcodebase_community",
    "601": "SELECT T1.Score, T2.LinkTypeId FROM posts AS T1 INNER JOIN postLinks AS T2 ON T1.Id = T2.PostId WHERE T1.Id = 395\t----- bird -----\tcodebase_community",
    "602": "SELECT T1.Id AS PostID, T1.OwnerUserId AS UserID FROM posts AS T1 WHERE T1.Score > 60;\t----- bird -----\tcodebase_community",
    "603": "SELECT SUM(FavoriteCount) FROM posts WHERE OwnerUserId = 686 AND strftime('%Y', CreationDate) = '2011'\t----- bird -----\tcodebase_community",
    "604": "SELECT SUM(U.UpVotes) / COUNT(U.Id) AS avg_up_votes, SUM(U.Age) / COUNT(U.Id) AS avg_age FROM users AS U INNER JOIN posts AS P ON U.Id = P.OwnerUserId GROUP BY U.Id HAVING COUNT(U.Id) > 10\t----- bird -----\tcodebase_community",
    "605": "SELECT COUNT(DISTINCT UserId) FROM badges WHERE Name = 'Announcer'\t----- bird -----\tcodebase_community",
    "606": "SELECT badges.Name FROM badges WHERE badges.Date = '2010-07-19 19:39:08'\t----- bird -----\tcodebase_community",
    "607": "SELECT COUNT(Id) FROM comments WHERE Score > 60;\t----- bird -----\tcodebase_community",
    "608": "SELECT Text FROM comments WHERE CreationDate = '2010-07-19 19:25:47'\t----- bird -----\tcodebase_community",
    "609": "SELECT COUNT(Id) AS countposts FROM posts WHERE Score = 10\t----- bird -----\tcodebase_community",
    "610": "SELECT Name FROM badges WHERE UserId = (SELECT Id FROM users WHERE Reputation = (SELECT MAX(Reputation) FROM users))\t----- bird -----\tcodebase_community",
    "611": "SELECT u.Reputation FROM users u JOIN badges b ON u.Id = b.UserId WHERE b.Date = '2010-07-19 19:39:08.0'\t----- bird -----\tcodebase_community",
    "612": "SELECT T1.Name FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.DisplayName = 'Pierre'\t----- bird -----\tcodebase_community",
    "613": "SELECT T1.Date FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.Location = 'Rochester, NY'\t----- bird -----\tcodebase_community",
    "614": "SELECT COUNT(DISTINCT UserId) * 100 / (SELECT COUNT(DISTINCT UserId) FROM badges WHERE Name = 'Teacher') FROM badges WHERE Name = 'Teacher';\t----- bird -----\tcodebase_community",
    "615": "SELECT (COUNT(DISTINCT u.Id) * 100) / COUNT(DISTINCT b.UserId) AS Percentage FROM badges b JOIN users u ON b.UserId = u.Id WHERE b.Name = 'Organizer' AND u.Age BETWEEN 13 AND 18;\t----- bird -----\tcodebase_community",
    "616": "SELECT T2.Score FROM posts AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.PostId WHERE T1.CreationDate = '2010-07-19 19:19:56.0'\t----- bird -----\tcodebase_community",
    "617": "SELECT Text FROM comments WHERE PostId = (SELECT Id FROM posts WHERE CreaionDate = '2010-07-19 19:37:33.0')\t----- bird -----\tcodebase_community",
    "618": "SELECT Age FROM users WHERE Location = 'Vienna, Austria'\t----- bird -----\tcodebase_community",
    "619": "SELECT COUNT(DISTINCT T1.UserId) FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Name = 'Supporter' AND T2.Age BETWEEN 19 AND 65\t----- bird -----\tcodebase_community",
    "620": "SELECT COUNT(Views) FROM users WHERE Id IN (SELECT UserId FROM badges WHERE Date = '2010-07-19 19:39:08.0')\t----- bird -----\tcodebase_community",
    "621": "SELECT b.Name FROM badges b JOIN users u ON b.UserId = u.Id WHERE u.Reputation = (SELECT MIN(Reputation) FROM users)\t----- bird -----\tcodebase_community",
    "622": "SELECT b.Name FROM badges b JOIN users u ON b.UserId = u.Id WHERE u.DisplayName = \"Sharpie\";\t----- bird -----\tcodebase_community",
    "623": "SELECT COUNT(*) FROM badges AS b INNER JOIN users AS u ON b.UserId = u.Id WHERE u.Age > 65 AND b.Name = \"Supporter\"\t----- bird -----\tcodebase_community",
    "624": "SELECT DisplayName FROM users WHERE Id = 30;\t----- bird -----\tcodebase_community",
    "625": "SELECT COUNT(*) FROM users WHERE Location = 'New York'\t----- bird -----\tcodebase_community",
    "626": "SELECT COUNT(*) FROM votes WHERE YEAR(CreationDate) = 2010\t----- bird -----\tcodebase_community",
    "627": "SELECT COUNT(Id) FROM users WHERE Age BETWEEN 19 AND 65;\t----- bird -----\tcodebase_community",
    "628": "SELECT DisplayName FROM users WHERE Views = (SELECT MAX(Views) FROM users)\t----- bird -----\tcodebase_community",
    "629": "SELECT COUNT(CASE WHEN strftime('%Y', CreationDate) = '2010' THEN Id END) / COUNT(CASE WHEN strftime('%Y', CreationDate) = '2011' THEN Id END) FROM votes;\t----- bird -----\tcodebase_community",
    "630": "SELECT T2.TagName FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId INNER JOIN postTags AS T3 ON T2.Id = T3.PostId INNER JOIN tags AS T4 ON T3.TagId = T4.Id WHERE T1.DisplayName = 'John Stauffer'\t----- bird -----\tcodebase_community",
    "631": "SELECT COUNT(Id) FROM posts WHERE OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'Daniel Vassallo')\t----- bird -----\tcodebase_community",
    "632": "SELECT COUNT(*) FROM votes INNER JOIN users ON votes.UserId = users.Id WHERE users.DisplayName = 'Harlan'\t----- bird -----\tcodebase_community",
    "633": "SELECT posts.Id FROM posts INNER JOIN users ON posts.OwnerUserId = users.Id WHERE users.DisplayName = 'slashnick' ORDER BY posts.AnswerCount DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "634": "SELECT MAX(SUM(ViewCount)) FROM posts WHERE OwnerDisplayName = 'Harvey Motulsky' OR OwnerDisplayName = 'Noah Snyder'\t----- bird -----\tcodebase_community",
    "635": "SELECT COUNT(*) FROM posts WHERE OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'Matt Parker') AND Id IN (SELECT PostId FROM votes GROUP BY PostId HAVING COUNT(PostId) > 4)\t----- bird -----\tcodebase_community",
    "636": "SELECT COUNT(*) FROM comments WHERE UserId = (SELECT Id FROM users WHERE DisplayName = 'Neil McGuigan') AND Score < 60;\t----- bird -----\tcodebase_community",
    "637": "SELECT T2.TagName FROM posts AS T1 INNER JOIN tags AS T2 ON T1.Tags LIKE '%' || T2.TagName || '%' LEFT JOIN comments AS T3 ON T1.Id = T3.PostId INNER JOIN users AS T4 ON T1.OwnerUserId = T4.Id WHERE T4.DisplayName = 'Mark Meckes' AND T3.Id IS NULL;\t----- bird -----\tcodebase_community",
    "638": "SELECT T2.DisplayName FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Name = 'Organizer'\t----- bird -----\tcodebase_community",
    "639": "SELECT COUNT(T1.Id) * 100 / COUNT(T2.Id) AS percentage FROM posts AS T1 INNER JOIN tags AS T2 ON T1.Tags LIKE '%' || T2.TagName || '%' WHERE T2.TagName = 'r' AND T1.OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'Community')\t----- bird -----\tcodebase_community",
    "640": "SELECT SUM(CASE WHEN u.DisplayName = 'Mornington' THEN p.ViewCount ELSE 0 END) - SUM(CASE WHEN u.DisplayName = 'Amos' THEN p.ViewCount ELSE 0 END) FROM posts p JOIN users u ON p.OwnerUserId = u.Id;\t----- bird -----\tcodebase_community",
    "641": "SELECT COUNT(DISTINCT b.UserId) FROM badges AS b INNER JOIN users AS u ON b.UserId = u.Id WHERE b.Name = 'commentator' AND strftime('%Y', b.Date) = '2014'\t----- bird -----\tcodebase_community",
    "642": "SELECT COUNT(*) FROM posts WHERE CreationDate BETWEEN '2010-07-21 00:00:00' AND '2010-07-21 23:59:59'\t----- bird -----\tcodebase_community",
    "643": "SELECT T1.DisplayName, T1.Age FROM users AS T1 ORDER BY T1.Views DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "644": "SELECT LastEditDate, LastEditorUserId FROM posts WHERE Title = 'Detecting a given face in a database of facial images'\t----- bird -----\tcodebase_community",
    "645": "SELECT COUNT(Id) FROM comments WHERE UserId = 13 AND Score < 60\t----- bird -----\tcodebase_community",
    "646": "SELECT posts.Title, comments.UserDisplayName FROM posts JOIN comments ON posts.Id = comments.PostId WHERE comments.Score > 60\t----- bird -----\tcodebase_community",
    "647": "SELECT b.Name FROM badges b JOIN users u ON b.UserId = u.Id WHERE u.Location = 'North Pole' AND strftime('%Y', b.Date) = '2011'\t----- bird -----\tcodebase_community",
    "648": "SELECT u.DisplayName, u.WebsiteUrl FROM users u JOIN posts p ON u.Id = p.OwnerUserId WHERE p.FavoriteCount > 150;\t----- bird -----\tcodebase_community",
    "649": "SELECT COUNT(*) AS post_history_counts, MAX(CreationDate) AS last_edit_date FROM postHistory WHERE PostId = (SELECT Id FROM posts WHERE Title = \"What is the best introductory Bayesian statistics textbook?\")\t----- bird -----\tcodebase_community",
    "650": "SELECT T2.LastAccessDate, T2.Location FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Name = 'Outliers';\t----- bird -----\tcodebase_community",
    "651": "SELECT T2.Title FROM posts AS T1 INNER JOIN postLinks AS T2 ON T1.Id = T2.RelatedPostId WHERE T1.Title = 'How to tell if something happened in a data set which monitors a value over time'\t----- bird -----\tcodebase_community",
    "652": "SELECT p.Id, b.Name FROM posts p JOIN postHistory ph ON p.Id = ph.PostId JOIN badges b ON b.UserId = ph.UserId WHERE ph.UserDisplayName = 'Samuel' AND YEAR(ph.CreationDate) = 2013 AND YEAR(b.Date) = 2013;\t----- bird -----\tcodebase_community",
    "653": "SELECT OwnerDisplayName FROM posts ORDER BY ViewCount DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "654": "SELECT T1.DisplayName, T1.Location FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId INNER JOIN tags AS T3 ON T2.Id = T3.ExcerptPostId WHERE T3.TagName = 'hypothesis-testing'\t----- bird -----\tcodebase_community",
    "655": "SELECT posts.Title, postLinks.LinkTypeId FROM posts JOIN postLinks ON posts.Id = postLinks.RelatedPostId WHERE posts.Title = 'What are principal component scores?'\t----- bird -----\tcodebase_community",
    "656": "SELECT p.OwnerDisplayName FROM posts p WHERE p.ParentId IS NOT NULL AND p.Score = (SELECT MAX(Score) FROM posts WHERE ParentId = p.ParentId)\t----- bird -----\tcodebase_community",
    "657": "SELECT T1.DisplayName, T1.WebsiteUrl FROM users AS T1 INNER JOIN votes AS T2 ON T1.Id = T2.UserId WHERE T2.VoteTypeId = 8 ORDER BY T2.BountyAmount DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "658": "SELECT Title FROM posts ORDER BY ViewCount DESC LIMIT 5;\t----- bird -----\tcodebase_community",
    "659": "SELECT COUNT(Id) FROM tags WHERE Count BETWEEN 5000 AND 7000;\t----- bird -----\tcodebase_community",
    "660": "SELECT T1.OwnerUserId FROM posts AS T1 WHERE T1.FavoriteCount = (SELECT MAX(FavoriteCount) FROM posts)\t----- bird -----\tcodebase_community",
    "661": "SELECT Age FROM users WHERE Reputation = (SELECT MAX(Reputation) FROM users)\t----- bird -----\tcodebase_community",
    "662": "SELECT COUNT(DISTINCT T1.Id) FROM posts AS T1 INNER JOIN votes AS T2 ON T1.Id = T2.PostId WHERE YEAR(T2.CreationDate) = 2011 AND T2.BountyAmount = 50;\t----- bird -----\tcodebase_community",
    "663": "SELECT Id FROM users WHERE Age = (SELECT MIN(Age) FROM users)\t----- bird -----\tcodebase_community",
    "664": "SELECT p.Score FROM posts p JOIN tags t ON p.Tags LIKE '%' || t.TagName || '%' WHERE t.Count = (SELECT MAX(Count) FROM tags) ORDER BY p.ViewCount DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "665": "SELECT CAST(COUNT(T1.Id) AS REAL) / 12 FROM postLinks AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE YEAR(T1.CreationDate) = 2010 AND T2.AnswerCount <= 2\t----- bird -----\tcodebase_community",
    "666": "SELECT Id FROM posts WHERE Id IN (SELECT PostId FROM votes WHERE UserId = 1465) ORDER BY FavoriteCount DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "667": "SELECT Title FROM posts WHERE Id = (SELECT PostId FROM postLinks WHERE CreationDate = (SELECT MIN(CreationDate) FROM postLinks))\t----- bird -----\tcodebase_community",
    "668": "SELECT T1.DisplayName FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId GROUP BY T1.DisplayName ORDER BY COUNT(T2.Name) DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "669": "SELECT MIN(CreationDate) FROM votes WHERE UserId = (SELECT Id FROM users WHERE DisplayName = 'chl') ORDER BY CreationDate ASC LIMIT 1\t----- bird -----\tcodebase_community",
    "670": "SELECT MIN(posts.CreaionDate) FROM posts JOIN users ON posts.OwnerUserId = users.Id WHERE users.Age = (SELECT MIN(Age) FROM users)\t----- bird -----\tcodebase_community",
    "671": "SELECT T2.DisplayName FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Name = 'Autobiographer' ORDER BY T1.Date ASC LIMIT 1\t----- bird -----\tcodebase_community",
    "672": "SELECT COUNT(T1.Id) FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T1.Location = 'United Kingdom' GROUP BY T1.Id HAVING SUM(T2.FavoriteCount) >= 4\t----- bird -----\tcodebase_community",
    "673": "SELECT AVG(PostId) FROM votes WHERE UserId IN (SELECT Id FROM users WHERE Age = (SELECT MAX(Age) FROM users))\t----- bird -----\tcodebase_community",
    "674": "SELECT DisplayName FROM users WHERE Reputation = (SELECT MAX(Reputation) FROM users)\t----- bird -----\tcodebase_community",
    "675": "SELECT COUNT(Id) FROM users WHERE Reputation > 2000 AND Views > 1000;\t----- bird -----\tcodebase_community",
    "676": "SELECT DisplayName FROM users WHERE Age BETWEEN 19 AND 65\t----- bird -----\tcodebase_community",
    "677": "SELECT COUNT(*) FROM posts WHERE OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'Jay Stevens') AND YEAR(CreationDate) = 2010\t----- bird -----\tcodebase_community",
    "678": "SELECT P.Id, P.Title FROM posts P JOIN users U ON P.OwnerUserId = U.Id WHERE U.DisplayName = 'Harvey Motulsky' ORDER BY P.ViewCount DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "679": "SELECT p.Id, p.Title FROM posts p WHERE p.Score = (SELECT MAX(Score) FROM posts)\t----- bird -----\tcodebase_community",
    "680": "SELECT AVG(P.Score) FROM posts AS P INNER JOIN users AS U ON P.OwnerUserId = U.Id WHERE U.DisplayName = 'Stephen Turner'\t----- bird -----\tcodebase_community",
    "681": "SELECT u.DisplayName FROM users u JOIN posts p ON u.Id = p.OwnerUserId WHERE p.ViewCount > 20000 AND YEAR(p.CreationDate) = 2011;\t----- bird -----\tcodebase_community",
    "682": "SELECT p.Id, u.DisplayName FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE p.FavoriteCount = (SELECT MAX(FavoriteCount) FROM posts WHERE strftime('%Y', CreationDate) = '2010')\t----- bird -----\tcodebase_community",
    "683": "SELECT CAST(COUNT(DISTINCT CASE WHEN EXTRACT(YEAR FROM T1.CreationDate) = 2011 AND T2.Reputation > 1000 THEN T1.Id ELSE NULL END) AS REAL) * 100 / COUNT(DISTINCT T1.Id) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id\t----- bird -----\tcodebase_community",
    "684": "SELECT CAST(COUNT(CASE WHEN Age BETWEEN 13 AND 18 THEN 1 END) AS REAL) * 100 / COUNT(Id) FROM users;\t----- bird -----\tcodebase_community",
    "685": "SELECT SUM(ViewCount) AS TotalViews, u.DisplayName AS LastUser FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE p.Title = 'Computer Game Datasets'\t----- bird -----\tcodebase_community",
    "686": "SELECT COUNT(*) FROM posts WHERE ViewCount > (SELECT AVG(ViewCount) FROM posts)\t----- bird -----\tcodebase_community",
    "687": "SELECT COUNT(*) FROM comments WHERE PostId = (SELECT Id FROM posts WHERE Score = (SELECT MAX(Score) FROM posts))\t----- bird -----\tcodebase_community",
    "688": "SELECT COUNT(*) FROM posts WHERE ViewCount > 35000 AND CommentCount = 0\t----- bird -----\tcodebase_community",
    "689": "SELECT T1.DisplayName, T1.Location FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.LastEditorUserId WHERE T2.Id = 183 ORDER BY T2.LastEditDate DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "690": "SELECT Name FROM badges WHERE UserId = (SELECT Id FROM users WHERE DisplayName = 'Emmett') ORDER BY Date DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "691": "SELECT COUNT(T1.Id) FROM users AS T1 WHERE T1.Age BETWEEN 19 AND 65 AND T1.UpVotes > 5000\t----- bird -----\tcodebase_community",
    "692": "SELECT strftime('%J', b.Date) - strftime('%J', u.CreationDate) AS TimeToBadge FROM badges AS b INNER JOIN users AS u ON b.UserId = u.Id WHERE u.DisplayName = 'Zolomon'\t----- bird -----\tcodebase_community",
    "693": "SELECT COUNT(DISTINCT posts.Id) AS num_posts, COUNT(DISTINCT comments.Id) AS num_comments FROM users LEFT JOIN posts ON users.Id = posts.OwnerUserId LEFT JOIN comments ON users.Id = comments.UserId WHERE CreationDate = (SELECT MAX(CreationDate) FROM users)\t----- bird -----\tcodebase_community",
    "694": "SELECT T2.Text, T2.UserDisplayName FROM posts AS T1 INNER JOIN comments AS T2 ON T2.PostId = T1.Id WHERE T1.Title = 'Analysing wind data with R' ORDER BY T2.CreationDate DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "695": "SELECT COUNT(*) FROM badges WHERE Name = 'Citizen Patrol';\t----- bird -----\tcodebase_community",
    "696": "SELECT COUNT(*) FROM posts JOIN tags ON posts.Id = tags.ExcerptPostId WHERE tags.TagName = 'careers'\t----- bird -----\tcodebase_community",
    "697": "SELECT T1.Reputation, T2.ViewCount FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T1.DisplayName = 'Jarrod Dixon'\t----- bird -----\tcodebase_community",
    "698": "SELECT COUNT(*) FROM comments WHERE PostId = (SELECT Id FROM posts WHERE Title = 'Clustering 1D data') UNION SELECT COUNT(*) FROM posts WHERE ParentId = (SELECT Id FROM posts WHERE Title = 'Clustering 1D data')\t----- bird -----\tcodebase_community",
    "699": "SELECT CreationDate FROM users WHERE DisplayName = 'IrishStat'\t----- bird -----\tcodebase_community",
    "700": "SELECT COUNT(Id) FROM votes WHERE BountyAmount >= 30\t----- bird -----\tcodebase_community",
    "701": "SELECT COUNT(stats_posts.Id) * 100 / (SELECT COUNT(stats_posts.Id) FROM posts AS stats_posts WHERE stats_posts.OwnerUserId = (SELECT Id FROM users ORDER BY Reputation DESC LIMIT 1)) AS percentage FROM posts AS stats_posts WHERE stats_posts.OwnerUserId = (SELECT Id FROM users ORDER BY Reputation DESC LIMIT 1) AND stats_posts.Score >= 50;\t----- bird -----\tcodebase_community",
    "702": "SELECT COUNT(Id) FROM posts WHERE Score < 20\t----- bird -----\tcodebase_community",
    "703": "SELECT COUNT(Id) FROM tags WHERE Id < 15 AND Count <= 20\t----- bird -----\tcodebase_community",
    "704": "SELECT ExcerptPostId, WikiPostId FROM tags WHERE TagName = 'sample'\t----- bird -----\tcodebase_community",
    "705": "SELECT U.Reputation, U.UpVotes FROM users U INNER JOIN comments C ON U.Id = C.UserId WHERE C.Text = 'fine, you win :)'\t----- bird -----\tcodebase_community",
    "706": "SELECT T2.Text FROM comments AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T2.Title = 'How can I adapt ANOVA for binary data?'\t----- bird -----\tcodebase_community",
    "707": "SELECT T1.Text FROM comments AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T2.ViewCount BETWEEN 100 AND 150 ORDER BY T1.Score DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "708": "SELECT c.CreationDate, u.Age FROM comments c JOIN users u ON c.UserId = u.Id WHERE c.Text LIKE '%http%'\t----- bird -----\tcodebase_community",
    "709": "SELECT COUNT(DISTINCT c.PostId) FROM comments c JOIN posts p ON c.PostId = p.Id WHERE c.Score = 0 AND p.ViewCount < 5;\t----- bird -----\tcodebase_community",
    "710": "SELECT COUNT(*) FROM comments WHERE Score = 0 AND PostId IN (SELECT Id FROM posts WHERE CommentCount = 1)\t----- bird -----\tcodebase_community",
    "711": "SELECT COUNT(DISTINCT u.Id) FROM comments c JOIN users u ON c.UserId = u.Id WHERE c.Score = 0 AND u.Age = 40\t----- bird -----\tcodebase_community",
    "712": "SELECT posts.Id, comments.Text FROM posts JOIN comments ON posts.Id = comments.PostId WHERE posts.Title = 'Group differences on a five point Likert item'\t----- bird -----\tcodebase_community",
    "713": "SELECT U.UpVotes FROM users U INNER JOIN comments C ON U.Id = C.UserId WHERE C.Text = 'R is also lazy evaluated.';\t----- bird -----\tcodebase_community",
    "714": "SELECT Text FROM comments WHERE UserId = (SELECT Id FROM users WHERE DisplayName = 'Harvey Motulsky')\t----- bird -----\tcodebase_community",
    "715": "SELECT T1.UserDisplayName FROM comments AS T1 LEFT JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Score BETWEEN 1 AND 5 AND T2.DownVotes = 0;\t----- bird -----\tcodebase_community",
    "716": "SELECT CAST((SELECT COUNT(UserId) FROM comments WHERE UpVotes = 0 AND Score BETWEEN 5 AND 10) AS REAL) * 100 / (SELECT COUNT(UserId) FROM comments WHERE Score BETWEEN 5 AND 10) as percentage;\t----- bird -----\tcodebase_community",
    "717": "SELECT T2.power_name FROM superhero AS T1 INNER JOIN hero_power AS T3 ON T1.id = T3.hero_id INNER JOIN superpower AS T2 ON T3.power_id = T2.id WHERE T1.superhero_name = '3-D Man'\t----- bird -----\tsuperhero",
    "718": "SELECT COUNT(*) FROM superhero AS s INNER JOIN hero_power AS hp ON s.id = hp.hero_id INNER JOIN superpower AS sp ON hp.power_id = sp.id WHERE sp.power_name = 'Super Strength';\t----- bird -----\tsuperhero",
    "719": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id WHERE T2.power_id = (SELECT id FROM superpower WHERE power_name = 'Super Strength') AND T1.height_cm > 200;\t----- bird -----\tsuperhero",
    "720": "SELECT full_name FROM superhero JOIN hero_power ON superhero.id = hero_power.hero_id GROUP BY full_name HAVING COUNT(full_name) > 15;\t----- bird -----\tsuperhero",
    "721": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T2.colour = 'Blue'\t----- bird -----\tsuperhero",
    "722": "SELECT T2.colour FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.skin_colour_id = T2.id WHERE T1.superhero_name = 'Apocalypse'\t----- bird -----\tsuperhero",
    "723": "SELECT COUNT(T1.superhero_name) FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id INNER JOIN hero_power AS T3 ON T1.id = T3.hero_id INNER JOIN superpower AS T4 ON T3.power_id = T4.id WHERE T2.colour = 'Blue' AND T4.power_name = 'Agility'\t----- bird -----\tsuperhero",
    "724": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id INNER JOIN colour AS T3 ON T1.hair_colour_id = T3.id INNER JOIN hero_power AS T4 ON T1.id = T4.hero_id INNER JOIN superpower AS T5 ON T4.power_id = T5.id WHERE T2.colour = 'Blue' AND T3.colour = 'Blond' AND T5.power_name = 'Agility'\t----- bird -----\tsuperhero",
    "725": "SELECT COUNT(*) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'Marvel Comics'\t----- bird -----\tsuperhero",
    "726": "SELECT T1.full_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'Marvel Comics' ORDER BY T1.height_cm DESC LIMIT 1\t----- bird -----\tsuperhero",
    "727": "SELECT T2.publisher_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.superhero_name = 'Sauron';\t----- bird -----\tsuperhero",
    "728": "SELECT COUNT(*) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id INNER JOIN colour AS T3 ON T1.eye_colour_id = T3.id WHERE T2.publisher_name = 'Marvel Comics' AND T3.colour = 'Blue'\t----- bird -----\tsuperhero",
    "729": "SELECT AVG(height_cm) FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics');\t----- bird -----\tsuperhero",
    "730": "SELECT COUNT(DISTINCT CASE WHEN P.publisher_name = 'Marvel Comics' AND SP.power_name = 'Super Strength' THEN S.id ELSE NULL END) * 100 / COUNT(DISTINCT S.id) AS percentage FROM superhero AS S INNER JOIN publisher AS P ON S.publisher_id = P.id INNER JOIN hero_power AS HP ON S.id = HP.hero_id INNER JOIN superpower AS SP ON HP.power_id = SP.id;\t----- bird -----\tsuperhero",
    "731": "SELECT COUNT(*) FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'DC Comics')\t----- bird -----\tsuperhero",
    "732": "SELECT P.publisher_name FROM superhero AS S INNER JOIN hero_attribute AS HA ON S.id = HA.hero_id INNER JOIN attribute AS A ON HA.attribute_id = A.id INNER JOIN publisher AS P ON S.publisher_id = P.id WHERE A.attribute_name = 'Speed' ORDER BY HA.attribute_value LIMIT 1;\t----- bird -----\tsuperhero",
    "733": "SELECT COUNT(*) FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id INNER JOIN publisher AS T3 ON T1.publisher_id = T3.id WHERE T2.colour = 'Gold' AND T3.publisher_name = 'Marvel Comics'\t----- bird -----\tsuperhero",
    "734": "SELECT T2.publisher_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.superhero_name = 'Blue Beetle II'\t----- bird -----\tsuperhero",
    "735": "SELECT COUNT(*) FROM superhero INNER JOIN colour ON superhero.hair_colour_id = colour.id WHERE colour.colour = 'Blond'\t----- bird -----\tsuperhero",
    "736": "SELECT s.superhero_name FROM superhero s JOIN hero_attribute ha ON s.id = ha.hero_id JOIN attribute a ON ha.attribute_id = a.id WHERE a.attribute_name = 'Intelligence' ORDER BY ha.attribute_value LIMIT 1;\t----- bird -----\tsuperhero",
    "737": "SELECT T2.race FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T1.superhero_name = 'Copycat'\t----- bird -----\tsuperhero",
    "738": "SELECT COUNT(DISTINCT hero_id) FROM hero_attribute JOIN attribute ON hero_attribute.attribute_id = attribute.id WHERE attribute_name = 'Durability' AND attribute_value < 50\t----- bird -----\tsuperhero",
    "739": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T3.power_name = 'Death Touch'\t----- bird -----\tsuperhero",
    "740": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id INNER JOIN hero_attribute AS T3 ON T1.id = T3.hero_id INNER JOIN attribute AS T4 ON T3.attribute_id = T4.id WHERE T2.gender = 'Female' AND T4.attribute_name = 'Strength' AND T3.attribute_value = 100\t----- bird -----\tsuperhero",
    "741": "SELECT s.superhero_name FROM superhero s JOIN hero_power hp ON s.id = hp.hero_id GROUP BY s.superhero_name ORDER BY COUNT(hp.power_id) DESC LIMIT 1;\t----- bird -----\tsuperhero",
    "742": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T2.race = 'Vampire'\t----- bird -----\tsuperhero",
    "743": "SELECT COUNT(DISTINCT CASE WHEN A.alignment = 'Bad' THEN A.id ELSE NULL END) * 100 / COUNT(DISTINCT A.id) FROM superhero AS A INNER JOIN publisher AS P ON A.publisher_id = P.id INNER JOIN alignment AS AL ON A.alignment_id = AL.id WHERE AL.alignment = 'Bad' AND P.publisher_name = 'Marvel Comics'\t----- bird -----\tsuperhero",
    "744": "SELECT COUNT(CASE WHEN T2.publisher_name = 'Marvel Comics' THEN T1.id ELSE NULL END) - COUNT(CASE WHEN T2.publisher_name = 'DC Comics' THEN T1.id ELSE NULL END) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id\t----- bird -----\tsuperhero",
    "745": "SELECT id FROM publisher WHERE publisher_name = 'Star Trek';\t----- bird -----\tsuperhero",
    "746": "SELECT AVG(attribute_value) FROM hero_attribute\t----- bird -----\tsuperhero",
    "747": "SELECT COUNT(*) FROM superhero WHERE full_name IS NULL;\t----- bird -----\tsuperhero",
    "748": "SELECT c.colour FROM superhero s JOIN colour c ON s.eye_colour_id = c.id WHERE s.id = 75;\t----- bird -----\tsuperhero",
    "749": "SELECT T2.power_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id WHERE T1.superhero_name = 'Deathlok'\t----- bird -----\tsuperhero",
    "750": "SELECT AVG(weight_kg) FROM superhero WHERE gender_id = 2;\t----- bird -----\tsuperhero",
    "751": "SELECT T1.power_name FROM superpower AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.power_id INNER JOIN superhero AS T3 ON T2.hero_id = T3.id INNER JOIN gender AS T4 ON T3.gender_id = T4.id WHERE T4.gender = 'Male' LIMIT 5;\t----- bird -----\tsuperhero",
    "752": "SELECT superhero_name FROM superhero WHERE race_id = (SELECT id FROM race WHERE race = 'Alien')\t----- bird -----\tsuperhero",
    "753": "SELECT T1.superhero_name FROM superhero AS T1 LEFT JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.height_cm BETWEEN 170 AND 190 AND T2.id IS NULL\t----- bird -----\tsuperhero",
    "754": "SELECT T2.power_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T1.id = 56;\t----- bird -----\tsuperhero",
    "755": "SELECT T1.full_name FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T2.race = 'Demi-God' LIMIT 5\t----- bird -----\tsuperhero",
    "756": "SELECT COUNT(*) FROM superhero WHERE alignment_id = (SELECT id FROM alignment WHERE alignment = 'Bad')\t----- bird -----\tsuperhero",
    "757": "SELECT T2.race FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T1.weight_kg = 169\t----- bird -----\tsuperhero",
    "758": "SELECT c.colour FROM superhero s JOIN colour c ON s.hair_colour_id = c.id WHERE s.height_cm = 185 AND s.race_id = (SELECT id FROM race WHERE race = 'human');\t----- bird -----\tsuperhero",
    "759": "SELECT T3.colour FROM superhero AS T1 INNER JOIN colour AS T3 ON T1.eye_colour_id = T3.id WHERE T1.weight_kg = (SELECT MAX(weight_kg) FROM superhero)\t----- bird -----\tsuperhero",
    "760": "SELECT CAST(COUNT(CASE WHEN T1.publisher_id = 13 THEN T2.id ELSE NULL END) AS REAL) * 100 / COUNT(T2.id) FROM superhero AS T2 INNER JOIN publisher AS T1 ON T2.publisher_id = T1.id WHERE T2.height_cm BETWEEN 150 AND 180;\t----- bird -----\tsuperhero",
    "761": "SELECT T1.full_name FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id WHERE T2.gender = 'M' AND T1.weight_kg > (SELECT AVG(weight_kg) FROM superhero) * 0.79;\t----- bird -----\tsuperhero",
    "762": "SELECT T2.power_name FROM superhero AS T1 INNER JOIN hero_power AS T3 ON T1.id = T3.hero_id INNER JOIN superpower AS T2 ON T3.power_id = T2.id GROUP BY T2.power_name ORDER BY COUNT(T2.power_name) DESC LIMIT 1\t----- bird -----\tsuperhero",
    "763": "SELECT T2.attribute_value FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id WHERE T1.superhero_name = 'Abomination'\t----- bird -----\tsuperhero",
    "764": "SELECT SP.power_name FROM superpower AS SP INNER JOIN hero_power AS HP ON SP.id = HP.power_id WHERE HP.hero_id = 1;\t----- bird -----\tsuperhero",
    "765": "SELECT COUNT(DISTINCT hero_id) FROM hero_power JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'stealth'\t----- bird -----\tsuperhero",
    "766": "SELECT s.superhero_name, s.full_name FROM superhero s JOIN hero_attribute ha ON s.id = ha.hero_id JOIN attribute a ON ha.attribute_id = a.id WHERE a.attribute_name = 'strength' ORDER BY ha.attribute_value DESC LIMIT 1;\t----- bird -----\tsuperhero",
    "767": "SELECT CAST(COUNT(superhero.id) AS REAL) / SUM(CASE WHEN skin_colour_id = 1 THEN 1 ELSE 0 END) FROM superhero;\t----- bird -----\tsuperhero",
    "768": "SELECT COUNT(*) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'Dark Horse Comics'\t----- bird -----\tsuperhero",
    "769": "SELECT S.superhero_name FROM superhero AS S INNER JOIN publisher AS P ON S.publisher_id = P.id INNER JOIN hero_attribute AS HA ON S.id = HA.hero_id INNER JOIN attribute AS A ON HA.attribute_id = A.id WHERE A.attribute_name = 'durability' AND P.publisher_name = 'Dark Horse Comics' GROUP BY S.id, S.superhero_name ORDER BY MAX(HA.attribute_value) DESC LIMIT 1\t----- bird -----\tsuperhero",
    "770": "SELECT T2.colour FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.full_name = 'Abraham Sapien'\t----- bird -----\tsuperhero",
    "771": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T3.power_name = 'Flight'\t----- bird -----\tsuperhero",
    "772": "SELECT C.colour AS eye_colour, D.colour AS hair_colour, E.colour AS skin_colour FROM superhero AS A INNER JOIN gender AS B ON A.gender_id = B.id INNER JOIN colour AS C ON A.eye_colour_id = C.id INNER JOIN colour AS D ON A.hair_colour_id = D.id INNER JOIN colour AS E ON A.skin_colour_id = E.id INNER JOIN publisher AS F ON A.publisher_id = F.id WHERE B.gender = 'Female' AND F.publisher_name = 'Dark Horse Comics'\t----- bird -----\tsuperhero",
    "773": "SELECT T1.superhero_name, T2.publisher_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.hair_colour_id = T1.skin_colour_id AND T1.hair_colour_id = T1.eye_colour_id\t----- bird -----\tsuperhero",
    "774": "SELECT T1.race FROM superhero AS T1 WHERE T1.superhero_name = 'A-Bomb'\t----- bird -----\tsuperhero",
    "775": "SELECT CAST(COUNT(CASE WHEN c.colour = 'Blue' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(*) FROM superhero s JOIN colour c ON s.eye_colour_id = c.id JOIN gender g ON s.gender_id = g.id WHERE c.colour = 'Blue' AND g.gender = 'Female'\t----- bird -----\tsuperhero",
    "776": "SELECT superhero_name, race FROM superhero WHERE full_name = 'Charles Chandler'\t----- bird -----\tsuperhero",
    "777": "SELECT T2.gender FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id WHERE T1.superhero_name = 'Agent 13'\t----- bird -----\tsuperhero",
    "778": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T3.power_name = 'Adaptation'\t----- bird -----\tsuperhero",
    "779": "SELECT COUNT(T2.power_id) FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id WHERE T1.superhero_name = 'Amazo'\t----- bird -----\tsuperhero",
    "780": "SELECT T2.power_name FROM superhero AS T1 INNER JOIN hero_power AS T3 ON T1.id = T3.hero_id INNER JOIN superpower AS T2 ON T3.power_id = T2.id WHERE T1.full_name = 'Hunter Zolomon'\t----- bird -----\tsuperhero",
    "781": "SELECT height_cm FROM superhero JOIN colour ON superhero.eye_colour_id = colour.id WHERE colour.colour = 'Amber'\t----- bird -----\tsuperhero",
    "782": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id INNER JOIN colour AS T3 ON T1.hair_colour_id = T3.id WHERE T2.colour = 'Black' AND T3.colour = 'Black'\t----- bird -----\tsuperhero",
    "783": "SELECT T1.colour FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.skin_colour_id = (SELECT id FROM colour WHERE colour = 'Gold')\t----- bird -----\tsuperhero",
    "784": "SELECT T1.full_name FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T2.race = 'Vampire'\t----- bird -----\tsuperhero",
    "785": "SELECT superhero_name FROM superhero WHERE alignment_id = (SELECT id FROM alignment WHERE alignment = 'Neutral')\t----- bird -----\tsuperhero",
    "786": "SELECT COUNT(hero_id) FROM hero_attribute WHERE attribute_id = (SELECT id FROM attribute WHERE attribute_name = 'Strength') AND attribute_value = (SELECT MAX(attribute_value) FROM hero_attribute WHERE attribute_id = (SELECT id FROM attribute WHERE attribute_name = 'Strength'))\t----- bird -----\tsuperhero",
    "787": "SELECT T1.race, T2.alignment FROM superhero AS T1 INNER JOIN alignment AS T2 ON T1.alignment_id = T2.id WHERE T1.superhero_name = 'Cameron Hicks'\t----- bird -----\tsuperhero",
    "788": "SELECT CAST(COUNT(CASE WHEN gender.gender = 'Female' AND publisher.publisher_name = 'Marvel Comics' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(CASE WHEN publisher.publisher_name = 'Marvel Comics' THEN 1 ELSE NULL END) FROM superhero JOIN gender ON superhero.gender_id = gender.id JOIN publisher ON superhero.publisher_id = publisher.id;\t----- bird -----\tsuperhero",
    "789": "SELECT AVG(weight_kg) FROM superhero WHERE race_id = (SELECT id FROM race WHERE race = 'Alien')\t----- bird -----\tsuperhero",
    "790": "SELECT SUM(CASE WHEN T1.superhero_name = 'Emil Blonsky' THEN T1.weight_kg ELSE 0 END) - SUM(CASE WHEN T1.superhero_name = 'Charles Chandler' THEN T1.weight_kg ELSE 0 END) FROM superhero AS T1\t----- bird -----\tsuperhero",
    "791": "SELECT superhero.superhero_name, AVG(superhero.height_cm) FROM superhero GROUP BY superhero.superhero_name;\t----- bird -----\tsuperhero",
    "792": "SELECT T2.power_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id WHERE T1.superhero_name = 'Abomination'\t----- bird -----\tsuperhero",
    "793": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id WHERE T1.race_id = 21 AND T2.id = 1\t----- bird -----\tsuperhero",
    "794": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN attribute AS T3 ON T2.attribute_id = T3.id WHERE T3.attribute_name = 'Speed' ORDER BY T2.attribute_value DESC LIMIT 1\t----- bird -----\tsuperhero",
    "795": "SELECT COUNT(*) FROM superhero WHERE alignment_id = 3;\t----- bird -----\tsuperhero",
    "796": "SELECT T2.attribute_name, T1.attribute_value FROM hero_attribute AS T1 INNER JOIN attribute AS T2 ON T1.attribute_id = T2.id INNER JOIN superhero AS T3 ON T1.hero_id = T3.id WHERE T3.superhero_name = '3-D Man'\t----- bird -----\tsuperhero",
    "797": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id INNER JOIN colour AS T3 ON T1.hair_colour_id = T3.id WHERE T2.colour = 'blue' AND T3.colour = 'brown'\t----- bird -----\tsuperhero",
    "798": "SELECT P.publisher_name FROM superhero AS S INNER JOIN publisher AS P ON S.publisher_id = P.id WHERE S.superhero_name IN ('Hawkman', 'Karate Kid', 'Speedy')\t----- bird -----\tsuperhero",
    "799": "SELECT COUNT(*) FROM superhero WHERE publisher_id IS NULL OR publisher_id = 1\t----- bird -----\tsuperhero",
    "800": "SELECT CAST(COUNT(DISTINCT T1.superhero_name) AS REAL) * 100 / COUNT(DISTINCT T2.superhero_name) FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T2.colour = 'blue'\t----- bird -----\tsuperhero",
    "801": "SELECT CAST(COUNT(CASE WHEN gender_id = 2 THEN id ELSE NULL END) AS REAL) / COUNT(CASE WHEN gender_id = 1 THEN id ELSE NULL END) FROM superhero\t----- bird -----\tsuperhero",
    "802": "SELECT T1.superhero_name FROM superhero AS T1 ORDER BY T1.height_cm DESC LIMIT 1\t----- bird -----\tsuperhero",
    "803": "SELECT id FROM superpower WHERE power_name = 'cryokinesis'\t----- bird -----\tsuperhero",
    "804": "SELECT superhero_name FROM superhero WHERE id = 294;\t----- bird -----\tsuperhero",
    "805": "SELECT T1.full_name FROM superhero AS T1 WHERE T1.weight_kg = 0 OR T1.weight_kg IS NULL\t----- bird -----\tsuperhero",
    "806": "SELECT T3.colour FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.full_name = 'Karen Beecher-Duncan'\t----- bird -----\tsuperhero",
    "807": "SELECT T2.power_name FROM superhero AS T1 INNER JOIN hero_power AS T3 ON T1.id = T3.hero_id INNER JOIN superpower AS T2 ON T3.power_id = T2.id WHERE T1.full_name = 'Helen Parr'\t----- bird -----\tsuperhero",
    "808": "SELECT race.race FROM superhero INNER JOIN race ON superhero.race_id = race.id WHERE superhero.weight_kg = 108 AND superhero.height_cm = 188\t----- bird -----\tsuperhero",
    "809": "SELECT publisher.publisher_name FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id WHERE superhero.id = 38\t----- bird -----\tsuperhero",
    "810": "SELECT race.race FROM superhero JOIN hero_attribute ON superhero.id = hero_attribute.hero_id JOIN race ON superhero.race_id = race.id WHERE hero_attribute.attribute_value = (SELECT MAX(attribute_value) FROM hero_attribute)\t----- bird -----\tsuperhero",
    "811": "SELECT T1.alignment, T3.power_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T1.superhero_name = 'Atom IV'\t----- bird -----\tsuperhero",
    "812": "SELECT T1.full_name FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T2.colour = 'Blue'\t----- bird -----\tsuperhero",
    "813": "SELECT AVG(T1.attribute_value) FROM hero_attribute AS T1 INNER JOIN superhero AS T2 ON T1.hero_id = T2.id WHERE T2.alignment_id = 3;\t----- bird -----\tsuperhero",
    "814": "SELECT C.colour FROM superhero AS S INNER JOIN colour AS C ON S.skin_colour_id = C.id INNER JOIN hero_attribute AS HA ON S.id = HA.hero_id WHERE HA.attribute_value = 100;\t----- bird -----\tsuperhero",
    "815": "SELECT COUNT(*) FROM superhero WHERE alignment_id = 1 AND gender_id = 2;\t----- bird -----\tsuperhero",
    "816": "SELECT superhero.superhero_name FROM superhero JOIN hero_attribute ON superhero.id = hero_attribute.hero_id WHERE hero_attribute.attribute_value BETWEEN 75 AND 80;\t----- bird -----\tsuperhero",
    "817": "SELECT T1.race FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.hair_colour_id = T2.id INNER JOIN gender AS T3 ON T1.gender_id = T3.id WHERE T2.colour = 'blue' AND T3.gender = 'male'\t----- bird -----\tsuperhero",
    "818": "SELECT CAST(SUM(T3.gender_id = 2) AS REAL) * 100 / COUNT(T1.id) FROM superhero T1 INNER JOIN alignment T2 ON T1.alignment_id = T2.id INNER JOIN gender T3 ON T1.gender_id = T3.id WHERE T2.id = 2\t----- bird -----\tsuperhero",
    "819": "SELECT SUM(CASE WHEN T1.eye_colour_id = 7 THEN 1 ELSE 0 END) - SUM(CASE WHEN T1.eye_colour_id = 1 THEN 1 ELSE 0 END) FROM superhero AS T1 WHERE T1.weight_kg = 0 OR T1.weight_kg IS NULL;\t----- bird -----\tsuperhero",
    "820": "SELECT HA.attribute_value FROM superhero AS S INNER JOIN hero_attribute AS HA ON S.id = HA.hero_id INNER JOIN attribute AS A ON HA.attribute_id = A.id WHERE S.superhero_name = 'Hulk' AND A.attribute_name = 'Strength'\t----- bird -----\tsuperhero",
    "821": "SELECT T2.power_name FROM superhero AS T1 INNER JOIN hero_power AS T3 ON T1.id = T3.hero_id INNER JOIN superpower AS T2 ON T3.power_id = T2.id WHERE T1.superhero_name = 'Ajax'\t----- bird -----\tsuperhero",
    "822": "SELECT COUNT(*) FROM superhero JOIN colour ON superhero.skin_colour_id = colour.id JOIN alignment ON superhero.alignment_id = alignment.id WHERE colour.colour = 'Green' AND alignment.alignment = 'Bad'\t----- bird -----\tsuperhero",
    "823": "SELECT COUNT(*) FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id INNER JOIN publisher AS T3 ON T1.publisher_id = T3.id WHERE T2.gender = 'Female' AND T3.publisher_name = 'Marvel Comics'\t----- bird -----\tsuperhero",
    "824": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T3.power_name = 'Wind Control' ORDER BY T1.superhero_name ASC;\t----- bird -----\tsuperhero",
    "825": "SELECT T1.gender FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T3.power_name = 'Phoenix Force'\t----- bird -----\tsuperhero",
    "826": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'DC Comics' ORDER BY T1.weight_kg DESC LIMIT 1\t----- bird -----\tsuperhero",
    "827": "SELECT AVG(height_cm) FROM superhero WHERE race_id <> (SELECT id FROM race WHERE race = 'Human') AND publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Dark Horse Comics');\t----- bird -----\tsuperhero",
    "828": "SELECT COUNT(hero_id) FROM hero_attribute WHERE attribute_id = (SELECT id FROM attribute WHERE attribute_name = 'Speed') AND attribute_value = 100;\t----- bird -----\tsuperhero",
    "829": "SELECT COUNT(CASE WHEN T2.publisher_name = 'DC Comics' THEN T1.id ELSE NULL END) - COUNT(CASE WHEN T2.publisher_name = 'Marvel Comics' THEN T1.id ELSE NULL END) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id\t----- bird -----\tsuperhero",
    "830": "SELECT T2.attribute_name FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id WHERE T1.superhero_name = 'Black Panther' ORDER BY T2.attribute_value ASC LIMIT 1\t----- bird -----\tsuperhero",
    "831": "SELECT colour.colour FROM superhero JOIN colour ON superhero.eye_colour_id = colour.id WHERE superhero.superhero_name = 'Abomination'\t----- bird -----\tsuperhero",
    "832": "SELECT superhero.superhero_name FROM superhero ORDER BY superhero.height_cm DESC LIMIT 1\t----- bird -----\tsuperhero",
    "833": "SELECT superhero_name FROM superhero WHERE full_name = 'Charles Chandler';\t----- bird -----\tsuperhero",
    "834": "SELECT (CAST(COUNT(CASE WHEN T2.gender = 'Female' THEN T1.id ELSE NULL END) AS REAL) / COUNT(*)) * 100.0 FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'George Lucas'\t----- bird -----\tsuperhero",
    "835": "SELECT (CAST(COUNT(CASE WHEN A.alignment = 'Good' THEN 1 ELSE NULL END) AS REAL) / COUNT(*)) * 100.0 FROM superhero AS S INNER JOIN alignment AS A ON S.alignment_id = A.id INNER JOIN publisher AS P ON S.publisher_id = P.id WHERE P.publisher_name = 'Marvel Comics';\t----- bird -----\tsuperhero",
    "836": "SELECT COUNT(*) FROM superhero WHERE full_name LIKE 'John%'\t----- bird -----\tsuperhero",
    "837": "SELECT T1.hero_id FROM hero_attribute AS T1 WHERE T1.attribute_value = (SELECT MIN(attribute_value) FROM hero_attribute)\t----- bird -----\tsuperhero",
    "838": "SELECT full_name FROM superhero WHERE superhero_name = 'Alien'\t----- bird -----\tsuperhero",
    "839": "SELECT T1.full_name FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.weight_kg < 100 AND T2.colour = 'brown'\t----- bird -----\tsuperhero",
    "840": "SELECT HA.attribute_value FROM superhero AS HS JOIN hero_attribute AS HA ON HS.id = HA.hero_id WHERE HS.superhero_name = 'Aquababy';\t----- bird -----\tsuperhero",
    "841": "SELECT T1.weight_kg, T2.race FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T1.id = 40;\t----- bird -----\tsuperhero",
    "842": "SELECT AVG(height_cm) FROM superhero WHERE alignment_id = (SELECT id FROM alignment WHERE alignment = 'neutral');\t----- bird -----\tsuperhero",
    "843": "SELECT hero_id FROM superhero INNER JOIN hero_power ON superhero.id = hero_power.hero_id INNER JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'Intelligence'\t----- bird -----\tsuperhero",
    "844": "SELECT colour.colour FROM superhero JOIN colour ON superhero.eye_colour_id = colour.id WHERE superhero.superhero_name = 'Blackwulf'\t----- bird -----\tsuperhero",
    "845": "SELECT T2.power_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id WHERE T1.height_cm > (SELECT AVG(height_cm) FROM superhero) * 0.8;\t----- bird -----\tsuperhero",
    "846": "SELECT D.driverRef FROM qualifying AS Q INNER JOIN drivers AS D ON Q.driverId = D.driverId WHERE Q.raceId = 18 ORDER BY Q.q1 DESC LIMIT 5\t----- bird -----\tformula_1",
    "847": "SELECT D.surname FROM drivers AS D INNER JOIN qualifying AS Q ON D.driverId = Q.driverId WHERE Q.raceId = 19 AND Q.q2 = (SELECT MIN(q2) FROM qualifying WHERE raceId = 19)\t----- bird -----\tformula_1",
    "848": "SELECT T1.year FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T2.location = 'Shanghai'\t----- bird -----\tformula_1",
    "849": "SELECT races.url FROM races INNER JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.name = 'Circuit de Barcelona-Catalunya'\t----- bird -----\tformula_1",
    "850": "SELECT T1.name FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T2.country = 'Germany'\t----- bird -----\tformula_1",
    "851": "SELECT circuits.name, constructorStandings.position FROM circuits JOIN races ON circuits.circuitId = races.circuitId JOIN constructorResults ON races.raceId = constructorResults.raceId JOIN constructors ON constructorResults.constructorId = constructors.constructorId JOIN constructorStandings ON constructorResults.constructorId = constructorStandings.constructorId WHERE constructors.name = 'Renault'\t----- bird -----\tformula_1",
    "852": "SELECT COUNT(r.raceId) FROM races r JOIN circuits c ON r.circuitId = c.circuitId WHERE r.year = 2010 AND c.country NOT IN ('Asia', 'Europe')\t----- bird -----\tformula_1",
    "853": "SELECT T2.name FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T2.country = 'Spain'\t----- bird -----\tformula_1",
    "854": "SELECT c.lat, c.lng FROM circuits c INNER JOIN races r ON c.circuitId = r.circuitId WHERE r.name = 'Australian Grand Prix';\t----- bird -----\tformula_1",
    "855": "SELECT T1.url FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T2.name = 'Sepang International Circuit'\t----- bird -----\tformula_1",
    "856": "SELECT T1.name, T2.date, T2.time FROM circuits AS T1 INNER JOIN races AS T2 ON T1.circuitId = T2.circuitId WHERE T1.name = 'Sepang International Circuit';\t----- bird -----\tformula_1",
    "857": "SELECT T1.lat, T1.lng FROM circuits AS T1 INNER JOIN races AS T2 ON T1.circuitId = T2.circuitId WHERE T2.name = 'Abu Dhabi Grand Prix'\t----- bird -----\tformula_1",
    "858": "SELECT C.country FROM constructors AS C INNER JOIN constructorResults AS CR ON C.constructorId = CR.constructorId WHERE CR.raceId = 24 AND CR.points = 1;\t----- bird -----\tformula_1",
    "859": "SELECT q1 FROM qualifying WHERE raceId = 354 AND driverId = (SELECT driverId FROM drivers WHERE forename = 'Bruno' AND surname = 'Senna')\t----- bird -----\tformula_1",
    "860": "SELECT T2.nationality FROM qualifying AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.q2 = '0:01:40' AND T1.raceId = 355\t----- bird -----\tformula_1",
    "861": "SELECT T1.number FROM drivers AS T1 INNER JOIN qualifying AS T2 ON T1.driverId = T2.driverId WHERE T2.raceId = 903 AND T2.q3 = '0:01:54'\t----- bird -----\tformula_1",
    "862": "SELECT COUNT(*) FROM results WHERE raceId = (SELECT raceId FROM races WHERE name = 'Bahrain Grand Prix' AND year = 2007) AND time IS NULL\t----- bird -----\tformula_1",
    "863": "SELECT T2.year FROM seasons AS T2 INNER JOIN races AS T1 ON T1.year = T2.year WHERE T1.raceId = 901;\t----- bird -----\tformula_1",
    "864": "SELECT COUNT(*) FROM results WHERE raceId = (SELECT raceId FROM races WHERE date = '2015-11-29') AND time IS NOT NULL\t----- bird -----\tformula_1",
    "865": "SELECT d.forename, d.surname FROM results r JOIN drivers d ON r.driverId = d.driverId WHERE r.raceId = 592 AND r.time IS NOT NULL ORDER BY d.dob ASC LIMIT 1\t----- bird -----\tformula_1",
    "866": "SELECT drivers.forename, drivers.surname, drivers.url FROM lapTimes JOIN drivers ON lapTimes.driverId = drivers.driverId WHERE lapTimes.time = '0:01:27' AND lapTimes.raceId = 161;\t----- bird -----\tformula_1",
    "867": "SELECT T2.nationality FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.raceId = 933 ORDER BY T1.fastestLapSpeed DESC LIMIT 1\t----- bird -----\tformula_1",
    "868": "SELECT c.lat, c.lng FROM races AS r JOIN circuits AS c ON r.circuitId = c.circuitId WHERE r.name = 'Malaysian Grand Prix';\t----- bird -----\tformula_1",
    "869": "SELECT T2.url FROM constructorResults AS T1 INNER JOIN constructors AS T2 ON T1.constructorId = T2.constructorId WHERE T1.raceId = 9 ORDER BY T1.points DESC LIMIT 1\t----- bird -----\tformula_1",
    "870": "SELECT T1.q1 FROM qualifying AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T2.forename = 'Lucas' AND T2.surname = 'di Grassi' AND T1.raceId = 345;\t----- bird -----\tformula_1",
    "871": "SELECT T3.nationality FROM qualifying AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId INNER JOIN person_region AS T3 ON T2.person_id = T3.person_id WHERE T1.q2 = '0:01:15' AND T1.raceId = 347\t----- bird -----\tformula_1",
    "872": "SELECT D.code FROM drivers AS D INNER JOIN qualifying AS Q ON D.driverId = Q.driverId INNER JOIN races AS R ON Q.raceId = R.raceId WHERE R.raceId = 45 AND Q.q3 = '0:01:33'\t----- bird -----\tformula_1",
    "873": "SELECT T1.time FROM results AS T1 WHERE T1.raceId = 743 AND T1.driverId = (SELECT driverId FROM drivers WHERE forename = 'Bruce' AND surname = 'McLaren')\t----- bird -----\tformula_1",
    "874": "SELECT D.forename, D.surname FROM drivers AS D INNER JOIN results AS R ON D.driverId = R.driverId INNER JOIN races AS RA ON R.raceId = RA.raceId WHERE RA.name = 'San Marino Grand Prix' AND RA.year = 2006 AND R.position = 2\t----- bird -----\tformula_1",
    "875": "SELECT T2.year FROM seasons AS T1 INNER JOIN races AS T2 ON T1.year = T2.year WHERE T2.raceId = 901;\t----- bird -----\tformula_1",
    "876": "SELECT COUNT(*) FROM results WHERE raceId = (SELECT raceId FROM races WHERE date = '2015-11-29') AND position IS NOT NULL\t----- bird -----\tformula_1",
    "877": "SELECT d.forename, d.surname FROM results r JOIN drivers d ON r.driverId = d.driverId WHERE r.raceId = 872 AND r.time IS NOT NULL ORDER BY d.dob DESC LIMIT 1\t----- bird -----\tformula_1",
    "878": "SELECT T2.forename || ' ' || T2.surname AS full_name FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.raceId = 348 ORDER BY T1.time ASC LIMIT 1\t----- bird -----\tformula_1",
    "879": "SELECT drivers.nationality FROM results JOIN drivers ON results.driverId = drivers.driverId WHERE results.fastestLapSpeed = (SELECT MAX(fastestLapSpeed) FROM results)\t----- bird -----\tformula_1",
    "880": "SELECT ((r1.fastestLapSpeed - r2.fastestLapSpeed) / r1.fastestLapSpeed) * 100 AS percentage FROM results r1 JOIN results r2 ON r1.raceId = 853 AND r2.raceId = 854 WHERE r1.driverId = (SELECT driverId FROM drivers WHERE forename = 'Paul' AND surname = 'di Resta')\t----- bird -----\tformula_1",
    "881": "SELECT CAST(COUNT(CASE WHEN T2.time IS NOT NULL THEN 1 END) AS REAL) * 100 / COUNT(T1.driverId) FROM races AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId WHERE T1.date = '1983-07-16'\t----- bird -----\tformula_1",
    "882": "SELECT MIN(year) AS first_Singapore_Grand_Prix_year FROM races WHERE circuitId = (SELECT circuitId FROM circuits WHERE name = 'Marina Bay Street Circuit');\t----- bird -----\tformula_1",
    "883": "SELECT COUNT(*) FROM races WHERE year = 2005; SELECT name FROM races WHERE year = 2005 ORDER BY raceId DESC;\t----- bird -----\tformula_1",
    "884": "SELECT name FROM races WHERE date = (SELECT MIN(date) FROM races) UNION SELECT name FROM races WHERE year = (SELECT year(MIN(date)) FROM races) AND month = (SELECT month(MIN(date)) FROM races) AND date != (SELECT MIN(date) FROM races)\t----- bird -----\tformula_1",
    "885": "SELECT T1.name, T1.date FROM races AS T1 INNER JOIN seasons AS T2 ON T1.year = T2.year WHERE T2.year = 1999 ORDER BY T1.round DESC LIMIT 1\t----- bird -----\tformula_1",
    "886": "SELECT year FROM races GROUP BY year HAVING MAX(round) = (SELECT MAX(round) FROM races)\t----- bird -----\tformula_1",
    "887": "SELECT name FROM races WHERE year = 2017 AND raceId NOT IN (SELECT raceId FROM races WHERE year = 2000)\t----- bird -----\tformula_1",
    "888": "SELECT T2.country, T1.name, T1.location FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T1.year = (SELECT MIN(year) FROM races WHERE name = 'European Grand Prix')\t----- bird -----\tformula_1",
    "889": "SELECT MAX(year) FROM races INNER JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.name = 'Brands Hatch' AND races.name = 'British Grand Prix'\t----- bird -----\tformula_1",
    "890": "SELECT COUNT(DISTINCT year) AS Number_of_seasons FROM races JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.name = 'Silverstone Circuit' AND races.name = 'British Grand Prix' AND circuits.country = 'United Kingdom'\t----- bird -----\tformula_1",
    "891": "SELECT T2.forename, T2.surname FROM driverStandings AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T1.raceId = T3.raceId WHERE T3.year = 2010 AND T3.name = 'Singapore Grand Prix' ORDER BY T1.position;\t----- bird -----\tformula_1",
    "892": "SELECT T1.forename, T1.surname FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId GROUP BY T1.forename, T1.surname ORDER BY SUM(T2.points) DESC LIMIT 1\t----- bird -----\tformula_1",
    "893": "SELECT T2.forename || ' ' || T2.surname AS driver_name, T1.points FROM results AS T1 INNER JOIN drivers AS T2 ON T2.driverId = T1.driverId INNER JOIN races AS T3 ON T3.raceId = T1.raceId WHERE T3.year = 2017 AND T3.name = 'Chinese Grand Prix' ORDER BY T1.points DESC LIMIT 3\t----- bird -----\tformula_1",
    "894": "SELECT Drivers.forename, Drivers.surname, Races.name FROM LapTimes JOIN Drivers ON LapTimes.driverId = Drivers.driverId JOIN Races ON LapTimes.raceId = Races.raceId WHERE LapTimes.time = (SELECT MIN(time) FROM LapTimes)\t----- bird -----\tformula_1",
    "895": "SELECT AVG(milliseconds) FROM lapTimes WHERE driverId = (SELECT driverId FROM drivers WHERE forename = 'Sebastian' AND surname = 'Vettel') AND raceId = (SELECT raceId FROM races WHERE year = 2009 AND name = 'Chinese Grand Prix')\t----- bird -----\tformula_1",
    "896": "SELECT CAST(SUM(CASE WHEN surname = 'Hamilton' AND year >= 2010 AND position > 1 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(raceId) FROM results WHERE surname = 'Hamilton' AND year >= 2010\t----- bird -----\tformula_1",
    "897": "SELECT T1.forename, T1.surname, T1.nationality, AVG(T2.points) AS avg_points FROM drivers AS T1 INNER JOIN driverStandings AS T2 ON T1.driverId = T2.driverId GROUP BY T1.driverId ORDER BY COUNT(T2.wins) DESC LIMIT 1\t----- bird -----\tformula_1",
    "898": "SELECT 2022 - year(dob) + 1 AS age, forename, surname FROM drivers WHERE nationality = 'Japanese' ORDER BY dob DESC LIMIT 1\t----- bird -----\tformula_1",
    "899": "SELECT C.name FROM circuits AS C JOIN races AS R ON C.circuitId = R.circuitId WHERE R.year BETWEEN 1990 AND 2000 GROUP BY C.name HAVING COUNT(DISTINCT R.raceId) = 4;\t----- bird -----\tformula_1",
    "900": "SELECT T1.name AS circuit_name, T1.location AS circuit_location, T2.name AS race_name FROM circuits AS T1 INNER JOIN races AS T2 ON T1.circuitId = T2.circuitId WHERE T1.country = 'USA' AND T2.year = 2006;\t----- bird -----\tformula_1",
    "901": "SELECT races.name, circuits.name, circuits.location FROM races JOIN circuits ON races.circuitId = circuits.circuitId WHERE strftime('%m', races.date) = '09' AND races.year = 2005;\t----- bird -----\tformula_1",
    "902": "SELECT T2.name FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId INNER JOIN drivers AS T3 ON T1.driverId = T3.driverId WHERE T3.forename = 'Alex' AND T3.surname = 'Yoong' AND T1.position < 10;\t----- bird -----\tformula_1",
    "903": "SELECT COUNT(T1.resultId) FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId INNER JOIN circuits AS T3 ON T2.circuitId = T3.circuitId INNER JOIN drivers AS T4 ON T1.driverId = T4.driverId WHERE T4.forename = 'Michael' AND T4.surname = 'Schumacher' AND T3.name = 'Sepang International Circuit' AND T1.points = (SELECT MAX(points) FROM results WHERE driverId = T1.driverId)\t----- bird -----\tformula_1",
    "904": "SELECT Races.name, Races.year FROM Races INNER JOIN Results ON Races.raceId = Results.raceId INNER JOIN Drivers ON Results.driverId = Drivers.driverId WHERE Drivers.forename = 'Michael' AND Drivers.surname = 'Schumacher' ORDER BY Results.milliseconds ASC LIMIT 1\t----- bird -----\tformula_1",
    "905": "SELECT AVG(points) FROM results JOIN drivers ON results.driverId = drivers.driverId WHERE drivers.forename = 'Eddie' AND drivers.surname = 'Irvine' AND results.year = 2000\t----- bird -----\tformula_1",
    "906": "SELECT T1.name AS Race_Name, T2.points FROM races AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId INNER JOIN drivers AS T3 ON T2.driverId = T3.driverId WHERE T3.forename = 'Lewis' AND T3.surname = 'Hamilton' ORDER BY T1.year ASC LIMIT 1\t----- bird -----\tformula_1",
    "907": "SELECT races.name, circuits.country FROM races INNER JOIN circuits ON races.circuitId = circuits.circuitId WHERE races.year = 2017 ORDER BY races.date;\t----- bird -----\tformula_1",
    "908": "SELECT T1.name, T2.year, T3.location FROM races AS T1 INNER JOIN seasons AS T2 ON T1.year = T2.year INNER JOIN circuits AS T3 ON T1.circuitId = T3.circuitId ORDER BY T1.laps DESC LIMIT 1\t----- bird -----\tformula_1",
    "909": "SELECT CAST(SUM(IIF(T2.country = 'Germany' AND T1.name = 'European Grand Prix', 1, 0)) AS REAL) * 100 / COUNT(T1.raceId) FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T1.name = 'European Grand Prix'\t----- bird -----\tformula_1",
    "910": "SELECT lat, lng FROM circuits WHERE name = 'Silverstone Circuit';\t----- bird -----\tformula_1",
    "911": "SELECT name FROM circuits WHERE lat = (SELECT MAX(lat) FROM circuits WHERE name IN ('Silverstone Circuit', 'Hockenheimring', 'Hungaroring'))\t----- bird -----\tformula_1",
    "912": "SELECT circuitRef FROM circuits WHERE name = 'Marina Bay Street Circuit'\t----- bird -----\tformula_1",
    "913": "SELECT country FROM circuits WHERE alt = (SELECT MAX(alt) FROM circuits)\t----- bird -----\tformula_1",
    "914": "SELECT COUNT(driverId) FROM drivers WHERE code IS NULL\t----- bird -----\tformula_1",
    "915": "SELECT nationality FROM drivers WHERE dob = (SELECT MIN(dob) FROM drivers)\t----- bird -----\tformula_1",
    "916": "SELECT surname FROM drivers WHERE nationality = 'Italian'\t----- bird -----\tformula_1",
    "917": "SELECT T2.url FROM drivers AS T1 INNER JOIN constructors AS T2 ON T1.constructorId = T2.constructorId WHERE T1.forename = 'Anthony' AND T1.surname = 'Davidson'\t----- bird -----\tformula_1",
    "918": "SELECT driverRef FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton'\t----- bird -----\tformula_1",
    "919": "SELECT circuits.name FROM races JOIN circuits ON races.circuitId = circuits.circuitId WHERE races.name = 'Spanish Grand Prix' AND races.year = 2009;\t----- bird -----\tformula_1",
    "920": "SELECT year FROM races JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.name = 'Silverstone Circuit'\t----- bird -----\tformula_1",
    "921": "SELECT R.url FROM races AS R INNER JOIN circuits AS C ON R.circuitId = C.circuitId WHERE C.name = 'Silverstone Circuit'\t----- bird -----\tformula_1",
    "922": "SELECT T1.time FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T1.year >= 2010 AND T1.year < 2020 AND T2.location = 'Abu Dhabi';\t----- bird -----\tformula_1",
    "923": "SELECT COUNT(DISTINCT T1.raceId) FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T2.country = 'Italy'\t----- bird -----\tformula_1",
    "924": "SELECT T1.date FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T2.name = 'Barcelona-Catalunya';\t----- bird -----\tformula_1",
    "925": "SELECT c.url FROM circuits c JOIN races r ON c.circuitId = r.circuitId JOIN seasons s ON r.year = s.year WHERE s.year = 2009 AND r.name = 'Spanish Grand Prix'\t----- bird -----\tformula_1",
    "926": "SELECT MIN(fastestLapTime) FROM results INNER JOIN drivers ON results.driverId = drivers.driverId WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton'\t----- bird -----\tformula_1",
    "927": "SELECT D.forename, D.surname FROM drivers AS D INNER JOIN results AS R ON D.driverId = R.driverId WHERE R.fastestLapSpeed = (SELECT MAX(fastestLapSpeed) FROM results WHERE fastestLapSpeed IS NOT NULL)\t----- bird -----\tformula_1",
    "928": "SELECT T2.driverRef FROM races AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId WHERE T1.name = 'Australian Grand Prix' AND T1.year = 2008 AND T2.position = 1\t----- bird -----\tformula_1",
    "929": "SELECT T1.name FROM drivers AS T2 INNER JOIN results AS T1 ON T1.driverId = T2.driverId WHERE T2.forename = 'Lewis' AND T2.surname = 'Hamilton'\t----- bird -----\tformula_1",
    "930": "SELECT races.name FROM races JOIN results ON races.raceId = results.raceId JOIN drivers ON results.driverId = drivers.driverId WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton' ORDER BY results.rank ASC LIMIT 1\t----- bird -----\tformula_1",
    "931": "SELECT MAX(fastestLapSpeed) FROM results WHERE raceId = (SELECT raceId FROM races WHERE year = 2009 AND name = 'Spanish Grand Prix')\t----- bird -----\tformula_1",
    "932": "SELECT DISTINCT R.year FROM results AS RS INNER JOIN races AS R ON RS.raceId = R.raceId INNER JOIN drivers AS D ON RS.driverId = D.driverId WHERE D.forename = 'Lewis' AND D.surname = 'Hamilton'\t----- bird -----\tformula_1",
    "933": "SELECT positionOrder FROM results JOIN drivers ON results.driverId = drivers.driverId JOIN races ON results.raceId = races.raceId WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton' AND races.year = 2008 AND races.name = 'Australian Grand Prix'\t----- bird -----\tformula_1",
    "934": "SELECT Dennis Coulthard\t----- bird -----\tformula_1",
    "935": "SELECT COUNT(DISTINCT driverId) FROM results WHERE raceId = (SELECT raceId FROM races WHERE name = 'Australian Grand Prix' AND year = 2008) AND time IS NOT NULL;\t----- bird -----\tformula_1",
    "936": "SELECT T1.fastestLapTime FROM results AS T1 INNER JOIN races AS T2 ON T2.raceId = T1.raceId INNER JOIN drivers AS T3 ON T3.driverId = T1.driverId WHERE T2.name = 'Australian Grand Prix' AND T2.year = 2008 AND T3.forename = 'Lewis' AND T3.surname = 'Hamilton'\t----- bird -----\tformula_1",
    "937": "SELECT T1.time FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId INNER JOIN drivers AS T3 ON T1.driverId = T3.driverId WHERE T2.year = 2008 AND T2.name = 'Australian Grand Prix' AND T1.position = 2;\t----- bird -----\tformula_1",
    "938": "SELECT T2.forename, T2.surname, T2.url FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.raceId = (SELECT raceId FROM races WHERE year = 2008 AND name = 'Australian Grand Prix') AND T1.position = 1 AND T1.time LIKE '__:__:__.___'\t----- bird -----\tformula_1",
    "939": "SELECT COUNT(T1.driverId) FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T2.raceId = T3.raceId WHERE T1.nationality = 'American' AND T3.year = 2008 AND T3.name = 'Australian Grand Prix'\t----- bird -----\tformula_1",
    "940": "SELECT COUNT(DISTINCT T1.driverId) FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.year = 2008 AND T2.name = 'Australian Grand Prix' AND T1.time IS NOT NULL\t----- bird -----\tformula_1",
    "941": "SELECT SUM(T2.points) FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T1.forename = 'Lewis' AND T1.surname = 'Hamilton' AND T2.position IS NOT NULL\t----- bird -----\tformula_1",
    "942": "SELECT AVG(strftime('%s', fastestLapTime) - strftime('%s', '00:00.000')) FROM results WHERE driverId = (SELECT driverId FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton')\t----- bird -----\tformula_1",
    "943": "SELECT CAST(SUM(CASE WHEN time IS NOT NULL THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(raceId) FROM results WHERE raceId = (SELECT raceId FROM races WHERE name = 'Australian Grand Prix' AND year = 2008)\t----- bird -----\tformula_1",
    "944": "SELECT ((RT1.milliseconds - RT2.milliseconds) * 100.0 / RT2.milliseconds) AS percentage_faster FROM results AS RT1 INNER JOIN results AS RT2 ON RT1.raceId = RT2.raceId WHERE RT1.position = 1 AND RT2.position = (SELECT MAX(position) FROM results WHERE raceId = RT1.raceId) AND RT1.raceId = (SELECT raceId FROM races WHERE year = 2008 AND name = 'Australian Grand Prix')\t----- bird -----\tformula_1",
    "945": "SELECT COUNT(*) FROM circuits WHERE location = 'Melbourne' AND country = 'Australia'\t----- bird -----\tformula_1",
    "946": "SELECT lat, lng FROM circuits WHERE country = 'USA'\t----- bird -----\tformula_1",
    "947": "SELECT COUNT(driverId) FROM drivers WHERE nationality = 'British' AND SUBSTR(dob, 1, 4) > 1980;\t----- bird -----\tformula_1",
    "948": "SELECT AVG(points) AS avg_points FROM constructorResults JOIN constructors ON constructorResults.constructorId = constructors.constructorId WHERE nationality = 'British'\t----- bird -----\tformula_1",
    "949": "SELECT constructors.name FROM constructors JOIN constructorStandings ON constructors.constructorId = constructorStandings.constructorId WHERE constructorStandings.points = (SELECT MAX(points) FROM constructorStandings)\t----- bird -----\tformula_1",
    "950": "SELECT constructors.name FROM constructors LEFT JOIN constructorStandings ON constructors.constructorId = constructorStandings.constructorId WHERE constructorStandings.points = 0 AND constructorStandings.raceId = 291;\t----- bird -----\tformula_1",
    "951": "SELECT COUNT(T1.constructorId) FROM constructorStandings AS T1 INNER JOIN constructors AS T2 ON T1.constructorId = T2.constructorId INNER JOIN races AS T3 ON T1.raceId = T3.raceId WHERE T2.nationality = 'Japanese' AND T1.points = 0 GROUP BY T1.constructorId HAVING COUNT(T1.raceId) = 2;\t----- bird -----\tformula_1",
    "952": "SELECT C.name FROM constructors C INNER JOIN results R ON C.constructorId = R.constructorId WHERE R.position = 1;\t----- bird -----\tformula_1",
    "953": "SELECT COUNT(DISTINCT constructors.constructorId) FROM constructors JOIN results ON constructors.constructorId = results.constructorId JOIN races ON results.raceId = races.raceId JOIN lapTimes ON races.raceId = lapTimes.raceId WHERE constructors.nationality = 'French' AND lapTimes.lap > 50;\t----- bird -----\tformula_1",
    "954": "SELECT CAST(SUM(CASE WHEN time IS NOT NULL THEN 1 ELSE 0 END) AS REAL) / COUNT(driverId) * 100 FROM results WHERE driverId IN (SELECT driverId FROM drivers WHERE nationality = 'Japanese') AND raceId IN (SELECT raceId FROM races WHERE year BETWEEN 2007 AND 2009)\t----- bird -----\tformula_1",
    "955": "SELECT T1.year, AVG(strftime('%s', T2.time)) FROM seasons AS T1 INNER JOIN results AS T2 ON T1.year = T2.raceId WHERE T2.position = 1 AND T2.time IS NOT NULL GROUP BY T1.year\t----- bird -----\tformula_1",
    "956": "SELECT forename, surname FROM drivers INNER JOIN results ON drivers.driverId = results.driverId WHERE STRFTIME('%Y', drivers.dob) > '1975' AND results.position = 2\t----- bird -----\tformula_1",
    "957": "SELECT COUNT(DISTINCT T2.driverId) FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T2.nationality = 'italian' AND T1.time IS NULL\t----- bird -----\tformula_1",
    "958": "SELECT forename, surname FROM drivers WHERE driverId = (SELECT driverId FROM results WHERE fastestLap = 1 ORDER BY milliseconds LIMIT 1)\t----- bird -----\tformula_1",
    "959": "SELECT R.fastestLap FROM results AS R JOIN races AS RA ON R.raceId = RA.raceId JOIN constructorStandings AS CS ON RA.raceId = CS.raceId WHERE RA.year = 2009 AND CS.position = 1\t----- bird -----\tformula_1",
    "960": "SELECT AVG(fastestLapSpeed) FROM results JOIN races ON results.raceId = races.raceId WHERE races.name = 'Spanish Grand Prix' AND races.year = 2009\t----- bird -----\tformula_1",
    "961": "SELECT races.name, races.year FROM races JOIN results ON races.raceId = results.raceId WHERE results.milliseconds IS NOT NULL ORDER BY results.milliseconds ASC LIMIT 1;\t----- bird -----\tformula_1",
    "962": "SELECT CAST(SUM(CASE WHEN SUBSTR(dob, 1, 4) < '1985' AND laps > 50 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(driverId) FROM drivers WHERE SUBSTR(dob, 1, 4) < '1985' AND SUBSTR(dob, 1, 4) BETWEEN '2000' AND '2005';\t----- bird -----\tformula_1",
    "963": "SELECT COUNT(T2.nationality) FROM drivers AS T1 INNER JOIN lapTimes AS T2 ON T1.driverId = T2.driverId WHERE T2.time < '02:00.00' AND T1.nationality = 'French'\t----- bird -----\tformula_1",
    "964": "SELECT driverRef FROM drivers WHERE nationality = 'America'\t----- bird -----\tformula_1",
    "965": "SELECT raceId FROM races WHERE year = 2009\t----- bird -----\tformula_1",
    "966": "SELECT COUNT(DISTINCT driverId) FROM results WHERE raceId = 18;\t----- bird -----\tformula_1",
    "967": "SELECT driverId, dob FROM drivers ORDER BY dob DESC LIMIT 3 SELECT COUNT(driverId) FROM drivers WHERE nationality = 'Dutch' AND driverId IN (SELECT driverId FROM drivers ORDER BY dob DESC LIMIT 3)\t----- bird -----\tformula_1",
    "968": "SELECT driverRef FROM drivers WHERE forename = 'Robert' AND surname = 'Kubica'\t----- bird -----\tformula_1",
    "969": "SELECT COUNT(driverId) FROM drivers WHERE nationality = 'Australian' AND strftime('%Y', dob) = '1980'\t----- bird -----\tformula_1",
    "970": "SELECT forename, surname FROM drivers WHERE nationality = 'German' AND dob BETWEEN '1980-01-01' AND '1990-12-31' AND driverId IN (SELECT driverId FROM lapTimes WHERE time = (SELECT MIN(time) FROM lapTimes)) LIMIT 3;\t----- bird -----\tformula_1",
    "971": "SELECT driverRef FROM drivers WHERE nationality = 'German' AND dob = (SELECT MIN(dob) FROM drivers WHERE nationality = 'German')\t----- bird -----\tformula_1",
    "972": "SELECT driverId, code FROM drivers WHERE year(dob) = 1971 AND driverId IN (SELECT driverId FROM results WHERE fastestLapTime IS NOT NULL)\t----- bird -----\tformula_1",
    "973": "SELECT forename, surname FROM drivers WHERE nationality = 'Spanish' AND dob < '1982-01-01' ORDER BY time DESC LIMIT 10\t----- bird -----\tformula_1",
    "974": "SELECT T1.year FROM races AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId WHERE T2.fastestLapTime IS NOT NULL ORDER BY T2.fastestLapTime ASC LIMIT 1\t----- bird -----\tformula_1",
    "975": "SELECT MIN(time) FROM lapTimes\t----- bird -----\tformula_1",
    "976": "SELECT driverId FROM lapTimes WHERE lap = 1 ORDER BY time LIMIT 5\t----- bird -----\tformula_1",
    "977": "SELECT COUNT(T1.resultId) FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T1.statusId = 2 AND T1.time IS NOT NULL AND T2.raceId > 50 AND T2.raceId < 100\t----- bird -----\tformula_1",
    "978": "SELECT COUNT(*) AS TimesHeld, location, lat, lng FROM circuits WHERE country = 'Austria' GROUP BY location, lat, lng;\t----- bird -----\tformula_1",
    "979": "SELECT T1.round FROM races AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId WHERE T2.time IS NOT NULL GROUP BY T1.round ORDER BY COUNT(T2.resultId) DESC LIMIT 1\t----- bird -----\tformula_1",
    "980": "SELECT D.driverRef, D.nationality, D.dob FROM qualifying AS Q INNER JOIN drivers AS D ON Q.driverId = D.driverId WHERE Q.raceId = 23 AND Q.q2 IS NOT NULL\t----- bird -----\tformula_1",
    "981": "SELECT d.forename, d.surname, r.name, r.date, r.time FROM drivers d JOIN qualifying q ON d.driverId = q.driverId JOIN races r ON q.raceId = r.raceId WHERE d.dob = (SELECT MAX(year(dob)) FROM drivers) ORDER BY r.date LIMIT 1;\t----- bird -----\tformula_1",
    "982": "SELECT COUNT(T1.driverId) FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId INNER JOIN status AS T3 ON T1.statusId = T3.statusId WHERE T2.nationality = 'American' AND T3.status = 'disqualified'\t----- bird -----\tformula_1",
    "983": "SELECT T2.name, T1.url FROM constructors AS T1 INNER JOIN results AS T2 ON T1.constructorId = T2.constructorId WHERE T1.nationality = 'Italian' ORDER BY T2.points DESC LIMIT 1;\t----- bird -----\tformula_1",
    "984": "SELECT c.url FROM constructors c JOIN ( SELECT constructorId, SUM(wins) AS total_wins FROM constructorStandings GROUP BY constructorId ORDER BY total_wins DESC LIMIT 1 ) AS max_wins ON c.constructorId = max_wins.constructorId;\t----- bird -----\tformula_1",
    "985": "SELECT T2.forename, T2.surname FROM races AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId WHERE T1.name = 'French Grand Prix' AND T2.laps >= 3 ORDER BY T2.time DESC LIMIT 1\t----- bird -----\tformula_1",
    "986": "SELECT raceId, MIN(milliseconds) FROM lapTimes WHERE lap = 1 ORDER BY milliseconds ASC LIMIT 1;\t----- bird -----\tformula_1",
    "987": "SELECT AVG(fastestLapTime) FROM results WHERE raceId = (SELECT raceId FROM races WHERE name = 'United States Grand Prix' AND year = 2006) AND rank < 11;\t----- bird -----\tformula_1",
    "988": "SELECT T2.forename, T2.surname, AVG(T1.milliseconds) AS avg_duration FROM pitStops AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE strftime('%Y', T2.dob) BETWEEN '1980' AND '1985' AND T2.nationality = 'German' GROUP BY T1.driverId ORDER BY avg_duration LIMIT 5;\t----- bird -----\tformula_1",
    "989": "SELECT T2.forename, T2.surname, T1.time FROM results AS T1 JOIN drivers AS T2 ON T1.driverId = T2.driverId JOIN races AS T3 ON T1.raceId = T3.raceId WHERE T3.name = 'Canadian Grand Prix' AND T3.year = 2008 AND T1.position = 1;\t----- bird -----\tformula_1",
    "990": "SELECT C.constructorRef, C.url, MAX(R.time) FROM results AS R JOIN races AS RA ON R.raceId = RA.raceId JOIN constructors AS C ON R.constructorId = C.constructorId WHERE RA.name = 'Singapore Grand Prix' AND RA.year = 2009 GROUP BY C.constructorRef, C.url\t----- bird -----\tformula_1",
    "991": "SELECT forename || ' ' || surname AS full_name, dob FROM drivers WHERE nationality = 'Austrian' AND year(dob) BETWEEN 1981 AND 1991;\t----- bird -----\tformula_1",
    "992": "SELECT forename || ' ' || surname AS Full_Name, url AS Wikipedia_Page, dob AS Date_of_Birth FROM drivers WHERE nationality = 'German' AND year(dob) BETWEEN '1971' AND '1985' ORDER BY dob DESC;\t----- bird -----\tformula_1",
    "993": "SELECT c.location, c.country, c.lat, c.lng FROM circuits c WHERE c.name = 'Hungaroring';\t----- bird -----\tformula_1",
    "994": "SELECT c.name, c.nationality, SUM(cr.points) AS total_points FROM constructors c JOIN constructorResults cr ON c.constructorId = cr.constructorId JOIN races r ON cr.raceId = r.raceId WHERE r.name = 'Monaco Grand Prix' AND r.year BETWEEN 1980 AND 2010 GROUP BY c.constructorId ORDER BY total_points DESC LIMIT 1;\t----- bird -----\tformula_1",
    "995": "SELECT AVG(T1.points) FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId INNER JOIN drivers AS T3 ON T1.driverId = T3.driverId WHERE T2.name = 'Turkish Grand Prix' AND T3.forename = 'Lewis' AND T3.surname = 'Hamilton'\t----- bird -----\tformula_1",
    "996": "SELECT AVG(COUNT(*)) FROM races WHERE year BETWEEN 2000 AND 2009;\t----- bird -----\tformula_1",
    "997": "SELECT nationality FROM drivers GROUP BY nationality ORDER BY COUNT(nationality) DESC LIMIT 1\t----- bird -----\tformula_1",
    "998": "SELECT SUM(R.points) AS total_points, R.wins FROM results AS R WHERE R.positionOrder = 91\t----- bird -----\tformula_1",
    "999": "SELECT T1.name FROM races AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId WHERE T2.fastestLapTime = (SELECT MIN(fastestLapTime) FROM results)\t----- bird -----\tformula_1",
    "1000": "SELECT Circuits.name, Circuits.location || ', ' || Circuits.country AS full_location FROM Circuits INNER JOIN Races ON Circuits.circuitId = Races.circuitId WHERE Races.date = (SELECT MAX(date) FROM Races)\t----- bird -----\tformula_1",
    "1001": "SELECT T2.forename, T2.surname FROM qualifying AS T1 JOIN drivers AS T2 ON T1.driverId = T2.driverId JOIN races AS T3 ON T1.raceId = T3.raceId WHERE T1.position = 1 AND T1.q3 = (SELECT MIN(q3) FROM qualifying WHERE raceId = T1.raceId AND q3 IS NOT NULL) AND T3.year = 2008 AND T3.name = 'Marina Bay Street Circuit'\t----- bird -----\tformula_1",
    "1002": "SELECT T1.forename || ' ' || T1.surname AS full_name, T1.nationality, T3.name FROM drivers AS T1 INNER JOIN ( SELECT T2.driverId, MAX(T2.dob) AS youngest_dob FROM drivers AS T2 ) AS T4 ON T1.driverId = T4.driverId INNER JOIN driverStandings AS T5 ON T1.driverId = T5.driverId INNER JOIN races AS T3 ON T5.raceId = T3.raceId ORDER BY T4.youngest_dob DESC LIMIT 1\t----- bird -----\tformula_1",
    "1003": "SELECT COUNT(T1.statusId) FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId INNER JOIN drivers AS T3 ON T1.driverId = T3.driverId WHERE T2.name = 'Canadian Grand Prix' AND T3.driverId = (SELECT T4.driverId FROM results AS T4 INNER JOIN races AS T5 ON T4.raceId = T5.raceId WHERE T5.name = 'Canadian Grand Prix' GROUP BY T4.driverId ORDER BY COUNT(T4.statusId) DESC LIMIT 1) AND T1.statusId = 3;\t----- bird -----\tformula_1",
    "1004": "SELECT T1.forename || ' ' || T1.surname AS full_name, COUNT(T2.wins) AS total_wins FROM drivers AS T1 INNER JOIN driverStandings AS T2 ON T1.driverId = T2.driverId WHERE T1.dob = (SELECT MIN(dob) FROM drivers) GROUP BY T1.forename, T1.surname;\t----- bird -----\tformula_1",
    "1005": "SELECT MAX(duration) AS longest_pitstop_duration FROM pitStops;\t----- bird -----\tformula_1",
    "1006": "SELECT MIN(milliseconds) as fastest_lap_time FROM lapTimes;\t----- bird -----\tformula_1",
    "1007": "SELECT MAX(duration) FROM pitStops WHERE driverId = (SELECT driverId FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton')\t----- bird -----\tformula_1",
    "1008": "SELECT T1.lap FROM lapTimes AS T1 INNER JOIN drivers AS T2 ON T2.driverId = T1.driverId INNER JOIN races AS T3 ON T3.raceId = T1.raceId WHERE T2.forename = 'Lewis' AND T2.surname = 'Hamilton' AND T3.year = 2011 AND T3.name = 'Australian Grand Prix' AND T1.position IS NOT NULL;\t----- bird -----\tformula_1",
    "1009": "SELECT T1.duration FROM pitStops AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId INNER JOIN drivers AS T3 ON T1.driverId = T3.driverId WHERE T2.year = 2011 AND T2.name = 'Australian Grand Prix'\t----- bird -----\tformula_1",
    "1010": "SELECT T2.time FROM drivers AS T1 INNER JOIN lapTimes AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T2.raceId = T3.raceId WHERE T1.forename = 'Lewis' AND T1.surname = 'Hamilton' AND T3.name = 'Formula_1' ORDER BY T2.milliseconds ASC LIMIT 1\t----- bird -----\tformula_1",
    "1011": "SELECT T2.forename, T2.surname FROM lapTimes AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.time = (SELECT MIN(time) FROM lapTimes)\t----- bird -----\tformula_1",
    "1012": "SELECT circuits.name, results.position FROM circuits INNER JOIN races ON circuits.circuitId = races.circuitId INNER JOIN results ON races.raceId = results.raceId INNER JOIN drivers ON results.driverId = drivers.driverId WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton' AND results.fastestLapTime = (SELECT MIN(results.fastestLapTime) FROM results WHERE results.driverId = drivers.driverId)\t----- bird -----\tformula_1",
    "1013": "SELECT MIN(milliseconds) AS lap_record FROM lapTimes INNER JOIN races ON lapTimes.raceId = races.raceId INNER JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.name = 'Austrian Grand Prix Circuit'\t----- bird -----\tformula_1",
    "1014": "SELECT T1.name AS circuit_name, T2.time AS lap_record FROM circuits AS T1 INNER JOIN races AS T3 ON T1.circuitId = T3.circuitId INNER JOIN lapTimes AS T2 ON T3.raceId = T2.raceId WHERE T1.country = 'Italy' ORDER BY T2.milliseconds ASC LIMIT 1;\t----- bird -----\tformula_1",
    "1015": "SELECT Races.name FROM Races INNER JOIN LapTimes ON Races.raceId = LapTimes.raceId WHERE LapTimes.time = (SELECT MIN(time) FROM LapTimes WHERE raceId = Races.raceId)\t----- bird -----\tformula_1",
    "1016": "SELECT P.duration FROM pitStops AS P INNER JOIN races AS R ON P.raceId = R.raceId INNER JOIN circuits AS C ON R.circuitId = C.circuitId INNER JOIN drivers AS D ON P.driverId = D.driverId WHERE C.name = 'Austrian Grand Prix Circuit' AND D.driverId = (SELECT driverId FROM results WHERE raceId = R.raceId AND fastestLap = 1)\t----- bird -----\tformula_1",
    "1017": "SELECT c.lat, c.lng FROM circuits c INNER JOIN races r ON c.circuitId = r.circuitId INNER JOIN results res ON r.raceId = res.raceId WHERE res.fastestLapTime = '1:29.488'\t----- bird -----\tformula_1",
    "1018": "SELECT AVG(milliseconds) FROM pitStops WHERE driverId = (SELECT driverId FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton')\t----- bird -----\tformula_1",
    "1019": "SELECT AVG(milliseconds) FROM lapTimes AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId INNER JOIN circuits AS T3 ON T2.circuitId = T3.circuitId WHERE T3.country = 'Italy'\t----- bird -----\tformula_1",
    "1020": "SELECT player_api_id FROM Player_Attributes WHERE overall_rating = (SELECT MAX(overall_rating) FROM Player_Attributes)\t----- bird -----\teuropean_football_2",
    "1021": "SELECT T1.player_name, T1.height FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id ORDER BY T1.height DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1022": "SELECT PA.preferred_foot FROM Player_Attributes AS PA WHERE PA.potential = (SELECT MIN(potential) FROM Player_Attributes)\t----- bird -----\teuropean_football_2",
    "1023": "SELECT COUNT(T1.id) FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.overall_rating >= 60 AND T1.overall_rating < 65 AND T1.defensive_work_rate = 'low'\t----- bird -----\teuropean_football_2",
    "1024": "SELECT player_api_id FROM Player_Attributes ORDER BY crossing DESC LIMIT 5;\t----- bird -----\teuropean_football_2",
    "1025": "SELECT T2.name FROM Match AS T1 INNER JOIN League AS T2 ON T1.league_id = T2.id WHERE T1.season = '2015/2016' GROUP BY T2.name ORDER BY SUM(T1.home_team_goal + T1.away_team_goal) DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1026": "SELECT Team.team_long_name FROM Match JOIN Team ON Match.home_team_api_id = Team.team_api_id WHERE season = '2015/2016' AND (home_team_goal - away_team_goal) < 0 GROUP BY Team.team_long_name ORDER BY COUNT(*) ASC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1027": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id GROUP BY T1.player_name ORDER BY MAX(T2.penalties) DESC LIMIT 10\t----- bird -----\teuropean_football_2",
    "1028": "SELECT T2.team_long_name FROM Match AS T1 INNER JOIN Team AS T2 ON T1.away_team_api_id = T2.team_api_id INNER JOIN League AS T3 ON T1.league_id = T3.id WHERE T3.name = 'Scotland Premier League' AND T1.season = '2009/2010' GROUP BY T1.away_team_api_id ORDER BY COUNT(CASE WHEN T1.away_team_goal > T1.home_team_goal THEN 1 END) DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1029": "SELECT buildUpPlaySpeed FROM Team_Attributes WHERE buildUpPlaySpeed IN ( SELECT MAX(buildUpPlaySpeed) FROM Team_Attributes ORDER BY buildUpPlaySpeed DESC LIMIT 4 )\t----- bird -----\teuropean_football_2",
    "1030": "SELECT T2.name FROM Match AS T1 INNER JOIN League AS T2 ON T1.league_id = T2.id WHERE T1.season = '2015/2016' GROUP BY T2.id ORDER BY SUM(T1.home_team_goal = T1.away_team_goal) DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1031": "SELECT ROUND((JULIANDAY('now') - JULIANDAY(birthday))/365, 0) AS age FROM Player_Attributes WHERE sprint_speed >= 97 AND date >= '2013-01-01 00:00:00' AND date <= '2015-12-31 00:00:00'\t----- bird -----\teuropean_football_2",
    "1032": "SELECT l.name, COUNT(m.id) AS total_matches FROM League l JOIN Match m ON l.id = m.league_id GROUP BY l.name ORDER BY total_matches DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1033": "SELECT CAST(SUM(height) AS REAL) / COUNT(id) FROM Player WHERE birthday >= '1990-01-01 00:00:00' AND birthday < '1996-01-01 00:00:00'\t----- bird -----\teuropean_football_2",
    "1034": "SELECT player_api_id FROM Player_Attributes WHERE overall_rating > (SELECT AVG(overall_rating) FROM Player_Attributes WHERE substr(date,1,4) = '2010') AND substr(date,1,4) = '2010' ORDER BY overall_rating DESC;\t----- bird -----\teuropean_football_2",
    "1035": "SELECT team_fifa_api_id FROM Team_Attributes WHERE buildUpPlaySpeed BETWEEN 51 AND 59\t----- bird -----\teuropean_football_2",
    "1036": "SELECT T1.team_long_name FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.buildUpPlayPassing > (SELECT AVG(buildUpPlayPassing) FROM Team_Attributes WHERE buildUpPlayPassing IS NOT NULL) AND strftime('%Y', T2.date) = '2012'\t----- bird -----\teuropean_football_2",
    "1037": "SELECT CAST(SUM(CASE WHEN preferred_foot = 'left' AND birthday BETWEEN '1987-01-01 00:00:00' AND '1992-12-31 00:00:00' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(player_fifa_api_id) FROM Player;\t----- bird -----\teuropean_football_2",
    "1038": "SELECT T2.name AS league_name, SUM(T1.home_team_goal + T1.away_team_goal) AS total_goals FROM Match AS T1 INNER JOIN League AS T2 ON T1.league_id = T2.id GROUP BY T2.name ORDER BY total_goals ASC LIMIT 5;\t----- bird -----\teuropean_football_2",
    "1039": "SELECT T1.player_name, CAST(SUM(T2.long_shots) AS REAL) / COUNT(T2.player_fifa_api_id) FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_fifa_api_id = T2.player_fifa_api_id WHERE T1.player_name = 'Ahmed Samir Farag' GROUP BY T1.player_name\t----- bird -----\teuropean_football_2",
    "1040": "SELECT Player.player_name FROM Player INNER JOIN Player_Attributes ON Player.player_fifa_api_id = Player_Attributes.player_fifa_api_id WHERE Player.height > 180 GROUP BY Player.player_name ORDER BY AVG(Player_Attributes.heading_accuracy) DESC LIMIT 10;\t----- bird -----\teuropean_football_2",
    "1041": "SELECT T1.team_long_name FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.buildUpPlayDribblingClass = 'Normal' AND T2.date >= '2014-01-01 00:00:00' AND T2.date <= '2014-01-31 00:00:00' GROUP BY T1.team_long_name HAVING AVG(T2.chanceCreationPassing) < (SELECT AVG(chanceCreationPassing) FROM Team_Attributes WHERE date >= '2014-01-01 00:00:00' AND date <= '2014-01-31 00:00:00') ORDER BY AVG(T2.chanceCreationPassing) DESC;\t----- bird -----\teuropean_football_2",
    "1042": "SELECT L.name FROM League AS L INNER JOIN Match AS M ON L.id = M.league_id WHERE M.season = '2009/2010' GROUP BY L.name HAVING AVG(M.home_team_goal) > AVG(M.away_team_goal)\t----- bird -----\teuropean_football_2",
    "1043": "SELECT T2.team_short_name FROM Team AS T2 WHERE T2.team_long_name = 'Queens Park Rangers'\t----- bird -----\teuropean_football_2",
    "1044": "SELECT player_name FROM Player WHERE substr(birthday,1,4) = '1970' AND substr(birthday,6,2) = '10';\t----- bird -----\teuropean_football_2",
    "1045": "SELECT attacking_work_rate FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Franco Zennaro')\t----- bird -----\teuropean_football_2",
    "1046": "SELECT T1.buildUpPlayPositioningClass FROM Team_Attributes AS T1 INNER JOIN Team AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.team_long_name = 'ADO Den Haag'\t----- bird -----\teuropean_football_2",
    "1047": "SELECT heading_accuracy FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Francois Affolter') AND date = '2014-09-18 00:00:00'\t----- bird -----\teuropean_football_2",
    "1048": "SELECT PA.overall_rating FROM Player_Attributes AS PA INNER JOIN Player AS P ON PA.player_api_id = P.player_api_id WHERE P.player_name = 'Gabriel Tamas' AND strftime('%Y', PA.date) = '2011'\t----- bird -----\teuropean_football_2",
    "1049": "SELECT COUNT(*) FROM Match WHERE season = '2015/2016' AND league_id = (SELECT id FROM League WHERE name = 'Scotland Premier League')\t----- bird -----\teuropean_football_2",
    "1050": "SELECT preferred_foot FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player ORDER BY birthday DESC LIMIT 1)\t----- bird -----\teuropean_football_2",
    "1051": "SELECT player_name FROM Player WHERE player_api_id IN ( SELECT player_api_id FROM Player_Attributes WHERE potential = ( SELECT MAX(potential) FROM Player_Attributes ) )\t----- bird -----\teuropean_football_2",
    "1052": "SELECT COUNT(T1.id) FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.weight < 130 AND T1.preferred_foot = 'left' AND T1.attacking_work_rate = 'left'\t----- bird -----\teuropean_football_2",
    "1053": "SELECT Team.team_short_name FROM Team INNER JOIN Team_Attributes ON Team.team_api_id = Team_Attributes.team_api_id WHERE Team_Attributes.chanceCreationPassingClass = 'Risky'\t----- bird -----\teuropean_football_2",
    "1054": "SELECT defensive_work_rate FROM Player_Attributes INNER JOIN Player ON Player_Attributes.player_api_id = Player.player_api_id WHERE Player.player_name = 'David Wilson'\t----- bird -----\teuropean_football_2",
    "1055": "SELECT birthday FROM Player INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE overall_rating = (SELECT MAX(overall_rating) FROM Player_Attributes)\t----- bird -----\teuropean_football_2",
    "1056": "SELECT name FROM League WHERE country_id = (SELECT id FROM Country WHERE name = 'Netherlands')\t----- bird -----\teuropean_football_2",
    "1057": "SELECT AVG(home_team_goal) FROM Match INNER JOIN Country ON Match.country_id = Country.id WHERE Country.name = 'Poland' AND Match.season = '2010/2011'\t----- bird -----\teuropean_football_2",
    "1058": "SELECT Player.player_name FROM Player JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE Player.height = (SELECT MAX(height) FROM Player) OR Player.height = (SELECT MIN(height) FROM Player) GROUP BY Player.player_name ORDER BY AVG(Player_Attributes.finishing) DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1059": "SELECT player_name FROM Player WHERE height > 180\t----- bird -----\teuropean_football_2",
    "1060": "SELECT COUNT(*) AS cnt FROM Player WHERE strftime('%Y', birthday) > '1990'\t----- bird -----\teuropean_football_2",
    "1061": "SELECT COUNT(T1.id) FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id INNER JOIN Team AS T3 ON T2.team_api_id = T3.team_api_id INNER JOIN Team_Attributes AS T4 ON T3.team_fifa_api_id = T4.team_fifa_api_id WHERE T1.player_name LIKE 'Adam%' AND T1.weight > 170 AND T4.buildUpPlaySpeedClass = 'Fast'\t----- bird -----\teuropean_football_2",
    "1062": "SELECT Player.player_name FROM Player_Attributes INNER JOIN Player ON Player_Attributes.player_api_id = Player.player_api_id WHERE Player_Attributes.overall_rating > 80 AND strftime('%Y', Player_Attributes.date) BETWEEN '2008' AND '2010';\t----- bird -----\teuropean_football_2",
    "1063": "SELECT overall_rating FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Aaron Doran');\t----- bird -----\teuropean_football_2",
    "1064": "SELECT Player.player_name FROM Player_Attributes INNER JOIN Player ON Player_Attributes.player_api_id = Player.player_api_id WHERE Player_Attributes.preferred_foot = 'left';\t----- bird -----\teuropean_football_2",
    "1065": "SELECT T1.team_long_name FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.buildUpPlaySpeedClass = 'Fast'\t----- bird -----\teuropean_football_2",
    "1066": "SELECT T1.buildUpPlayPassingClass FROM Team_Attributes AS T1 INNER JOIN Team AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.team_short_name = 'CLB'\t----- bird -----\teuropean_football_2",
    "1067": "SELECT team_short_name FROM Team JOIN Team_Attributes ON Team.team_api_id = Team_Attributes.team_api_id WHERE buildUpPlayPassing > 70;\t----- bird -----\teuropean_football_2",
    "1068": "SELECT AVG(overall_rating) FROM Player_Attributes WHERE height > 170 AND strftime('%Y', date) BETWEEN '2010' AND '2015'\t----- bird -----\teuropean_football_2",
    "1069": "SELECT P.player_name FROM Player AS P ORDER BY P.height LIMIT 1\t----- bird -----\teuropean_football_2",
    "1070": "SELECT C.name FROM Country AS C INNER JOIN League AS L ON C.id = L.country_id WHERE L.name = 'Italy Serie A'\t----- bird -----\teuropean_football_2",
    "1071": "SELECT T.team_short_name FROM Team AS T INNER JOIN Team_Attributes AS TA ON T.team_api_id = TA.team_api_id WHERE TA.buildUpPlaySpeed = 31 AND TA.buildUpPlayDribbling = 53 AND TA.buildUpPlayPassing = 32\t----- bird -----\teuropean_football_2",
    "1072": "SELECT AVG(overall_rating) FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Aaron Doran')\t----- bird -----\teuropean_football_2",
    "1073": "SELECT COUNT(*) FROM Match WHERE league_id = (SELECT id FROM League WHERE name = 'Germany 1. Bundesliga') AND strftime('%Y-%m', date) BETWEEN '2008-08' AND '2008-10'\t----- bird -----\teuropean_football_2",
    "1074": "SELECT team_short_name FROM Team WHERE team_api_id IN (SELECT home_team_api_id FROM Match WHERE home_team_goal = 10)\t----- bird -----\teuropean_football_2",
    "1075": "SELECT player_name FROM Player WHERE balance = (SELECT MAX(balance) FROM Player WHERE potential = 61) AND potential = 61;\t----- bird -----\teuropean_football_2",
    "1076": "SELECT AVG(ball_control) FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Abdou Diallo') UNION SELECT AVG(ball_control) FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Aaron Appindangoye');\t----- bird -----\teuropean_football_2",
    "1077": "SELECT team_long_name FROM Team WHERE team_short_name = 'GEN'\t----- bird -----\teuropean_football_2",
    "1078": "SELECT Player.player_name FROM Player WHERE Player.player_name = 'Aaron Lennon' OR Player.player_name = 'Abdelaziz Barrada' ORDER BY Player.birthday ASC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1079": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id ORDER BY T1.height DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1080": "SELECT COUNT(T1.id) FROM Player_Attributes AS T1 WHERE T1.preferred_foot = 'left' AND T1.attacking_work_rate = 'low'\t----- bird -----\teuropean_football_2",
    "1081": "SELECT COUNTry.name FROM League JOIN COUNTry ON League.COUNTry_id = COUNTry.id WHERE League.name = 'Belgium Jupiler League'\t----- bird -----\teuropean_football_2",
    "1082": "SELECT League.name FROM League JOIN Country ON League.country_id = Country.id WHERE Country.name = 'Germany'\t----- bird -----\teuropean_football_2",
    "1083": "SELECT Player.player_name, MAX(Player_Attributes.overall_rating) FROM Player_Attributes INNER JOIN Player ON Player_Attributes.player_api_id = Player.player_api_id;\t----- bird -----\teuropean_football_2",
    "1084": "SELECT COUNT(Player.player_api_id) FROM Player JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE strftime('%Y', birthday)<'1986' AND defensive_work_rate = 'high'\t----- bird -----\teuropean_football_2",
    "1085": "SELECT Player.player_name FROM Player JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE Player.player_name IN ('Alexis', 'Ariel Borysiuk', 'Arouna Kone') ORDER BY Player_Attributes.crossing DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1086": "SELECT `heading_accuracy` FROM `Player_Attributes` INNER JOIN `Player` ON `Player_Attributes`.`player_api_id` = `Player`.`player_api_id` WHERE `Player`.`player_name` = 'Ariel Borysiuk'\t----- bird -----\teuropean_football_2",
    "1087": "SELECT COUNT(T1.id) FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.height > 180 AND T1.volleys > 70\t----- bird -----\teuropean_football_2",
    "1088": "SELECT Player.player_name FROM Player INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE Player_Attributes.volleys > 70 AND Player_Attributes.dribbling > 70;\t----- bird -----\teuropean_football_2",
    "1089": "SELECT COUNT(*) FROM Match WHERE season = '2008/2009' AND country_id = (SELECT id FROM Country WHERE name = 'Belgium')\t----- bird -----\teuropean_football_2",
    "1090": "SELECT long_passing FROM Player_Attributes WHERE birthday = (SELECT MAX(birthday) FROM Player)\t----- bird -----\teuropean_football_2",
    "1091": "SELECT COUNT(id) FROM Match WHERE league_id = (SELECT id FROM League WHERE name = 'Belgium Jupiler League') AND strftime('%Y', date) = '2009' AND strftime('%m', date) = '04'\t----- bird -----\teuropean_football_2",
    "1092": "SELECT L.name FROM League AS L INNER JOIN Match AS M ON L.id = M.league_id WHERE M.season = '2008/2009' GROUP BY L.id ORDER BY COUNT(M.id) DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1093": "SELECT CAST(SUM(overall_rating) AS REAL) / COUNT(id) FROM Player_Attributes WHERE strftime('%Y', birthday) < '1986'\t----- bird -----\teuropean_football_2",
    "1094": "SELECT ((SELECT overall_rating FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Ariel Borysiuk')) - (SELECT overall_rating FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Paulin Puel'))) / (SELECT overall_rating FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Paulin Puel')) * 100 as percentage_higher\t----- bird -----\teuropean_football_2",
    "1095": "SELECT AVG(buildUpPlaySpeed) FROM Team_Attributes WHERE team_api_id = (SELECT team_api_id FROM Team WHERE team_long_name = 'Heart of Midlothian')\t----- bird -----\teuropean_football_2",
    "1096": "SELECT AVG(T1.overall_rating) FROM Player_Attributes T1 JOIN Player T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Pietro Marino'\t----- bird -----\teuropean_football_2",
    "1097": "SELECT SUM(T1.crossing) FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Aaron Lennox'\t----- bird -----\teuropean_football_2",
    "1098": "SELECT MAX(chanceCreationPassing) AS Highest_Chance_Creation_Passing_Score, chanceCreationPassingClass AS Classification FROM Team_Attributes JOIN Team ON Team_Attributes.team_api_id = Team.team_api_id WHERE Team.team_long_name = 'Ajax'\t----- bird -----\teuropean_football_2",
    "1099": "SELECT preferred_foot FROM Player_Attributes JOIN Player ON Player_Attributes.player_api_id = Player.player_api_id WHERE player_name = 'Abdou Diallo'\t----- bird -----\teuropean_football_2",
    "1100": "SELECT MAX(overall_rating) AS highest_overall_rating FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Dorlan Pabon')\t----- bird -----\teuropean_football_2",
    "1101": "SELECT AVG(away_team_goal) FROM Match WHERE away_team_api_id = (SELECT team_api_id FROM Team WHERE team_long_name = 'Parma') AND country_id = (SELECT id FROM Country WHERE name = 'Italy')\t----- bird -----\teuropean_football_2",
    "1102": "SELECT T2.player_name FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.overall_rating = 77 AND T1.date = '2016-06-23' ORDER BY T2.birthday ASC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1103": "SELECT overall_rating FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Aaron Mooy') AND date = '2016-02-04 00:00:00'\t----- bird -----\teuropean_football_2",
    "1104": "SELECT potential FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Francesco Parravicini') AND date = '2010-08-30 00:00:00'\t----- bird -----\teuropean_football_2",
    "1105": "SELECT attacking_work_rate FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Francesco Migliore') AND date = '2015-05-01 00:00:00'\t----- bird -----\teuropean_football_2",
    "1106": "SELECT defensive_work_rate FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Kevin Berigaud') AND date = '2013-02-22 00:00:00'\t----- bird -----\teuropean_football_2",
    "1107": "SELECT T2.date FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'Kevin Constant' ORDER BY T2.crossing DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1108": "SELECT Team_Attributes.buildUpPlaySpeedClass FROM Team_Attributes JOIN Team ON Team_Attributes.team_api_id = Team.team_api_id WHERE Team.team_long_name = 'Willem II' AND Team_Attributes.date = '2012-02-22 00:00:00'\t----- bird -----\teuropean_football_2",
    "1109": "SELECT buildUpPlayDribblingClass FROM Team_Attributes JOIN Team ON Team_Attributes.team_api_id = Team.team_api_id WHERE Team.team_short_name = 'LEI' AND Team_Attributes.date = '2015-09-10 00:00:00'\t----- bird -----\teuropean_football_2",
    "1110": "SELECT T2.buildUpPlayPassingClass FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.team_long_name = 'FC Lorient' AND T2.date = '2010-02-22'\t----- bird -----\teuropean_football_2",
    "1111": "SELECT T2.chanceCreationPassingClass FROM Match AS T1 INNER JOIN Team AS T2 ON T1.home_team_api_id = T2.team_api_id WHERE T2.team_long_name = 'PEC Zwolle' AND T1.date = '2013-09-20 00:00:00'\t----- bird -----\teuropean_football_2",
    "1112": "SELECT TA.chanceCreationCrossingClass FROM Team AS T INNER JOIN Team_Attributes AS TA ON T.team_api_id = TA.team_api_id WHERE T.team_long_name = 'Hull City' AND TA.date = '2010-02-22 00:00:00'\t----- bird -----\teuropean_football_2",
    "1113": "SELECT T1.defenceAggressionClass FROM Team_Attributes AS T1 INNER JOIN Team AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.team_long_name = 'Hannover 96' AND T1.date = '2015-09-10 00:00:00'\t----- bird -----\teuropean_football_2",
    "1114": "SELECT AVG(overall_rating) FROM Player_Attributes WHERE player_api_id IN (SELECT player_api_id FROM Player WHERE player_name = 'Marko Arnautovic') AND date BETWEEN '2007-02-22 00:00:00' AND '2016-04-21 00:00:00'\t----- bird -----\teuropean_football_2",
    "1115": "SELECT (CAST((SELECT T1.overall_rating FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Landon Donovan' AND T1.date = '2013/7/12') - (SELECT T1.overall_rating FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Jordan Bowery' AND T1.date = '2013/7/12') AS REAL) / (SELECT T1.overall_rating FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Landon Donovan' AND T1.date = '2013/7/12') * 100)\t----- bird -----\teuropean_football_2",
    "1116": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id ORDER BY T1.height DESC LIMIT 5\t----- bird -----\teuropean_football_2",
    "1117": "SELECT player_api_id FROM Player ORDER BY weight DESC LIMIT 10\t----- bird -----\teuropean_football_2",
    "1118": "SELECT player_name FROM Player WHERE strftime('%Y', 'now') - strftime('%Y', birthday) >= 35;\t----- bird -----\teuropean_football_2",
    "1119": "SELECT SUM(home_team_goal) AS Total_Home_Team_Goals FROM Match WHERE home_player_1 IN (SELECT player_api_id FROM Player WHERE player_name = 'Aaron Lennon') OR home_player_2 IN (SELECT player_api_id FROM Player WHERE player_name = 'Aaron Lennon') OR home_player_3 IN (SELECT player_api_id FROM Player WHERE player_name = 'Aaron Lennon') OR home_player_4 IN (SELECT player_api_id FROM Player WHERE player_name = 'Aaron Lennon') OR home_player_5 IN (SELECT player_api_id FROM Player WHERE player_name = 'Aaron Lennon') OR home_player_6 IN (SELECT player_api_id FROM Player WHERE player_name = 'Aaron Lennon') OR home_player_7 IN (SELECT player_api_id FROM Player WHERE player_name = 'Aaron Lennon') OR home_player_8 IN (SELECT player_api_id FROM Player WHERE player_name = 'Aaron Lennon') OR home_player_9 IN (SELECT player_api_id FROM Player WHERE\t----- bird -----\teuropean_football_2",
    "1120": "SELECT SUM(M.away_team_goal) FROM Match AS M INNER JOIN Player AS P ON M.away_player_1 = P.player_api_id OR M.away_player_2 = P.player_api_id OR M.away_player_3 = P.player_api_id OR M.away_player_4 = P.player_api_id OR M.away_player_5 = P.player_api_id OR M.away_player_6 = P.player_api_id OR M.away_player_7 = P.player_api_id OR M.away_player_8 = P.player_api_id OR M.away_player_9 = P.player_api_id OR M.away_player_10 = P.player_api_id OR M.away_player_11 = P.player_api_id WHERE P.player_name = 'Daan Smith' OR P.player_name = 'Filipe Ferreira'\t----- bird -----\teuropean_football_2",
    "1121": "SELECT SUM(home_team_goal) FROM Match JOIN Player ON Match.home_player_1 = Player.player_api_id OR Match.home_player_2 = Player.player_api_id OR Match.home_player_3 = Player.player_api_id OR Match.home_player_4 = Player.player_api_id OR Match.home_player_5 = Player.player_api_id OR Match.home_player_6 = Player.player_api_id OR Match.home_player_7 = Player.player_api_id OR Match.home_player_8 = Player.player_api_id OR Match.home_player_9 = Player.player_api_id OR Match.home_player_10 = Player.player_api_id OR Match.home_player_11 = Player.player_api_id WHERE (strftime('%Y', 'now') - strftime('%Y', birthday)) <= 30;\t----- bird -----\teuropean_football_2",
    "1122": "SELECT Player.player_name FROM Player INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE Player_Attributes.overall_rating = (SELECT MAX(overall_rating) FROM Player_Attributes) LIMIT 10;\t----- bird -----\teuropean_football_2",
    "1123": "SELECT Player.player_name FROM Player INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE Player_Attributes.potential = (SELECT MAX(potential) FROM Player_Attributes)\t----- bird -----\teuropean_football_2",
    "1124": "SELECT player_name FROM Player_Attributes WHERE attacking_work_rate = 'high'\t----- bird -----\teuropean_football_2",
    "1125": "SELECT Player.player_name FROM Player INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE Player_Attributes.finishing = 1 ORDER BY (julianday('now') - julianday(Player.birthday)) DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1126": "SELECT Player.player_name FROM Player INNER JOIN Country ON Player.country_id = Country.id WHERE Country.name = 'Belgium'\t----- bird -----\teuropean_football_2",
    "1127": "SELECT Player.player_name, Country.name FROM Player JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id JOIN Country ON Player.country_id = Country.id WHERE Player_Attributes.vision > 89;\t----- bird -----\teuropean_football_2",
    "1128": "SELECT Country.name FROM Player JOIN Country ON Player.country_id = Country.id GROUP BY Country.name ORDER BY AVG(Player.weight) DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1129": "SELECT T1.team_long_name FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.buildUpPlaySpeedClass = 'Slow'\t----- bird -----\teuropean_football_2",
    "1130": "SELECT T2.team_short_name FROM Team AS T2 INNER JOIN Team_Attributes AS T1 ON T1.team_api_id = T2.team_api_id WHERE T1.chanceCreationPassingClass = 'Safe'\t----- bird -----\teuropean_football_2",
    "1131": "SELECT AVG(T2.height) FROM Player AS T1 INNER JOIN Country AS T2 ON T1.country_id = T2.id WHERE T2.name = 'Italy'\t----- bird -----\teuropean_football_2",
    "1132": "SELECT Player.player_name FROM Player WHERE Player.height > 180 ORDER BY Player.player_name LIMIT 3;\t----- bird -----\teuropean_football_2",
    "1133": "SELECT COUNT(id) AS cnt FROM Player WHERE player_name LIKE 'Aaron%' AND birthday > '1990'\t----- bird -----\teuropean_football_2",
    "1134": "SELECT (SELECT jumping FROM Player_Attributes WHERE id = 6) - (SELECT jumping FROM Player_Attributes WHERE id = 23) as difference;\t----- bird -----\teuropean_football_2",
    "1135": "SELECT PA.player_api_id FROM Player_Attributes AS PA INNER JOIN Player AS P ON PA.player_api_id = P.player_api_id WHERE PA.potential = (SELECT MIN(potential) FROM Player_Attributes) AND PA.preferred_foot = 'right' ORDER BY PA.overall_rating DESC LIMIT 3\t----- bird -----\teuropean_football_2",
    "1136": "SELECT COUNT(*) FROM Player_Attributes WHERE crossing = (SELECT MAX(crossing) FROM Player_Attributes) AND preferred_foot = 'left'\t----- bird -----\teuropean_football_2",
    "1137": "SELECT (CAST(SUM(CASE WHEN P.stamina > 80 AND P.strength > 80 THEN 1 ELSE 0 END) AS REAL) / COUNT(*)) * 100 FROM Player_Attributes AS P;\t----- bird -----\teuropean_football_2",
    "1138": "SELECT T2.name FROM League AS T1 INNER JOIN Country AS T2 ON T1.country_id = T2.id WHERE T1.name = 'Poland Ekstraklasa'\t----- bird -----\teuropean_football_2",
    "1139": "SELECT home_team_goal, away_team_goal FROM Match WHERE date LIKE '2008-09-24%' AND league_id = (SELECT id FROM League WHERE name = 'Belgian Jupiler League')\t----- bird -----\teuropean_football_2",
    "1140": "SELECT T1.sprint_speed, T1.agility, T1.acceleration FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Alexis Blin'\t----- bird -----\teuropean_football_2",
    "1141": "SELECT T2.buildUpPlaySpeedClass FROM Team_Attributes AS T1 INNER JOIN Team AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.team_long_name = 'KSV Cercle Brugge'\t----- bird -----\teuropean_football_2",
    "1142": "SELECT COUNT(*) FROM Match WHERE season = '2015/2016' AND league_id = (SELECT id FROM League WHERE name = 'Italian Serie A')\t----- bird -----\teuropean_football_2",
    "1143": "SELECT MAX(home_team_goal) FROM Match WHERE league_id = (SELECT id FROM League WHERE name = 'Netherlands Eredivisie') AND home_team_goal IS NOT NULL;\t----- bird -----\teuropean_football_2",
    "1144": "SELECT T1.finishing, T1.curve FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.weight = (SELECT MAX(weight) FROM Player)\t----- bird -----\teuropean_football_2",
    "1145": "SELECT Team.team_long_name FROM Match JOIN Team ON Match.home_team_api_id = Team.team_api_id WHERE Match.season = '2015/2016' GROUP BY Match.league_id ORDER BY COUNT(Match.id) DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1146": "SELECT T2.team_long_name FROM Match AS T1 INNER JOIN Team AS T2 ON T1.away_team_api_id = T2.team_api_id GROUP BY T2.team_long_name ORDER BY MAX(T1.away_team_goal) DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1147": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id ORDER BY T2.overall_rating DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1148": "SELECT CAST(SUM(CASE WHEN T1.height < 180 AND T2.strength > 70 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id;\t----- bird -----\teuropean_football_2",
    "1149": "SELECT COUNT(CASE WHEN SEX = 'M' AND Admission = '+' THEN ID END) AS InPatientMale, COUNT(CASE WHEN SEX = 'M' AND Admission = '-' THEN ID END) AS OutPatientMale, (COUNT(CASE WHEN SEX = 'M' AND Admission = '+' THEN ID END) - COUNT(CASE WHEN SEX = 'M' AND Admission = '-' THEN ID END)) AS Deviation, ((COUNT(CASE WHEN SEX = 'M' AND Admission = '+' THEN ID END) - COUNT(CASE WHEN SEX = 'M' AND Admission = '-' THEN ID END)) / COUNT(CASE WHEN SEX = 'M' THEN ID END)) * 100 AS DeviationPercentage FROM Patient\t----- bird -----\tthrombosis_prediction",
    "1150": "SELECT (COUNT(ID) * 100 / (SELECT COUNT(ID) FROM Patient WHERE SEX = 'F')) AS percentage FROM Patient WHERE SEX = 'F' AND year(Birthday) > 1930\t----- bird -----\tthrombosis_prediction",
    "1151": "SELECT COUNT(DISTINCT T1.ID) * 100.0 / (SELECT COUNT(DISTINCT ID) FROM Patient WHERE Birthday BETWEEN '1930-01-01' AND '1940-12-31') AS Percentage FROM Patient AS T1 WHERE T1.Birthday BETWEEN '1930-01-01' AND '1940-12-31' AND T1.Admission = '+'\t----- bird -----\tthrombosis_prediction",
    "1152": "SELECT CAST(SUM(CASE WHEN T1.Admission = '+' THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN T1.Admission = '-' THEN 1 ELSE 0 END) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.Diagnosis = 'SLE'\t----- bird -----\tthrombosis_prediction",
    "1153": "SELECT Diagnosis, Date FROM Examination WHERE ID = 30609\t----- bird -----\tthrombosis_prediction",
    "1154": "SELECT Patient.SEX, Patient.Birthday, Examination.`Examination Date`, Examination.Symptoms FROM Patient INNER JOIN Examination ON Patient.ID = Examination.ID WHERE Patient.ID = 163109;\t----- bird -----\tthrombosis_prediction",
    "1155": "SELECT Patient.ID, Patient.SEX, Patient.Birthday FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.LDH > 500;\t----- bird -----\tthrombosis_prediction",
    "1156": "SELECT Patient.ID, ROUND((julianday('now') - julianday(Patient.Birthday)) / 365) AS Age FROM Examination INNER JOIN Patient ON Examination.ID = Patient.ID WHERE Examination.RVVT = '+';\t----- bird -----\tthrombosis_prediction",
    "1157": "SELECT Patient.ID, Patient.SEX, Examination.Diagnosis FROM Patient INNER JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.Thrombosis = 2;\t----- bird -----\tthrombosis_prediction",
    "1158": "SELECT Patient.ID, Patient.SEX, Patient.Birthday, Laboratory.`T-CHO` FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE YEAR(Patient.Birthday) = 1937 AND Laboratory.`T-CHO` >= 250;\t----- bird -----\tthrombosis_prediction",
    "1159": "SELECT Patient.ID, Patient.SEX, Patient.Diagnosis FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.ALB < 3.5;\t----- bird -----\tthrombosis_prediction",
    "1160": "SELECT COUNT(DISTINCT T1.ID) * 100 / (SELECT COUNT(DISTINCT T2.ID) FROM Patient AS T2 WHERE T2.SEX = 'F') FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T2.SEX = 'F' AND (T1.TP < 6.0 OR T1.TP > 8.5)\t----- bird -----\tthrombosis_prediction",
    "1161": "SELECT AVG(aCL IgG) AS average_anti_cardiolipin_antibody_concentration FROM Examination INNER JOIN Patient ON Examination.ID = Patient.ID WHERE Admission = '+' AND (strftime('%Y', 'now') - strftime('%Y', Birthday)) >= 50;\t----- bird -----\tthrombosis_prediction",
    "1162": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'F' AND YEAR(T1.Description) = 1997 AND T1.Admission = '-'\t----- bird -----\tthrombosis_prediction",
    "1163": "SELECT YEAR(`First Date`) - YEAR(Birthday) AS Age FROM Patient ORDER BY Age ASC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1164": "SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.Thrombosis = 1 AND T2.`Examination Date` LIKE '1997%' AND T1.SEX = 'F'\t----- bird -----\tthrombosis_prediction",
    "1165": "SELECT MAX(year(Birthday)) - MIN(year(Birthday)) AS age_gap FROM Patient WHERE ID IN ( SELECT ID FROM Laboratory WHERE TG >= 200 )\t----- bird -----\tthrombosis_prediction",
    "1166": "SELECT T1.Symptoms, T1.Diagnosis FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T2.Birthday = (SELECT MIN(Birthday) FROM Patient)\t----- bird -----\tthrombosis_prediction",
    "1167": "SELECT AVG(monthly_count) AS avg_male_patients_per_month FROM ( SELECT COUNT(DISTINCT L.ID) AS monthly_count FROM Laboratory AS L INNER JOIN Patient AS P ON L.ID = P.ID WHERE P.SEX = 'M' AND L.Date BETWEEN '1998-01-01' AND '1998-12-31' GROUP BY MONTH(L.Date) ) AS monthly_counts;\t----- bird -----\tthrombosis_prediction",
    "1168": "SELECT MAX(L.Date) AS \"Laboratory Completion Date\", (strftime('%Y', L.`First Date`) - strftime('%Y', P.Birthday)) AS \"Age at Initial Hospital Arrival\" FROM Laboratory AS L INNER JOIN Patient AS P ON L.ID = P.ID WHERE P.Diagnosis = 'SJS' ORDER BY P.Birthday DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1169": "SELECT CAST(SUM(CASE WHEN SEX = 'M' AND UA <= 8.0 THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN SEX = 'F' AND UA <= 6.5 THEN 1 ELSE 0 END) FROM Patient p JOIN Laboratory l ON p.ID = l.ID\t----- bird -----\tthrombosis_prediction",
    "1170": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 LEFT JOIN Examination AS T2 ON T1.ID = T2.ID WHERE strftime('%Y', T2.`Examination Date`) - strftime('%Y', T1.`First Date`) >= 1 OR T2.ID IS NULL\t----- bird -----\tthrombosis_prediction",
    "1171": "SELECT COUNT(DISTINCT e.ID) FROM Examination e JOIN Patient p ON e.ID = p.ID WHERE YEAR(p.Birthday) < 18 AND `Examination Date` BETWEEN '1990-01-01' AND '1993-12-31'\t----- bird -----\tthrombosis_prediction",
    "1172": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND T2.`T-BIL` > 2.0;\t----- bird -----\tthrombosis_prediction",
    "1173": "SELECT Diagnosis FROM Examination WHERE `Examination Date` BETWEEN '1985-01-01' AND '1995-12-31' GROUP BY Diagnosis ORDER BY COUNT(Diagnosis) DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1174": "SELECT AVG(strftime('%Y', '1999') - strftime('%Y', Birthday)) FROM Patient WHERE ID IN (SELECT ID FROM Laboratory WHERE Date BETWEEN '1991-10-01' AND '1991-10-30')\t----- bird -----\tthrombosis_prediction",
    "1175": "SELECT SUBTRACT(strftime('%Y', E.`Examination Date`), strftime('%Y', P.Birthday)) AS Age, E.Diagnosis FROM Examination AS E INNER JOIN Patient AS P ON E.ID = P.ID WHERE HGB = (SELECT MAX(HGB) FROM Examination)\t----- bird -----\tthrombosis_prediction",
    "1176": "SELECT `ANA` FROM Examination WHERE ID = 3605340 AND `Examination Date` = '1996-12-02'\t----- bird -----\tthrombosis_prediction",
    "1177": "SELECT `T-CHO` FROM Laboratory WHERE ID = 2927464 AND Date = '1995-09-04' AND `T-CHO` < 250\t----- bird -----\tthrombosis_prediction",
    "1178": "SELECT SEX FROM Patient WHERE ID = (SELECT ID FROM Examination WHERE Diagnosis = 'AORTITIS' ORDER BY `Examination Date` LIMIT 1)\t----- bird -----\tthrombosis_prediction",
    "1179": "SELECT T1.`aCL IgM` FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T2.Diagnosis = 'SLE' AND T2.Description = '1994-02-19' AND T1.`Examination Date` = '1993-11-12'\t----- bird -----\tthrombosis_prediction",
    "1180": "SELECT P.SEX FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE P.SEX = 'M' AND L.GPT = 9 AND L.Date = '1992-06-12'\t----- bird -----\tthrombosis_prediction",
    "1181": "SELECT SUBTRACT('1992', year(Birthday)) AS Age FROM Patient WHERE ID IN (SELECT ID FROM Laboratory WHERE UA = '8.4' AND Date = '1991-10-21')\t----- bird -----\tthrombosis_prediction",
    "1182": "SELECT COUNT(ID) FROM Laboratory WHERE ID IN ( SELECT ID FROM Patient WHERE `First Date` = '1991-06-13' AND Diagnosis = 'SJS' ) AND Date LIKE '1995%'\t----- bird -----\tthrombosis_prediction",
    "1183": "SELECT T1.Diagnosis FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.`Examination Date` = '1997-01-27' AND T2.`First Date` = (SELECT MIN(`First Date`) FROM Patient WHERE ID = T1.ID) AND T1.Diagnosis = 'SLE'\t----- bird -----\tthrombosis_prediction",
    "1184": "SELECT Examination.Symptoms FROM Examination INNER JOIN Patient ON Examination.ID = Patient.ID WHERE Patient.Birthday = '1959-03-01' AND Examination.`Examination Date` = '1993-09-27'\t----- bird -----\tthrombosis_prediction",
    "1185": "SELECT ((SELECT `T-CHO` FROM Laboratory WHERE ID = (SELECT ID FROM Patient WHERE Birthday = '1959-02-18') AND Date like '1981-11-%') - (SELECT `T-CHO` FROM Laboratory WHERE ID = (SELECT ID FROM Patient WHERE Birthday = '1959-02-18') AND Date like '1981-12-%')) / (SELECT `T-CHO` FROM Laboratory WHERE ID = (SELECT ID FROM Patient WHERE Birthday = '1959-02-18') AND Date like '1981-11-%') * 100 as decrease_rate;\t----- bird -----\tthrombosis_prediction",
    "1186": "SELECT T1.ID FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.Diagnosis = 'Behcet' AND YEAR(T2.`Examination Date`) >= 1997 AND YEAR(T2.`Examination Date`) < 1998\t----- bird -----\tthrombosis_prediction",
    "1187": "SELECT T1.ID FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.Date BETWEEN '1987-07-06' AND '1996-01-31' AND T2.GPT > 30 AND T2.ALB < 4;\t----- bird -----\tthrombosis_prediction",
    "1188": "SELECT T1.ID FROM Patient AS T1 WHERE T1.SEX = 'F' AND YEAR(T1.Birthday) = 1964 AND T1.Admission = '+'\t----- bird -----\tthrombosis_prediction",
    "1189": "SELECT COUNT(*) FROM Examination WHERE Thrombosis = 2 AND `ANA Pattern` = 'S' AND `aCL IgM` > (SELECT AVG(`aCL IgM`) * 1.2 FROM Examination)\t----- bird -----\tthrombosis_prediction",
    "1190": "SELECT COUNT(*) * 100 / (SELECT COUNT(*) FROM Laboratory WHERE `U-PRO` > 0 AND `U-PRO` < 30) FROM Laboratory WHERE UA <= 6.5 AND `U-PRO` > 0 AND `U-PRO` < 30\t----- bird -----\tthrombosis_prediction",
    "1191": "SELECT CAST(SUM(CASE WHEN T1.SEX = 'M' AND T1.Diagnosis = 'BEHCET' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(CASE WHEN YEAR(T1.`First Date`) = '1981' THEN 1 ELSE NULL END) FROM Patient AS T1 WHERE YEAR(T1.`First Date`) = '1981'\t----- bird -----\tthrombosis_prediction",
    "1192": "SELECT T1.ID, T1.SEX, T1.Birthday, T1.Description, T1.`First Date`, T1.Admission, T1.Diagnosis FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Admission = '-' AND T2.Date LIKE '1991-10%' AND T2.`T-BIL` < 2.0;\t----- bird -----\tthrombosis_prediction",
    "1193": "SELECT COUNT(e.ID) FROM Examination e JOIN Patient p ON e.ID = p.ID WHERE `ANA Pattern` != 'P' AND p.SEX = 'F' AND p.Birthday BETWEEN '1980-01-01' AND '1989-12-31'\t----- bird -----\tthrombosis_prediction",
    "1194": "SELECT T1.SEX FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID INNER JOIN Laboratory AS T3 ON T1.ID = T3.ID WHERE T2.Diagnosis = 'PSS' AND T3.CRP = '2+' AND T3.CRE = 1 AND T3.LDH = 123\t----- bird -----\tthrombosis_prediction",
    "1195": "SELECT AVG(ALB) FROM Laboratory JOIN Patient ON Laboratory.ID = Patient.ID WHERE Patient.SEX = 'F' AND Laboratory.PLT > 400 AND Patient.Diagnosis = 'SLE'\t----- bird -----\tthrombosis_prediction",
    "1196": "SELECT Symptoms FROM Examination WHERE Diagnosis = 'SLE' GROUP BY Symptoms ORDER BY COUNT(Symptoms) DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1197": "SELECT T1.`First Date`, T1.Diagnosis FROM Patient AS T1 WHERE T1.ID = 48473\t----- bird -----\tthrombosis_prediction",
    "1198": "SELECT COUNT(Patient.ID) FROM Patient WHERE SEX = 'F' AND Diagnosis = 'APS'\t----- bird -----\tthrombosis_prediction",
    "1199": "SELECT COUNT(DISTINCT T1.ID) FROM Laboratory AS T1 WHERE YEAR(T1.Date) = '1997' AND (T1.TP < 6 OR T1.TP > 8.5)\t----- bird -----\tthrombosis_prediction",
    "1200": "SELECT CAST(SUM(CASE WHEN T1.Symptoms LIKE '%thrombocytopenia%' THEN 1 ELSE 0 END) AS REAL) * 100 / SUM(CASE WHEN T1.Diagnosis LIKE '%SLE%' THEN 1 ELSE 0 END) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID\t----- bird -----\tthrombosis_prediction",
    "1201": "SELECT CAST(SUM(CASE WHEN T2.SEX = 'F' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE strftime('%Y', T1.Birthday) = '1980' AND T2.RA = 'RA'\t----- bird -----\tthrombosis_prediction",
    "1202": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND T2.`Examination Date` BETWEEN '1995-01-01' AND '1997-12-31' AND T2.Diagnosis = 'BEHCET' AND T1.Admission = '-'\t----- bird -----\tthrombosis_prediction",
    "1203": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'F' AND T2.WBC < 3.5\t----- bird -----\tthrombosis_prediction",
    "1204": "SELECT DATEDIFF(`Examination Date`, `First Date`) FROM Examination INNER JOIN Patient ON Examination.ID = Patient.ID WHERE Patient.ID = 821298\t----- bird -----\tthrombosis_prediction",
    "1205": "SELECT CASE WHEN P.SEX = 'M' AND L.UA > 8.0 THEN 'Above normal range' WHEN P.SEX = 'F' AND L.UA > 6.5 THEN 'Above normal range' ELSE 'Within normal range' END AS Uric_Acid_Status FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE P.ID = 57266\t----- bird -----\tthrombosis_prediction",
    "1206": "SELECT Date FROM Laboratory WHERE ID = '48473' AND GOT >= 60\t----- bird -----\tthrombosis_prediction",
    "1207": "SELECT P.ID, P.SEX, P.Birthday FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE L.GOT < 60 AND YEAR(L.Date) = 1994\t----- bird -----\tthrombosis_prediction",
    "1208": "SELECT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND T2.GPT >= 60\t----- bird -----\tthrombosis_prediction",
    "1209": "SELECT Diagnosis FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE GPT > 60 ORDER BY Birthday ASC;\t----- bird -----\tthrombosis_prediction",
    "1210": "SELECT AVG(LDH) FROM Laboratory WHERE LDH < 500\t----- bird -----\tthrombosis_prediction",
    "1211": "SELECT P.ID, (YEAR(CURRENT_TIMESTAMP) - YEAR(P.Birthday)) AS age FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE L.LDH BETWEEN 600 AND 800;\t----- bird -----\tthrombosis_prediction",
    "1212": "SELECT T1.ID, T1.Admission FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.ALP < 300 AND T1.Admission = '+';\t----- bird -----\tthrombosis_prediction",
    "1213": "SELECT ID FROM Patient WHERE Birthday = '1982-04-01'; SELECT ID, ALP FROM Laboratory WHERE ID = (SELECT ID FROM Patient WHERE Birthday = '1982-04-01') AND ALP < 300;\t----- bird -----\tthrombosis_prediction",
    "1214": "SELECT ID, SEX, Birthday FROM Patient WHERE ID IN ( SELECT ID FROM Laboratory WHERE TP < 6.0 )\t----- bird -----\tthrombosis_prediction",
    "1215": "SELECT TP - 8.5 AS Deviation_TP FROM Laboratory WHERE ID IN (SELECT ID FROM Patient WHERE SEX = 'F') AND TP > 8.5\t----- bird -----\tthrombosis_prediction",
    "1216": "SELECT P.ID, P.Birthday FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE P.SEX = 'M' AND (L.ALB <= 3.5 OR L.ALB >= 5.5) ORDER BY P.Birthday DESC;\t----- bird -----\tthrombosis_prediction",
    "1217": "SELECT P.S. The SQL query provided is incomplete and needs to be revised to include the necessary conditions for filtering patients born in 1982 and checking if their albumin levels are within the normal range.\t----- bird -----\tthrombosis_prediction",
    "1218": "SELECT COUNT(ID) * 100.0 / (SELECT COUNT(ID) FROM Patient WHERE SEX = 'F') FROM Laboratory WHERE (UA > 8.0 AND SEX = 'M') OR (UA > 6.5 AND SEX = 'F')\t----- bird -----\tthrombosis_prediction",
    "1219": "SELECT AVG(UA) FROM Laboratory WHERE Date = (SELECT MAX(Date) FROM Laboratory WHERE ID = Patient.ID) AND UA < 8.0 AND SEX = 'M' OR UA < 6.5 AND SEX = 'F'\t----- bird -----\tthrombosis_prediction",
    "1220": "SELECT ID, SEX, Birthday FROM Patient WHERE ID IN (SELECT ID FROM Laboratory WHERE UN = 29)\t----- bird -----\tthrombosis_prediction",
    "1221": "SELECT ID, SEX, Birthday FROM Patient WHERE ID IN (SELECT ID FROM Laboratory WHERE UN < 30 AND Diagnosis = 'RA')\t----- bird -----\tthrombosis_prediction",
    "1222": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND T2.CRE >= 1.5\t----- bird -----\tthrombosis_prediction",
    "1223": "SELECT CASE WHEN SUM(CASE WHEN SEX = 'M' AND CRE >= 1.5 THEN 1 ELSE 0 END) > SUM(CASE WHEN SEX = 'F' AND CRE >= 1.5 THEN 1 ELSE 0 END) THEN 'True' ELSE 'False' END AS Result FROM Laboratory INNER JOIN Patient ON Laboratory.ID = Patient.ID\t----- bird -----\tthrombosis_prediction",
    "1224": "SELECT Patient.ID, Patient.SEX, Patient.Birthday FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.`T-BIL` = (SELECT MAX(`T-BIL`) FROM Laboratory)\t----- bird -----\tthrombosis_prediction",
    "1225": "SELECT P.S. The SQL query provided is incomplete. To complete the query, you would need to specify the columns to select from the Patient table and join it with the Laboratory table on the ID column. Additionally, you would need to add a WHERE clause to filter for T-BIL levels not within the normal range (T-BIL >= 2.0) and then group the results by sex.\t----- bird -----\tthrombosis_prediction",
    "1226": "SELECT T1.ID, T2.`T-CHO` FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.`T-CHO` = (SELECT MAX(`T-CHO`) FROM Laboratory) AND T1.Birthday = (SELECT MIN(Birthday) FROM Patient)\t----- bird -----\tthrombosis_prediction",
    "1227": "SELECT AVG(YEAR(date('now')) - YEAR(P.birthday)) FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE P.SEX = 'M' AND L.`T-CHO` >= 250;\t----- bird -----\tthrombosis_prediction",
    "1228": "SELECT T1.ID, T1.Diagnosis FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.TG > 300;\t----- bird -----\tthrombosis_prediction",
    "1229": "SELECT COUNT(*) FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE TG >= 200 AND (strftime('%Y', 'now') - strftime('%Y', Birthday)) > 50;\t----- bird -----\tthrombosis_prediction",
    "1230": "SELECT DISTINCT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Admission = '-' AND T2.CPK < 250\t----- bird -----\tthrombosis_prediction",
    "1231": "SELECT COUNT(L.ID) FROM Patient P JOIN Laboratory L ON P.ID = L.ID WHERE YEAR(P.Birthday) BETWEEN 1936 AND 1956 AND P.SEX = 'M' AND L.CPK >= 250\t----- bird -----\tthrombosis_prediction",
    "1232": "SELECT P.ID, P.SEX, (strftime('%Y', 'now') - strftime('%Y', P.Birthday)) AS age FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE L.GLU >= 180 AND L.`T-CHO` < 250;\t----- bird -----\tthrombosis_prediction",
    "1233": "SELECT P.ID, L.GLU FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE YEAR(P.Description) >= 1991 AND L.GLU < 180;\t----- bird -----\tthrombosis_prediction",
    "1234": "SELECT T1.ID, T1.SEX, T1.Birthday FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.WBC <= 3.5 OR T2.WBC >= 9.0 GROUP BY T1.SEX, T1.ID, T1.Birthday ORDER BY ABS(2022 - YEAR(T1.Birthday)) ASC;\t----- bird -----\tthrombosis_prediction",
    "1235": "SELECT T1.ID, (YEAR(CURRENT_TIMESTAMP) - YEAR(T1.Birthday)) AS age, T1.Diagnosis FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.RBC < 3.5;\t----- bird -----\tthrombosis_prediction",
    "1236": "SELECT T1.ID, T1.SEX, T1.Birthday, T1.Admission FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'F' AND (YEAR(CURRENT_TIMESTAMP) - YEAR(T1.Birthday)) >= 50 AND (T2.RBC <= 3.5 OR T2.RBC >= 6.0) ORDER BY T1.ID;\t----- bird -----\tthrombosis_prediction",
    "1237": "SELECT T1.ID, T2.SEX FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Admission = '-' AND T2.HGB < 10\t----- bird -----\tthrombosis_prediction",
    "1238": "SELECT T1.ID, T1.SEX FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.Diagnosis = 'SLE' AND T2.HGB > 10 AND T2.HGB < 17 ORDER BY T1.Birthday ASC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1239": "SELECT T1.ID, ROUND((julianday('now') - julianday(T2.Birthday)) / 365) AS Age FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.HCT >= 52 GROUP BY T1.ID HAVING COUNT(T1.ID) >= 2;\t----- bird -----\tthrombosis_prediction",
    "1240": "SELECT AVG(HCT) FROM Laboratory WHERE Date LIKE '1991%' AND HCT < 29\t----- bird -----\tthrombosis_prediction",
    "1241": "SELECT SUBTRACT( (SELECT COUNT(*) FROM Laboratory WHERE PLT < 100), (SELECT COUNT(*) FROM Laboratory WHERE PLT > 400) ) as \"Difference in Number of Patients with Abnormal Platelet Levels\"\t----- bird -----\tthrombosis_prediction",
    "1242": "SELECT P.ID, P.Birthday, L.PLT FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE L.Date LIKE '1984%' AND (YEAR(CURRENT_TIMESTAMP) - YEAR(P.Birthday)) < 50 AND L.PLT BETWEEN 100 AND 400;\t----- bird -----\tthrombosis_prediction",
    "1243": "SELECT CAST(SUM(CASE WHEN T2.PT >= 14 AND T1.SEX = 'F' THEN 1 ELSE 0 END) AS REAL) * 100 / SUM(CASE WHEN T2.PT >= 14 THEN 1 ELSE 0 END) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE strftime('%Y', 'now') - strftime('%Y', T1.Birthday) > 55;\t----- bird -----\tthrombosis_prediction",
    "1244": "SELECT T1.ID, T1.`First Date` FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE year(T1.`First Date`) > 1992 AND T2.PT < 14;\t----- bird -----\tthrombosis_prediction",
    "1245": "SELECT COUNT(*) FROM Examination WHERE `Examination Date` > '1997-01-01' AND APTT < 45\t----- bird -----\tthrombosis_prediction",
    "1246": "SELECT COUNT(DISTINCT p.ID) FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE e.APTT > 45 AND e.Thrombosis = 3\t----- bird -----\tthrombosis_prediction",
    "1247": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND T2.WBC BETWEEN 3.5 AND 9.0 AND (T2.FG <= 150 OR T2.FG >= 450)\t----- bird -----\tthrombosis_prediction",
    "1248": "SELECT COUNT(DISTINCT P.ID) FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE P.Birthday > '1980-01-01' AND L.FG NOT BETWEEN 150 AND 450;\t----- bird -----\tthrombosis_prediction",
    "1249": "SELECT Diagnosis FROM Examination WHERE `U-PRO` >= 30\t----- bird -----\tthrombosis_prediction",
    "1250": "SELECT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.`U-PRO` > 0 AND T2.`U-PRO` < 30 AND T1.Diagnosis = 'SLE'\t----- bird -----\tthrombosis_prediction",
    "1251": "SELECT COUNT(DISTINCT T1.ID) FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.`aCL IgG` < 900 AND T1.Symptoms = 'abortion'\t----- bird -----\tthrombosis_prediction",
    "1252": "SELECT COUNT(DISTINCT T1.ID) FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.`aCL IgG` BETWEEN 900 AND 2000 AND T1.Symptoms IS NOT NULL\t----- bird -----\tthrombosis_prediction",
    "1253": "SELECT T1.Diagnosis FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.IGA BETWEEN 80 AND 500 ORDER BY T2.IGA DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1254": "SELECT COUNT(ID) FROM Laboratory WHERE IGA BETWEEN 80 AND 500 AND Date > '1990-01-01' AND ID IN (SELECT ID FROM Patient WHERE strftime('%Y', `First Date`) >= '1990')\t----- bird -----\tthrombosis_prediction",
    "1255": "SELECT Diagnosis FROM Examination WHERE `aCL IgM` NOT BETWEEN 40 AND 400 GROUP BY Diagnosis ORDER BY COUNT(Diagnosis) DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1256": "SELECT COUNT(*) FROM Patient WHERE ID NOT IN (SELECT ID FROM Laboratory WHERE CRP LIKE '+' OR CRP LIKE '-' OR CRP < 1.0) AND Description IS NULL\t----- bird -----\tthrombosis_prediction",
    "1257": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.CRP NOT IN('+-', '-') AND T2.CRP >= 1.0 AND (YEAR(CURDATE()) - YEAR(T1.Birthday)) < 18\t----- bird -----\tthrombosis_prediction",
    "1258": "SELECT COUNT(DISTINCT L.ID) FROM Laboratory AS L INNER JOIN Patient AS P ON L.ID = P.ID WHERE L.RF IN ('-', '+-') AND L.KCT = '+'\t----- bird -----\tthrombosis_prediction",
    "1259": "SELECT Diagnosis FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Birthday > '1995-01-01' AND RA IN ('-', '+-')\t----- bird -----\tthrombosis_prediction",
    "1260": "SELECT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.RF < 20 AND (YEAR(CURDATE()) - YEAR(T1.Birthday)) > 60\t----- bird -----\tthrombosis_prediction",
    "1261": "SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.RF < 20 AND T2.Thrombosis = '0'\t----- bird -----\tthrombosis_prediction",
    "1262": "SELECT COUNT(DISTINCT T1.ID) FROM Laboratory AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.C3 > 35 AND T2.\"ANA Pattern\" = 'P'\t----- bird -----\tthrombosis_prediction",
    "1263": "SELECT T1.ID FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.HCT < 29 OR T1.HCT > 52 ORDER BY T1.`aCL IgA` DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1264": "SELECT COUNT(DISTINCT T1.ID) FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Thrombosis = 1 AND T2.C4 > 10\t----- bird -----\tthrombosis_prediction",
    "1265": "SELECT COUNT(DISTINCT T1.ID) FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.RNP IN ('-', '+-') AND T2.Admission = '+'\t----- bird -----\tthrombosis_prediction",
    "1266": "SELECT p.Birthday FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE l.RNP NOT IN ('-', '+-') ORDER BY p.Birthday DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1267": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.SM IN ('-', '+-') AND T2.Thrombosis = '1'\t----- bird -----\tthrombosis_prediction",
    "1268": "SELECT ID FROM Patient WHERE ID IN (SELECT ID FROM Laboratory WHERE SM NOT IN ('-', '+-')) ORDER BY Birthday DESC LIMIT 3\t----- bird -----\tthrombosis_prediction",
    "1269": "SELECT ID FROM Examination WHERE `Examination Date` >= '1997-01-01' AND SC170 IN ('-', '+-')\t----- bird -----\tthrombosis_prediction",
    "1270": "SELECT COUNT(DISTINCT CASE WHEN T3.Sex = 'M' AND T3.Symptoms = 'vertigo' THEN T3.ID END) AS Male_Vertigo FROM Laboratory AS T1 INNER JOIN Patient AS T3 ON T1.ID = T3.ID WHERE T1.SC170 IN ('-', '+-')\t----- bird -----\tthrombosis_prediction",
    "1271": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.SSA IN ('-', '+-') AND YEAR(T1.\"First Date\") < 1990\t----- bird -----\tthrombosis_prediction",
    "1272": "SELECT MIN(ID) AS First_Abnormal_Anti_SSA_Patient FROM Patient WHERE ID IN (SELECT ID FROM Laboratory WHERE SSA NOT IN ('-', '+-'))\t----- bird -----\tthrombosis_prediction",
    "1273": "SELECT COUNT(DISTINCT E.ID) FROM Examination AS E INNER JOIN Laboratory AS L ON E.ID = L.ID WHERE L.SSB IN ('-', '+-') AND E.Diagnosis = 'SLE'\t----- bird -----\tthrombosis_prediction",
    "1274": "SELECT COUNT(DISTINCT T1.ID) FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.SSB IN ('-', '+-') AND T1.Symptoms IS NOT NULL\t----- bird -----\tthrombosis_prediction",
    "1275": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.CENTROMEA IN ('-', '+-') AND T2.SSB IN ('-', '+-') AND T1.SEX = 'M'\t----- bird -----\tthrombosis_prediction",
    "1276": "SELECT T2.Diagnosis FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.DNA >= 8\t----- bird -----\tthrombosis_prediction",
    "1277": "SELECT COUNT(DISTINCT p.ID) AS patient_number FROM Patient p LEFT JOIN Laboratory l ON p.ID = l.ID WHERE l.DNA < 8 AND p.Description IS NULL;\t----- bird -----\tthrombosis_prediction",
    "1278": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.`DNA-II` >= 8 AND T1.Admission = '+'\t----- bird -----\tthrombosis_prediction",
    "1279": "SELECT CAST(SUM(CASE WHEN T2.GOT >= 60 AND T2.Diagnosis = 'SLE' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T2.ID) FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID\t----- bird -----\tthrombosis_prediction",
    "1280": "SELECT COUNT(Patient.ID) FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.Sex = 'M' AND Laboratory.GOT < 60;\t----- bird -----\tthrombosis_prediction",
    "1281": "SELECT MIN(Birthday) FROM Patient WHERE ID IN (SELECT ID FROM Laboratory WHERE GOT >= 60)\t----- bird -----\tthrombosis_prediction",
    "1282": "SELECT t1.Birthday FROM Patient AS t1 INNER JOIN Laboratory AS t2 ON t1.ID = t2.ID WHERE t2.GPT < 60 ORDER BY t2.GPT DESC LIMIT 3\t----- bird -----\tthrombosis_prediction",
    "1283": "SELECT COUNT(Patient.ID) FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.GOT < 60 AND Patient.SEX = 'M'\t----- bird -----\tthrombosis_prediction",
    "1284": "SELECT MIN(`First Date`) FROM Patient WHERE ID IN (SELECT ID FROM Laboratory WHERE LDH < 500 ORDER BY LDH DESC LIMIT 1)\t----- bird -----\tthrombosis_prediction",
    "1285": "SELECT MAX(`First Date`) FROM Patient WHERE ID = (SELECT ID FROM Laboratory WHERE LDH >= 500 ORDER BY Date DESC LIMIT 1)\t----- bird -----\tthrombosis_prediction",
    "1286": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.ALP >= 300 AND T1.Admission = '+'\t----- bird -----\tthrombosis_prediction",
    "1287": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Admission = '-' AND T2.ALP < 300;\t----- bird -----\tthrombosis_prediction",
    "1288": "SELECT Diagnosis FROM Examination WHERE TP < 6.0;\t----- bird -----\tthrombosis_prediction",
    "1289": "SELECT COUNT(*) FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T2.Diagnosis = 'SJS' AND T1.TP > 6.0 AND T1.TP < 8.5\t----- bird -----\tthrombosis_prediction",
    "1290": "SELECT E.`Examination Date` FROM Examination E INNER JOIN Laboratory L ON E.ID = L.ID WHERE L.ALB = (SELECT MAX(ALB) FROM Laboratory WHERE ALB > 3.5 AND ALB < 5.5)\t----- bird -----\tthrombosis_prediction",
    "1291": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND T2.ALB > 3.5 AND T2.ALB < 5.5 AND T2.TP BETWEEN 6.0 AND 8.5\t----- bird -----\tthrombosis_prediction",
    "1292": "SELECT `aCL IgG`, `aCL IgM`, `aCL IgA` FROM Examination WHERE ID IN (SELECT ID FROM Laboratory WHERE UA = (SELECT MAX(UA) FROM Laboratory WHERE UA <= 6.50) AND ID IN (SELECT ID FROM Patient WHERE SEX = 'F'))\t----- bird -----\tthrombosis_prediction",
    "1293": "SELECT MAX(ANA) FROM Laboratory WHERE CRE < 1.5\t----- bird -----\tthrombosis_prediction",
    "1294": "SELECT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.CRE < 1.5 AND T2.`aCL IgA` = (SELECT MAX(`aCL IgA`) FROM Laboratory)\t----- bird -----\tthrombosis_prediction",
    "1295": "SELECT COUNT(DISTINCT T1.ID) FROM Laboratory AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.`T-BIL` >= 2.0 AND T2.`ANA Pattern` LIKE '%P%'\t----- bird -----\tthrombosis_prediction",
    "1296": "SELECT L.ANA FROM Examination AS E INNER JOIN Laboratory AS L ON E.ID = L.ID WHERE L.`T-BIL` < 2.0 ORDER BY L.`T-BIL` DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1297": "SELECT COUNT(*) FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE L.`T-CHO` >= 250 AND L.KCT = '-'\t----- bird -----\tthrombosis_prediction",
    "1298": "SELECT COUNT(*) FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.`T-CHO` < 250 AND T1.`ANA Pattern` = 'P'\t----- bird -----\tthrombosis_prediction",
    "1299": "SELECT COUNT(P.ID) FROM Patient P JOIN Laboratory L ON P.ID = L.ID WHERE L.TG < 200 AND L.TG IS NOT NULL AND L.Symptoms IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
    "1300": "SELECT Diagnosis FROM Patient WHERE ID IN (SELECT ID FROM Laboratory WHERE TG < 200 ORDER BY TG DESC LIMIT 1)\t----- bird -----\tthrombosis_prediction",
    "1301": "SELECT E.ID FROM Examination AS E INNER JOIN Laboratory AS L ON E.ID = L.ID WHERE E.Thrombosis = 0 AND L.CPK < 250;\t----- bird -----\tthrombosis_prediction",
    "1302": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.CPK < 250 AND (T2.KCT = '+' OR T2.RVVT = '+' OR T2.LAC = '+')\t----- bird -----\tthrombosis_prediction",
    "1303": "SELECT MIN(Birthday) FROM Patient WHERE ID IN (SELECT ID FROM Laboratory WHERE GLU > 180)\t----- bird -----\tthrombosis_prediction",
    "1304": "SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.GLU < 180 AND T2.Thrombosis = 0\t----- bird -----\tthrombosis_prediction",
    "1305": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Admission = '+' AND T2.WBC BETWEEN 3.5 AND 9.0\t----- bird -----\tthrombosis_prediction",
    "1306": "SELECT COUNT(*) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.Diagnosis = 'SLE' AND T2.WBC BETWEEN 3.5 AND 9.0\t----- bird -----\tthrombosis_prediction",
    "1307": "SELECT DISTINCT Patient.ID FROM Laboratory INNER JOIN Patient ON Laboratory.ID = Patient.ID WHERE (RBC <= 3.5 OR RBC >= 6.0) AND Admission = '-'\t----- bird -----\tthrombosis_prediction",
    "1308": "SELECT COUNT(*) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.PLT > 100 AND T2.PLT < 400 AND T1.Diagnosis IS NOT NULL\t----- bird -----\tthrombosis_prediction",
    "1309": "SELECT L.PLT FROM Laboratory L INNER JOIN Patient P ON L.ID = P.ID WHERE L.PLT > 100 AND L.PLT < 400 AND P.Diagnosis = 'MCTD'\t----- bird -----\tthrombosis_prediction",
    "1310": "SELECT AVG(PT) FROM Laboratory AS L INNER JOIN Patient AS P ON L.ID = P.ID WHERE P.Sex = 'M' AND L.PT < 14\t----- bird -----\tthrombosis_prediction",
    "1311": "SELECT COUNT(DISTINCT T1.ID) FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Thrombosis IN (1, 2) AND T2.PT < 14\t----- bird -----\tthrombosis_prediction",
    "1312": "SELECT T2.major_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.first_name = 'Angela' AND T1.last_name = 'Sanders'\t----- bird -----\tstudent_club",
    "1313": "SELECT COUNT(*) FROM member WHERE link_to_major IN (SELECT major_id FROM major WHERE college = 'College of Engineering')\t----- bird -----\tstudent_club",
    "1314": "SELECT first_name, last_name FROM member WHERE link_to_major IN (SELECT major_id FROM major WHERE department = 'Art and Design')\t----- bird -----\tstudent_club",
    "1315": "SELECT COUNT(*) FROM member JOIN attendance ON member.member_id = attendance.link_to_member JOIN event ON attendance.link_to_event = event.event_id WHERE event.event_name = 'Women\\'s Soccer' AND member.link_to_major = (SELECT major_id FROM major WHERE major_name = 'Student_Club')\t----- bird -----\tstudent_club",
    "1316": "SELECT phone FROM member WHERE member_id IN (SELECT link_to_member FROM attendance WHERE link_to_event = (SELECT event_id FROM event WHERE event_name = 'Women\\'s Soccer'))\t----- bird -----\tstudent_club",
    "1317": "SELECT COUNT(*) FROM member JOIN attendance ON member.member_id = attendance.link_to_member JOIN event ON attendance.link_to_event = event.event_id WHERE event.event_name = 'Women\\'s Soccer' AND member.link_to_major = (SELECT major_id FROM major WHERE major_name = 'Student_Club') AND member.t_shirt_size = 'Medium'\t----- bird -----\tstudent_club",
    "1318": "SELECT E.event_name FROM event E INNER JOIN attendance A ON E.event_id = A.link_to_event INNER JOIN member M ON A.link_to_member = M.member_id INNER JOIN major MA ON M.link_to_major = MA.major_id WHERE MA.major_name = 'Student_Club' GROUP BY E.event_name ORDER BY COUNT(A.link_to_event) DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1319": "SELECT T2.college FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.position = 'Vice President'\t----- bird -----\tstudent_club",
    "1320": "SELECT event_name FROM event INNER JOIN attendance ON event.event_id = attendance.link_to_event INNER JOIN member ON attendance.link_to_member = member.member_id WHERE member.first_name = 'Maya' AND member.last_name = 'Mclean'\t----- bird -----\tstudent_club",
    "1321": "SELECT COUNT(*) FROM attendance JOIN event ON attendance.link_to_event = event.event_id JOIN member ON attendance.link_to_member = member.member_id WHERE member.first_name = 'Sacha' AND member.last_name = 'Harrison' AND YEAR(event.event_date) = 2019 AND event.type = 'Student_Club'\t----- bird -----\tstudent_club",
    "1322": "SELECT COUNT(T.event_id) FROM ( SELECT A.link_to_event AS event_id, COUNT(A.link_to_member) AS num_members FROM attendance AS A INNER JOIN event AS E ON A.link_to_event = E.event_id WHERE E.type = 'Meeting' GROUP BY A.link_to_event HAVING COUNT(A.link_to_member) > 10 ) T\t----- bird -----\tstudent_club",
    "1323": "SELECT event_name FROM event WHERE type = 'Student_Club' AND event_id IN (SELECT link_to_event FROM attendance GROUP BY link_to_event HAVING COUNT(link_to_member) > 20)\t----- bird -----\tstudent_club",
    "1324": "SELECT COUNT(event_id) / COUNT(DISTINCT event_name) FROM event WHERE type = 'Meeting' AND event_date LIKE '%/2020'\t----- bird -----\tstudent_club",
    "1325": "SELECT T1.expense_description, T1.cost FROM expense AS T1 INNER JOIN budget AS T2 ON T1.link_to_budget = T2.budget_id INNER JOIN event AS T3 ON T2.link_to_event = T3.event_id WHERE T3.type = 'club events' ORDER BY T1.cost DESC LIMIT 1\t----- bird -----\tstudent_club",
    "1326": "SELECT COUNT(*) FROM member WHERE link_to_major = (SELECT major_id FROM major WHERE major_name = 'Environmental Engineering')\t----- bird -----\tstudent_club",
    "1327": "SELECT T1.first_name, T1.last_name FROM member AS T1 INNER JOIN attendance AS T2 ON T1.member_id = T2.link_to_member INNER JOIN event AS T3 ON T2.link_to_event = T3.event_id WHERE T3.event_name = 'Laugh Out Loud'\t----- bird -----\tstudent_club",
    "1328": "SELECT T1.last_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Law and Constitutional Studies'\t----- bird -----\tstudent_club",
    "1329": "SELECT T3.county FROM zip_code AS T1 INNER JOIN member AS T2 ON T1.zip_code = T2.zip WHERE T2.first_name = 'Sherri' AND T2.last_name = 'Ramsey'\t----- bird -----\tstudent_club",
    "1330": "SELECT M.college FROM major AS M INNER JOIN member AS Mem ON M.major_id = Mem.link_to_major WHERE Mem.first_name = 'Tyler' AND Mem.last_name = 'Hewitt'\t----- bird -----\tstudent_club",
    "1331": "SELECT SUM(T1.amount) AS total_funds_received FROM income AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.position = 'Vice President'\t----- bird -----\tstudent_club",
    "1332": "SELECT SUM(cost) FROM expense JOIN budget ON expense.link_to_budget = budget.budget_id JOIN event ON budget.link_to_event = event.event_id WHERE category = 'Food' AND event_name = 'September Meeting'\t----- bird -----\tstudent_club",
    "1333": "SELECT z.city, z.state FROM member m JOIN zip_code z ON m.zip = z.zip_code WHERE m.position = 'President'\t----- bird -----\tstudent_club",
    "1334": "SELECT T1.first_name, T1.last_name FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T2.state = 'Illinois'\t----- bird -----\tstudent_club",
    "1335": "SELECT SUM(spent) FROM budget WHERE category = 'Advertisement' AND link_to_event = (SELECT event_id FROM event WHERE event_name = 'September Meeting')\t----- bird -----\tstudent_club",
    "1336": "SELECT T2.department FROM major AS T1 INNER JOIN member AS T2 ON T1.major_id = T2.link_to_major WHERE T2.first_name = 'Pierce' AND T2.last_name = 'Guidi'\t----- bird -----\tstudent_club",
    "1337": "SELECT SUM(amount) FROM budget WHERE link_to_event = (SELECT event_id FROM event WHERE event_name = 'October Speaker')\t----- bird -----\tstudent_club",
    "1338": "SELECT E.expense_id, E.expense_description, E.approved FROM expense AS E INNER JOIN budget AS B ON E.link_to_budget = B.budget_id INNER JOIN event AS EV ON B.link_to_event = EV.event_id WHERE EV.event_name = 'October Meeting' AND EV.event_date = '2019-10-08';\t----- bird -----\tstudent_club",
    "1339": "SELECT SUM(cost) / COUNT(DISTINCT link_to_event) AS total_avg_cost FROM expense WHERE link_to_member = 'Elijah Allen' AND (MONTH(expense_date) = 9 OR MONTH(expense_date) = 10)\t----- bird -----\tstudent_club",
    "1340": "SELECT SUM(CASE WHEN strftime('%Y', event_date) = '2019' THEN spent ELSE 0 END) - SUM(CASE WHEN strftime('%Y', event_date) = '2020' THEN spent ELSE 0 END) FROM budget WHERE event_status = 'Student_Club'\t----- bird -----\tstudent_club",
    "1341": "SELECT location FROM event WHERE event_name = 'Spring Budget Review'\t----- bird -----\tstudent_club",
    "1342": "SELECT E.cost FROM expense AS E INNER JOIN event AS EV ON E.link_to_event = EV.event_id WHERE EV.event_description = 'Posters' AND EV.event_date = '2019-09-04'\t----- bird -----\tstudent_club",
    "1343": "SELECT remaining FROM budget WHERE category = 'Food' AND amount = (SELECT MAX(amount) FROM budget WHERE category = 'Food')\t----- bird -----\tstudent_club",
    "1344": "SELECT T1.notes FROM income AS T1 WHERE T1.source = 'Fundraising' AND T1.date_received = '2019-09-14'\t----- bird -----\tstudent_club",
    "1345": "SELECT COUNT(*) FROM major WHERE college = 'College of Humanities and Social Sciences'\t----- bird -----\tstudent_club",
    "1346": "SELECT phone FROM member WHERE first_name = 'Carlo' AND last_name = 'Jacobs'\t----- bird -----\tstudent_club",
    "1347": "SELECT T3.county FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code INNER JOIN location AS T3 ON T2.city = T3.city WHERE T1.first_name = 'Adela' AND T1.last_name = 'O'Gallagher'\t----- bird -----\tstudent_club",
    "1348": "SELECT COUNT(*) FROM budget WHERE event_status = 'November Meeting' AND remaining < 0;\t----- bird -----\tstudent_club",
    "1349": "SELECT SUM(amount) FROM budget WHERE link_to_event = (SELECT event_id FROM event WHERE event_name = 'September Speaker')\t----- bird -----\tstudent_club",
    "1350": "SELECT T1.event_status FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event INNER JOIN expense AS T3 ON T2.budget_id = T3.link_to_budget WHERE T3.expense_description = 'Post Cards, Posters' AND T3.expense_date = '2019-8-20'\t----- bird -----\tstudent_club",
    "1351": "SELECT major_name FROM member INNER JOIN major ON member.link_to_major = major.major_id WHERE member.first_name = 'Brent' AND member.last_name = 'Thomason'\t----- bird -----\tstudent_club",
    "1352": "SELECT COUNT(*) FROM member WHERE link_to_major = (SELECT major_id FROM major WHERE major_name = 'Human Development and Family Studies') AND t_shirt_size = 'Large'\t----- bird -----\tstudent_club",
    "1353": "SELECT T2.type FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T1.first_name = 'Christof' AND T1.last_name = 'Nielson'\t----- bird -----\tstudent_club",
    "1354": "SELECT T2.major_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.position = 'Vice President'\t----- bird -----\tstudent_club",
    "1355": "SELECT T2.state FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T1.first_name = 'Sacha' AND T1.last_name = 'Harrison'\t----- bird -----\tstudent_club",
    "1356": "SELECT m.department FROM member m WHERE m.position = 'President'\t----- bird -----\tstudent_club",
    "1357": "SELECT T1.date_received FROM income AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.first_name = 'Connor' AND T2.last_name = 'Hilton' AND T1.source = 'Dues'\t----- bird -----\tstudent_club",
    "1358": "SELECT T.first_name, T.last_name FROM ( SELECT M.first_name, M.last_name, MIN(I.date_received) FROM member AS M INNER JOIN income AS I ON M.member_id = I.link_to_member WHERE I.source = 'Dues' GROUP BY M.first_name, M.last_name ORDER BY MIN(I.date_received) LIMIT 1 ) T\t----- bird -----\tstudent_club",
    "1359": "SELECT SUM(CASE WHEN category = 'Advertisement' AND event_name = 'Yearly Kickoff' THEN amount ELSE 0 END) / SUM(CASE WHEN category = 'Advertisement' AND event_name = 'October Meeting' THEN amount ELSE 0 END) AS num FROM budget;\t----- bird -----\tstudent_club",
    "1360": "SELECT CAST(SUM(CASE WHEN B.category = 'Parking' THEN B.amount ELSE 0 END) AS REAL) * 100 / SUM(B.amount) FROM budget AS B INNER JOIN event AS E ON B.link_to_event = E.event_id WHERE E.event_name = 'November Speaker'\t----- bird -----\tstudent_club",
    "1361": "SELECT SUM(cost) FROM expense WHERE expense_description = 'Pizza'\t----- bird -----\tstudent_club",
    "1362": "SELECT COUNT(DISTINCT T3.city) FROM zip_code AS T3 WHERE T3.county = 'Orange County' AND T3.state = 'Virginia'\t----- bird -----\tstudent_club",
    "1363": "SELECT major_name FROM major WHERE college = 'College of Humanities and Social Sciences'\t----- bird -----\tstudent_club",
    "1364": "SELECT city, county, state FROM member JOIN zip_code ON member.zip = zip_code.zip_code WHERE first_name = 'Amy' AND last_name = 'Firth'\t----- bird -----\tstudent_club",
    "1365": "SELECT expense_description FROM expense WHERE link_to_budget = (SELECT budget_id FROM budget ORDER BY remaining LIMIT 1)\t----- bird -----\tstudent_club",
    "1366": "SELECT T2.first_name, T2.last_name FROM event AS T1 INNER JOIN attendance AS T3 ON T1.event_id = T3.link_to_event INNER JOIN member AS T2 ON T3.link_to_member = T2.member_id WHERE T1.event_name = 'October Meeting';\t----- bird -----\tstudent_club",
    "1367": "SELECT T.college FROM (SELECT M.college, COUNT(M.member_id) AS num_members FROM major AS M INNER JOIN member AS Mem ON M.major_id = Mem.link_to_major GROUP BY M.college) T ORDER BY T.num_members DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1368": "SELECT major_name FROM member JOIN major ON member.link_to_major = major.major_id WHERE phone = '809-555-3360'\t----- bird -----\tstudent_club",
    "1369": "SELECT T1.event_name FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T2.amount = (SELECT MAX(amount) FROM budget)\t----- bird -----\tstudent_club",
    "1370": "SELECT T1.expense_description FROM expense AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.position = 'Vice President'\t----- bird -----\tstudent_club",
    "1371": "SELECT COUNT(T2.link_to_member) FROM event AS T1 INNER JOIN attendance AS T2 ON T1.event_id = T2.link_to_event WHERE T1.event_name = 'Women\\'s Soccer'\t----- bird -----\tstudent_club",
    "1372": "SELECT T2.date_received FROM member AS T1 INNER JOIN income AS T2 ON T1.member_id = T2.link_to_member WHERE T1.first_name = 'Casey' AND T1.last_name = 'Mason'\t----- bird -----\tstudent_club",
    "1373": "SELECT COUNT(T1.member_id) FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T2.state = 'Maryland'\t----- bird -----\tstudent_club",
    "1374": "SELECT COUNT(*) FROM attendance WHERE link_to_member = (SELECT member_id FROM member WHERE phone = '954-555-6240')\t----- bird -----\tstudent_club",
    "1375": "SELECT first_name || ' ' || last_name AS full_name FROM member WHERE link_to_major = (SELECT major_id FROM major WHERE department = 'School of Applied Sciences, Technology and Education')\t----- bird -----\tstudent_club",
    "1376": "SELECT T1.event_name FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T1.status = 'Closed' ORDER BY T2.spent / T2.amount DESC LIMIT 1\t----- bird -----\tstudent_club",
    "1377": "SELECT COUNT(*) FROM member WHERE position = 'President'\t----- bird -----\tstudent_club",
    "1378": "SELECT MAX(spent) FROM budget\t----- bird -----\tstudent_club",
    "1379": "SELECT COUNT(event_id) FROM event WHERE type = 'Meeting' AND YEAR(event_date) = 2020;\t----- bird -----\tstudent_club",
    "1380": "SELECT SUM(spent) FROM budget WHERE category = 'Food'\t----- bird -----\tstudent_club",
    "1381": "SELECT T1.first_name || ' ' || T1.last_name AS full_name FROM member AS T1 INNER JOIN attendance AS T2 ON T1.member_id = T2.link_to_member GROUP BY T1.first_name, T1.last_name HAVING COUNT(T2.link_to_event) > 7;\t----- bird -----\tstudent_club",
    "1382": "SELECT m.first_name, m.last_name, m.email FROM member AS m INNER JOIN major AS maj ON m.link_to_major = maj.major_id INNER JOIN attendance AS att ON m.member_id = att.link_to_member INNER JOIN event AS e ON att.link_to_event = e.event_id WHERE maj.major_name = 'Interior Design' AND e.event_name = 'Community Theater';\t----- bird -----\tstudent_club",
    "1383": "SELECT T1.first_name || ' ' || T1.last_name AS full_name FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T2.city = 'Georgetown' AND T2.state = 'South Carolina'\t----- bird -----\tstudent_club",
    "1384": "SELECT COUNT(amount) FROM income WHERE link_to_member = (SELECT member_id FROM member WHERE first_name = 'Grant' AND last_name = 'Gilmour')\t----- bird -----\tstudent_club",
    "1385": "SELECT T2.first_name, T2.last_name FROM income AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T1.amount > 40\t----- bird -----\tstudent_club",
    "1386": "SELECT SUM(cost) FROM expense WHERE link_to_budget IN (SELECT budget_id FROM budget WHERE link_to_event IN (SELECT event_id FROM event WHERE event_name = 'Yearly Kickoff'))\t----- bird -----\tstudent_club",
    "1387": "SELECT m.first_name, m.last_name FROM member m JOIN budget b ON m.member_id = b.link_to_event JOIN event e ON b.link_to_event = e.event_id WHERE e.event_name = 'Yearly Kickoff';\t----- bird -----\tstudent_club",
    "1388": "SELECT m.first_name || ' ' || m.last_name AS full_name, i.source FROM member m JOIN income i ON m.member_id = i.link_to_member WHERE i.amount = (SELECT MAX(amount) FROM income)\t----- bird -----\tstudent_club",
    "1389": "SELECT event_name FROM event INNER JOIN expense ON event.event_id = expense.link_to_event WHERE cost = (SELECT MIN(cost) FROM expense)\t----- bird -----\tstudent_club",
    "1390": "SELECT SUM(CASE WHEN T1.event_name = 'Yearly Kickoff' THEN T2.cost ELSE 0 END) * 100 / SUM(T2.cost) FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event;\t----- bird -----\tstudent_club",
    "1391": "SELECT SUM(CASE WHEN major_name = 'Finance' THEN 1 ELSE 0 END) / SUM(CASE WHEN major_name = 'Physics' THEN 1 ELSE 0 END) AS ratio FROM major;\t----- bird -----\tstudent_club",
    "1392": "SELECT source, amount FROM income WHERE date_received BETWEEN '2019-09-01' AND '2019-09-30' ORDER BY amount DESC LIMIT 1\t----- bird -----\tstudent_club",
    "1393": "SELECT T1.first_name, T1.last_name, T1.email FROM member AS T1 WHERE T1.position = 'Secretary'\t----- bird -----\tstudent_club",
    "1394": "SELECT COUNT(*) FROM member WHERE link_to_major = (SELECT major_id FROM major WHERE major_name = 'Physics Teaching')\t----- bird -----\tstudent_club",
    "1395": "SELECT COUNT(T1.link_to_member) FROM attendance AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.event_name = 'Community Theater' AND STRFTIME('%Y', T2.event_date) = '2019'\t----- bird -----\tstudent_club",
    "1396": "SELECT COUNT(T1.event_id) AS events_attended, T3.major_name AS major FROM attendance AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id INNER JOIN member AS T3 ON T1.link_to_member = T3.member_id WHERE T3.first_name = 'Luisa' AND T3.last_name = 'Guidi'\t----- bird -----\tstudent_club",
    "1397": "SELECT AVG(spent) FROM budget WHERE category = 'Food' AND event_status = 'Closed'\t----- bird -----\tstudent_club",
    "1398": "SELECT T1.event_name FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T2.spent = (SELECT MAX(spent) FROM budget WHERE category = 'Advertisement')\t----- bird -----\tstudent_club",
    "1399": "SELECT T1.first_name, T1.last_name, T2.event_name FROM member AS T1 INNER JOIN attendance AS T2 ON T1.member_id = T2.link_to_member INNER JOIN event AS T3 ON T2.link_to_event = T3.event_id WHERE T1.first_name = 'Maya' AND T1.last_name = 'Mclean' AND T3.event_name = 'Women''s Soccer'\t----- bird -----\tstudent_club",
    "1400": "SELECT DIVIDE(SUM(CASE WHEN type = 'Community Service' THEN 1 ELSE 0 END), COUNT(event_id)) * 100 FROM event WHERE event_date BETWEEN '2019-01-01' AND '2019-12-31';\t----- bird -----\tstudent_club",
    "1401": "SELECT cost FROM expense WHERE expense_description = 'Posters' AND link_to_budget IN (SELECT budget_id FROM budget WHERE link_to_event IN (SELECT event_id FROM event WHERE event_name = 'September Speaker'))\t----- bird -----\tstudent_club",
    "1402": "SELECT t_shirt_size FROM member GROUP BY t_shirt_size ORDER BY COUNT(t_shirt_size) DESC LIMIT 1\t----- bird -----\tstudent_club",
    "1403": "SELECT T1.event_name FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T1.status = 'Closed' AND T2.remaining < 0 ORDER BY T2.remaining ASC LIMIT 1\t----- bird -----\tstudent_club",
    "1404": "SELECT expense_description, SUM(cost) FROM expense WHERE link_to_budget IN (SELECT budget_id FROM budget WHERE link_to_event IN (SELECT event_id FROM event WHERE event_name = 'October Meeting') AND approved = 'Yes') GROUP BY expense_description\t----- bird -----\tstudent_club",
    "1405": "SELECT category, amount FROM budget WHERE link_to_event = (SELECT event_id FROM event WHERE event_name = 'April Speaker') ORDER BY amount ASC;\t----- bird -----\tstudent_club",
    "1406": "SELECT MAX(amount) FROM budget WHERE category = 'Food'\t----- bird -----\tstudent_club",
    "1407": "SELECT budget_id, category, amount FROM budget WHERE category = 'Advertisement' ORDER BY amount DESC LIMIT 3\t----- bird -----\tstudent_club",
    "1408": "SELECT SUM(cost) FROM expense WHERE expense_description = 'Parking'\t----- bird -----\tstudent_club",
    "1409": "SELECT SUM(cost) FROM expense WHERE expense_date = '2019-08-20'\t----- bird -----\tstudent_club",
    "1410": "SELECT m.first_name, m.last_name, SUM(e.cost) AS total_cost FROM member AS m INNER JOIN expense AS e ON m.member_id = e.link_to_member WHERE m.member_id = \"rec4BLdZHS2Blfp4v\" GROUP BY m.first_name, m.last_name;\t----- bird -----\tstudent_club",
    "1411": "SELECT expense_description FROM expense WHERE link_to_member = (SELECT member_id FROM member WHERE first_name = 'Sacha' AND last_name = 'Harrison')\t----- bird -----\tstudent_club",
    "1412": "SELECT T2.expense_description FROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member WHERE T1.t_shirt_size = 'X-Large'\t----- bird -----\tstudent_club",
    "1413": "SELECT zip FROM member INNER JOIN expense ON member.member_id = expense.link_to_member WHERE expense.cost < 50\t----- bird -----\tstudent_club",
    "1414": "SELECT T2.major_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.first_name = 'Phillip' AND T1.last_name = 'Cullen'\t----- bird -----\tstudent_club",
    "1415": "SELECT M.position FROM member AS M INNER JOIN major AS MA ON M.link_to_major = MA.major_id WHERE MA.major_name = 'Business'\t----- bird -----\tstudent_club",
    "1416": "SELECT COUNT(*) AS num_members FROM member WHERE link_to_major = (SELECT major_id FROM major WHERE major_name = 'Business') AND t_shirt_size = 'Medium';\t----- bird -----\tstudent_club",
    "1417": "SELECT T1.type FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T2.remaining > 30\t----- bird -----\tstudent_club",
    "1418": "SELECT T1.category FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.location = 'MU 215'\t----- bird -----\tstudent_club",
    "1419": "SELECT category FROM event WHERE event_date = '2020-03-24T12:00:00'\t----- bird -----\tstudent_club",
    "1420": "SELECT major.major_name FROM member INNER JOIN major ON member.link_to_major = major.major_id WHERE member.position = 'Vice President'\t----- bird -----\tstudent_club",
    "1421": "SELECT (CAST(COUNT(CASE WHEN T2.position = 'Member' AND T3.major_name = 'Mathematics' THEN 1 END) AS REAL) / COUNT(T1.member_id)) * 100 FROM member AS T1 LEFT JOIN major AS T3 ON T1.link_to_major = T3.major_id LEFT JOIN attendance AS T2 ON T1.member_id = T2.link_to_member;\t----- bird -----\tstudent_club",
    "1422": "SELECT T1.type FROM event AS T1 WHERE T1.location = 'MU 215'\t----- bird -----\tstudent_club",
    "1423": "SELECT COUNT(income_id) FROM income WHERE amount = 50\t----- bird -----\tstudent_club",
    "1424": "SELECT COUNT(*) FROM member WHERE position = 'Member' AND t_shirt_size = 'X-Large'\t----- bird -----\tstudent_club",
    "1425": "SELECT COUNT(major_id) FROM major WHERE college = 'College of Agriculture and Applied Sciences' AND department = 'School of Applied Sciences, Technology and Education'\t----- bird -----\tstudent_club",
    "1426": "SELECT m.last_name, m.department, m.college FROM member m JOIN major ma ON m.link_to_major = ma.major_id WHERE ma.major_name = 'Environmental Engineering'\t----- bird -----\tstudent_club",
    "1427": "SELECT budget.category FROM budget JOIN event ON budget.link_to_event = event.event_id WHERE event.location = 'MU 215' AND event.type = 'Guest Speaker' AND budget.spent = 0;\t----- bird -----\tstudent_club",
    "1428": "SELECT T3.city, T3.state FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id INNER JOIN zip_code AS T3 ON T1.zip = T3.zip_code WHERE T2.department = 'Electrical and Computer Engineering Department' AND T1.position = 'Member'\t----- bird -----\tstudent_club",
    "1429": "SELECT T1.event_name FROM event AS T1 INNER JOIN attendance AS T2 ON T1.event_id = T2.link_to_event INNER JOIN member AS T3 ON T2.link_to_member = T3.member_id WHERE T1.type = 'Social' AND T3.position = 'Vice President' AND T3.zip = (SELECT zip_code FROM zip_code WHERE city = '900 E. Washington St.')\t----- bird -----\tstudent_club",
    "1430": "SELECT m.last_name, m.position FROM member m JOIN expense e ON m.member_id = e.link_to_member WHERE e.expense_description = 'Pizza' AND e.expense_date = '2019-09-10'\t----- bird -----\tstudent_club",
    "1431": "SELECT T1.last_name FROM member AS T1 INNER JOIN attendance AS T2 ON T1.member_id = T2.link_to_member INNER JOIN event AS T3 ON T2.link_to_event = T3.event_id WHERE T1.position = 'Member' AND T3.event_name = 'Women''s Soccer'\t----- bird -----\tstudent_club",
    "1432": "SELECT (CAST(COUNT(CASE WHEN T2.t_shirt_size = 'Medium' AND T2.position = 'Member' THEN T3.amount = 50 END) AS REAL) / COUNT(T2.member_id)) * 100 FROM member AS T2 LEFT JOIN income AS T3 ON T2.member_id = T3.link_to_member WHERE T3.source = 'Student_Club'\t----- bird -----\tstudent_club",
    "1433": "SELECT T1.country FROM zip_code AS T1 WHERE T1.type = 'PO Box' GROUP BY T1.country;\t----- bird -----\tstudent_club",
    "1434": "SELECT T1.zip_code FROM zip_code AS T1 INNER JOIN country AS T2 ON T1.zip_code = T2.zip_code WHERE T2.county = 'San Juan Municipio' AND T2.state = 'Puerto Rico' AND T1.type = 'PO Box'\t----- bird -----\tstudent_club",
    "1435": "SELECT T1.event_name FROM event AS T1 WHERE T1.type = 'Game' AND T1.status = 'Closed' AND T1.event_date BETWEEN '2019-03-15' AND '2020-03-20'\t----- bird -----\tstudent_club",
    "1436": "SELECT T1.link_to_event FROM expense AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T1.cost > 50\t----- bird -----\tstudent_club",
    "1437": "SELECT m.first_name, m.last_name, e.event_id FROM member m JOIN expense ex ON m.member_id = ex.link_to_member JOIN attendance a ON ex.link_to_event = a.link_to_event JOIN event e ON a.link_to_event = e.event_id WHERE ex.approved = 'true' AND ex.expense_date BETWEEN '2019-01-10' AND '2019-11-19'\t----- bird -----\tstudent_club",
    "1438": "SELECT T2.college FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.first_name = 'Katy' AND T1.link_to_major = 'rec1N0upiVLy5esTO'\t----- bird -----\tstudent_club",
    "1439": "SELECT T1.phone FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Business' AND T2.college = 'College of Agriculture and Applied Sciences'\t----- bird -----\tstudent_club",
    "1440": "SELECT T2.email FROM expense AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T1.cost > 20 AND T1.expense_date BETWEEN '2019-09-10' AND '2019-11-19'\t----- bird -----\tstudent_club",
    "1441": "SELECT COUNT(*) FROM member WHERE link_to_major IN (SELECT major_id FROM major WHERE major_name = 'education' AND college = 'College of Education & Human Services') AND position = 'Member'\t----- bird -----\tstudent_club",
    "1442": "SELECT SUM(CASE WHEN remaining < 0 THEN 1 ELSE 0 END) * 100 / COUNT(event_id) AS percentage FROM budget\t----- bird -----\tstudent_club",
    "1443": "SELECT event_id, location, status FROM event WHERE event_date BETWEEN '2019-11-01' AND '2020-03-31'\t----- bird -----\tstudent_club",
    "1444": "SELECT expense_description FROM expense GROUP BY expense_description HAVING AVG(cost) > 50\t----- bird -----\tstudent_club",
    "1445": "SELECT first_name, last_name FROM member WHERE t_shirt_size = 'X-Large'\t----- bird -----\tstudent_club",
    "1446": "SELECT SUM(CASE WHEN type = 'PO Box' THEN 1 ELSE 0 END) * 100 / COUNT(zip_code) FROM zip_code;\t----- bird -----\tstudent_club",
    "1447": "SELECT T1.event_name, T1.location FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T2.remaining > 0\t----- bird -----\tstudent_club",
    "1448": "SELECT T1.event_name, T1.event_date FROM event AS T1 INNER JOIN expense AS T2 ON T1.event_id = T2.link_to_event WHERE T2.expense_description = 'Pizza' AND T2.cost > 50 AND T2.cost < 100\t----- bird -----\tstudent_club",
    "1449": "SELECT T2.first_name, T2.last_name, T3.major_name FROM member AS T2 INNER JOIN major AS T3 ON T2.link_to_major = T3.major_id INNER JOIN expense AS T4 ON T2.member_id = T4.link_to_member WHERE T4.cost > 100\t----- bird -----\tstudent_club",
    "1450": "SELECT zip_code.city, zip_code.county FROM event INNER JOIN income ON event.event_id = income.link_to_event INNER JOIN zip_code ON event.location = zip_code.zip_code GROUP BY event.event_id HAVING COUNT(income.income_id) > 40;\t----- bird -----\tstudent_club",
    "1451": "SELECT m.first_name, m.last_name, SUM(e.cost) AS total_cost FROM member m JOIN expense e ON m.member_id = e.link_to_member WHERE e.link_to_event IN ( SELECT link_to_event FROM expense GROUP BY link_to_event HAVING COUNT(DISTINCT link_to_member) > 1 ) GROUP BY m.member_id ORDER BY total_cost DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1452": "SELECT AVG(cost) FROM expense WHERE link_to_member IN (SELECT member_id FROM member WHERE position != 'Member')\t----- bird -----\tstudent_club",
    "1453": "SELECT T1.event_name FROM event AS T1 INNER JOIN expense AS T2 ON T1.event_id = T2.link_to_event WHERE T2.category = 'Parking' GROUP BY T1.event_name HAVING T2.cost < (SELECT SUM(cost) / COUNT(event_id) FROM expense WHERE category = 'Parking')\t----- bird -----\tstudent_club",
    "1454": "SELECT SUM(cost) * 100 / COUNT(event_id) FROM expense WHERE link_to_budget IN (SELECT budget_id FROM budget WHERE link_to_event IN (SELECT event_id FROM event WHERE type = 'Game'));\t----- bird -----\tstudent_club",
    "1455": "SELECT T1.budget_id FROM budget AS T1 INNER JOIN expense AS T2 ON T1.budget_id = T2.link_to_budget WHERE T2.expense_description = 'Water, chips, cookies' ORDER BY T2.cost DESC LIMIT 1\t----- bird -----\tstudent_club",
    "1456": "SELECT T2.first_name, T2.last_name FROM expense AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id GROUP BY T2.first_name, T2.last_name ORDER BY MAX(T1.cost) DESC LIMIT 5\t----- bird -----\tstudent_club",
    "1457": "SELECT T2.first_name, T2.last_name, T2.phone FROM member AS T2 INNER JOIN expense AS T1 ON T2.member_id = T1.link_to_member WHERE T1.cost > (SELECT AVG(cost) FROM expense)\t----- bird -----\tstudent_club",
    "1458": "SELECT ((SUM(CASE WHEN state = 'Maine' THEN 1 ELSE 0 END) / COUNT(CASE WHEN position = 'Member' THEN 1 ELSE 0 END)) - (SUM(CASE WHEN state = 'Vermont' THEN 1 ELSE 0 END) / COUNT(CASE WHEN position = 'Member' THEN 1 ELSE 0 END))) AS difference_percentage FROM member;\t----- bird -----\tstudent_club",
    "1459": "SELECT T2.major_name, T2.department FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.first_name = 'Garrett' AND T1.last_name = 'Gerke'\t----- bird -----\tstudent_club",
    "1460": "SELECT T2.first_name || ' ' || T2.last_name AS full_name, T1.cost FROM expense AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T1.expense_description = 'Water, Veggie tray, supplies'\t----- bird -----\tstudent_club",
    "1461": "SELECT last_name, phone FROM member JOIN major ON member.link_to_major = major.major_id WHERE major.major_name = 'Elementary Education'\t----- bird -----\tstudent_club",
    "1462": "SELECT T2.category, T1.amount FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.event_name = 'January Speaker'\t----- bird -----\tstudent_club",
    "1463": "SELECT event_name FROM event WHERE event_id IN (SELECT link_to_event FROM budget WHERE category = 'Food')\t----- bird -----\tstudent_club",
    "1464": "SELECT T1.first_name, T1.last_name, T2.amount FROM member AS T1 INNER JOIN income AS T2 ON T1.member_id = T2.link_to_member WHERE T2.date_received = '9/9/2019'\t----- bird -----\tstudent_club",
    "1465": "SELECT T1.category FROM budget AS T1 INNER JOIN expense AS T2 ON T1.budget_id = T2.link_to_budget WHERE T2.expense_description = 'Posters'\t----- bird -----\tstudent_club",
    "1466": "SELECT first_name || ' ' || last_name AS full_name, major.college FROM member JOIN major ON member.link_to_major = major.major_id WHERE position = 'Secretary'\t----- bird -----\tstudent_club",
    "1467": "SELECT SUM(b.spent), e.event_name FROM budget b JOIN event e ON b.link_to_event = e.event_id WHERE b.category = 'Speaker Gifts'\t----- bird -----\tstudent_club",
    "1468": "SELECT city FROM member JOIN zip_code ON member.zip = zip_code.zip_code WHERE member.first_name = 'Garrett' AND member.last_name = 'Girke'\t----- bird -----\tstudent_club",
    "1469": "SELECT T1.first_name, T1.last_name, T1.position FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T2.city = 'Lincolnton' AND T2.state = 'North Carolina' AND T2.zip_code = 28092\t----- bird -----\tstudent_club",
    "1470": "SELECT COUNT(T1.GasStationID) FROM gasstations AS T1 INNER JOIN products AS T2 ON T1.GasStationID = T2.GasStationID WHERE T1.Country = 'CZE' AND T2.Description = 'Premium gas'\t----- bird -----\tdebit_card_specializing",
    "1471": "SELECT COUNT(CASE WHEN Currency = 'EUR' THEN 1 END) / COUNT(CASE WHEN Currency = 'CZK' THEN 1 END) AS ratio_of_customers_currency FROM customers;\t----- bird -----\tdebit_card_specializing",
    "1472": "SELECT T1.CustomerID, T1.Segment, T2.Consumption FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Date BETWEEN '201201' AND '201212' AND T1.Segment = 'LAM' ORDER BY T2.Consumption LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1473": "SELECT AVG(Consumption) / 12 FROM yearmonth WHERE Date BETWEEN '201301' AND '201312' AND CustomerID IN (SELECT CustomerID FROM customers WHERE Segment = 'SME')\t----- bird -----\tdebit_card_specializing",
    "1474": "SELECT customers.CustomerID, customers.Segment FROM customers INNER JOIN transactions_1k ON customers.CustomerID = transactions_1k.CustomerID WHERE transactions_1k.Date BETWEEN '201101' AND '201112' AND customers.Currency = 'CZK' GROUP BY customers.CustomerID ORDER BY SUM(transactions_1k.Amount) DESC;\t----- bird -----\tdebit_card_specializing",
    "1475": "SELECT COUNT(CustomerID) FROM yearmonth WHERE Date BETWEEN '201201' AND '201212' AND Segment = 'KAM' AND Consumption < 30000;\t----- bird -----\tdebit_card_specializing",
    "1476": "SELECT SUM(CASE WHEN C.Currency = 'CZK' THEN Y.Consumption ELSE 0 END) - SUM(CASE WHEN C.Currency = 'EUR' THEN Y.Consumption ELSE 0 END) AS Difference FROM customers AS C INNER JOIN yearmonth AS Y ON C.CustomerID = Y.CustomerID WHERE Y.Date BETWEEN '201201' AND '201212'\t----- bird -----\tdebit_card_specializing",
    "1477": "SELECT STRFTIME('%Y', Date) AS Year, SUM(Consumption) AS TotalGasUse FROM yearmonth WHERE Currency = 'EUR' GROUP BY STRFTIME('%Y', Date) ORDER BY TotalGasUse DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1478": "SELECT Segment FROM yearmonth GROUP BY Segment ORDER BY SUM(Consumption) ASC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1479": "SELECT SUBSTR(Date, 1, 4) AS Year, SUM(Consumption) AS TotalConsumption FROM yearmonth WHERE Currency = 'CZK' GROUP BY SUBSTR(Date, 1, 4) ORDER BY TotalConsumption DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1480": "SELECT MAX(Consumption) AS peak_consumption, Date FROM yearmonth WHERE Date LIKE '2013%' AND CustomerID IN (SELECT CustomerID FROM customers WHERE Segment = 'SME') GROUP BY Date;\t----- bird -----\tdebit_card_specializing",
    "1481": "SELECT (SUM(T1.Consumption) / COUNT(T1.CustomerID)) AS SME_avg_consumption, (SUM(T2.Consumption) / COUNT(T2.CustomerID)) AS LAM_avg_consumption, (SUM(T3.Consumption) / COUNT(T3.CustomerID)) AS KAM_avg_consumption, (SUM(T1.Consumption) / COUNT(T1.CustomerID)) - (SUM(T2.Consumption) / COUNT(T2.CustomerID) AS SME_LAM_difference, (SUM(T2.Consumption) / COUNT(T2.CustomerID)) - (SUM(T3.Consumption) / COUNT(T3.CustomerID) AS LAM_KAM_difference, (SUM(T3.Consumption) / COUNT(T3.CustomerID)) - (SUM(T1.Consumption) / COUNT(T1.CustomerID) AS KAM_SME_difference FROM yearmonth AS T1 JOIN yearmonth AS T2 ON T\t----- bird -----\tdebit_card_specializing",
    "1482": "SELECT Segment, MAX((SUM(CASE WHEN SUBSTR(Date, 1, 4) = '2013' THEN Consumption ELSE 0 END) - SUM(CASE WHEN SUBSTR(Date, 1, 4) = '2012' THEN Consumption ELSE 0 END)) / SUM(CASE WHEN SUBSTR(Date, 1, 4) = '2013' THEN Consumption ELSE 0 END) * 100) AS Max_Percentage_Increase, MIN((SUM(CASE WHEN SUBSTR(Date, 1, 4) = '2013' THEN Consumption ELSE 0 END) - SUM(CASE WHEN SUBSTR(Date, 1, 4) = '2012' THEN Consumption ELSE 0 END)) / SUM(CASE WHEN SUBSTR(Date, 1, 4) = '2013' THEN Consumption ELSE 0 END) * 100) AS Min_Percentage_Increase FROM yearmonth WHERE Segment IN ('S\t----- bird -----\tdebit_card_specializing",
    "1483": "SELECT SUM(Consumption) FROM yearmonth WHERE CustomerID = 6 AND Date >= '201308' AND Date <= '201311'\t----- bird -----\tdebit_card_specializing",
    "1484": "SELECT COUNT(DISTINCT CASE WHEN Country = 'Czech Republic' AND Segment = 'Discount' THEN GasStationID END) - COUNT(DISTINCT CASE WHEN Country = 'Slovakia' AND Segment = 'Discount' THEN GasStationID END) AS More_Discount_Gas_Stations FROM gasstations\t----- bird -----\tdebit_card_specializing",
    "1485": "SELECT SUM(T1.Consumption) - SUM(T2.Consumption) AS difference FROM yearmonth AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = 7 AND T2.CustomerID = 5 WHERE T1.Date = '201304' AND T2.Date = '201304'\t----- bird -----\tdebit_card_specializing",
    "1486": "SELECT COUNT(CustomerID) FROM customers WHERE Segment = 'SME' AND Currency = 'Czech koruna' - COUNT(CustomerID) FROM customers WHERE Segment = 'SME' AND Currency = 'Euro' as \"Amount of more SMEs\"\t----- bird -----\tdebit_card_specializing",
    "1487": "SELECT T1.CustomerID FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Currency = 'Euro' AND T2.Date = '201310' ORDER BY T2.Consumption DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1488": "SELECT T1.CustomerID, MAX(T2.Consumption) AS MaxConsumption FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Segment = 'KAM' GROUP BY T1.CustomerID ORDER BY MaxConsumption DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1489": "SELECT SUM(Consumption) AS total_consumption FROM yearmonth WHERE Date = '201305' AND CustomerID IN (SELECT CustomerID FROM customers WHERE Segment = 'KAM')\t----- bird -----\tdebit_card_specializing",
    "1490": "SELECT (CAST(SUM(CASE WHEN T1.Consumption > 46.73 THEN 1 ELSE 0 END) AS REAL) / COUNT(*)) * 100 FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Segment = 'LAM';\t----- bird -----\tdebit_card_specializing",
    "1491": "SELECT Country, COUNT(GasStationID) AS TotalValueForMoneyGasStations FROM gasstations WHERE Segment = 'value for money' GROUP BY Country\t----- bird -----\tdebit_card_specializing",
    "1492": "SELECT CAST(SUM(CASE WHEN c.Segment = 'KAM' AND g.Currency = 'Euro' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(DISTINCT c.CustomerID) FROM customers c JOIN transactions_1k t ON c.CustomerID = t.CustomerID JOIN gasstations g ON t.GasStationID = g.GasStationID WHERE c.Segment = 'KAM'\t----- bird -----\tdebit_card_specializing",
    "1493": "SELECT (CAST(COUNT(*) AS REAL) / (SELECT COUNT(*) FROM yearmonth WHERE Date LIKE '201202')) * 100 FROM yearmonth WHERE Date LIKE '201202' AND Consumption > 528.3;\t----- bird -----\tdebit_card_specializing",
    "1494": "SELECT (CAST(SUM(CASE WHEN Segment = 'Premium' THEN 1 ELSE 0 END) AS REAL) * 100) / COUNT(*) FROM gasstations WHERE Country = 'Slovakia'\t----- bird -----\tdebit_card_specializing",
    "1495": "SELECT CustomerID FROM yearmonth WHERE Date = '201309' ORDER BY Consumption DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1496": "SELECT T1.Segment FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Date = '201309' GROUP BY T1.Segment ORDER BY SUM(T2.Consumption) ASC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1497": "SELECT customers.CustomerID FROM customers INNER JOIN yearmonth ON customers.CustomerID = yearmonth.CustomerID WHERE yearmonth.Date = '201206' ORDER BY yearmonth.Consumption LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1498": "SELECT MAX(Consumption) FROM yearmonth WHERE SUBSTR(Date, 1, 4) = '2012'\t----- bird -----\tdebit_card_specializing",
    "1499": "SELECT MAX(SUM(T1.Consumption) / 12) AS biggest_monthly_consumption FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Currency = 'euro' GROUP BY T1.Date;\t----- bird -----\tdebit_card_specializing",
    "1500": "SELECT P.Description FROM products AS P INNER JOIN transactions_1k AS T ON P.ProductID = T.ProductID WHERE strftime('%Y%m', T.Date) = '201309'\t----- bird -----\tdebit_card_specializing",
    "1501": "SELECT DISTINCT Country FROM gasstations WHERE GasStationID IN (SELECT GasStationID FROM transactions_1k WHERE STRFTIME('%Y%m', Date) = '201306')\t----- bird -----\tdebit_card_specializing",
    "1502": "SELECT DISTINCT T2.ChainID FROM gasstations AS T1 INNER JOIN \"transactions_1k\" AS T2 ON T1.GasStationID = T2.GasStationID INNER JOIN customers AS T3 ON T2.CustomerID = T3.CustomerID WHERE T3.Currency = 'Euro'\t----- bird -----\tdebit_card_specializing",
    "1503": "SELECT T3.Description FROM transactions_1k AS T1 INNER JOIN products AS T3 ON T1.ProductID = T3.ProductID INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Currency = 'Euro'\t----- bird -----\tdebit_card_specializing",
    "1504": "SELECT AVG(Price) FROM transactions_1k WHERE Date LIKE '2012-01%'\t----- bird -----\tdebit_card_specializing",
    "1505": "SELECT COUNT(T1.CustomerID) FROM transactions_1k AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID INNER JOIN yearmonth AS T3 ON T1.CustomerID = T3.CustomerID WHERE T2.Currency = 'Euro' AND T3.Consumption > 1000\t----- bird -----\tdebit_card_specializing",
    "1506": "SELECT p.Description FROM products p JOIN \"transactions_1k\" t ON p.ProductID = t.ProductID JOIN gasstations g ON t.GasStationID = g.GasStationID WHERE g.Country = 'CZE'\t----- bird -----\tdebit_card_specializing",
    "1507": "SELECT DISTINCT Time FROM transactions_1k WHERE GasStationID IN (SELECT GasStationID FROM gasstations WHERE ChainID = 11)\t----- bird -----\tdebit_card_specializing",
    "1508": "SELECT COUNT(TransactionID) FROM transactions_1k WHERE GasStationID IN (SELECT GasStationID FROM gasstations WHERE Country = 'CZE') AND Price > 1000;\t----- bird -----\tdebit_card_specializing",
    "1509": "SELECT COUNT(*) FROM transactions_1k WHERE GasStationID IN (SELECT GasStationID FROM gasstations WHERE Country = 'CZE') AND Date > '2012-01-01'\t----- bird -----\tdebit_card_specializing",
    "1510": "SELECT AVG(Price) FROM transactions_1k WHERE GasStationID IN (SELECT GasStationID FROM gasstations WHERE Country = 'CZE')\t----- bird -----\tdebit_card_specializing",
    "1511": "SELECT AVG(Price) FROM transactions_1k AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Currency = 'euro'\t----- bird -----\tdebit_card_specializing",
    "1512": "SELECT customers.CustomerID, SUM(transactions_1k.Amount) AS TotalAmount FROM customers JOIN transactions_1k ON customers.CustomerID = transactions_1k.CustomerID WHERE transactions_1k.Date = '2012-08-25' GROUP BY customers.CustomerID ORDER BY TotalAmount DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1513": "SELECT Country FROM gasstations WHERE GasStationID = (SELECT GasStationID FROM transactions_1k WHERE Date = '2012-08-25' ORDER BY TransactionID ASC LIMIT 1)\t----- bird -----\tdebit_card_specializing",
    "1514": "SELECT T1.Currency FROM customers AS T1 INNER JOIN transactions_1k AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Date = '2012-08-24' AND T2.Time = '16:25:00'\t----- bird -----\tdebit_card_specializing",
    "1515": "SELECT T1.Segment FROM customers AS T1 INNER JOIN transactions_1k AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Date = '2012-08-23' AND T2.Time = '21:20:00'\t----- bird -----\tdebit_card_specializing",
    "1516": "SELECT COUNT(*) FROM transactions_1k WHERE Currency = 'EUR' AND Date = '2012-08-26' AND Time < '13:00:00'\t----- bird -----\tdebit_card_specializing",
    "1517": "SELECT Segment FROM customers WHERE CustomerID = (SELECT MIN(CustomerID) FROM customers)\t----- bird -----\tdebit_card_specializing",
    "1518": "SELECT T2.Country FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE STRFTIME('%Y-%m-%d',T1.Date) = '2012-08-24' AND T1.Time = '12:42:00'\t----- bird -----\tdebit_card_specializing",
    "1519": "SELECT ProductID FROM transactions_1k WHERE Date = '2012-08-23' AND Time = '21:20:00'\t----- bird -----\tdebit_card_specializing",
    "1520": "SELECT SUM(T1.Amount * T1.Price) AS total_expenses, T2.Date AS date FROM transactions_1k AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.CustomerID = (SELECT CustomerID FROM transactions_1k WHERE Price = 124.05 AND Date = '2012-08-24') AND T2.Date LIKE '2012-01%' GROUP BY T2.Date, T1.CustomerID\t----- bird -----\tdebit_card_specializing",
    "1521": "SELECT COUNT(TransactionID) FROM transactions_1k JOIN gasstations ON transactions_1k.GasStationID = gasstations.GasStationID WHERE Date = '2012-08-26' AND Time BETWEEN '08:00:00' AND '09:00:00' AND Country = 'CZE'\t----- bird -----\tdebit_card_specializing",
    "1522": "SELECT T1.Currency FROM customers AS T1 INNER JOIN transactions_1k AS T2 ON T1.CustomerID = T2.CustomerID INNER JOIN yearmonth AS T3 ON T1.CustomerID = T3.CustomerID WHERE T2.Amount = 214582.17 AND T3.Date LIKE '201306%'\t----- bird -----\tdebit_card_specializing",
    "1523": "SELECT G.Country FROM transactions_1k AS T INNER JOIN gasstations AS G ON T.GasStationID = G.GasStationID WHERE T.CardID = 667467\t----- bird -----\tdebit_card_specializing",
    "1524": "SELECT C.Country FROM customers AS C INNER JOIN transactions_1k AS T ON C.CustomerID = T.CustomerID WHERE T.Date = '2012-08-24' AND T.Amount = 548.4\t----- bird -----\tdebit_card_specializing",
    "1525": "SELECT COUNT(DISTINCT CustomerID) * 100.0 / (SELECT COUNT(DISTINCT CustomerID) FROM customers WHERE Currency = 'EUR') AS Percentage FROM transactions_1k WHERE Date = '2012-08-25'\t----- bird -----\tdebit_card_specializing",
    "1526": "SELECT ((SUM(CASE WHEN Y.`Date` LIKE '2012%' THEN Y.Consumption ELSE 0 END) - SUM(CASE WHEN Y.`Date` LIKE '2013%' THEN Y.Consumption ELSE 0 END)) / SUM(CASE WHEN Y.`Date` LIKE '2012%' THEN Y.Consumption ELSE 0 END)) AS decrease_rate FROM yearmonth AS Y INNER JOIN transactions_1k AS T ON Y.CustomerID = T.CustomerID WHERE T.Price = 634.8 AND T.Date = '2012-08-25'\t----- bird -----\tdebit_card_specializing",
    "1527": "SELECT GasStationID FROM transactions_1k GROUP BY GasStationID ORDER BY SUM(Price) DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1528": "SELECT SUM(CASE WHEN Segment = 'premium' THEN 1 ELSE 0 END) / COUNT(*) * 100 FROM customers WHERE Currency = 'SVK'\t----- bird -----\tdebit_card_specializing",
    "1529": "SELECT SUM(Price) FROM transactions_1k WHERE CustomerID = 38508 SELECT SUM(Price) FROM transactions_1k WHERE CustomerID = 38508 AND Date LIKE '201201%'\t----- bird -----\tdebit_card_specializing",
    "1530": "SELECT T1.Description FROM products AS T1 INNER JOIN transactions_1k AS T2 ON T1.ProductID = T2.ProductID GROUP BY T1.Description ORDER BY SUM(T2.Amount) DESC LIMIT 0, 5\t----- bird -----\tdebit_card_specializing",
    "1531": "SELECT T1.First, T1.Last, AVG(T2.Price / T2.Amount) AS AvgPricePerItem, T1.Currency FROM customers AS T1 INNER JOIN transactions_1k AS T2 ON T1.CustomerID = T2.CustomerID GROUP BY T1.CustomerID ORDER BY SUM(T2.Price) DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1532": "SELECT Country FROM gasstations WHERE GasStationID = (SELECT GasStationID FROM transactions_1k WHERE ProductID = 2 ORDER BY Price DESC LIMIT 1)\t----- bird -----\tdebit_card_specializing",
    "1533": "SELECT yearmonth.Consumption FROM yearmonth JOIN transactions_1k ON yearmonth.CustomerID = transactions_1k.CustomerID WHERE transactions_1k.ProductID = 5 AND transactions_1k.Price / transactions_1k.Amount > 29.00 AND yearmonth.Date LIKE '201208%'\t----- bird -----\tdebit_card_specializing"
}