{
    "0": "SELECT MAX(`Percent (%) Eligible Free (K-12)`) AS HighestEligibleFreeRate FROM frpm WHERE `County Name` = 'Alameda County';\t----- bird -----\tcalifornia_schools",
    "1": "SELECT `School Name`, `Percent (%) Eligible Free (Ages 5-17)` FROM frpm WHERE `District Type` = 'Continuation High School' ORDER BY `Percent (%) Eligible Free (Ages 5-17)` LIMIT 3;\t----- bird -----\tcalifornia_schools",
    "2": "SELECT schools.Zip FROM schools JOIN frpm ON schools.CDSCode = frpm.CDSCode WHERE frpm.`Charter School (Y/N)` = 1 AND schools.County = 'Fresno County Office of Education';\t----- bird -----\tcalifornia_schools",
    "3": "SELECT MailStreet, MailCity, MailState, MailZip FROM schools WHERE CDSCode = ( SELECT CDSCode FROM frpm WHERE `FRPM Count (K-12)` = ( SELECT MAX(`FRPM Count (K-12)`) FROM frpm ) )\t----- bird -----\tcalifornia_schools",
    "4": "SELECT schools.Phone FROM schools JOIN frpm ON schools.CDSCode = frpm.CDSCode WHERE schools.OpenDate > '2000-01-01' AND frpm.`Charter School (Y/N)` = 1;\t----- bird -----\tcalifornia_schools",
    "5": "SELECT COUNT(*) FROM satscores s JOIN schools sc ON s.cds = sc.CDSCode WHERE s.AvgScrMath < 400 AND sc.Virtual = 'F';\t----- bird -----\tcalifornia_schools",
    "6": "SELECT s.School FROM satscores s JOIN schools sc ON s.cds = sc.CDSCode WHERE s.NumTstTakr > 500 AND sc.Magnet = 1;\t----- bird -----\tcalifornia_schools",
    "7": "SELECT schools.Phone FROM schools JOIN satscores ON schools.CDSCode = satscores.cds WHERE satscores.NumTstTakr = (SELECT MAX(NumTstTakr) FROM satscores WHERE NumGE1500 > 0)\t----- bird -----\tcalifornia_schools",
    "8": "SELECT NumTstTakr FROM satscores WHERE cds = ( SELECT CDSCode FROM frpm WHERE `FRPM Count (K-12)` = ( SELECT MAX(`FRPM Count (K-12)`) FROM frpm ) )\t----- bird -----\tcalifornia_schools",
    "9": "SELECT COUNT(schools.CDSCode) FROM schools JOIN satscores ON schools.CDSCode = satscores.cds WHERE satscores.AvgScrMath > 560 AND schools.FundingType = 'Charter';\t----- bird -----\tcalifornia_schools",
    "10": "SELECT frpm.`FRPM Count (Ages 5-17)` FROM frpm JOIN schools ON frpm.CDSCode = schools.CDSCode JOIN satscores ON frpm.CDSCode = satscores.cds WHERE satscores.AvgScrRead = (SELECT MAX(AvgScrRead) FROM satscores) LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "11": "SELECT frpm.CDSCode FROM frpm WHERE (frpm.`Enrollment (K-12)` + frpm.`Enrollment (Ages 5-17)`) > 500;\t----- bird -----\tcalifornia_schools",
    "12": "SELECT MAX(`Percent (%) Eligible Free (Ages 5-17)`) AS Highest_Eligible_Free_Rate FROM frpm WHERE CDSCode IN ( SELECT cds FROM satscores WHERE NumGE1500 / NumTstTakr > 0.3 )\t----- bird -----\tcalifornia_schools",
    "13": "SELECT schools.Phone FROM satscores JOIN schools ON satscores.cds = schools.CDSCode ORDER BY CAST(satscores.NumGE1500 AS REAL) / satscores.NumTstTakr DESC LIMIT 3;\t----- bird -----\tcalifornia_schools",
    "14": "SELECT s.NCESSchool, s.School FROM frpm f JOIN schools s ON f.CDSCode = s.CDSCode ORDER BY f.`Enrollment (Ages 5-17)` DESC LIMIT 5;\t----- bird -----\tcalifornia_schools",
    "15": "SELECT DISTINCT dname FROM satscores JOIN schools ON satscores.cds = schools.CDSCode WHERE schools.StatusType = 'Active' ORDER BY AvgScrRead DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "16": "SELECT COUNT(*) FROM schools s JOIN satscores ss ON s.CDSCode = ss.cds WHERE s.County = 'Alameda' AND ss.NumTstTakr < 100;\t----- bird -----\tcalifornia_schools",
    "17": "SELECT schools.CharterNum FROM satscores JOIN schools ON satscores.cds = schools.CDSCode WHERE satscores.AvgScrWrite = 499;\t----- bird -----\tcalifornia_schools",
    "18": "SELECT COUNT(schools.CDSCode) FROM schools JOIN satscores ON schools.CDSCode = satscores.cds WHERE schools.County = 'Contra Costa' AND schools.FundingType = 'Directly Funded' AND satscores.NumTstTakr <= 250;\t----- bird -----\tcalifornia_schools",
    "19": "SELECT schools.Phone FROM schools JOIN satscores ON schools.CDSCode = satscores.cds WHERE satscores.AvgScrMath = (SELECT MAX(AvgScrMath) FROM satscores)\t----- bird -----\tcalifornia_schools",
    "20": "SELECT COUNT(*) FROM frpm JOIN schools ON frpm.CDSCode = schools.CDSCode WHERE `County Name` = 'Amador' AND `Low Grade` = '9' AND `High Grade` = '12';\t----- bird -----\tcalifornia_schools",
    "21": "SELECT COUNT(*) FROM frpm JOIN schools ON frpm.CDSCode = schools.CDSCode WHERE `County Name` = 'Los Angeles' AND `Free Meal Count (K-12)` > 500 AND `Free Meal Count (K-12)` < 700;\t----- bird -----\tcalifornia_schools",
    "22": "SELECT satscores.sname FROM satscores JOIN schools ON satscores.cds = schools.CDSCode WHERE schools.County = 'Contra Costa' ORDER BY satscores.NumTstTakr DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "23": "SELECT s.School, s.Street FROM frpm f JOIN schools s ON f.CDSCode = s.CDSCode WHERE ABS(f.`Enrollment (K-12)` - f.`Enrollment (Ages 5-17)`) > 30;\t----- bird -----\tcalifornia_schools",
    "24": "SELECT s.School FROM frpm f JOIN schools s ON f.CDSCode = s.CDSCode JOIN satscores ss ON f.CDSCode = ss.cds WHERE f.`Percent (%) Eligible Free (K-12)` > 0.1 AND ss.NumGE1500 > 0;\t----- bird -----\tcalifornia_schools",
    "25": "SELECT s.School FROM satscores s JOIN schools sc ON s.cds = sc.CDSCode WHERE sc.County = 'Riverside' GROUP BY s.School HAVING AVG(s.AvgScrMath) > 400;\t----- bird -----\tcalifornia_schools",
    "26": "SELECT School Name, Street, City, State, Zip FROM frpm JOIN schools ON frpm.CDSCode = schools.CDSCode WHERE `School Type` = 'High' AND `County Name` = 'Monterey' AND `FRPM Count (Ages 5-17)` > 800;\t----- bird -----\tcalifornia_schools",
    "27": "SELECT s.School, s.Phone, s.Website, s.OpenDate, s.ClosedDate, s.CharterNum, s.FundingType, s.DOC, s.DOCType, s.SOC, s.SOCType, s.EdOpsCode, s.EdOpsName, s.EILCode, s.EILName, s.GSoffered, s.GSserved, s.Virtual, s.Magnet, s.Latitude, s.Longitude, s.AdmFName1, s.AdmLName1, s.AdmEmail1, s.AdmFName2, s.AdmLName2, s.AdmEmail2, s.AdmFName3, s.AdmLName3, s.AdmEmail3, s.LastUpdate, ss.AvgScrWrite FROM schools s JOIN satscores ss ON s.CDSCode = ss.cds WHERE (s.OpenDate > '1991-01-01' OR s.Closed\t----- bird -----\tcalifornia_schools",
    "28": "SELECT s.School, s.DOCType FROM frpm f JOIN schools s ON f.CDSCode = s.CDSCode WHERE s.FundingType = 'Local' AND (f.`Enrollment (K-12)` - f.`Enrollment (Ages 5-17)`) > (SELECT AVG(f.`Enrollment (K-12)` - f.`Enrollment (Ages 5-17)`) FROM frpm f)\t----- bird -----\tcalifornia_schools",
    "29": "SELECT MIN(OpenDate) FROM schools WHERE GSoffered LIKE '%K-12%' ORDER BY enroll12 DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "30": "SELECT schools.City FROM schools ORDER BY schools.enroll12 LIMIT 5;\t----- bird -----\tcalifornia_schools",
    "31": "SELECT TOP 11 `School Name`, `Free Meal Count (K-12)` / `Enrollment (K-12)` AS `Eligible Free Rate for K-12` FROM frpm ORDER BY `Enrollment (K-12)` DESC LIMIT 11;\t----- bird -----\tcalifornia_schools",
    "32": "SELECT `School Name`, `FRPM Count (K-12)` / `Enrollment (K-12)` as `Eligible Free or Reduced Price Meal Rate` FROM frpm JOIN schools ON frpm.CDSCode = schools.CDSCode WHERE `Charter School (Y/N)` = 66 ORDER BY `FRPM Count (K-12)` DESC LIMIT 5;\t----- bird -----\tcalifornia_schools",
    "33": "SELECT s.School, s.Website FROM frpm f JOIN schools s ON f.CDSCode = s.CDSCode WHERE f.`Free Meal Count (Ages 5-17)` >= 1900 AND f.`Free Meal Count (Ages 5-17)` <= 2000;\t----- bird -----\tcalifornia_schools",
    "34": "SELECT (`Free Meal Count (Ages 5-17)` / `Enrollment (Ages 5-17)`) AS FreeRate FROM frpm WHERE `School Name` = 'Kacey Gibson'\t----- bird -----\tcalifornia_schools",
    "35": "SELECT schools.AdmEmail1 FROM frpm JOIN schools ON frpm.CDSCode = schools.CDSCode WHERE frpm.`Charter School (Y/N)` = 1 ORDER BY frpm.`Enrollment (K-12)` ASC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "36": "SELECT s.AdmFName1 || ' ' || s.AdmLName1 AS Administrator1, s.AdmFName2 || ' ' || s.AdmLName2 AS Administrator2, s.AdmFName3 || ' ' || s.AdmLName3 AS Administrator3 FROM schools s JOIN satscores ss ON s.CDSCode = ss.cds WHERE ss.NumGE1500 = (SELECT MAX(NumGE1500) FROM satscores)\t----- bird -----\tcalifornia_schools",
    "37": "SELECT schools.Street, schools.City, schools.Zip, schools.State FROM schools JOIN satscores ON schools.CDSCode = satscores.cds WHERE satscores.NumGE1500 / satscores.NumTstTakr = ( SELECT MIN(satscores.NumGE1500 / satscores.NumTstTakr) FROM satscores )\t----- bird -----\tcalifornia_schools",
    "38": "SELECT schools.Website FROM schools JOIN satscores ON schools.CDSCode = satscores.cds WHERE schools.County = 'Los Angeles County' AND satscores.NumTstTakr BETWEEN 2000 AND 3000;\t----- bird -----\tcalifornia_schools",
    "39": "SELECT AVG(NumTstTakr) FROM satscores JOIN schools ON satscores.cds = schools.CDSCode WHERE schools.County = 'Fresno' AND schools.OpenDate BETWEEN '1980-01-01' AND '1980-12-31';\t----- bird -----\tcalifornia_schools",
    "40": "SELECT schools.Phone FROM schools JOIN satscores ON schools.CDSCode = satscores.cds WHERE schools.District = 'Fresno Unified' ORDER BY satscores.AvgScrRead LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "41": "SELECT satscores.sname, satscores.AvgScrRead FROM satscores JOIN schools ON satscores.cds = schools.CDSCode WHERE schools.Virtual = 'F' ORDER BY satscores.AvgScrRead DESC LIMIT 5;\t----- bird -----\tcalifornia_schools",
    "42": "SELECT `Educational Option Type`\t----- bird -----\tcalifornia_schools",
    "43": "SELECT schools.`County`, AVG(satscores.`AvgScrMath` + satscores.`AvgScrRead` + satscores.`AvgScrWrite`) as avg_score FROM satscores JOIN schools ON satscores.cds = schools.CDSCode WHERE satscores.`AvgScrMath` + satscores.`AvgScrRead` + satscores.`AvgScrWrite` = ( SELECT MIN(s.`AvgScrMath` + s.`AvgScrRead` + s.`AvgScrWrite`) FROM satscores s ) GROUP BY schools.`County`;\t----- bird -----\tcalifornia_schools",
    "44": "SELECT satscores.AvgScrWrite AS AverageWritingScore, schools.City AS City FROM satscores JOIN schools ON satscores.cds = schools.CDSCode WHERE satscores.NumTstTakr = (SELECT MAX(NumTstTakr) FROM satscores WHERE NumGE1500 >= 1500);\t----- bird -----\tcalifornia_schools",
    "45": "SELECT s.School, AVG(ss.AvgScrWrite) AS AverageWritingScore FROM schools s JOIN satscores ss ON s.CDSCode = ss.cds WHERE s.AdmFName1 = 'Ricci' AND s.AdmLName1 = 'Ulrich' GROUP BY s.School;\t----- bird -----\tcalifornia_schools",
    "46": "SELECT schools.State, schools.School, SUM(schools.enrollment) as Total_Enrollment FROM schools WHERE schools.DOC = '31' AND schools.GSoffered = 'K-12' GROUP BY schools.State, schools.School ORDER BY Total_Enrollment DESC;\t----- bird -----\tcalifornia_schools",
    "47": "SELECT COUNT(*) / 12 AS MonthlyAverage FROM schools WHERE County = 'Alameda' AND DOC = '52' AND strftime('%Y', OpenDate) = '1980';\t----- bird -----\tcalifornia_schools",
    "48": "SELECT COUNT(DISTINCT s.CDSCode) / COUNT(DISTINCT e.CDSCode) AS ratio FROM schools s JOIN schools e ON s.County = e.County WHERE s.DOC = '54' AND e.DOC = '52';\t----- bird -----\tcalifornia_schools",
    "49": "SELECT schools.County, schools.School, schools.ClosedDate FROM schools WHERE schools.StatusType = 'Closed' GROUP BY schools.County ORDER BY COUNT(schools.School) DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "50": "SELECT schools.Street FROM schools JOIN satscores ON schools.CDSCode = satscores.cds WHERE satscores.AvgScrMath IS NOT NULL ORDER BY satscores.AvgScrMath DESC LIMIT 1 OFFSET 5;\t----- bird -----\tcalifornia_schools",
    "51": "SELECT schools.MailStreet, satscores.sname FROM satscores JOIN schools ON satscores.cds = schools.CDSCode WHERE satscores.AvgScrRead = (SELECT MIN(AvgScrRead) FROM satscores)\t----- bird -----\tcalifornia_schools",
    "52": "SELECT COUNT(*) AS TotalSchools FROM satscores s JOIN schools sc ON s.cds = sc.CDSCode WHERE s.AvgScrRead + s.AvgScrMath + s.AvgScrWrite >= 1500 AND sc.MailCity = 'Lakeport';\t----- bird -----\tcalifornia_schools",
    "53": "SELECT SUM(NumTstTakr) FROM satscores WHERE cds IN (SELECT CDSCode FROM schools WHERE MailCity = 'Fresno');\t----- bird -----\tcalifornia_schools",
    "54": "SELECT schools.School, schools.MailZip FROM schools WHERE schools.AdmFName1 = 'Avetik' AND schools.AdmLName1 = 'Atoian' OR schools.AdmFName2 = 'Avetik' AND schools.AdmLName2 = 'Atoian' OR schools.AdmFName3 = 'Avetik' AND schools.AdmLName3 = 'Atoian';\t----- bird -----\tcalifornia_schools",
    "55": "SELECT COUNT(*) AS Colusa_Count FROM schools WHERE MailState = 'CA' AND County = 'Colusa'; SELECT COUNT(*) AS Humboldt_Count FROM schools WHERE MailState = 'CA' AND County = 'Humboldt';\t----- bird -----\tcalifornia_schools",
    "56": "SELECT COUNT(*) FROM schools WHERE State = 'CA' AND County = 'San Joaquin' AND StatusType = 'Active';\t----- bird -----\tcalifornia_schools",
    "57": "SELECT schools.Phone, schools.Ext FROM schools JOIN satscores ON schools.CDSCode = satscores.cds WHERE satscores.AvgScrWrite IS NOT NULL ORDER BY satscores.AvgScrWrite DESC LIMIT 1 OFFSET 332;\t----- bird -----\tcalifornia_schools",
    "58": "SELECT schools.`Phone`, schools.`Ext`, schools.`School` FROM schools WHERE schools.`Zip` = '95203-3704';\t----- bird -----\tcalifornia_schools",
    "59": "SELECT schools.Website FROM schools WHERE schools.AdmFName1 = 'Mike' AND schools.AdmLName1 = 'Larson' OR schools.AdmFName2 = 'Mike' AND schools.AdmLName2 = 'Larson' OR schools.AdmFName3 = 'Mike' AND schools.AdmLName3 = 'Larson' OR schools.AdmFName1 = 'Dante' AND schools.AdmLName1 = 'Alvarez' OR schools.AdmFName2 = 'Dante' AND schools.AdmLName2 = 'Alvarez' OR schools.AdmFName3 = 'Dante' AND schools.AdmLName3 = 'Alvarez';\t----- bird -----\tcalifornia_schools",
    "60": "SELECT Website FROM schools WHERE Charter = 1 AND Virtual = 'P' AND County = 'San Joaquin';\t----- bird -----\tcalifornia_schools",
    "61": "SELECT COUNT(*) FROM schools WHERE Charter = 1 AND District = 'Elementary School District' AND City = 'Hickman';\t----- bird -----\tcalifornia_schools",
    "62": "SELECT COUNT(*) FROM schools s JOIN frpm f ON s.CDSCode = f.CDSCode WHERE s.County = 'Los Angeles' AND s.Charter = 0 AND f.`Percent (%) Eligible Free (K-12)` < 0.18;\t----- bird -----\tcalifornia_schools",
    "63": "SELECT schools.School, schools.City, schools.AdmFName1 || ' ' || schools.AdmLName1 AS Administrator1, schools.AdmFName2 || ' ' || schools.AdmLName2 AS Administrator2, schools.AdmFName3 || ' ' || schools.AdmLName3 AS Administrator3 FROM schools WHERE schools.Charter = 1 AND schools.CharterNum = '00D2';\t----- bird -----\tcalifornia_schools",
    "64": "SELECT COUNT(*) FROM schools WHERE MailCity = 'Hickman' AND CharterNum = '00D4';\t----- bird -----\tcalifornia_schools",
    "65": "SELECT ((SELECT COUNT(*) FROM schools WHERE County = 'Santa Clara' AND FundingType = 'Locally Funded') / (SELECT COUNT(*) FROM schools WHERE County = 'Santa Clara' AND FundingType IS NOT NULL) * 100) as \"Ratio in Percentage\" FROM schools;\t----- bird -----\tcalifornia_schools",
    "66": "SELECT COUNT(*) FROM schools WHERE OpenDate BETWEEN '2000-01-01' AND '2005-12-31' AND County = 'Stanislaus' AND FundingType = 'Directly Funded';\t----- bird -----\tcalifornia_schools",
    "67": "SELECT COUNT(*) FROM schools WHERE ClosedDate = '1989' AND City = 'San Francisco' AND StatusType = 'Community College District'\t----- bird -----\tcalifornia_schools",
    "68": "SELECT County, COUNT(*) AS NumOfClosures FROM schools WHERE ClosedDate BETWEEN '1980-01-01' AND '1989-12-31' AND SOC = '11' GROUP BY County ORDER BY NumOfClosures DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "69": "SELECT schools.NCESDist FROM schools WHERE schools.SOC = '31';\t----- bird -----\tcalifornia_schools",
    "70": "SELECT COUNT(*) FROM schools WHERE County = 'Alpine' AND StatusType IN ('Active', 'Closed') AND School = 'District Community Day School';\t----- bird -----\tcalifornia_schools",
    "71": "SELECT District Code FROM frpm WHERE `School Name` IN (SELECT School FROM schools WHERE City = 'Fresno') AND `School Name` NOT IN (SELECT sname FROM satscores WHERE Magnet = 1)\t----- bird -----\tcalifornia_schools",
    "72": "SELECT SUM(`Enrollment (Ages 5-17)`) AS Total_Enrollment FROM frpm WHERE `School Name` = 'State Special School' AND `District Name` = 'Fremont' AND `Academic Year` = '2014-2015' AND EdOpsCode = 'SSS';\t----- bird -----\tcalifornia_schools",
    "73": "SELECT `Free Meal Count (Ages 5-17)` FROM frpm WHERE `School Name` = 'Youth Authority School' AND `MailStreet` = 'PO Box 1040';\t----- bird -----\tcalifornia_schools",
    "74": "SELECT `Low Grade` FROM frpm WHERE `District Type` = 'SPECON' AND `NCESDist` = '613360';\t----- bird -----\tcalifornia_schools",
    "75": "SELECT `School Name`, `Educational Option Type` FROM frpm WHERE `County Code` = '37' AND `Educational Option Type` = 'Breakfast Provision 2';\t----- bird -----\tcalifornia_schools",
    "76": "SELECT schools.City FROM schools JOIN frpm ON schools.CDSCode = frpm.CDSCode WHERE frpm.`School Type` = 'High' AND frpm.`Educational Option Type` = 'Lunch Provision 2' AND frpm.`Low Grade` = '9' AND frpm.`High Grade` = '12' AND schools.County = 'Merced' AND schools.EILCode = 'HS';\t----- bird -----\tcalifornia_schools",
    "77": "SELECT schools.`School`, schools.`Percent (%) Eligible FRPM (Ages 5-17)` FROM schools JOIN frpm ON schools.CDSCode = frpm.CDSCode WHERE schools.`County` = 'Los Angeles' AND schools.`GSserved` = 'KG-9'\t----- bird -----\tcalifornia_schools",
    "78": "SELECT schools.`GSserved`, COUNT(schools.`GSserved`) AS count FROM schools WHERE schools.City = 'Adelanto' GROUP BY schools.`GSserved` ORDER BY count DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "79": "SELECT schools.County, COUNT(schools.CDSCode) AS NumSchools FROM schools WHERE schools.County IN ('San Diego', 'Santa Barbara') AND schools.Virtual = 'F' GROUP BY schools.County ORDER BY NumSchools DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "80": "SELECT School Name, Latitude, `School Type` FROM schools WHERE Latitude = (SELECT MAX(Latitude) FROM schools)\t----- bird -----\tcalifornia_schools",
    "81": "SELECT schools.City, schools.`Low Grade`, schools.School FROM schools WHERE schools.State = 'CA' ORDER BY schools.Latitude ASC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "82": "SELECT `Low Grade`, `High Grade` FROM frpm JOIN schools ON frpm.CDSCode = schools.CDSCode WHERE Longitude = (SELECT MAX(Longitude) FROM schools)\t----- bird -----\tcalifornia_schools",
    "83": "SELECT COUNT(DISTINCT s.CDSCode) AS \"Number of Schools Offering Multiple Provision Types\" FROM schools s JOIN satscores ss ON s.CDSCode = ss.cds WHERE s.GSoffered LIKE '%K-8%' AND s.Magnet = 1; SELECT City, COUNT(CDSCode) AS \"Number of Schools Serving K-8 Grade Span\" FROM schools WHERE GSoffered LIKE '%K-8%' GROUP BY City;\t----- bird -----\tcalifornia_schools",
    "84": "SELECT AdmFName1, COUNT(*) AS count, District FROM schools GROUP BY AdmFName1, District ORDER BY count DESC LIMIT 2;\t----- bird -----\tcalifornia_schools",
    "85": "SELECT `Percent (%) Eligible Free (K-12)` FROM frpm WHERE `School Name` IN ( SELECT School FROM schools WHERE AdmFName1 = 'Alusine' )\t----- bird -----\tcalifornia_schools",
    "86": "SELECT schools.AdmLName1, schools.District, schools.County, schools.School FROM schools JOIN satscores ON schools.CDSCode = satscores.cds WHERE schools.CharterNum = '40';\t----- bird -----\tcalifornia_schools",
    "87": "SELECT schools.AdmEmail1 FROM schools JOIN frpm ON schools.CDSCode = frpm.CDSCode WHERE schools.County = 'San Bernardino' AND schools.District = 'San Bernardino City Unified' AND schools.OpenDate BETWEEN '2009-01-01' AND '2010-12-31' AND (schools.SOC = '62' OR schools.DOC = '54')\t----- bird -----\tcalifornia_schools",
    "88": "SELECT satscores.AvgScrRead, satscores.AvgScrMath, satscores.AvgScrWrite, satscores.NumGE1500, schools.AdmEmail1, schools.School FROM satscores JOIN schools ON satscores.cds = schools.CDSCode WHERE satscores.NumGE1500 = (SELECT MAX(NumGE1500) FROM satscores) LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "89": "SELECT COUNT(account.account_id) FROM account JOIN district ON account.district_id = district.district_id WHERE district.A3 = 'East Bohemia' AND account.frequency = 'POPLATEK PO OBRATU';\t----- bird -----\tfinancial",
    "90": "SELECT COUNT(account_id) FROM account JOIN district ON account.district_id = district.district_id WHERE district.A3 = 'Prague';\t----- bird -----\tfinancial",
    "91": "SELECT AVG(A12) AS avg_unemployment_1995, AVG(A13) AS avg_unemployment_1996 FROM district;\t----- bird -----\tfinancial",
    "92": "SELECT COUNT(district_id) FROM district WHERE district_id IN ( SELECT district_id FROM client WHERE gender = 'F' GROUP BY district_id HAVING AVG(A11) > 6000 AND AVG(A11) < 10000 )\t----- bird -----\tfinancial",
    "93": "SELECT COUNT(client_id) FROM client JOIN district ON client.district_id = district.district_id WHERE gender = 'M' AND A3 = 'North Bohemia' AND A11 > 8000;\t----- bird -----\tfinancial",
    "94": "SELECT a.account_id FROM account a JOIN disp d ON a.account_id = d.account_id JOIN client c ON d.client_id = c.client_id WHERE c.gender = 'F' AND c.birth_date = (SELECT MIN(birth_date) FROM client WHERE gender = 'F') AND c.district_id = (SELECT district_id FROM district WHERE A11 = (SELECT MIN(A11) FROM district)) UNION SELECT a.account_id FROM account a JOIN disp d ON a.account_id = d.account_id JOIN client c ON d.client_id = c.client_id WHERE c.gender = 'F' AND c.birth_date = (SELECT MIN(birth_date) FROM client WHERE gender = 'F') AND c.district_id = (SELECT district_id FROM district WHERE A11 = (SELECT MAX(A11) FROM district));\t----- bird -----\tfinancial",
    "95": "SELECT a.account_id FROM account a JOIN disp d ON a.account_id = d.account_id JOIN client c ON d.client_id = c.client_id JOIN district dis ON c.district_id = dis.district_id GROUP BY a.account_id ORDER BY c.birth_date ASC, dis.A11 DESC LIMIT 1;\t----- bird -----\tfinancial",
    "96": "SELECT COUNT(DISTINCT c.client_id) FROM client c JOIN disp d ON c.client_id = d.client_id JOIN account a ON d.account_id = a.account_id WHERE a.frequency = 'POPLATEK TYDNE' AND d.type = 'OWNER';\t----- bird -----\tfinancial",
    "97": "SELECT client.client_id, client.gender, client.birth_date FROM client JOIN disp ON client.client_id = disp.client_id JOIN card ON disp.disp_id = card.disp_id WHERE card.type = 'POPLATEK PO OBRATU';\t----- bird -----\tfinancial",
    "98": "SELECT account_id, amount FROM loan WHERE date LIKE '1997%' AND status = 'A' AND account_id IN (SELECT account_id FROM account WHERE frequency = 'POPLATEK TYDNE') ORDER BY amount LIMIT 1;\t----- bird -----\tfinancial",
    "99": "SELECT account_id, amount FROM loan WHERE duration > 12 AND date >= '1993-01-01' AND date <= '1993-12-31' ORDER BY amount DESC LIMIT 1;\t----- bird -----\tfinancial",
    "100": "SELECT COUNT(DISTINCT client_id) FROM client WHERE gender = 'F' AND birth_date < '1950-01-01' AND district_id IN (SELECT district_id FROM district WHERE A2 = 'Slokolov');\t----- bird -----\tfinancial",
    "101": "SELECT account_id FROM account WHERE date = (SELECT MIN(date) FROM account WHERE date LIKE '1995%');\t----- bird -----\tfinancial",
    "102": "SELECT account_id FROM account WHERE date < '1997-01-01' AND account_id IN ( SELECT account_id FROM trans GROUP BY account_id HAVING SUM(amount) > 3000 )\t----- bird -----\tfinancial",
    "103": "SELECT client_id FROM client WHERE client_id IN ( SELECT client_id FROM disp WHERE disp_id IN ( SELECT disp_id FROM card WHERE issued = '1994-03-03' ) )\t----- bird -----\tfinancial",
    "104": "SELECT MIN(date) AS account_opened_date FROM account WHERE account_id = (SELECT account_id FROM trans WHERE amount = 840 AND date = '1998-10-14');\t----- bird -----\tfinancial",
    "105": "SELECT d.district_id FROM loan l JOIN account a ON l.account_id = a.account_id JOIN district d ON a.district_id = d.district_id WHERE l.date = '1994-08-25';\t----- bird -----\tfinancial",
    "106": "SELECT MAX(amount) FROM trans WHERE account_id IN ( SELECT account_id FROM card WHERE issued = '1996-10-21' )\t----- bird -----\tfinancial",
    "107": "SELECT c.gender FROM client c JOIN disp d ON c.client_id = d.client_id JOIN account a ON d.account_id = a.account_id JOIN district dis ON c.district_id = dis.district_id WHERE c.birth_date = (SELECT MIN(birth_date) FROM client) AND dis.A11 = (SELECT MAX(A11) FROM district)\t----- bird -----\tfinancial",
    "108": "SELECT trans.amount FROM trans JOIN account ON trans.account_id = account.account_id JOIN loan ON account.account_id = loan.account_id JOIN disp ON account.account_id = disp.account_id JOIN client ON disp.client_id = client.client_id WHERE loan.amount = (SELECT MAX(amount) FROM loan) ORDER BY trans.date LIMIT 1;\t----- bird -----\tfinancial",
    "109": "SELECT COUNT(client_id) FROM client WHERE district_id = (SELECT district_id FROM district WHERE A2 = 'Jesenik') AND gender = 'F';\t----- bird -----\tfinancial",
    "110": "SELECT disp_id FROM trans WHERE amount = 5100 AND date = '1998-09-02'\t----- bird -----\tfinancial",
    "111": "SELECT COUNT(account_id) FROM account WHERE district_id IN (SELECT district_id FROM district WHERE A2 = 'Litomerice') AND date >= '1996-01-01' AND date <= '1996-12-31';\t----- bird -----\tfinancial",
    "112": "SELECT d.A2 FROM client c JOIN disp d ON c.client_id = d.client_id JOIN account a ON d.account_id = a.account_id WHERE c.gender = 'F' AND c.birth_date = '1976-01-29';\t----- bird -----\tfinancial",
    "113": "SELECT c.birth_date FROM client c JOIN disp d ON c.client_id = d.client_id JOIN account a ON d.account_id = a.account_id JOIN loan l ON a.account_id = l.account_id WHERE l.amount = 98832 AND l.date = '1996-01-03';\t----- bird -----\tfinancial",
    "114": "SELECT account_id FROM client JOIN disp ON client.client_id = disp.client_id JOIN account ON disp.account_id = account.account_id JOIN district ON client.district_id = district.district_id WHERE district.A3 = 'Prague' ORDER BY account.date LIMIT 1;\t----- bird -----\tfinancial",
    "115": "SELECT (COUNT(CASE WHEN c.gender = 'M' THEN 1 END) * 100.0 / COUNT(*)) AS percentage_male_clients FROM client c JOIN district d ON c.district_id = d.district_id WHERE d.A3 = 'south Bohemia' ORDER BY d.A4 DESC LIMIT 1;\t----- bird -----\tfinancial",
    "116": "SELECT ((t2.balance - t1.balance) / t1.balance) * 100 AS increase_rate FROM trans t1 JOIN trans t2 ON t1.account_id = t2.account_id WHERE t1.date = '1993-03-22' AND t2.date = '1998-12-27' AND t1.account_id IN ( SELECT account_id FROM loan WHERE date = '1993-07-05' )\t----- bird -----\tfinancial",
    "117": "SELECT ((SELECT SUM(amount) FROM loan WHERE status = 'A') / (SELECT SUM(amount) FROM loan)) * 100 as percentage_loan_paid_without_issue;\t----- bird -----\tfinancial",
    "118": "SELECT ROUND((COUNT(*) * 100.0) / (SELECT COUNT(*) FROM loan WHERE amount < 100000 AND status = 'C'), 2) AS percentage FROM loan WHERE amount < 100000 AND status = 'C';\t----- bird -----\tfinancial",
    "119": "SELECT a.account_id, d.A2 as district_name, d.A3 as district_region FROM account a JOIN district d ON a.district_id = d.district_id JOIN card c ON a.account_id = c.account_id JOIN trans t ON a.account_id = t.account_id WHERE t.date > c.issued AND t.date BETWEEN '1993-01-01' AND '1993-12-31' AND c.type = 'POPLATEK PO OBRATU';\t----- bird -----\tfinancial",
    "120": "SELECT account.account_id, account.frequency FROM account JOIN disp ON account.account_id = disp.account_id JOIN client ON disp.client_id = client.client_id JOIN district ON client.district_id = district.district_id WHERE district.A6 = 'east Bohemia' AND account.date BETWEEN '1995-01-01' AND '2000-12-31';\t----- bird -----\tfinancial",
    "121": "SELECT account_id, date FROM account JOIN district ON account.district_id = district.district_id WHERE district.A2 = 'Prachatice';\t----- bird -----\tfinancial",
    "122": "SELECT d.A2 AS district, d.A3 AS region FROM loan l JOIN account a ON l.account_id = a.account_id JOIN client c ON a.district_id = c.district_id JOIN district d ON c.district_id = d.district_id WHERE l.loan_id = 4990;\t----- bird -----\tfinancial",
    "123": "SELECT a.account_id, d.A2 as district, d.A3 as region FROM account a JOIN district d ON a.district_id = d.district_id JOIN loan l ON a.account_id = l.account_id WHERE l.amount > 300000;\t----- bird -----\tfinancial",
    "124": "SELECT loan.loan_id, district.A3, district.A11 FROM loan JOIN account ON loan.account_id = account.account_id JOIN client ON account.district_id = client.district_id JOIN district ON client.district_id = district.district_id WHERE loan.duration = 60;\t----- bird -----\tfinancial",
    "125": "SELECT d.A2 AS district, ((d.A13 - d.A12) / d.A12) * 100 AS unemployment_increment_rate FROM loan l JOIN account a ON l.account_id = a.account_id JOIN client c ON a.account_id = c.client_id JOIN district d ON c.district_id = d.district_id WHERE l.status = 'D'\t----- bird -----\tfinancial",
    "126": "SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM account WHERE date >= '1993-01-01' AND date <= '1993-12-31') FROM account JOIN district ON account.district_id = district.district_id WHERE district.A2 = 'Decin' AND account.date >= '1993-01-01' AND account.date <= '1993-12-31';\t----- bird -----\tfinancial",
    "127": "SELECT account_id FROM account WHERE frequency = 'POPLATEK MESICNE';\t----- bird -----\tfinancial",
    "128": "SELECT d.A2 AS district, COUNT(c.client_id) AS female_account_holders FROM district d JOIN client c ON d.district_id = c.district_id JOIN disp dp ON c.client_id = dp.client_id JOIN account a ON dp.account_id = a.account_id WHERE c.gender = 'F' GROUP BY d.A2 ORDER BY female_account_holders DESC LIMIT 10;\t----- bird -----\tfinancial",
    "129": "SELECT d.A2 AS district_name, SUM(t.amount) AS total_withdrawals FROM trans t JOIN account a ON t.account_id = a.account_id JOIN district d ON a.district_id = d.district_id WHERE t.type = 'VYDAJ' AND t.date LIKE '1996-01%' GROUP BY d.A2 ORDER BY total_withdrawals DESC LIMIT 10;\t----- bird -----\tfinancial",
    "130": "SELECT COUNT(DISTINCT a.account_id) FROM account a JOIN district d ON a.district_id = d.district_id JOIN disp dp ON a.account_id = dp.account_id LEFT JOIN card c ON dp.disp_id = c.disp_id WHERE d.A3 = 'South Bohemia' AND c.card_id IS NULL;\t----- bird -----\tfinancial",
    "131": "SELECT d.A3 AS district_name, COUNT(l.loan_id) AS active_loans FROM district d JOIN client c ON d.district_id = c.district_id JOIN disp dp ON c.client_id = dp.client_id JOIN account a ON dp.account_id = a.account_id JOIN loan l ON a.account_id = l.account_id WHERE l.status = 'C' GROUP BY d.A3 ORDER BY active_loans DESC LIMIT 1;\t----- bird -----\tfinancial",
    "132": "SELECT AVG(amount) FROM loan WHERE account_id IN (SELECT account_id FROM disp WHERE client_id IN (SELECT client_id FROM client WHERE gender = 'M'));\t----- bird -----\tfinancial",
    "133": "SELECT d.A2 AS district_name, d.A5 AS branch_location FROM district d WHERE d.district_id IN ( SELECT district_id FROM account WHERE date >= '1996-01-01' AND date <= '1996-12-31' ) ORDER BY d.A13 DESC;\t----- bird -----\tfinancial",
    "134": "SELECT COUNT(account_id) AS num_accounts_opened FROM account WHERE district_id = ( SELECT district_id FROM district WHERE A16 = ( SELECT MAX(A16) FROM district ) )\t----- bird -----\tfinancial",
    "135": "SELECT COUNT(account_id) FROM account WHERE account_id IN (SELECT account_id FROM trans WHERE type = 'VYBER KARTOU' AND balance < 0) AND frequency = 'POPLATEK MESICNE';\t----- bird -----\tfinancial",
    "136": "SELECT COUNT(*) FROM loan JOIN account ON loan.account_id = account.account_id WHERE date BETWEEN '1995-01-01' AND '1997-12-31' AND amount >= 250000 AND frequency = 'POPLATEK MESICNE' AND status = 'A';\t----- bird -----\tfinancial",
    "137": "SELECT COUNT(account_id) FROM account WHERE account_id IN ( SELECT account_id FROM loan WHERE status = 'C' OR status = 'D' ) AND district_id = 1;\t----- bird -----\tfinancial",
    "138": "SELECT COUNT(client_id) AS male_clients FROM client WHERE district_id = ( SELECT district_id FROM district ORDER BY A15 DESC LIMIT 1 OFFSET 1 ) AND gender = 'M';\t----- bird -----\tfinancial",
    "139": "SELECT COUNT(*) FROM card WHERE type = 'gold' AND card_id IN (SELECT card_id FROM disp WHERE type = 'disponent')\t----- bird -----\tfinancial",
    "140": "SELECT COUNT(account_id) FROM account WHERE district_id = (SELECT district_id FROM district WHERE A2 = 'Pisek');\t----- bird -----\tfinancial",
    "141": "SELECT d.A2, SUM(t.amount) as total_amount FROM district d JOIN client c ON d.district_id = c.district_id JOIN disp dp ON c.client_id = dp.client_id JOIN account a ON dp.account_id = a.account_id JOIN trans t ON a.account_id = t.account_id WHERE t.date >= '1997-01-01' AND t.date <= '1997-12-31' GROUP BY d.A2 HAVING total_amount > 10000;\t----- bird -----\tfinancial",
    "142": "SELECT account.account_id FROM account JOIN `order` ON account.account_id = `order`.account_id WHERE `order`.k_symbol = 'SIPO' AND account.district_id = (SELECT district_id FROM district WHERE A4 = 'Pisek');\t----- bird -----\tfinancial",
    "143": "SELECT account_id FROM account WHERE account_id IN ( SELECT account_id FROM disp WHERE disp_id IN ( SELECT disp_id FROM card WHERE type = 'gold' ) ) AND account_id IN ( SELECT account_id FROM disp WHERE disp_id IN ( SELECT disp_id FROM card WHERE type = 'junior' ) );\t----- bird -----\tfinancial",
    "144": "SELECT AVG(amount) AS average_amount FROM trans WHERE type = 'VYBER KARTOU' AND operation = 'VYBER KARTOU' AND date >= '2021-01-01' AND date <= '2021-12-31';\t----- bird -----\tfinancial",
    "145": "SELECT disp.client_id FROM disp JOIN account ON disp.account_id = account.account_id JOIN trans ON account.account_id = trans.account_id JOIN card ON disp.disp_id = card.disp_id WHERE trans.type = 'VYBER KARTOU' AND trans.date >= '1998-01-01' AND trans.date <= '1998-12-31' GROUP BY disp.client_id HAVING SUM(trans.amount) / 12 < (SELECT AVG(trans.amount) FROM trans WHERE trans.type = 'VYBER KARTOU' AND trans.date >= '1998-01-01' AND trans.date <= '1998-12-31')\t----- bird -----\tfinancial",
    "146": "SELECT client.client_id, client.gender FROM client JOIN disp ON client.client_id = disp.client_id JOIN card ON disp.disp_id = card.disp_id JOIN account ON disp.account_id = account.account_id JOIN loan ON account.account_id = loan.account_id WHERE client.gender = 'F' AND card.type = 'credit card' AND loan.status = 'A';\t----- bird -----\tfinancial",
    "147": "SELECT COUNT(client.client_id) FROM client JOIN district ON client.district_id = district.district_id WHERE client.gender = 'F' AND district.A3 = 'south Bohemia';\t----- bird -----\tfinancial",
    "148": "SELECT account_id FROM account JOIN district ON account.district_id = district.district_id JOIN disp ON account.account_id = disp.account_id JOIN client ON disp.client_id = client.client_id WHERE district.A2 = 'Tabor' AND disp.type = 'OWNER';\t----- bird -----\tfinancial",
    "149": "SELECT DISTINCT type FROM disp JOIN account ON disp.account_id = account.account_id JOIN district ON account.district_id = district.district_id WHERE type != 'OWNER' AND district.A11 > 8000 AND district.A11 <= 9000;\t----- bird -----\tfinancial",
    "150": "SELECT COUNT(DISTINCT account_id) FROM account JOIN district ON account.district_id = district.district_id JOIN trans ON account.account_id = trans.account_id WHERE district.A3 = 'North Bohemia' AND trans.bank = 'AB';\t----- bird -----\tfinancial",
    "151": "SELECT d.A2 AS district_name FROM district d JOIN client c ON d.district_id = c.district_id JOIN disp dp ON c.client_id = dp.client_id JOIN account a ON dp.account_id = a.account_id JOIN trans t ON a.account_id = t.account_id WHERE t.type = 'VYDAJ';\t----- bird -----\tfinancial",
    "152": "SELECT AVG(A15) FROM district WHERE A15 > 4000 AND district_id IN ( SELECT district_id FROM account WHERE date >= '1997-01-01' )\t----- bird -----\tfinancial",
    "153": "SELECT COUNT(*) FROM card WHERE type = 'classic' AND disp_id IN (SELECT disp_id FROM disp WHERE type = 'OWNER')\t----- bird -----\tfinancial",
    "154": "SELECT COUNT(client_id) FROM client WHERE district_id = (SELECT district_id FROM district WHERE A2 = 'Hl.m. Praha') AND gender = 'M';\t----- bird -----\tfinancial",
    "155": "SELECT ROUND((COUNT(*) * 100.0 / (SELECT COUNT(*) FROM card)) , 2) AS percent_gold_prior_to_1998 FROM card WHERE type = 'gold' AND issued < '1998-01-01';\t----- bird -----\tfinancial",
    "156": "SELECT client.client_id, client.gender FROM client JOIN disp ON client.client_id = disp.client_id JOIN account ON disp.account_id = account.account_id JOIN loan ON account.account_id = loan.account_id WHERE loan.amount = (SELECT MAX(amount) FROM loan)\t----- bird -----\tfinancial",
    "157": "SELECT SUM(A15) AS number_of_committed_crimes FROM district WHERE district_id = (SELECT district_id FROM account WHERE account_id = 532)\t----- bird -----\tfinancial",
    "158": "SELECT district_id FROM `order` WHERE order_id = 33333;\t----- bird -----\tfinancial",
    "159": "SELECT trans.trans_id, trans.date, trans.amount FROM trans JOIN disp ON trans.account_id = disp.account_id WHERE disp.client_id = 3356 AND trans.type = 'VYBER';\t----- bird -----\tfinancial",
    "160": "SELECT COUNT(account_id) FROM account WHERE frequency = 'POPLATEK TYDNE' AND account_id IN (SELECT account_id FROM loan WHERE amount < 200000);\t----- bird -----\tfinancial",
    "161": "SELECT card.type FROM client JOIN disp ON client.client_id = disp.client_id JOIN card ON disp.disp_id = card.disp_id WHERE client.client_id = 13539;\t----- bird -----\tfinancial",
    "162": "SELECT d.A3 FROM client c JOIN district d ON c.district_id = d.district_id WHERE c.client_id = 3541;\t----- bird -----\tfinancial",
    "163": "SELECT d.A2 AS district_name, COUNT(l.account_id) AS num_accounts FROM district d JOIN client c ON d.district_id = c.district_id JOIN disp dp ON c.client_id = dp.client_id JOIN account a ON dp.account_id = a.account_id JOIN loan l ON a.account_id = l.account_id WHERE l.status = 'A' GROUP BY d.A2 ORDER BY num_accounts DESC LIMIT 1;\t----- bird -----\tfinancial",
    "164": "SELECT client.client_id, client.gender FROM client JOIN disp ON client.client_id = disp.client_id JOIN account ON disp.account_id = account.account_id JOIN `order` ON account.account_id = `order`.account_id WHERE `order`.order_id = 32423;\t----- bird -----\tfinancial",
    "165": "SELECT trans.trans_id, trans.account_id, trans.date, trans.type, trans.operation, trans.amount, trans.balance, trans.k_symbol, trans.bank, trans.account FROM trans JOIN account ON trans.account_id = account.account_id JOIN district ON account.district_id = district.district_id WHERE district.A5 = '5';\t----- bird -----\tfinancial",
    "166": "SELECT COUNT(*) FROM account WHERE district_id IN (SELECT district_id FROM district WHERE A3 = 'Jesenik');\t----- bird -----\tfinancial",
    "167": "SELECT client.client_id FROM client JOIN disp ON client.client_id = disp.client_id JOIN card ON disp.disp_id = card.disp_id WHERE card.type = 'junior' AND card.issued > '1996-01-01';\t----- bird -----\tfinancial",
    "168": "SELECT ROUND((COUNT(DISTINCT c.client_id) / (SELECT COUNT(DISTINCT client_id) FROM client WHERE district_id IN (SELECT district_id FROM district WHERE A11 > 10000))) * 100, 2) AS percentage_female_clients FROM client c JOIN district d ON c.district_id = d.district_id WHERE c.gender = 'F' AND d.A11 > 10000;\t----- bird -----\tfinancial",
    "169": "SELECT ((SUM(l1.amount) - SUM(l2.amount)) / SUM(l2.amount)) * 100 AS growth_rate FROM loan l1 JOIN account a ON l1.account_id = a.account_id JOIN client c ON a.district_id = c.district_id JOIN loan l2 ON l1.account_id = l2.account_id WHERE c.gender = 'M' AND l1.date >= '1997-01-01' AND l1.date <= '1997-12-31' AND l2.date >= '1996-01-01' AND l2.date <= '1996-12-31';\t----- bird -----\tfinancial",
    "170": "SELECT COUNT(*) FROM trans WHERE type = 'VYBER KARTOU' AND date > '1995-01-01';\t----- bird -----\tfinancial",
    "171": "SELECT SUM(CASE WHEN d.A3 = 'North Bohemia' THEN d.A16 ELSE 0 END) - SUM(CASE WHEN d.A3 = 'East Bohemia' THEN d.A16 ELSE 0 END) AS Difference_in_Crimes FROM district d JOIN client c ON d.district_id = c.district_id JOIN account a ON c.district_id = a.district_id JOIN trans t ON a.account_id = t.account_id WHERE t.date >= '1996-01-01' AND t.date <= '1996-12-31';\t----- bird -----\tfinancial",
    "172": "SELECT COUNT(*) FROM disp WHERE account_id BETWEEN 1 AND 10; This query will return the total number of owner and disponent dispositions for accounts numbered 1 to 10.\t----- bird -----\tfinancial",
    "173": "SELECT frequency, SUM(amount) as total_debit FROM account JOIN trans ON account.account_id = trans.account_id WHERE account.account_id = 3 AND trans.type = 'PRIJEM' AND trans.k_symbol = 'VYBER' GROUP BY account.account_id;\t----- bird -----\tfinancial",
    "174": "SELECT birth_date FROM client WHERE client_id = 130;\t----- bird -----\tfinancial",
    "175": "SELECT COUNT(*) FROM disp JOIN account ON disp.account_id = account.account_id WHERE disp.type = 'OWNER' AND account.frequency = 'POPLATEK PO OBRATU';\t----- bird -----\tfinancial",
    "176": "SELECT SUM(amount) AS total_debt, SUM(payments) AS total_payments FROM loan WHERE account_id IN (SELECT account_id FROM disp WHERE client_id = 992) AND status = 'A';\t----- bird -----\tfinancial",
    "177": "SELECT SUM(balance) FROM trans JOIN disp ON trans.account_id = disp.account_id WHERE disp.client_id = 4 AND trans.trans_id <= 851;\t----- bird -----\tfinancial",
    "178": "SELECT card.type FROM client JOIN disp ON client.client_id = disp.client_id JOIN card ON disp.disp_id = card.disp_id WHERE client.client_id = 9;\t----- bird -----\tfinancial",
    "179": "SELECT SUM(amount) FROM trans WHERE account_id IN (SELECT account_id FROM disp WHERE client_id = 617) AND date >= '1998-01-01' AND date <= '1998-12-31';\t----- bird -----\tfinancial",
    "180": "SELECT client_id FROM client JOIN disp ON client.client_id = disp.client_id JOIN account ON disp.account_id = account.account_id JOIN district ON client.district_id = district.district_id WHERE EXTRACT(YEAR FROM client.birth_date) BETWEEN 1983 AND 1987 AND district.A6 = 'East Bohemia';\t----- bird -----\tfinancial",
    "181": "SELECT client_id FROM client WHERE gender = 'F' ORDER BY client_id DESC LIMIT 3;\t----- bird -----\tfinancial",
    "182": "SELECT COUNT(DISTINCT c.client_id) FROM client c JOIN disp d ON c.client_id = d.client_id JOIN account a ON d.account_id = a.account_id JOIN trans t ON a.account_id = t.account_id WHERE c.gender = 'M' AND c.birth_date BETWEEN '1974-01-01' AND '1976-12-31' AND t.type = 'PRIJEM' AND t.k_symbol = 'SIPO' AND t.amount > 4000;\t----- bird -----\tfinancial",
    "183": "SELECT COUNT(account_id) FROM account WHERE district_id IN (SELECT district_id FROM district WHERE A3 = 'Beroun') AND date > '1996-01-01';\t----- bird -----\tfinancial",
    "184": "SELECT COUNT(client.client_id) FROM client JOIN disp ON client.client_id = disp.client_id JOIN card ON disp.disp_id = card.disp_id WHERE client.gender = 'F' AND card.type = 'junior';\t----- bird -----\tfinancial",
    "185": "SELECT COUNT(DISTINCT c.client_id) AS total_clients, COUNT(DISTINCT CASE WHEN c.gender = 'F' THEN c.client_id END) AS female_clients, COUNT(DISTINCT CASE WHEN d.A3 = 'Prague' THEN c.client_id END) AS prague_clients, COUNT(DISTINCT CASE WHEN c.gender = 'F' AND d.A3 = 'Prague' THEN c.client_id END) AS female_prague_clients, (COUNT(DISTINCT CASE WHEN c.gender = 'F' AND d.A3 = 'Prague' THEN c.client_id END) / COUNT(DISTINCT CASE WHEN d.A3 = 'Prague' THEN c.client_id END)) * 100 AS proportion_female_in_prague FROM client c JOIN disp ON c.client_id = disp.client_id JOIN account a ON disp.account_id = a.account_id JOIN district d ON c.district_id = d.district_id;\t----- bird -----\tfinancial",
    "186": "SELECT ROUND((COUNT(CASE WHEN c.gender = 'M' AND a.frequency = 'POPLATEK TYDNE' THEN 1 END) / COUNT(CASE WHEN a.frequency = 'POPLATEK TYDNE' THEN 1 END)) * 100, 2) AS percentage FROM client c JOIN disp d ON c.client_id = d.client_id JOIN account a ON d.account_id = a.account_id;\t----- bird -----\tfinancial",
    "187": "SELECT COUNT(client_id) FROM client JOIN disp ON client.client_id = disp.client_id JOIN account ON disp.account_id = account.account_id WHERE account.frequency = 'POPLATEK TYDNE';\t----- bird -----\tfinancial",
    "188": "SELECT account_id, amount FROM loan WHERE duration > 24 AND date < '1997-01-01' AND amount = ( SELECT MIN(amount) FROM loan WHERE duration > 24 AND date < '1997-01-01' )\t----- bird -----\tfinancial",
    "189": "SELECT account_id FROM client JOIN disp ON client.client_id = disp.client_id JOIN account ON disp.account_id = account.account_id WHERE client.gender = 'F' ORDER BY client.birth_date ASC, district.A11 ASC LIMIT 1;\t----- bird -----\tfinancial",
    "190": "SELECT COUNT(client_id) FROM client JOIN district ON client.district_id = district.district_id WHERE birth_date LIKE '1920%' AND A3 = 'east Bohemia';\t----- bird -----\tfinancial",
    "191": "SELECT COUNT(*) FROM loan JOIN account ON loan.account_id = account.account_id WHERE duration = 24 AND frequency = 'POPLATEK TYDNE';\t----- bird -----\tfinancial",
    "192": "SELECT AVG(amount) AS average_loan_amount FROM loan WHERE status = 'C' AND account_id IN ( SELECT account_id FROM trans WHERE k_symbol = 'POPLATEK PO OBRATU' )\t----- bird -----\tfinancial",
    "193": "SELECT client.client_id, district.A2 FROM client JOIN disp ON client.client_id = disp.client_id JOIN account ON disp.account_id = account.account_id JOIN district ON client.district_id = district.district_id WHERE disp.type = 'OWNER'\t----- bird -----\tfinancial",
    "194": "SELECT client.client_id, (strftime('%Y', 'now') - strftime('%Y', client.birth_date)) - (strftime('%m-%d', 'now') < strftime('%m-%d', client.birth_date)) AS age FROM client JOIN disp ON client.client_id = disp.client_id JOIN card ON disp.disp_id = card.disp_id WHERE card.type = 'gold';\t----- bird -----\tfinancial",
    "195": "SELECT `bond_type`, COUNT(`bond_type`) AS `count` FROM `bond` GROUP BY `bond_type` ORDER BY `count` DESC LIMIT 1;\t----- bird -----\ttoxicology",
    "196": "SELECT COUNT(DISTINCT m.molecule_id) FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id WHERE m.label = '-' AND a.element = 'cl';\t----- bird -----\ttoxicology",
    "197": "SELECT AVG(CASE WHEN b.bond_type = '-' AND a.element = 'o' THEN 1 ELSE 0 END) AS avg_oxygen_atoms FROM atom a JOIN bond b ON a.molecule_id = b.molecule_id WHERE a.element = 'o';\t----- bird -----\ttoxicology",
    "198": "SELECT DIVIDE(SUM(CASE WHEN b.bond_type = '-' THEN 1 ELSE 0 END), COUNT(a.atom_id)) FROM atom a JOIN bond b ON a.molecule_id = b.molecule_id JOIN molecule m ON a.molecule_id = m.molecule_id WHERE m.label = '+';\t----- bird -----\ttoxicology",
    "199": "SELECT COUNT(*) FROM atom JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE element = 'na' AND label = '-'\t----- bird -----\ttoxicology",
    "200": "SELECT m.molecule_id FROM molecule m JOIN bond b ON m.molecule_id = b.molecule_id WHERE b.bond_type = '#' AND m.label = '+';\t----- bird -----\ttoxicology",
    "201": "SELECT DIVIDE(COUNT(DISTINCT a.atom_id), COUNT(DISTINCT m.molecule_id)) * 100 AS percentage_carbon_double_bond FROM atom a JOIN bond b ON a.molecule_id = b.molecule_id JOIN molecule m ON a.molecule_id = m.molecule_id WHERE a.element = 'c' AND b.bond_type = ' = ';\t----- bird -----\ttoxicology",
    "202": "SELECT COUNT(*) FROM bond WHERE bond_type = '#'\t----- bird -----\ttoxicology",
    "203": "SELECT COUNT(*) FROM atom WHERE element != 'br';\t----- bird -----\ttoxicology",
    "204": "SELECT COUNT(*) FROM molecule WHERE molecule_id BETWEEN 'TR000' AND 'TR099' AND label = '+';\t----- bird -----\ttoxicology",
    "205": "SELECT molecule.molecule_id FROM atom JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE atom.element = 'si';\t----- bird -----\ttoxicology",
    "206": "SELECT element FROM atom WHERE atom_id IN ( SELECT atom_id FROM connected WHERE bond_id = 'TR004_8_9' )\t----- bird -----\ttoxicology",
    "207": "SELECT element FROM atom JOIN bond ON atom.molecule_id = bond.molecule_id WHERE bond.bond_type = ' = ';\t----- bird -----\ttoxicology",
    "208": "SELECT label, COUNT(label) AS count FROM atom JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE element = 'h' GROUP BY label ORDER BY count DESC LIMIT 1;\t----- bird -----\ttoxicology",
    "209": "SELECT bond.bond_type FROM atom JOIN bond ON atom.molecule_id = bond.molecule_id WHERE atom.element = 'te';\t----- bird -----\ttoxicology",
    "210": "SELECT a.atom_id, c.atom_id2 FROM connected c JOIN bond b ON c.bond_id = b.bond_id JOIN atom a ON c.atom_id = a.atom_id JOIN atom a2 ON c.atom_id2 = a2.atom_id WHERE b.bond_type = '-'\t----- bird -----\ttoxicology",
    "211": "SELECT c.atom_id, c.atom_id2 FROM connected c JOIN bond b ON c.bond_id = b.bond_id JOIN molecule m ON b.molecule_id = m.molecule_id WHERE m.label = '-'\t----- bird -----\ttoxicology",
    "212": "SELECT element, COUNT(*) AS num_elements FROM atom JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.label = '-' GROUP BY element ORDER BY num_elements LIMIT 1;\t----- bird -----\ttoxicology",
    "213": "SELECT `bond_type` FROM `bond` WHERE `molecule_id` IN ( SELECT `molecule_id` FROM `atom` WHERE `atom_id` = 'TR004_8' ) AND `molecule_id` IN ( SELECT `molecule_id` FROM `atom` WHERE `atom_id` = 'TR004_20' );\t----- bird -----\ttoxicology",
    "214": "SELECT DISTINCT label FROM molecule WHERE molecule_id IN ( SELECT molecule_id FROM atom WHERE element != 'sn' )\t----- bird -----\ttoxicology",
    "215": "SELECT COUNT(DISTINCT a.atom_id) FROM atom a JOIN molecule m ON a.molecule_id = m.molecule_id JOIN bond b ON b.molecule_id = m.molecule_id JOIN connected c ON c.atom_id = a.atom_id JOIN atom a2 ON c.atom_id2 = a2.atom_id WHERE (a.element = 'i' OR a.element = 's') AND (a2.element = 'i' OR a2.element = 's') AND b.bond_type = '-'\t----- bird -----\ttoxicology",
    "216": "SELECT a.atom_id, c.atom_id2 FROM connected c JOIN bond b ON c.bond_id = b.bond_id JOIN atom a ON c.atom_id = a.atom_id JOIN atom a2 ON c.atom_id2 = a2.atom_id WHERE b.bond_type = '#'\t----- bird -----\ttoxicology",
    "217": "SELECT a.atom_id, c.atom_id2 FROM connected c JOIN atom a ON c.atom_id = a.atom_id JOIN molecule m ON a.molecule_id = m.molecule_id WHERE m.molecule_id = 'TR181';\t----- bird -----\ttoxicology",
    "218": "SELECT DIVIDE(SUM(CASE WHEN label = '+' AND element != 'f' THEN 1 ELSE 0 END), COUNT(molecule_id)) as percent FROM molecule JOIN atom ON molecule.molecule_id = atom.molecule_id WHERE label = '+';\t----- bird -----\ttoxicology",
    "219": "SELECT DIVIDE(COUNT(DISTINCT b.molecule_id), COUNT(DISTINCT a.molecule_id)) AS percentage FROM bond b JOIN molecule m ON b.molecule_id = m.molecule_id WHERE b.bond_type = '#' AND m.label = '+';\t----- bird -----\ttoxicology",
    "220": "SELECT element FROM atom WHERE molecule_id = 'TR000' ORDER BY element LIMIT 3;\t----- bird -----\ttoxicology",
    "221": "SELECT a.atom_id, c.atom_id2 FROM connected c JOIN bond b ON c.bond_id = b.bond_id JOIN molecule m ON b.molecule_id = m.molecule_id JOIN atom a ON c.atom_id = a.atom_id WHERE m.molecule_id = 'TR001' AND b.bond_id = 'TR001_2_6';\t----- bird -----\ttoxicology",
    "222": "SELECT (SUM(CASE WHEN label = '+' THEN 1 ELSE 0 END) - SUM(CASE WHEN label = '-' THEN 1 ELSE 0 END)) AS difference FROM molecule;\t----- bird -----\ttoxicology",
    "223": "SELECT `atom_id`, `atom_id2` FROM `connected` WHERE `bond_id` = 'TR_000_2_5';\t----- bird -----\ttoxicology",
    "224": "SELECT `bond_id` FROM `connected` WHERE `atom_id2` = 'TR000_2';\t----- bird -----\ttoxicology",
    "225": "SELECT m.`label` FROM `molecule` m JOIN `bond` b ON m.`molecule_id` = b.`molecule_id` WHERE b.`bond_type` = ' = ' ORDER BY m.`label` ASC LIMIT 5;\t----- bird -----\ttoxicology",
    "226": "SELECT DIVIDE(SUM(CASE WHEN bond_type = ' = ' THEN 1 ELSE 0 END), COUNT(bond_id)) as percent FROM bond WHERE molecule_id = 'TR008';\t----- bird -----\ttoxicology",
    "227": "SELECT DIVIDE(COUNT(CASE WHEN label = '+' THEN 1 ELSE NULL END), COUNT(molecule_id)) * 100 AS percent FROM molecule;\t----- bird -----\ttoxicology",
    "228": "SELECT DIVIDE(SUM(CASE WHEN a.element = 'h' THEN 1 ELSE 0 END), COUNT(a.atom_id)) * 100 as percent FROM atom a JOIN molecule m ON a.molecule_id = m.molecule_id WHERE m.molecule_id = 'TR206';\t----- bird -----\ttoxicology",
    "229": "SELECT bond.bond_type FROM bond WHERE bond.molecule_id = 'TR000';\t----- bird -----\ttoxicology",
    "230": "SELECT element, label FROM atom JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.molecule_id = 'TR060';\t----- bird -----\ttoxicology",
    "231": "SELECT bond_type, COUNT(bond_type) AS bond_count FROM bond WHERE molecule_id = 'TR018' GROUP BY bond_type ORDER BY bond_count DESC LIMIT 1;\t----- bird -----\ttoxicology",
    "232": "SELECT m.label FROM molecule m JOIN bond b ON m.molecule_id = b.molecule_id WHERE b.bond_type = '-' AND m.label = '-' GROUP BY m.molecule_id HAVING COUNT(*) = 2 ORDER BY m.label ASC LIMIT 3;\t----- bird -----\ttoxicology",
    "233": "SELECT `bond`.`bond_id`, `bond`.`bond_type` FROM `bond` WHERE `bond`.`molecule_id` = 'TR006' ORDER BY `bond`.`bond_type` ASC LIMIT 2;\t----- bird -----\ttoxicology",
    "234": "SELECT COUNT(*) AS num_bonds FROM connected WHERE bond_id LIKE 'TR009_%' AND (atom_id = 'TR009_12' OR atom_id2 = 'TR009_12');\t----- bird -----\ttoxicology",
    "235": "SELECT COUNT(DISTINCT m.molecule_id) FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id WHERE m.label = '+' AND a.element = 'br';\t----- bird -----\ttoxicology",
    "236": "SELECT `bond`.`bond_type`, `connected`.`atom_id`, `connected`.`atom_id2` FROM `bond` JOIN `connected` ON `bond`.`bond_id` = `connected`.`bond_id` WHERE `bond`.`bond_id` = 'TR001_6_9';\t----- bird -----\ttoxicology",
    "237": "SELECT m.label FROM atom a JOIN molecule m ON a.molecule_id = m.molecule_id WHERE a.atom_id = 'TR001_10';\t----- bird -----\ttoxicology",
    "238": "SELECT COUNT(DISTINCT molecule_id) FROM bond WHERE bond_type = '#'\t----- bird -----\ttoxicology",
    "239": "SELECT COUNT(*) AS connections FROM connected WHERE atom_id = 'TR%_19' OR atom_id2 = 'TR%_19';\t----- bird -----\ttoxicology",
    "240": "SELECT a.element FROM atom a JOIN molecule m ON a.molecule_id = m.molecule_id WHERE m.molecule_id = 'TR004';\t----- bird -----\ttoxicology",
    "241": "SELECT COUNT(*) FROM molecule WHERE label = '-'\t----- bird -----\ttoxicology",
    "242": "SELECT m.`label` FROM `molecule` m JOIN `atom` a ON m.`molecule_id` = a.`molecule_id` WHERE SUBSTRING(a.`atom_id`, 7, 2) BETWEEN '21' AND '25' AND m.`label` = '+';\t----- bird -----\ttoxicology",
    "243": "SELECT b.bond_id, b.bond_type FROM bond b JOIN atom a ON b.molecule_id = a.molecule_id WHERE a.element = 'p' OR a.element = 'n';\t----- bird -----\ttoxicology",
    "244": "SELECT m.`molecule_id`, COUNT(b.`bond_id`) AS double_bonds FROM `molecule` m LEFT JOIN `bond` b ON m.`molecule_id` = b.`molecule_id` AND b.`bond_type` = ' = ' WHERE m.`label` = '+' GROUP BY m.`molecule_id` ORDER BY double_bonds DESC LIMIT 1;\t----- bird -----\ttoxicology",
    "245": "SELECT DIVIDE(COUNT(bond_id), COUNT(atom_id)) FROM atom WHERE element = 'i';\t----- bird -----\ttoxicology",
    "246": "SELECT bond_type, bond_id FROM bond WHERE bond_id = SUBSTR((SELECT atom_id FROM atom WHERE atom_id = 'atom_45'), 7, 2) + 0;\t----- bird -----\ttoxicology",
    "247": "SELECT element FROM atom WHERE element IN ('cl', 'c', 'h', 'o', 's', 'n', 'p', 'na', 'br', 'f', 'i', 'sn', 'pb', 'te', 'ca') AND atom_id NOT IN (SELECT atom_id FROM connected)\t----- bird -----\ttoxicology",
    "248": "SELECT a.atom_id FROM atom a JOIN bond b ON a.molecule_id = b.molecule_id JOIN connected c ON a.atom_id = c.atom_id WHERE b.bond_type = '#' AND b.molecule_id = 'TR447';\t----- bird -----\ttoxicology",
    "249": "SELECT element FROM atom WHERE molecule_id = 'TR144_8_19';\t----- bird -----\ttoxicology",
    "250": "SELECT m.molecule_id, m.label, COUNT(b.bond_id) AS num_double_bonds FROM molecule m JOIN bond b ON m.molecule_id = b.molecule_id WHERE m.label = '+' AND b.bond_type = ' = ' GROUP BY m.molecule_id, m.label ORDER BY num_double_bonds DESC LIMIT 1;\t----- bird -----\ttoxicology",
    "251": "SELECT element, COUNT(*) AS frequency FROM atom WHERE molecule_id IN (SELECT molecule_id FROM molecule WHERE label = '+') GROUP BY element ORDER BY frequency LIMIT 1;\t----- bird -----\ttoxicology",
    "252": "SELECT atom.atom_id FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN atom AS a2 ON connected.atom_id2 = a2.atom_id WHERE a2.element = 'pb';\t----- bird -----\ttoxicology",
    "253": "SELECT a.element FROM atom a JOIN bond b ON a.molecule_id = b.molecule_id WHERE b.bond_type = '#';\t----- bird -----\ttoxicology",
    "254": "SELECT (COUNT(bond_id) * 100) / (SELECT COUNT(atom_id) FROM atom GROUP BY element ORDER BY COUNT(element) DESC LIMIT 1) as percentage FROM bond JOIN connected ON bond.bond_id = connected.bond_id JOIN atom ON connected.atom_id = atom.atom_id GROUP BY atom.element ORDER BY COUNT(atom.element) DESC LIMIT 1;\t----- bird -----\ttoxicology",
    "255": "SELECT SUM(m.label = '+') / COUNT(b.bond_id) AS proportion_of_carcinogenic_single_bonds FROM bond b JOIN molecule m ON b.molecule_id = m.molecule_id WHERE b.bond_type = '-'\t----- bird -----\ttoxicology",
    "256": "SELECT COUNT(DISTINCT a.atom_id) FROM atom a JOIN molecule m ON a.molecule_id = m.molecule_id WHERE a.element IN ('c', 'h');\t----- bird -----\ttoxicology",
    "257": "SELECT connected.atom_id2 FROM atom JOIN connected ON atom.atom_id = connected.atom_id WHERE atom.element = 's';\t----- bird -----\ttoxicology",
    "258": "SELECT b.bond_type FROM atom a JOIN bond b ON a.molecule_id = b.molecule_id WHERE a.element = 'sn';\t----- bird -----\ttoxicology",
    "259": "SELECT COUNT(DISTINCT a.element) AS num_elements FROM atom a JOIN bond b ON a.molecule_id = b.molecule_id JOIN connected c ON a.atom_id = c.atom_id WHERE b.bond_type = '-'\t----- bird -----\ttoxicology",
    "260": "SELECT COUNT(DISTINCT a.atom_id) AS total_atoms FROM atom a JOIN bond b ON a.molecule_id = b.molecule_id JOIN connected c ON a.atom_id = c.atom_id JOIN atom a2 ON c.atom_id2 = a2.atom_id WHERE (a.element = 'p' OR a.element = 'br') AND b.bond_type = '#'\t----- bird -----\ttoxicology",
    "261": "SELECT `bond_id` FROM `bond` WHERE `molecule_id` IN ( SELECT `molecule_id` FROM `molecule` WHERE `label` = '+' )\t----- bird -----\ttoxicology",
    "262": "SELECT m.molecule_id FROM molecule m JOIN bond b ON m.molecule_id = b.molecule_id WHERE b.bond_type = '-' AND m.label = '-'\t----- bird -----\ttoxicology",
    "263": "SELECT element, COUNT(atom_id) AS total_atoms, SUM(CASE WHEN element = 'cl' THEN 1 ELSE 0 END) AS chlorine_atoms, ROUND((SUM(CASE WHEN element = 'cl' THEN 1 ELSE 0 END) / COUNT(atom_id)) * 100, 2) AS percentage FROM atom WHERE molecule_id IN (SELECT molecule_id FROM bond WHERE bond_type = '-') GROUP BY element;\t----- bird -----\ttoxicology",
    "264": "SELECT `label` FROM `molecule` WHERE `molecule_id` = 'TR000' OR `molecule_id` = 'TR001' OR `molecule_id` = 'TR002';\t----- bird -----\ttoxicology",
    "265": "SELECT molecule_id FROM molecule WHERE label = '-'\t----- bird -----\ttoxicology",
    "266": "SELECT COUNT(*) AS total_carcinogenic_molecules FROM molecule WHERE molecule_id BETWEEN 'TR000' AND 'TR030' AND label = '+';\t----- bird -----\ttoxicology",
    "267": "SELECT bond.bond_type FROM bond JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE molecule.molecule_id BETWEEN 'TR000' AND 'TR050';\t----- bird -----\ttoxicology",
    "268": "SELECT `element` FROM `atom` WHERE `molecule_id` = ( SELECT `molecule_id` FROM `bond` WHERE `bond_id` = 'TR001_10_11' )\t----- bird -----\ttoxicology",
    "269": "SELECT COUNT(bond_id) FROM atom WHERE element = 'i';\t----- bird -----\ttoxicology",
    "270": "SELECT m.label, COUNT(m.molecule_id) AS molecule_count FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id WHERE a.element = 'Ca' GROUP BY m.label;\t----- bird -----\ttoxicology",
    "271": "SELECT COUNT(*) AS count FROM bond b JOIN connected c ON b.bond_id = c.bond_id JOIN atom a ON c.atom_id = a.atom_id JOIN atom a2 ON c.atom_id2 = a2.atom_id WHERE b.bond_id = 'TR001_1_8' AND (a.element = 'cl' OR a2.element = 'cl') AND (a.element = 'c' OR a2.element = 'c');\t----- bird -----\ttoxicology",
    "272": "SELECT molecule_id FROM atom JOIN bond ON atom.molecule_id = bond.molecule_id JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE element = 'c' AND bond_type = '#' AND label = '-'\t----- bird -----\ttoxicology",
    "273": "SELECT DIVIDE(SUM(CASE WHEN a.element = 'cl' THEN 1 ELSE 0 END), COUNT(DISTINCT m.molecule_id)) * 100 AS percentage FROM atom a JOIN molecule m ON a.molecule_id = m.molecule_id WHERE m.label = '+';\t----- bird -----\ttoxicology",
    "274": "SELECT `atom`.`element` FROM `atom` JOIN `molecule` ON `atom`.`molecule_id` = `molecule`.`molecule_id` WHERE `molecule`.`molecule_id` = 'TR001';\t----- bird -----\ttoxicology",
    "275": "SELECT `molecule_id` FROM `bond` WHERE `bond_type` = ' = ';\t----- bird -----\ttoxicology",
    "276": "SELECT connected.atom_id AS first_atom_id, connected.atom_id2 AS second_atom_id FROM connected JOIN bond ON connected.bond_id = bond.bond_id WHERE bond.bond_type = '#'\t----- bird -----\ttoxicology",
    "277": "SELECT element FROM atom WHERE molecule_id = ( SELECT molecule_id FROM bond WHERE bond_id = 'TR005_16_26' )\t----- bird -----\ttoxicology",
    "278": "SELECT COUNT(DISTINCT m.molecule_id) FROM molecule m JOIN bond b ON m.molecule_id = b.molecule_id WHERE b.bond_type = '-' AND m.label = '-'\t----- bird -----\ttoxicology",
    "279": "SELECT m.label FROM bond b JOIN molecule m ON b.molecule_id = m.molecule_id WHERE b.bond_id = 'TR001_10_11';\t----- bird -----\ttoxicology",
    "280": "SELECT bond_id, CASE WHEN m.label = '+' THEN 'Carcinogenic' WHEN m.label = '-' THEN 'Non-carcinogenic' ELSE 'Unknown' END AS Carcinogenicity FROM bond b JOIN molecule m ON b.molecule_id = m.molecule_id WHERE bond_type = '#'\t----- bird -----\ttoxicology",
    "281": "SELECT m.label, a.element AS toxicology_element FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id JOIN ( SELECT molecule_id, atom_id FROM atom WHERE substr(atom_id, 7, 1) = '4' ) AS a4 ON m.molecule_id = a4.molecule_id WHERE m.label = '+' AND a4.atom_id = a.atom_id AND a.element IN ('cl', 'c', 'h', 'o', 's', 'n', 'p', 'na', 'br', 'f', 'i', 'sn', 'pb', 'te', 'ca');\t----- bird -----\ttoxicology",
    "282": "SELECT m.label, SUM(CASE WHEN a.element = 'h' THEN 1 ELSE 0 END) / COUNT(*) AS hydrogen_ratio FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id WHERE m.molecule_id = 'TR006' GROUP BY m.label;\t----- bird -----\ttoxicology",
    "283": "SELECT m.label FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id WHERE a.element = 'ca';\t----- bird -----\ttoxicology",
    "284": "SELECT bond_type FROM atom JOIN molecule ON atom.molecule_id = molecule.molecule_id JOIN bond ON bond.molecule_id = molecule.molecule_id WHERE atom.element = 'te';\t----- bird -----\ttoxicology",
    "285": "SELECT element FROM atom WHERE molecule_id = SUBSTR('TR001_10_11', 1, 5) AND (atom_id = SUBSTR('TR001_10_11', 7, 2) OR atom_id = SUBSTR('TR001_10_11', 10, 2);\t----- bird -----\ttoxicology",
    "286": "SELECT COUNT(DISTINCT molecule_id) AS total_compounds, COUNT(DISTINCT CASE WHEN bond_type = '#' THEN molecule_id END) AS triple_bond_compounds, (COUNT(DISTINCT CASE WHEN bond_type = '#' THEN molecule_id END) / COUNT(DISTINCT molecule_id)) * 100 AS percentage_triple_bond_compounds FROM bond;\t----- bird -----\ttoxicology",
    "287": "SELECT DIVIDE(SUM(CASE WHEN b.bond_type = ' = ' THEN 1 ELSE 0 END), COUNT(b.bond_id)) as percent FROM molecule m JOIN bond b ON m.molecule_id = b.molecule_id WHERE m.molecule_id = 'TR047';\t----- bird -----\ttoxicology",
    "288": "SELECT m.label FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id WHERE a.atom_id = 'TR001_1' AND m.label = '+';\t----- bird -----\ttoxicology",
    "289": "SELECT `label` FROM `molecule` WHERE `molecule_id` = 'TR151' AND `label` = '+';\t----- bird -----\ttoxicology",
    "290": "SELECT element FROM atom WHERE molecule_id = 'TR151' AND element = 'cl'; The toxic element found in the molecule TR151 is Chlorine (Cl).\t----- bird -----\ttoxicology",
    "291": "SELECT COUNT(*) FROM molecule WHERE label = '+';\t----- bird -----\ttoxicology",
    "292": "SELECT a.atom_id FROM atom a JOIN molecule m ON a.molecule_id = m.molecule_id WHERE m.molecule_id BETWEEN 'TR010' AND 'TR050' AND a.element = 'c';\t----- bird -----\ttoxicology",
    "293": "SELECT COUNT(*) FROM atom WHERE molecule_id IN (SELECT molecule_id FROM molecule WHERE label = '+');\t----- bird -----\ttoxicology",
    "294": "SELECT bond.bond_id FROM bond JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE bond.bond_type = ' = ' AND molecule.label = '+';\t----- bird -----\ttoxicology",
    "295": "SELECT COUNT(*) AS num_atoms FROM atom JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE element = 'h' AND label = '+';\t----- bird -----\ttoxicology",
    "296": "SELECT molecule_id FROM connected WHERE atom_id = 'TR00_1' AND bond_id = 'TR00_1_2';\t----- bird -----\ttoxicology",
    "297": "SELECT a.atom_id FROM atom a JOIN molecule m ON a.molecule_id = m.molecule_id WHERE a.element = 'c' AND m.label != '-';\t----- bird -----\ttoxicology",
    "298": "SELECT (COUNT(DISTINCT m1.molecule_id) * 100.0) / COUNT(DISTINCT m2.molecule_id) AS percentage FROM molecule m1 JOIN atom a ON m1.molecule_id = a.molecule_id JOIN molecule m2 ON m1.molecule_id = m2.molecule_id WHERE a.element = 'h' AND m2.label = '+';\t----- bird -----\ttoxicology",
    "299": "SELECT `label` FROM `molecule` WHERE `molecule_id` = 'TR124' AND `label` = '+';\t----- bird -----\ttoxicology",
    "300": "SELECT `atom_id`, `element` FROM `atom` WHERE `molecule_id` = 'TR186';\t----- bird -----\ttoxicology",
    "301": "SELECT `bond_type` FROM `bond` WHERE `bond_id` = 'TR007_4_19';\t----- bird -----\ttoxicology",
    "302": "SELECT element FROM atom WHERE molecule_id = 'TR001_2_4';\t----- bird -----\ttoxicology",
    "303": "SELECT COUNT(*) AS double_bonds FROM bond WHERE molecule_id = 'TR006' AND bond_type = ' = '; SELECT label FROM molecule WHERE molecule_id = 'TR006';\t----- bird -----\ttoxicology",
    "304": "SELECT m.label, a.element FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id WHERE m.label = '+' AND a.element IN ('cl', 'c', 'h', 'o', 's', 'n', 'p', 'na', 'br', 'f', 'i', 'sn', 'pb', 'te', 'ca');\t----- bird -----\ttoxicology",
    "305": "SELECT `bond_id`, `atom_id`, `atom_id2` FROM `connected` JOIN `bond` ON `connected`.`bond_id` = `bond`.`bond_id` WHERE `bond`.`bond_type` = '-'\t----- bird -----\ttoxicology",
    "306": "SELECT m.label, a.element FROM molecule m JOIN bond b ON m.molecule_id = b.molecule_id JOIN connected c ON b.bond_id = c.bond_id JOIN atom a ON c.atom_id = a.atom_id WHERE b.bond_type = '#';\t----- bird -----\ttoxicology",
    "307": "SELECT `atom`.`element` FROM `atom` JOIN `connected` ON `atom`.`atom_id` = `connected`.`atom_id` JOIN `bond` ON `connected`.`bond_id` = `bond`.`bond_id` WHERE `bond`.`bond_id` = 'TR000_2_3';\t----- bird -----\ttoxicology",
    "308": "SELECT COUNT(*) FROM connected c JOIN atom a ON c.atom_id = a.atom_id JOIN atom a2 ON c.atom_id2 = a2.atom_id WHERE a.element = 'cl' AND a2.element = 'cl';\t----- bird -----\ttoxicology",
    "309": "SELECT atom.atom_id FROM atom JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.label = 'TR346';\t----- bird -----\ttoxicology",
    "310": "SELECT COUNT(DISTINCT m.molecule_id) FROM bond b JOIN molecule m ON b.molecule_id = m.molecule_id WHERE b.bond_type = ' = ' AND m.label = '+'; This query will return the number of molecules that have a double bond type and are labeled as carcinogenic compounds.\t----- bird -----\ttoxicology",
    "311": "SELECT COUNT(DISTINCT m.molecule_id) FROM molecule m LEFT JOIN atom a ON m.molecule_id = a.molecule_id LEFT JOIN bond b ON m.molecule_id = b.molecule_id LEFT JOIN connected c ON a.atom_id = c.atom_id WHERE a.element != 's' OR b.bond_type != '=' OR b.bond_type IS NULL;\t----- bird -----\ttoxicology",
    "312": "SELECT m.label FROM bond b JOIN molecule m ON b.molecule_id = m.molecule_id WHERE b.bond_id = 'TR001_2_4' AND m.label = '+';\t----- bird -----\ttoxicology",
    "313": "SELECT COUNT(*) FROM atom WHERE molecule_id = 'TR005';\t----- bird -----\ttoxicology",
    "314": "SELECT COUNT(*) FROM bond WHERE bond_type = '-'\t----- bird -----\ttoxicology",
    "315": "SELECT m.`molecule_id`, m.`label` FROM `molecule` m JOIN `atom` a ON m.`molecule_id` = a.`molecule_id` WHERE a.`element` LIKE '%cl%' AND m.`label` = '+'; This query selects the molecule_id and label from the molecule table for molecules that contain the \"cl\" element and are labeled as carcinogenic.\t----- bird -----\ttoxicology",
    "316": "SELECT m.molecule_id, m.label FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id WHERE a.element = 'c' AND m.label = '-'\t----- bird -----\ttoxicology",
    "317": "SELECT DIVIDE( (SELECT COUNT(DISTINCT molecule_id) FROM molecule WHERE label = '+'), (SELECT COUNT(DISTINCT molecule_id) FROM molecule WHERE label = '+' AND molecule_id IN (SELECT DISTINCT molecule_id FROM atom WHERE element = 'Chlorine')) ) * 100 as percentage;\t----- bird -----\ttoxicology",
    "318": "SELECT `molecule_id` FROM `bond` WHERE `bond_id` = 'TR001_1_7';\t----- bird -----\ttoxicology",
    "319": "SELECT COUNT(*) FROM atom WHERE molecule_id = (SELECT molecule_id FROM bond WHERE bond_id = 'TR001_3_4') AND element = 'cl'; The query above will return the number of Chlorine elements contained in the bond with bond_id 'TR001_3_4'.\t----- bird -----\ttoxicology",
    "320": "SELECT `bond`.`bond_type` FROM `bond` JOIN `connected` ON `bond`.`bond_id` = `connected`.`bond_id` JOIN `atom` ON `connected`.`atom_id` = `atom`.`atom_id` JOIN `atom` AS `a2` ON `connected`.`atom_id2` = `a2`.`atom_id` WHERE `atom`.`atom_id` = 'TR000_1' AND `a2`.`atom_id` = 'TR000_2';\t----- bird -----\ttoxicology",
    "321": "SELECT m.label FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id WHERE a.atom_id = 'TR000_2' OR a.atom_id = 'TR000_4';\t----- bird -----\ttoxicology",
    "322": "SELECT element FROM atom WHERE atom_id = 'TR000_1';\t----- bird -----\ttoxicology",
    "323": "SELECT label FROM molecule WHERE molecule_id = 'TR000';\t----- bird -----\ttoxicology",
    "324": "SELECT DIVIDE(COUNT(DISTINCT a.atom_id), COUNT(b.bond_id)) * 100 AS percentage FROM atom a JOIN bond b ON a.molecule_id = b.molecule_id WHERE b.bond_type = '-'\t----- bird -----\ttoxicology",
    "325": "SELECT COUNT(DISTINCT m.molecule_id) FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id WHERE a.element = 'n' AND m.label = '+';\t----- bird -----\ttoxicology",
    "326": "SELECT molecule_id FROM atom JOIN molecule ON atom.molecule_id = molecule.molecule_id JOIN bond ON bond.molecule_id = molecule.molecule_id WHERE element = 'S' AND bond_type = '=';\t----- bird -----\ttoxicology",
    "327": "SELECT molecule_id FROM molecule WHERE label = '-' GROUP BY molecule_id HAVING COUNT(atom_id) > 5;\t----- bird -----\ttoxicology",
    "328": "SELECT atom.element FROM atom JOIN bond ON atom.molecule_id = bond.molecule_id JOIN connected ON atom.atom_id = connected.atom_id WHERE bond.bond_type = '=' AND atom.molecule_id = 'TR024';\t----- bird -----\ttoxicology",
    "329": "SELECT molecule_id, COUNT(atom_id) AS num_atoms FROM atom WHERE molecule_id IN (SELECT molecule_id FROM molecule WHERE label = '+') GROUP BY molecule_id ORDER BY num_atoms DESC LIMIT 1;\t----- bird -----\ttoxicology",
    "330": "SELECT (DIVIDE(SUM(m.label = '+'), COUNT(m.molecule_id)) * 100.0) AS percentage FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id JOIN bond b ON m.molecule_id = b.molecule_id WHERE a.element = 'h' AND b.bond_type = '#'\t----- bird -----\ttoxicology",
    "331": "SELECT COUNT(*) FROM molecule WHERE label = '+';\t----- bird -----\ttoxicology",
    "332": "SELECT COUNT(DISTINCT m.molecule_id) FROM molecule m JOIN bond b ON m.molecule_id = b.molecule_id WHERE m.molecule_id BETWEEN 'TR004' AND 'TR010' AND b.bond_type = '-'\t----- bird -----\ttoxicology",
    "333": "SELECT COUNT(*) AS carbon_count FROM atom WHERE molecule_id = 'TR008' AND element = 'c';\t----- bird -----\ttoxicology",
    "334": "SELECT element FROM atom JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE atom_id = 'TR004_7' AND label = '-'\t----- bird -----\ttoxicology",
    "335": "SELECT COUNT(DISTINCT m.molecule_id) FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id JOIN bond b ON m.molecule_id = b.molecule_id JOIN connected c ON a.atom_id = c.atom_id JOIN connected c2 ON a.atom_id = c2.atom_id2 WHERE a.element = 'o' AND b.bond_type = ' = ';\t----- bird -----\ttoxicology",
    "336": "SELECT COUNT(DISTINCT b.molecule_id) FROM bond b JOIN molecule m ON b.molecule_id = m.molecule_id WHERE b.bond_type = '#' AND m.label = '-'\t----- bird -----\ttoxicology",
    "337": "SELECT element, bond_type FROM atom JOIN molecule ON atom.molecule_id = molecule.molecule_id JOIN bond ON bond.molecule_id = molecule.molecule_id WHERE molecule.molecule_id = 'TR016';\t----- bird -----\ttoxicology",
    "338": "SELECT atom.atom_id FROM atom JOIN molecule ON atom.molecule_id = molecule.molecule_id JOIN bond ON bond.molecule_id = molecule.molecule_id JOIN connected ON connected.atom_id = atom.atom_id WHERE molecule.label = 'TR012' AND atom.element = 'c' AND bond.bond_type = ' = ';\t----- bird -----\ttoxicology",
    "339": "SELECT atom.atom_id FROM atom JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.label = '+' AND atom.element = 'o';\t----- bird -----\ttoxicology",
    "340": "SELECT * FROM cards WHERE cardKingdomFoilId = cardKingdomId AND cardKingdomId IS NOT NULL;\t----- bird -----\tcard_games",
    "341": "SELECT name FROM cards WHERE borderColor = 'borderless' AND cardKingdomFoilId IS NULL AND cardKingdomId IS NOT NULL;\t----- bird -----\tcard_games",
    "342": "SELECT name FROM cards WHERE faceConvertedManaCost = (SELECT MAX(faceConvertedManaCost) FROM cards);\t----- bird -----\tcard_games",
    "343": "SELECT name FROM cards WHERE frameVersion = '2015' AND edhrecRank < 100;\t----- bird -----\tcard_games",
    "344": "SELECT cards.name FROM cards JOIN legalities ON cards.uuid = legalities.uuid WHERE cards.rarity = 'mythic' AND legalities.status = 'Banned' AND legalities.format = 'gladiator';\t----- bird -----\tcard_games",
    "345": "SELECT cards.name, legalities.status FROM cards JOIN legalities ON cards.uuid = legalities.uuid WHERE cards.types LIKE '%Artifact%' AND cards.side IS NULL AND legalities.format = 'vintage'\t----- bird -----\tcard_games",
    "346": "SELECT cards.id, cards.artist FROM cards JOIN legalities ON cards.uuid = legalities.uuid WHERE (cards.power = '*' OR cards.power IS NULL) AND legalities.format = 'commander' AND legalities.status = 'Legal';\t----- bird -----\tcard_games",
    "347": "SELECT cards.name, rulings.text FROM cards JOIN rulings ON cards.uuid = rulings.uuid WHERE cards.artist = 'Stephen Daniele' AND cards.hasContentWarning = 1;\t----- bird -----\tcard_games",
    "348": "SELECT r.text FROM rulings r JOIN cards c ON r.uuid = c.uuid WHERE c.name = 'Sublime Epiphany' AND c.number = '74s';\t----- bird -----\tcard_games",
    "349": "SELECT cards.name, cards.artist, cards.isPromo FROM cards JOIN rulings ON cards.uuid = rulings.uuid GROUP BY cards.name, cards.artist ORDER BY COUNT(rulings.uuid) DESC LIMIT 1;\t----- bird -----\tcard_games",
    "350": "SELECT language FROM foreign_data WHERE name = 'Annul' AND number = '29';\t----- bird -----\tcard_games",
    "351": "SELECT cards.name FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE foreign_data.language = 'Japanese';\t----- bird -----\tcard_games",
    "352": "SELECT (SUM(id) * 100) / (SELECT COUNT(id) FROM foreign_data WHERE language = 'Chinese Simplified') as percentage FROM foreign_data WHERE language = 'Chinese Simplified';\t----- bird -----\tcard_games",
    "353": "SELECT sets.name, sets.totalSetSize FROM sets JOIN set_translations ON sets.code = set_translations.setCode WHERE set_translations.language = 'Italian';\t----- bird -----\tcard_games",
    "354": "SELECT COUNT(DISTINCT cards.type) FROM cards WHERE cards.artist = 'Aaron Boyd';\t----- bird -----\tcard_games",
    "355": "SELECT keywords FROM cards WHERE name = 'Angel of Mercy';\t----- bird -----\tcard_games",
    "356": "SELECT COUNT(*) FROM cards WHERE power = '*';\t----- bird -----\tcard_games",
    "357": "SELECT promoTypes FROM cards WHERE name = 'Duress';\t----- bird -----\tcard_games",
    "358": "SELECT borderColor FROM cards WHERE name = \"Ancestor's Chosen\";\t----- bird -----\tcard_games",
    "359": "SELECT originalType FROM cards WHERE name = 'Ancestor\\'s Chosen';\t----- bird -----\tcard_games",
    "360": "SELECT language FROM set_translations WHERE setCode = (SELECT setCode FROM cards WHERE name = 'Angel of Mercy');\t----- bird -----\tcard_games",
    "361": "SELECT COUNT(*) FROM cards JOIN legalities ON cards.uuid = legalities.uuid WHERE legalities.status = 'restricted' AND cards.isTextless = 0;\t----- bird -----\tcard_games",
    "362": "SELECT r.text FROM cards c JOIN rulings r ON c.uuid = r.uuid WHERE c.name = 'Condemn';\t----- bird -----\tcard_games",
    "363": "SELECT COUNT(*) FROM cards JOIN legalities ON cards.uuid = legalities.uuid WHERE legalities.status = 'restricted' AND cards.isStarter = 1;\t----- bird -----\tcard_games",
    "364": "SELECT legalities.status FROM cards JOIN legalities ON cards.uuid = legalities.uuid WHERE cards.name = \"Cloudchaser Eagle\";\t----- bird -----\tcard_games",
    "365": "SELECT type FROM cards WHERE name = 'Benalish Knight';\t----- bird -----\tcard_games",
    "366": "SELECT legalities.format, legalities.status FROM cards JOIN legalities ON cards.uuid = legalities.uuid WHERE cards.name = 'Benalish Knight';\t----- bird -----\tcard_games",
    "367": "SELECT artist FROM cards WHERE flavorText LIKE '%Phyrexian%'\t----- bird -----\tcard_games",
    "368": "SELECT (COUNT(id) * 100.0 / (SELECT COUNT(id) FROM cards)) AS percentage_borderless FROM cards WHERE borderColor = 'borderless';\t----- bird -----\tcard_games",
    "369": "SELECT COUNT(*) FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE foreign_data.language = 'German' AND cards.isReprint = 1;\t----- bird -----\tcard_games",
    "370": "SELECT COUNT(*) FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE borderColor = 'borderless' AND language = 'Russian';\t----- bird -----\tcard_games",
    "371": "SELECT (COUNT(id) * 100.0 / (SELECT COUNT(id) FROM cards WHERE isStorySpotlight = 1)) AS percentage FROM foreign_data WHERE language = 'French' AND uuid IN (SELECT uuid FROM cards WHERE isStorySpotlight = 1)\t----- bird -----\tcard_games",
    "372": "SELECT COUNT(*) FROM cards WHERE toughness = '99';\t----- bird -----\tcard_games",
    "373": "SELECT name FROM cards WHERE artist = 'Aaron Boyd';\t----- bird -----\tcard_games",
    "374": "SELECT COUNT(*) FROM cards WHERE borderColor = 'black' AND availability = 'mtgo';\t----- bird -----\tcard_games",
    "375": "SELECT id FROM cards WHERE convertedManaCost = 0;\t----- bird -----\tcard_games",
    "376": "SELECT layout FROM cards WHERE keywords LIKE '%flying%';\t----- bird -----\tcard_games",
    "377": "SELECT COUNT(*) FROM cards WHERE originalType = 'Summon - Angel' AND subtypes != 'Angel';\t----- bird -----\tcard_games",
    "378": "SELECT id FROM cards WHERE cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL;\t----- bird -----\tcard_games",
    "379": "SELECT id FROM cards WHERE duelDeck = 'a';\t----- bird -----\tcard_games",
    "380": "SELECT edhrecRank FROM cards WHERE frameVersion = '2015';\t----- bird -----\tcard_games",
    "381": "SELECT cards.artist FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE foreign_data.language = 'Chinese Simplified';\t----- bird -----\tcard_games",
    "382": "SELECT * FROM cards WHERE availability = 'paper' AND uuid IN (SELECT uuid FROM foreign_data WHERE language = 'Japanese');\t----- bird -----\tcard_games",
    "383": "SELECT COUNT(*) FROM cards JOIN legalities ON cards.uuid = legalities.uuid WHERE legalities.status = 'Banned' AND cards.borderColor = 'white';\t----- bird -----\tcard_games",
    "384": "SELECT cards.uuid, foreign_data.language FROM cards JOIN legalities ON cards.uuid = legalities.uuid JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE legalities.format = 'legacy';\t----- bird -----\tcard_games",
    "385": "SELECT text FROM rulings WHERE uuid = (SELECT uuid FROM cards WHERE name = 'Beacon of Immortality');\t----- bird -----\tcard_games",
    "386": "SELECT COUNT(*) as num_cards, status FROM cards JOIN legalities ON cards.uuid = legalities.uuid WHERE frameVersion = 'future' AND status = 'legal';\t----- bird -----\tcard_games",
    "387": "SELECT name, colors FROM cards WHERE setCode = 'OGW';\t----- bird -----\tcard_games",
    "388": "SELECT cards.name, set_translations.language FROM cards JOIN sets ON cards.setCode = sets.code JOIN set_translations ON sets.code = set_translations.setCode WHERE sets.code = '10E' AND cards.convertedManaCost = 5;\t----- bird -----\tcard_games",
    "389": "SELECT cards.name, rulings.date FROM cards JOIN rulings ON cards.uuid = rulings.uuid WHERE cards.originalType = 'Creature - Elf';\t----- bird -----\tcard_games",
    "390": "SELECT colors, format FROM cards JOIN legalities ON cards.uuid = legalities.uuid WHERE cards.id BETWEEN 1 AND 20;\t----- bird -----\tcard_games",
    "391": "SELECT cards.name FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE cards.originalType = 'Artifact' AND cards.colors = 'B';\t----- bird -----\tcard_games",
    "392": "SELECT c.name FROM cards c JOIN rulings r ON c.uuid = r.uuid WHERE c.rarity = 'uncommon' ORDER BY r.date ASC LIMIT 3;\t----- bird -----\tcard_games",
    "393": "SELECT COUNT(*) FROM cards WHERE artist = 'John Avon' AND hasFoil = 1 AND cardKingdomFoilId IS NOT NULL;\t----- bird -----\tcard_games",
    "394": "SELECT COUNT(*) FROM cards WHERE borderColor = 'white' AND cardKingdomFoilId = cardKingdomId AND cardKingdomId IS NOT NULL;\t----- bird -----\tcard_games",
    "395": "SELECT COUNT(*) FROM cards WHERE artist = 'UDON' AND availability = 'mtgo' AND hand = '-1';\t----- bird -----\tcard_games",
    "396": "SELECT COUNT(*) FROM cards WHERE frameVersion = '1993' AND availability = 'paper' AND hasContentWarning = 1;\t----- bird -----\tcard_games",
    "397": "SELECT manaCost FROM cards WHERE layout = 'normal' AND frameVersion = '2003' AND borderColor = 'black' AND availability IN ('paper', 'mtgo');\t----- bird -----\tcard_games",
    "398": "SELECT SUM(convertedManaCost) FROM cards WHERE artist = 'Rob Alexander';\t----- bird -----\tcard_games",
    "399": "SELECT DISTINCT types FROM cards WHERE availability = 'arena';\t----- bird -----\tcard_games",
    "400": "SELECT sets.code FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid JOIN set_translations ON foreign_data.language = set_translations.language WHERE set_translations.language = 'Spanish';\t----- bird -----\tcard_games",
    "401": "SELECT (CAST(COUNT(CASE WHEN hand = '+3' THEN 1 END) AS REAL) / COUNT(id)) * 100 FROM cards WHERE frameEffects = 'legendary';\t----- bird -----\tcard_games",
    "402": "SELECT (cards.id) FROM cards WHERE isStorySpotlight = 1 AND isTextless = 0;\t----- bird -----\tcard_games",
    "403": "SELECT name FROM foreign_data WHERE language = 'Spanish' SELECT COUNT(id) AS total_cards, (SELECT COUNT(id) FROM foreign_data WHERE language = 'Spanish') AS spanish_cards, (SELECT COUNT(id) FROM foreign_data WHERE language = 'Spanish') * 100.0 / COUNT(id) AS percentage_spanish FROM foreign_data;\t----- bird -----\tcard_games",
    "404": "SELECT language FROM set_translations WHERE setCode = (SELECT code FROM sets WHERE baseSetSize = 309)\t----- bird -----\tcard_games",
    "405": "SELECT COUNT(*) FROM set_translations WHERE language = 'Portuguese (Brasil)' AND setCode IN (SELECT code FROM sets WHERE block = 'Commander');\t----- bird -----\tcard_games",
    "406": "SELECT cards.id, cards.name FROM cards JOIN legalities ON cards.uuid = legalities.uuid WHERE cards.types LIKE '%Creature%' AND legalities.format = 'legal';\t----- bird -----\tcard_games",
    "407": "SELECT DISTINCT types FROM cards WHERE uuid IN (SELECT uuid FROM foreign_data WHERE language = 'German') AND subtypes IS NOT NULL AND supertypes IS NOT NULL;\t----- bird -----\tcard_games",
    "408": "SELECT COUNT(*) FROM cards WHERE power IS NULL;\t----- bird -----\tcard_games",
    "409": "SELECT COUNT(*) FROM cards JOIN legalities ON cards.uuid = legalities.uuid JOIN rulings ON cards.uuid = rulings.uuid WHERE legalities.format = 'premodern' AND rulings.text = 'This is a triggered mana ability' AND cards.side IS NULL;\t----- bird -----\tcard_games",
    "410": "SELECT cards.id FROM cards WHERE cards.artist = 'Erica Yang' AND cards.availability = 'paper' AND cards.id IN ( SELECT legalities.id FROM legalities WHERE legalities.format = 'pauper' )\t----- bird -----\tcard_games",
    "411": "SELECT artist FROM cards WHERE flavorText = \"Das perfekte Gegenmittel zu einer dichten Formation\";\t----- bird -----\tcard_games",
    "412": "SELECT foreign_data.name FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE cards.type = 'Creature' AND cards.layout = 'normal' AND cards.borderColor = 'black' AND cards.artist = 'Matthew D. Wilson' AND foreign_data.language = 'French'\t----- bird -----\tcard_games",
    "413": "SELECT COUNT(*) FROM cards JOIN rulings ON cards.uuid = rulings.uuid WHERE cards.rarity = 'rare' AND rulings.date = '2009-01-10';\t----- bird -----\tcard_games",
    "414": "SELECT st.language FROM sets s JOIN set_translations st ON s.code = st.setCode WHERE s.baseSetSize = 180 AND s.block = 'Ravnica';\t----- bird -----\tcard_games",
    "415": "SELECT (COUNT(*) * 100.0) / (SELECT COUNT(*) FROM legalities WHERE format = 'commander' AND status = 'legal' AND hasContentWarning = 0) FROM legalities WHERE format = 'commander' AND status = 'legal' AND hasContentWarning = 0;\t----- bird -----\tcard_games",
    "416": "SELECT (CAST(COUNT(CASE WHEN language = 'French' AND (power IS NULL OR power = '*') THEN 1 END) AS FLOAT) / COUNT(CASE WHEN power IS NULL OR power = '*' THEN 1 END)) * 100 FROM cards;\t----- bird -----\tcard_games",
    "417": "SELECT (COUNT(DISTINCT st.setCode) * 100.0) / COUNT(DISTINCT s.code) AS percentage_expansion_sets FROM set_translations st JOIN sets s ON st.setCode = s.code WHERE st.language = 'Japanese' AND s.type = 'expansion';\t----- bird -----\tcard_games",
    "418": "SELECT availability FROM cards WHERE artist = 'Daren Bader';\t----- bird -----\tcard_games",
    "419": "SELECT COUNT(*) FROM cards WHERE borderColor = 'borderless' AND edhrecRank > 12000;\t----- bird -----\tcard_games",
    "420": "SELECT COUNT(*) FROM cards WHERE isOversized = 1 OR isReprint = 1 OR isPromo = 1;\t----- bird -----\tcard_games",
    "421": "SELECT name FROM cards WHERE (power IS NULL OR power = '*') AND promoTypes = 'arenaleague' ORDER BY name LIMIT 3;\t----- bird -----\tcard_games",
    "422": "SELECT language FROM foreign_data WHERE multiverseid = 149934;\t----- bird -----\tcard_games",
    "423": "SELECT cardKingdomFoilId, cardKingdomId FROM cards WHERE cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL ORDER BY cardKingdomFoilId, cardKingdomId LIMIT 3;\t----- bird -----\tcard_games",
    "424": "SELECT (COUNT(CASE WHEN isTextless = 1 AND layout = 'normal' THEN 1 END) * 100.0 / COUNT(isTextless)) AS proportion_of_cards_without_normal_text_box FROM cards;\t----- bird -----\tcard_games",
    "425": "SELECT number FROM cards WHERE side IS NULL AND name IN ( SELECT name FROM cards WHERE subtypes LIKE '%Angel%' AND subtypes LIKE '%Wizard%' ) AND name NOT IN ( SELECT name FROM cards WHERE name IN ( SELECT name FROM cards GROUP BY name HAVING COUNT(*) > 1 ) );\t----- bird -----\tcard_games",
    "426": "SELECT name FROM sets WHERE mtgoCode IS NULL OR mtgoCode = '' ORDER BY name ASC LIMIT 3;\t----- bird -----\tcard_games",
    "427": "SELECT language FROM set_translations WHERE setCode = 'ARC' AND language IN ( SELECT language FROM set_translations WHERE setCode = 'ARC' AND mcmName = 'Archenemy' )\t----- bird -----\tcard_games",
    "428": "SELECT name, translation FROM sets JOIN set_translations ON sets.code = set_translations.setCode WHERE sets.id = 5;\t----- bird -----\tcard_games",
    "429": "SELECT sets.name, sets.type FROM sets WHERE sets.id = 206;\t----- bird -----\tcard_games",
    "430": "SELECT sets.name, sets.id FROM sets JOIN set_translations ON sets.code = set_translations.setCode WHERE set_translations.language = 'Italian' AND sets.block = 'Shadowmoor' ORDER BY sets.name ASC LIMIT 2;\t----- bird -----\tcard_games",
    "431": "SELECT sets.id, sets.name FROM sets WHERE sets.isForeignOnly = 1 AND sets.isFoilOnly = 1 AND sets.code IN (SELECT DISTINCT setCode FROM foreign_data WHERE language = 'Japanese');\t----- bird -----\tcard_games",
    "432": "SELECT sets.name FROM sets JOIN set_translations ON sets.code = set_translations.setCode WHERE set_translations.language = 'Russian' ORDER BY sets.baseSetSize DESC LIMIT 1;\t----- bird -----\tcard_games",
    "433": "SELECT (DIVIDE(COUNT(*), (SELECT COUNT(*) FROM cards)) * 100) AS percentage FROM foreign_data WHERE language = 'Chinese Simplified' AND uuid IN (SELECT uuid FROM cards WHERE isOnlineOnly = 1)\t----- bird -----\tcard_games",
    "434": "SELECT COUNT(DISTINCT sets.code) FROM sets JOIN set_translations ON sets.code = set_translations.setCode WHERE set_translations.language = 'Japanese' AND (sets.mtgoCode IS NULL OR sets.mtgoCode = '')\t----- bird -----\tcard_games",
    "435": "SELECT id FROM cards WHERE borderColor = 'black';\t----- bird -----\tcard_games",
    "436": "SELECT id FROM cards WHERE frameEffects = 'extendedart';\t----- bird -----\tcard_games",
    "437": "SELECT name FROM cards WHERE borderColor = 'black' AND isFullArt = 1;\t----- bird -----\tcard_games",
    "438": "SELECT language FROM sets WHERE id = 174;\t----- bird -----\tcard_games",
    "439": "SELECT name FROM sets WHERE code = \"ALL\";\t----- bird -----\tcard_games",
    "440": "SELECT language FROM foreign_data WHERE name = 'A Pedra Fellwar';\t----- bird -----\tcard_games",
    "441": "SELECT code FROM sets WHERE releaseDate = '2007-07-13'\t----- bird -----\tcard_games",
    "442": "SELECT baseSetSize, code FROM sets WHERE block = \"Masques\" OR block = \"Mirage\"\t----- bird -----\tcard_games",
    "443": "SELECT code FROM sets WHERE type = 'expansion';\t----- bird -----\tcard_games",
    "444": "SELECT foreign_data.name, cards.type FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE cards.watermark = 'Boros';\t----- bird -----\tcard_games",
    "445": "SELECT foreign_data.language, foreign_data.flavorText, cards.type FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE cards.watermark = 'colorpie';\t----- bird -----\tcard_games",
    "446": "SELECT (CAST(COUNT(CASE WHEN convertedManaCost = 10 THEN 1 END) AS REAL) / COUNT(convertedManaCost)) * 100 FROM cards WHERE name = 'Abyssal Horror';\t----- bird -----\tcard_games",
    "447": "SELECT code FROM sets WHERE type = 'expansion commander';\t----- bird -----\tcard_games",
    "448": "SELECT foreign_data.name, cards.type FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE cards.watermark = 'Abzan';\t----- bird -----\tcard_games",
    "449": "SELECT foreign_data.language, cards.type FROM foreign_data JOIN cards ON foreign_data.uuid = cards.uuid WHERE cards.watermark = 'Azorius';\t----- bird -----\tcard_games",
    "450": "SELECT COUNT(*) FROM cards WHERE artist = 'Aaron Miller' AND cardKingdomFoilId = cardKingdomId AND cardKingdomId IS NOT NULL;\t----- bird -----\tcard_games",
    "451": "SELECT COUNT(*) FROM cards WHERE availability LIKE '%paper%' AND hand LIKE '+%';\t----- bird -----\tcard_games",
    "452": "SELECT name FROM cards WHERE isTextless = 0;\t----- bird -----\tcard_games",
    "453": "SELECT convertedManaCost FROM cards WHERE name = 'Ancestor`s Chosen';\t----- bird -----\tcard_games",
    "454": "SELECT COUNT(*) FROM cards WHERE borderColor = 'white' AND (power = '*' OR power IS NULL);\t----- bird -----\tcard_games",
    "455": "SELECT name FROM cards WHERE isPromo = 1 AND side IS NOT NULL;\t----- bird -----\tcard_games",
    "456": "SELECT subtypes, supertypes FROM cards WHERE name = 'Molimo, Maro-Sorcerer';\t----- bird -----\tcard_games",
    "457": "SELECT purchaseUrls FROM cards WHERE promoTypes = 'bundle';\t----- bird -----\tcard_games",
    "458": "SELECT COUNT(DISTINCT artist) FROM cards WHERE borderColor = 'black' AND availability LIKE '%arena%' AND availability LIKE '%mtgo%';\t----- bird -----\tcard_games",
    "459": "SELECT CASE WHEN (SELECT convertedManaCost FROM cards WHERE name = 'Serra Angel') > (SELECT convertedManaCost FROM cards WHERE name = 'Shrine Keeper') THEN 'Serra Angel' ELSE 'Shrine Keeper' END as card_costs_more_converted_mana;\t----- bird -----\tcard_games",
    "460": "SELECT artist FROM cards WHERE flavorName = 'Battra, Dark Destroyer';\t----- bird -----\tcard_games",
    "461": "SELECT name FROM cards WHERE frameVersion = '2003' ORDER BY convertedManaCost DESC LIMIT 3;\t----- bird -----\tcard_games",
    "462": "SELECT set_translations.translation FROM set_translations JOIN sets ON set_translations.setCode = sets.code JOIN cards ON sets.code = cards.setCode WHERE set_translations.language = 'Italian' AND cards.name = 'Ancestor\\'s Chosen';\t----- bird -----\tcard_games",
    "463": "SELECT COUNT(*) FROM set_translations WHERE setCode IN (SELECT setCode FROM cards WHERE name = 'Angel of Mercy');\t----- bird -----\tcard_games",
    "464": "SELECT cards.name FROM cards JOIN sets ON cards.setCode = sets.code JOIN set_translations ON sets.code = set_translations.setCode WHERE set_translations.translation = 'Hauptset Zehnte Edition';\t----- bird -----\tcard_games",
    "465": "SELECT cards.name, foreign_data.language FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE cards.name = 'Ancestor\\'s Chosen' AND foreign_data.language = 'Korean';\t----- bird -----\tcard_games",
    "466": "SELECT COUNT(*) FROM cards JOIN set_translations ON cards.setCode = set_translations.code WHERE set_translations.translation = 'Hauptset Zehnte Edition' AND cards.artist = 'Adam Rex';\t----- bird -----\tcard_games",
    "467": "SELECT baseSetSize FROM sets WHERE name = \"Hauptset Zehnte Edition\";\t----- bird -----\tcard_games",
    "468": "SELECT translation FROM set_translations WHERE setCode = '8ED' AND language = 'Simplified Chinese';\t----- bird -----\tcard_games",
    "469": "SELECT s.name FROM cards s JOIN sets t ON s.setCode = t.code WHERE s.name = 'Angel of Mercy' AND t.mtgoCode IS NOT NULL;\t----- bird -----\tcard_games",
    "470": "SELECT releaseDate FROM sets WHERE name = 'Ancestor''s Chosen';\t----- bird -----\tcard_games",
    "471": "SELECT type FROM sets WHERE name = 'Hauptset Zehnte Edition';\t----- bird -----\tcard_games",
    "472": "SELECT COUNT(*) FROM sets WHERE block = 'Ice Age' AND code IN (SELECT setCode FROM set_translations WHERE language = 'Italian');\t----- bird -----\tcard_games",
    "473": "SELECT s.name FROM cards s JOIN sets st ON s.setCode = st.code WHERE s.name = 'Adarkar Valkyrie' AND st.isForeignOnly = 1;\t----- bird -----\tcard_games",
    "474": "SELECT COUNT(DISTINCT s.code) FROM sets s JOIN set_translations st ON s.code = st.setCode WHERE st.language = 'Italian' AND st.translation IS NOT NULL AND s.baseSetSize < 10;\t----- bird -----\tcard_games",
    "475": "SELECT COUNT(*) FROM cards WHERE setCode = (SELECT code FROM sets WHERE name = 'Coldsnap') AND borderColor = 'black';\t----- bird -----\tcard_games",
    "476": "SELECT cards.name FROM cards JOIN sets ON cards.setCode = sets.code WHERE sets.name = 'Coldsnap' ORDER BY cards.convertedManaCost DESC LIMIT 1;\t----- bird -----\tcard_games",
    "477": "SELECT artist FROM cards WHERE setCode = 'CSP' AND artist IN ('Jeremy Jarvis', 'Aaron Miller', 'Chippy');\t----- bird -----\tcard_games",
    "478": "SELECT name FROM cards WHERE setCode = (SELECT code FROM sets WHERE name = 'Coldsnap') AND number = '4';\t----- bird -----\tcard_games",
    "479": "SELECT COUNT(*) FROM cards AS c WHERE c.convertedManaCost > 5 AND c.setCode = (SELECT code FROM sets WHERE name = 'Coldsnap') AND (c.power = '*' OR c.power IS NULL);\t----- bird -----\tcard_games",
    "480": "SELECT flavorText FROM foreign_data WHERE name = 'Ancestor''s Chosen' AND language = 'Italian';\t----- bird -----\tcard_games",
    "481": "SELECT language FROM foreign_data WHERE name = 'Ancestor''s Chosen' AND flavorText IS NOT NULL;\t----- bird -----\tcard_games",
    "482": "SELECT foreign_data.type FROM foreign_data JOIN cards ON foreign_data.uuid = cards.uuid WHERE foreign_data.language = 'German' AND cards.name = 'Ancestor''s Chosen';\t----- bird -----\tcard_games",
    "483": "SELECT rulings.text FROM rulings JOIN cards ON rulings.uuid = cards.uuid JOIN sets ON cards.setCode = sets.code WHERE sets.name = 'Coldsnap' AND rulings.language = 'Italian';\t----- bird -----\tcard_games",
    "484": "SELECT cards.name FROM cards JOIN sets ON cards.setCode = sets.code JOIN set_translations ON sets.code = set_translations.setCode WHERE sets.name = 'Coldsnap' AND set_translations.language = 'Italian' ORDER BY cards.convertedManaCost DESC LIMIT 1;\t----- bird -----\tcard_games",
    "485": "SELECT r.date FROM rulings r JOIN cards c ON r.uuid = c.uuid WHERE c.name = 'Reminisce';\t----- bird -----\tcard_games",
    "486": "SELECT ROUND((COUNT(*) * 100.0) / (SELECT COUNT(*) FROM cards WHERE setCode = (SELECT code FROM sets WHERE name = 'Coldsnap') AND convertedManaCost = 7), 2) as percentage FROM cards WHERE setCode = (SELECT code FROM sets WHERE name = 'Coldsnap')\t----- bird -----\tcard_games",
    "487": "SELECT (COUNT(*) * 100.0) / (SELECT COUNT(*) FROM cards WHERE name = 'Coldsnap' AND cardKingdomFoilId = cardKingdomId AND cardKingdomId IS NOT NULL) FROM cards WHERE name = 'Coldsnap' AND cardKingdomFoilId = cardKingdomId AND cardKingdomId IS NOT NULL;\t----- bird -----\tcard_games",
    "488": "SELECT code FROM sets WHERE releaseDate = '2017-07-14'\t----- bird -----\tcard_games",
    "489": "SELECT keyruneCode FROM sets WHERE code = 'PKHC';\t----- bird -----\tcard_games",
    "490": "SELECT mcmId FROM sets WHERE code = 'SS2';\t----- bird -----\tcard_games",
    "491": "SELECT sets.mcmName FROM sets WHERE sets.releaseDate = '2017-06-09';\t----- bird -----\tcard_games",
    "492": "SELECT sets.type FROM sets WHERE sets.name LIKE '%From the Vault: Lore%';\t----- bird -----\tcard_games",
    "493": "SELECT parentCode FROM sets WHERE name = 'Commander 2014 Oversized';\t----- bird -----\tcard_games",
    "494": "SELECT cards.name, cards.text, rulings.text, cards.hasContentWarning FROM cards JOIN rulings ON cards.uuid = rulings.uuid WHERE cards.artist = 'Jim Pavelec';\t----- bird -----\tcard_games",
    "495": "SELECT sets.releaseDate FROM cards JOIN sets ON cards.setCode = sets.code WHERE cards.name = 'Evacuation';\t----- bird -----\tcard_games",
    "496": "SELECT s.baseSetSize FROM sets s JOIN set_translations st ON s.code = st.setCode WHERE st.translation = 'Rinascita di Alara';\t----- bird -----\tcard_games",
    "497": "SELECT s.type FROM sets s JOIN set_translations st ON s.code = st.setCode WHERE st.translation = 'Huiti\u00c3\u00a8me \u00c3\u00a9dition';\t----- bird -----\tcard_games",
    "498": "SELECT sets.name FROM sets JOIN set_translations ON sets.code = set_translations.setCode WHERE set_translations.language = 'French' AND set_translations.translation = 'Tendo Ice Bridge';\t----- bird -----\tcard_games",
    "499": "SELECT COUNT(translation) FROM set_translations WHERE setCode = (SELECT code FROM sets WHERE name = 'Salvat 2011') AND translation IS NOT NULL;\t----- bird -----\tcard_games",
    "500": "SELECT sets.name FROM cards JOIN sets ON cards.setCode = sets.code WHERE cards.name = 'Fellwar Stone' AND sets.code IN (SELECT setCode FROM set_translations WHERE language = 'Japanese');\t----- bird -----\tcard_games",
    "501": "SELECT name FROM cards WHERE setCode = 'JOU' ORDER BY convertedManaCost DESC LIMIT 1;\t----- bird -----\tcard_games",
    "502": "SELECT s.releaseDate FROM sets s JOIN set_translations st ON s.code = st.setCode WHERE st.translation = 'Ola de fr\u00edo';\t----- bird -----\tcard_games",
    "503": "SELECT sets.type FROM cards JOIN sets ON cards.setCode = sets.code WHERE cards.name = 'Samite Pilgrim';\t----- bird -----\tcard_games",
    "504": "SELECT COUNT(*) FROM cards WHERE setCode = (SELECT code FROM sets WHERE name = 'World Championship Decks 2004') AND convertedManaCost = 3;\t----- bird -----\tcard_games",
    "505": "SELECT st.translation FROM sets s JOIN set_translations st ON s.code = st.setCode WHERE s.name = 'Mirrodin' AND st.language = 'Chinese Simplified';\t----- bird -----\tcard_games",
    "506": "SELECT (COUNT(*) * 100.0) / (SELECT COUNT(*) FROM sets WHERE code IN (SELECT setCode FROM set_translations WHERE language = 'Japanese')) FROM sets WHERE code IN (SELECT setCode FROM set_translations WHERE language = 'Japanese') AND isNonFoilOnly = 1;\t----- bird -----\tcard_games",
    "507": "SELECT (COUNT(*) * 100.0) / (SELECT COUNT(*) FROM set_translations WHERE language = 'Portuguese (Brazil)') AS percentage FROM sets WHERE code IN (SELECT setCode FROM set_translations WHERE language = 'Portuguese (Brazil)') AND isOnlineOnly = 1;\t----- bird -----\tcard_games",
    "508": "SELECT DISTINCT availability FROM cards WHERE artist = 'Aleksi Briclot' AND isTextless = 1;\t----- bird -----\tcard_games",
    "509": "SELECT id FROM sets WHERE baseSetSize = (SELECT MAX(baseSetSize) FROM sets);\t----- bird -----\tcard_games",
    "510": "SELECT cards.artist FROM cards WHERE cards.faceName IS NULL ORDER BY cards.convertedManaCost DESC LIMIT 1;\t----- bird -----\tcard_games",
    "511": "SELECT MAX(frameEffects) FROM cards WHERE hasFoil = 1 AND cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL;\t----- bird -----\tcard_games",
    "512": "SELECT COUNT(*) FROM cards WHERE (power IS NULL OR power = '*') AND hasFoil = 0 AND duelDeck = 'a';\t----- bird -----\tcard_games",
    "513": "SELECT sets.id FROM sets WHERE sets.type = 'Commander' AND sets.totalSetSize = (SELECT MAX(totalSetSize) FROM sets WHERE sets.type = 'Commander' AND sets.name NOT LIKE '%Alchemy%');\t----- bird -----\tcard_games",
    "514": "SELECT name, convertedManaCost FROM cards WHERE layout = 'duel' ORDER BY convertedManaCost DESC LIMIT 10;\t----- bird -----\tcard_games",
    "515": "SELECT MIN(c.originalReleaseDate) AS oldest_mythic_release_date, l.format AS legal_play_format FROM cards c JOIN legalities l ON c.uuid = l.uuid WHERE c.rarity = 'mythic' AND l.status = 'legal' ORDER BY c.originalReleaseDate ASC LIMIT 1;\t----- bird -----\tcard_games",
    "516": "SELECT COUNT(*) FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE artist = 'Volkan Baga' AND language = 'French';\t----- bird -----\tcard_games",
    "517": "SELECT COUNT(*) FROM cards JOIN legalities ON cards.uuid = legalities.uuid WHERE rarity = 'rare' AND types = 'Enchantment' AND name = 'Abundance' AND status = 'Legal';\t----- bird -----\tcard_games",
    "518": "SELECT legalities.format, cards.name FROM legalities JOIN cards ON legalities.uuid = cards.uuid WHERE legalities.status = 'banned' GROUP BY legalities.format ORDER BY COUNT(*) DESC LIMIT 1;\t----- bird -----\tcard_games",
    "519": "SELECT language FROM sets WHERE name = 'Battlebond';\t----- bird -----\tcard_games",
    "520": "SELECT artist, format FROM cards WHERE artist = ( SELECT artist FROM cards GROUP BY artist ORDER BY COUNT(*) ASC LIMIT 1 ) JOIN legalities ON cards.uuid = legalities.uuid;\t----- bird -----\tcard_games",
    "521": "SELECT legalities.status FROM cards JOIN legalities ON cards.uuid = legalities.uuid WHERE cards.frameVersion = '1997' AND cards.artist = 'D. Alexander Gregory' AND legalities.format = 'legacy' AND (cards.hasContentWarning = 1 OR cards.setCode = 'Wizards of the Coast')\t----- bird -----\tcard_games",
    "522": "SELECT cards.name, legalities.format FROM cards JOIN legalities ON cards.uuid = legalities.uuid WHERE cards.edhrecRank = 1 AND legalities.status = 'banned';\t----- bird -----\tcard_games",
    "523": "SELECT AVG(totalSetSize) as annual_avg_sets_released, MAX(COUNT(language)) as common_language FROM sets JOIN set_translations ON sets.code = set_translations.setCode WHERE releaseDate BETWEEN '2012-01-01' AND '2015-12-31';\t----- bird -----\tcard_games",
    "524": "SELECT artist FROM cards WHERE borderColor = 'black' AND availability = 'arena';\t----- bird -----\tcard_games",
    "525": "SELECT cards.uuid FROM cards JOIN legalities ON cards.uuid = legalities.uuid WHERE legalities.format = 'oldschool' AND (legalities.status = 'banned' OR legalities.status = 'restricted');\t----- bird -----\tcard_games",
    "526": "SELECT COUNT(*) FROM cards WHERE artist = 'Matthew D. Wilson' AND availability = 'paper';\t----- bird -----\tcard_games",
    "527": "SELECT r.text FROM rulings r JOIN cards c ON r.uuid = c.uuid WHERE c.artist = 'Kev Walker' ORDER BY r.date DESC;\t----- bird -----\tcard_games",
    "528": "SELECT cards.name, legalities.format FROM cards JOIN sets ON cards.setCode = sets.code JOIN legalities ON cards.uuid = legalities.uuid WHERE sets.name = 'Hour of Devastation' AND legalities.status = 'legal';\t----- bird -----\tcard_games",
    "529": "SELECT s.name FROM sets s LEFT JOIN set_translations st ON s.code = st.setCode WHERE st.language NOT LIKE '%Japanese%' AND st.language = 'Korean';\t----- bird -----\tcard_games",
    "530": "SELECT frameVersion, name FROM cards WHERE artist = 'Allen Williams'; SELECT name FROM cards JOIN legalities ON cards.uuid = legalities.uuid WHERE status = 'banned';\t----- bird -----\tcard_games",
    "531": "SELECT DisplayName FROM users WHERE DisplayName = 'Harlan' OR DisplayName = 'Jarrod Dixon' ORDER BY Reputation DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "532": "SELECT DisplayName FROM users WHERE strftime('%Y', CreationDate) = '2014';\t----- bird -----\tcodebase_community",
    "533": "SELECT COUNT(*) FROM users WHERE LastAccessDate > '2014-09-01 00:00:00';\t----- bird -----\tcodebase_community",
    "534": "SELECT DisplayName FROM users WHERE Views = (SELECT MAX(Views) FROM users)\t----- bird -----\tcodebase_community",
    "535": "SELECT COUNT(*) FROM users WHERE UpVotes > 100 AND DownVotes > 1;\t----- bird -----\tcodebase_community",
    "536": "SELECT COUNT(*) FROM users WHERE Views > 10 AND strftime('%Y', CreationDate) > '2013';\t----- bird -----\tcodebase_community",
    "537": "SELECT COUNT(*) FROM posts JOIN users ON posts.OwnerUserId = users.Id WHERE users.DisplayName = 'csgillespie';\t----- bird -----\tcodebase_community",
    "538": "SELECT Title FROM posts WHERE OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'csgillespie');\t----- bird -----\tcodebase_community",
    "539": "SELECT DisplayName FROM posts JOIN users ON posts.OwnerUserId = users.Id WHERE Title = \"Eliciting priors from experts\";\t----- bird -----\tcodebase_community",
    "540": "SELECT p.Title FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE u.DisplayName = 'csgillespie' ORDER BY p.ViewCount DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "541": "SELECT u.DisplayName FROM users u JOIN posts p ON u.Id = p.OwnerUserId WHERE p.FavoriteCount = (SELECT MAX(FavoriteCount) FROM posts)\t----- bird -----\tcodebase_community",
    "542": "SELECT SUM(posts.CommentCount) FROM posts JOIN users ON posts.OwnerUserId = users.Id WHERE users.DisplayName = 'csgillespie';\t----- bird -----\tcodebase_community",
    "543": "SELECT MAX(p.AnswerCount) AS MaxAnswerCount FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE u.DisplayName = 'csgillespie';\t----- bird -----\tcodebase_community",
    "544": "SELECT u.DisplayName FROM posts p JOIN users u ON p.LastEditorUserId = u.Id WHERE p.Title = 'Examples for teaching: Correlation does not mean causation';\t----- bird -----\tcodebase_community",
    "545": "SELECT COUNT(*) FROM posts JOIN users ON posts.OwnerUserId = users.Id WHERE users.DisplayName = 'csgillespie' AND posts.ParentId IS NULL;\t----- bird -----\tcodebase_community",
    "546": "SELECT u.DisplayName FROM users u JOIN posts p ON u.Id = p.OwnerUserId WHERE p.ClosedDate IS NOT NULL;\t----- bird -----\tcodebase_community",
    "547": "SELECT COUNT(*) FROM posts WHERE OwnerUserId IN (SELECT Id FROM users WHERE Age > 65) AND Score >= 20;\t----- bird -----\tcodebase_community",
    "548": "SELECT Location FROM posts JOIN users ON posts.OwnerUserId = users.Id WHERE posts.Title = 'Eliciting priors from experts';\t----- bird -----\tcodebase_community",
    "549": "SELECT posts.Body FROM posts JOIN tags ON posts.Id = tags.ExcerptPostId WHERE tags.TagName = \"bayesian\";\t----- bird -----\tcodebase_community",
    "550": "SELECT posts.Body FROM posts JOIN tags ON posts.Id = tags.ExcerptPostId WHERE tags.Count = (SELECT MAX(Count) FROM tags)\t----- bird -----\tcodebase_community",
    "551": "SELECT COUNT(*) FROM badges JOIN users ON badges.UserId = users.Id WHERE users.DisplayName = 'csgillespie';\t----- bird -----\tcodebase_community",
    "552": "SELECT b.Name FROM badges b JOIN users u ON b.UserId = u.Id WHERE u.DisplayName = 'csgillespie';\t----- bird -----\tcodebase_community",
    "553": "SELECT COUNT(*) FROM badges WHERE UserId = (SELECT Id FROM users WHERE DisplayName = 'csgillespie') AND strftime('%Y', Date) = '2011';\t----- bird -----\tcodebase_community",
    "554": "SELECT u.DisplayName FROM users u JOIN badges b ON u.Id = b.UserId GROUP BY u.Id ORDER BY COUNT(b.Id) DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "555": "SELECT AVG(p.Score) FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE u.DisplayName = 'csgillespie';\t----- bird -----\tcodebase_community",
    "556": "SELECT COUNT(b.Id) / COUNT(u.DisplayName) AS AverageBadges FROM badges b JOIN users u ON b.UserId = u.Id WHERE u.Views > 200;\t----- bird -----\tcodebase_community",
    "557": "SELECT (CAST(COUNT(CASE WHEN p.Score > 20 AND u.Age > 65 THEN p.Id END) AS FLOAT) / COUNT(p.Id)) * 100 FROM posts p JOIN users u ON p.OwnerUserId = u.Id;\t----- bird -----\tcodebase_community",
    "558": "SELECT COUNT(*) FROM votes WHERE UserId = 58 AND CreationDate = '2010-07-19';\t----- bird -----\tcodebase_community",
    "559": "SELECT CreationDate FROM votes GROUP BY CreationDate ORDER BY COUNT(Id) DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "560": "SELECT COUNT(*) FROM badges WHERE Name = 'Revival';\t----- bird -----\tcodebase_community",
    "561": "SELECT Title FROM posts WHERE Id = (SELECT PostId FROM comments WHERE Score = (SELECT MAX(Score) FROM comments) LIMIT 1);\t----- bird -----\tcodebase_community",
    "562": "SELECT COUNT(*) AS CommentCount FROM posts JOIN comments ON posts.Id = comments.PostId WHERE posts.ViewCount = 1910;\t----- bird -----\tcodebase_community",
    "563": "SELECT FavoriteCount FROM posts WHERE Id IN ( SELECT PostId FROM comments WHERE UserId = 3025 AND CreationDate = '2014/4/23 20:29:39.0' )\t----- bird -----\tcodebase_community",
    "564": "SELECT c.Text FROM comments c JOIN posts p ON c.PostId = p.Id WHERE p.ParentId = 107829 AND p.CommentCount = 1;\t----- bird -----\tcodebase_community",
    "565": "SELECT CASE WHEN p.ClosedDate IS NULL THEN 'The post was well-finished' ELSE 'The post was not well-finished' END AS PostStatus FROM comments c JOIN posts p ON c.PostId = p.Id WHERE c.UserId = 23853 AND c.CreationDate = '2013-07-12 09:08:18.0';\t----- bird -----\tcodebase_community",
    "566": "SELECT u.Reputation FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE p.Id = 65041;\t----- bird -----\tcodebase_community",
    "567": "SELECT COUNT(*) AS NumberOfPostsOwned FROM posts JOIN users ON posts.OwnerUserId = users.Id WHERE users.DisplayName = \"Tiago Pasqualini\";\t----- bird -----\tcodebase_community",
    "568": "SELECT u.DisplayName FROM votes v JOIN users u ON v.UserId = u.Id WHERE v.Id = 6347;\t----- bird -----\tcodebase_community",
    "569": "SELECT COUNT(*) FROM votes JOIN posts ON votes.PostId = posts.Id WHERE posts.Title LIKE '%data visualization%';\t----- bird -----\tcodebase_community",
    "570": "SELECT b.Name FROM users u JOIN badges b ON u.Id = b.UserId WHERE u.DisplayName = \"DatEpicCoderGuyWhoPrograms\";\t----- bird -----\tcodebase_community",
    "571": "SELECT COUNT(DISTINCT p.Id) / COUNT(DISTINCT v.Id) AS PostToVoteRatio FROM posts p LEFT JOIN votes v ON p.OwnerUserId = v.UserId WHERE p.OwnerUserId = 24;\t----- bird -----\tcodebase_community",
    "572": "SELECT ViewCount FROM posts WHERE Title = 'Integration of Weka and/or RapidMiner into Informatica PowerCenter/Developer';\t----- bird -----\tcodebase_community",
    "573": "SELECT Text FROM comments WHERE Score = 17;\t----- bird -----\tcodebase_community",
    "574": "SELECT DisplayName FROM users WHERE WebsiteUrl = 'http://stackoverflow.com';\t----- bird -----\tcodebase_community",
    "575": "SELECT b.Name FROM badges b JOIN users u ON b.UserId = u.Id WHERE u.DisplayName = 'SilentGhost';\t----- bird -----\tcodebase_community",
    "576": "SELECT DisplayName FROM comments WHERE Text = 'thank you user93!';\t----- bird -----\tcodebase_community",
    "577": "SELECT comments.Text FROM comments JOIN users ON comments.UserId = users.Id WHERE users.DisplayName = 'A Lion';\t----- bird -----\tcodebase_community",
    "578": "SELECT users.DisplayName, users.Reputation FROM posts JOIN users ON posts.OwnerUserId = users.Id WHERE posts.Title = 'Understanding what Dassault iSight is doing?';\t----- bird -----\tcodebase_community",
    "579": "SELECT comments.Text FROM comments JOIN posts ON comments.PostId = posts.Id WHERE posts.Title = 'How does gentle boosting differ from AdaBoost?';\t----- bird -----\tcodebase_community",
    "580": "SELECT users.DisplayName FROM users JOIN badges ON users.Id = badges.UserId WHERE badges.Name = 'Necromancer' LIMIT 10;\t----- bird -----\tcodebase_community",
    "581": "SELECT u.DisplayName AS Editor FROM posts p JOIN users u ON p.LastEditorUserId = u.Id WHERE p.Title = 'Open source tools for visualizing multi-dimensional data';\t----- bird -----\tcodebase_community",
    "582": "SELECT Title FROM posts WHERE LastEditorUserId = (SELECT Id FROM users WHERE DisplayName = 'Vebjorn Ljosa');\t----- bird -----\tcodebase_community",
    "583": "SELECT SUM(p.Score) AS TotalScore, u.WebsiteUrl FROM posts p JOIN users u ON p.LastEditorUserId = u.Id WHERE u.DisplayName = 'Yevgeny'\t----- bird -----\tcodebase_community",
    "584": "SELECT comments.Text FROM comments JOIN posts ON comments.PostId = posts.Id WHERE posts.Title = 'Why square the difference instead of taking the absolute value in standard deviation?' AND comments.UserId IN (SELECT Id FROM users WHERE DisplayName = 'editor_username');\t----- bird -----\tcodebase_community",
    "585": "SELECT SUM(BountyAmount) FROM posts JOIN votes ON posts.Id = votes.PostId WHERE Title LIKE '%data%'\t----- bird -----\tcodebase_community",
    "586": "SELECT u.DisplayName FROM users u JOIN votes v ON u.Id = v.UserId JOIN posts p ON v.PostId = p.Id WHERE p.Title LIKE '%variance%' AND v.BountyAmount = 50;\t----- bird -----\tcodebase_community",
    "587": "SELECT AVG(p.ViewCount) AS AverageViewCount, p.Title, c.Text, c.Score FROM posts p JOIN postLinks pl ON p.Id = pl.PostId JOIN tags t ON pl.RelatedPostId = t.Id LEFT JOIN comments c ON p.Id = c.PostId WHERE t.TagName = 'humor' GROUP BY p.Title, c.Text, c.Score;\t----- bird -----\tcodebase_community",
    "588": "SELECT COUNT(*) FROM comments WHERE UserId = 13;\t----- bird -----\tcodebase_community",
    "589": "SELECT Id FROM users WHERE Reputation = (SELECT MAX(Reputation) FROM users)\t----- bird -----\tcodebase_community",
    "590": "SELECT Id FROM users WHERE Views = (SELECT MIN(Views) FROM users)\t----- bird -----\tcodebase_community",
    "591": "SELECT COUNT(DISTINCT UserId) FROM badges WHERE Name = 'Supporter' AND strftime('%Y', Date) = '2011';\t----- bird -----\tcodebase_community",
    "592": "SELECT COUNT(DISTINCT UserId) FROM badges GROUP BY UserId HAVING COUNT(Name) > 5;\t----- bird -----\tcodebase_community",
    "593": "SELECT COUNT(users.Id) FROM users JOIN badges ON users.Id = badges.UserId WHERE users.Location = 'New York' AND (badges.Name = 'Supporter' OR badges.Name = 'Teacher');\t----- bird -----\tcodebase_community",
    "594": "SELECT users.DisplayName, users.Reputation FROM posts JOIN users ON posts.OwnerUserId = users.Id WHERE posts.Id = 1;\t----- bird -----\tcodebase_community",
    "595": "SELECT u.Id, u.DisplayName FROM users u JOIN postHistory ph ON u.Id = ph.UserId JOIN posts p ON ph.PostId = p.Id WHERE u.Id IN ( SELECT UserId FROM postHistory GROUP BY UserId, PostId HAVING COUNT(*) = 1 ) AND p.ViewCount >= 1000;\t----- bird -----\tcodebase_community",
    "596": "SELECT u.Id, u.DisplayName, b.Name FROM users u JOIN comments c ON u.Id = c.UserId JOIN badges b ON u.Id = b.UserId GROUP BY u.Id ORDER BY COUNT(c.Id) DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "597": "SELECT COUNT(*) FROM users WHERE Location = 'India' AND Id IN (SELECT UserId FROM badges WHERE Name = 'Teacher');\t----- bird -----\tcodebase_community",
    "598": "SELECT ((SELECT COUNT(Name) FROM badges WHERE Name = 'Student' AND strftime('%Y', Date) = '2010') - (SELECT COUNT(Name) FROM badges WHERE Name = 'Student' AND strftime('%Y', Date) = '2011')) * 100.0 / (SELECT COUNT(Name) FROM badges WHERE Name = 'Student') as percentage_difference;\t----- bird -----\tcodebase_community",
    "599": "SELECT PostHistoryTypeId FROM postHistory WHERE PostId = 3720; SELECT COUNT(DISTINCT UserId) FROM comments WHERE PostId = 3720;\t----- bird -----\tcodebase_community",
    "600": "SELECT posts.Id, posts.ViewCount FROM postLinks JOIN posts ON postLinks.RelatedPostId = posts.Id WHERE postLinks.PostId = 61217;\t----- bird -----\tcodebase_community",
    "601": "SELECT Score, LinkTypeId FROM posts JOIN postLinks ON posts.Id = postLinks.PostId WHERE posts.Id = 395;\t----- bird -----\tcodebase_community",
    "602": "SELECT posts.Id FROM posts WHERE posts.Score > 60;\t----- bird -----\tcodebase_community",
    "603": "SELECT SUM(FavoriteCount) FROM posts WHERE OwnerUserId = 686 AND strftime('%Y', CreationDate) = '2011';\t----- bird -----\tcodebase_community",
    "604": "SELECT AVG(u.UpVotes) AS AvgUpVotes, AVG(u.Age) AS AvgAge FROM users u JOIN posts p ON u.Id = p.OwnerUserId GROUP BY u.Id HAVING COUNT(u.Id) > 10;\t----- bird -----\tcodebase_community",
    "605": "SELECT COUNT(DISTINCT UserId) FROM badges WHERE Name = 'Announcer';\t----- bird -----\tcodebase_community",
    "606": "SELECT b.Name FROM badges b WHERE b.Date = '2010-07-19 19:39:08';\t----- bird -----\tcodebase_community",
    "607": "SELECT COUNT(*) FROM comments WHERE Score > 60;\t----- bird -----\tcodebase_community",
    "608": "SELECT Text FROM comments WHERE CreationDate = '2010-07-19 19:25:47.0';\t----- bird -----\tcodebase_community",
    "609": "SELECT COUNT(*) FROM posts WHERE Score = 10;\t----- bird -----\tcodebase_community",
    "610": "SELECT b.Name FROM badges b JOIN users u ON b.UserId = u.Id WHERE u.Reputation = (SELECT MAX(Reputation) FROM users);\t----- bird -----\tcodebase_community",
    "611": "SELECT u.Reputation FROM users u JOIN badges b ON u.Id = b.UserId WHERE b.Date = '2010-07-19 19:39:08.0';\t----- bird -----\tcodebase_community",
    "612": "SELECT b.Name FROM badges b JOIN users u ON b.UserId = u.Id WHERE u.DisplayName = \"Pierre\";\t----- bird -----\tcodebase_community",
    "613": "SELECT b.Date FROM badges b JOIN users u ON b.UserId = u.Id WHERE u.Location = 'Rochester, NY';\t----- bird -----\tcodebase_community",
    "614": "SELECT (CAST(COUNT(DISTINCT UserId) AS FLOAT) / (SELECT COUNT(Id) FROM users)) * 100 FROM badges WHERE Name = 'Teacher';\t----- bird -----\tcodebase_community",
    "615": "SELECT (CAST(COUNT(CASE WHEN Age BETWEEN 13 AND 18 THEN UserId END) AS FLOAT) / COUNT(UserId)) * 100 FROM badges JOIN users ON badges.UserId = users.Id WHERE badges.Name = 'Organizer';\t----- bird -----\tcodebase_community",
    "616": "SELECT SUM(Score) AS RatingScore FROM comments WHERE PostId = (SELECT Id FROM posts WHERE CreationDate = '2010-07-19 19:19:56.0')\t----- bird -----\tcodebase_community",
    "617": "SELECT c.Text FROM comments c JOIN posts p ON c.PostId = p.Id WHERE p.CreaionDate = '2010-07-19 19:37:33.0'\t----- bird -----\tcodebase_community",
    "618": "SELECT Age FROM users WHERE Location = 'Vienna, Austria'\t----- bird -----\tcodebase_community",
    "619": "SELECT COUNT(DISTINCT u.Id) AS Num_Adults_Supporter FROM users u JOIN badges b ON u.Id = b.UserId WHERE b.Name = 'Supporter' AND u.Age BETWEEN 19 AND 65;\t----- bird -----\tcodebase_community",
    "620": "SELECT SUM(ViewCount) as NumberOfViews FROM posts WHERE OwnerUserId IN ( SELECT UserId FROM badges WHERE Date = '2010-07-19 19:39:08.0' )\t----- bird -----\tcodebase_community",
    "621": "SELECT b.Name FROM badges b JOIN users u ON b.UserId = u.Id WHERE u.Reputation = (SELECT MIN(Reputation) FROM users);\t----- bird -----\tcodebase_community",
    "622": "SELECT b.Name FROM badges b JOIN users u ON b.UserId = u.Id WHERE u.DisplayName = \"Sharpie\";\t----- bird -----\tcodebase_community",
    "623": "SELECT COUNT(badges.Id) AS ElderSupporters FROM badges JOIN users ON badges.UserId = users.Id WHERE users.Age > 65 AND badges.Name = \"Supporter\";\t----- bird -----\tcodebase_community",
    "624": "SELECT DisplayName FROM users WHERE Id = 30;\t----- bird -----\tcodebase_community",
    "625": "SELECT COUNT(*) FROM users WHERE Location = 'New York';\t----- bird -----\tcodebase_community",
    "626": "SELECT COUNT(*) FROM votes WHERE YEAR(CreationDate) = 2010;\t----- bird -----\tcodebase_community",
    "627": "SELECT COUNT(*) FROM users WHERE Age BETWEEN 19 AND 65;\t----- bird -----\tcodebase_community",
    "628": "SELECT DisplayName FROM users WHERE Views = (SELECT MAX(Views) FROM users);\t----- bird -----\tcodebase_community",
    "629": "SELECT COUNT(Id) AS TotalVotes, SUM(CASE WHEN strftime('%Y', CreationDate) = '2010' THEN 1 ELSE 0 END) AS Votes2010, SUM(CASE WHEN strftime('%Y', CreationDate) = '2011' THEN 1 ELSE 0 END) AS Votes2011, CAST(SUM(CASE WHEN strftime('%Y', CreationDate) = '2010' THEN 1 ELSE 0 END) AS REAL) / CAST(SUM(CASE WHEN strftime('%Y', CreationDate) = '2011' THEN 1 ELSE 0 END) AS REAL) AS VoteRatio FROM votes;\t----- bird -----\tcodebase_community",
    "630": "SELECT TagName FROM tags WHERE Id IN ( SELECT ExcerptPostId FROM posts WHERE OwnerUserId = ( SELECT Id FROM users WHERE DisplayName = 'John Stauffer' ) );\t----- bird -----\tcodebase_community",
    "631": "SELECT COUNT(*) FROM posts JOIN users ON posts.OwnerUserId = users.Id WHERE users.DisplayName = 'Daniel Vassallo';\t----- bird -----\tcodebase_community",
    "632": "SELECT COUNT(*) FROM votes JOIN users ON votes.UserId = users.Id WHERE users.DisplayName = 'Harlan';\t----- bird -----\tcodebase_community",
    "633": "SELECT p.Id FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE u.DisplayName = 'slashnick' ORDER BY p.AnswerCount DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "634": "SELECT MAX(SUM(ViewCount)) AS HighestPopularity FROM posts JOIN users ON posts.OwnerUserId = users.Id WHERE users.DisplayName = 'Harvey Motulsky' OR users.DisplayName = 'Noah Snyder';\t----- bird -----\tcodebase_community",
    "635": "SELECT COUNT(*) FROM posts WHERE OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'Matt Parker') AND Id IN (SELECT PostId FROM votes WHERE VoteTypeId > 4)\t----- bird -----\tcodebase_community",
    "636": "SELECT COUNT(*) FROM comments WHERE UserId = (SELECT Id FROM users WHERE DisplayName = 'Neil McGuigan') AND Score < 60;\t----- bird -----\tcodebase_community",
    "637": "SELECT tags.TagName FROM posts JOIN users ON posts.OwnerUserId = users.Id JOIN tags ON posts.Tags LIKE '%' || tags.TagName || '%' LEFT JOIN comments ON posts.Id = comments.PostId WHERE users.DisplayName = 'Mark Meckes' AND comments.Id IS NULL;\t----- bird -----\tcodebase_community",
    "638": "SELECT u.DisplayName FROM users u JOIN badges b ON u.Id = b.UserId WHERE b.Name = 'Organizer';\t----- bird -----\tcodebase_community",
    "639": "SELECT (COUNT(posts.Id) WHERE tags.TagName = 'r') / (COUNT(posts.Id) WHERE posts.OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'Community')) * 100 as percentage FROM posts JOIN tags ON posts.Id = tags.ExcerptPostId JOIN users ON posts.OwnerUserId = users.Id WHERE users.DisplayName = 'Community';\t----- bird -----\tcodebase_community",
    "640": "SELECT SUM(CASE WHEN u.DisplayName = 'Mornington' THEN p.ViewCount ELSE 0 END) - SUM(CASE WHEN u.DisplayName = 'Amos' THEN p.ViewCount ELSE 0 END) AS ViewCountDifference FROM posts p JOIN users u ON p.OwnerUserId = u.Id;\t----- bird -----\tcodebase_community",
    "641": "SELECT COUNT(DISTINCT UserId) FROM badges WHERE Name = 'commentator' AND strftime('%Y', Date) = '2014';\t----- bird -----\tcodebase_community",
    "642": "SELECT COUNT(*) FROM posts WHERE CreationDate BETWEEN '2010-07-21 00:00:00' AND '2010-07-21 23:59:59';\t----- bird -----\tcodebase_community",
    "643": "SELECT DisplayName, Age FROM users WHERE Views = (SELECT MAX(Views) FROM users)\t----- bird -----\tcodebase_community",
    "644": "SELECT p.LastEditDate, p.LastEditorUserId FROM posts p WHERE p.Title = 'Detecting a given face in a database of facial images';\t----- bird -----\tcodebase_community",
    "645": "SELECT COUNT(*) FROM comments WHERE UserId = 13 AND Score < 60;\t----- bird -----\tcodebase_community",
    "646": "SELECT posts.Title, comments.UserDisplayName FROM posts JOIN comments ON posts.Id = comments.PostId WHERE comments.Score > 60;\t----- bird -----\tcodebase_community",
    "647": "SELECT b.Name FROM badges b JOIN users u ON b.UserId = u.Id WHERE u.Location = 'North Pole' AND strftime('%Y', b.Date) = '2011';\t----- bird -----\tcodebase_community",
    "648": "SELECT u.DisplayName, u.WebsiteUrl FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE p.FavoriteCount > 150;\t----- bird -----\tcodebase_community",
    "649": "SELECT COUNT(*) AS PostHistoryCounts, MAX(ph.CreationDate) AS LastEditDate FROM posts p JOIN postHistory ph ON p.Id = ph.PostId WHERE p.Title = \"What is the best introductory Bayesian statistics textbook?\";\t----- bird -----\tcodebase_community",
    "650": "SELECT LastAccessDate, Location FROM users WHERE Id IN (SELECT UserId FROM badges WHERE Name = 'Outliers');\t----- bird -----\tcodebase_community",
    "651": "SELECT posts.Title FROM posts JOIN postLinks ON posts.Id = postLinks.RelatedPostId WHERE postLinks.PostId = (SELECT Id FROM posts WHERE Title = \"How to tell if something happened in a data set which monitors a value over time\");\t----- bird -----\tcodebase_community",
    "652": "SELECT p.Id, b.Name FROM posts p JOIN users u ON p.OwnerUserId = u.Id JOIN badges b ON u.Id = b.UserId WHERE u.DisplayName = 'Samuel' AND YEAR(p.CreationDate) = 2013 AND YEAR(b.Date) = 2013;\t----- bird -----\tcodebase_community",
    "653": "SELECT OwnerDisplayName FROM posts WHERE ViewCount = (SELECT MAX(ViewCount) FROM posts)\t----- bird -----\tcodebase_community",
    "654": "SELECT u.DisplayName, u.Location FROM posts p JOIN tags t ON p.Id = t.ExcerptPostId JOIN users u ON p.OwnerUserId = u.Id WHERE t.TagName = 'hypothesis-testing';\t----- bird -----\tcodebase_community",
    "655": "SELECT posts.Title, postLinks.LinkTypeId FROM posts JOIN postLinks ON posts.Id = postLinks.RelatedPostId WHERE posts.Title = 'What are principal component scores?';\t----- bird -----\tcodebase_community",
    "656": "SELECT The display name of the parent ID for the child post with the highest score can be obtained by first finding the child post with the highest score using the following query: ```sql SELECT p.OwnerDisplayName FROM posts p WHERE p.ParentId IS NOT NULL AND p.Score = (SELECT MAX(Score) FROM posts WHERE ParentId = p.ParentId); ``` This query will return the display name of the owner of the parent post for the child post with the highest score.\t----- bird -----\tcodebase_community",
    "657": "SELECT u.DisplayName, u.WebsiteUrl FROM votes v JOIN users u ON v.UserId = u.Id WHERE v.VoteTypeId = 8 AND v.BountyAmount = (SELECT MAX(BountyAmount) FROM votes WHERE VoteTypeId = 8)\t----- bird -----\tcodebase_community",
    "658": "SELECT Title FROM posts ORDER BY ViewCount DESC LIMIT 5;\t----- bird -----\tcodebase_community",
    "659": "SELECT COUNT(*) FROM tags WHERE Count BETWEEN 5000 AND 7000;\t----- bird -----\tcodebase_community",
    "660": "SELECT OwnerUserId FROM posts WHERE FavoriteCount = (SELECT MAX(FavoriteCount) FROM posts);\t----- bird -----\tcodebase_community",
    "661": "SELECT MAX(Age) FROM users WHERE Reputation = (SELECT MAX(Reputation) FROM users)\t----- bird -----\tcodebase_community",
    "662": "SELECT COUNT(*) FROM posts JOIN votes ON posts.Id = votes.PostId WHERE YEAR(posts.CreaionDate) = 2011 AND votes.BountyAmount = 50;\t----- bird -----\tcodebase_community",
    "663": "SELECT MIN(Id) FROM users WHERE Age = (SELECT MIN(Age) FROM users);\t----- bird -----\tcodebase_community",
    "664": "SELECT p.Id, p.Score FROM posts p JOIN postTags pt ON p.Id = pt.PostId JOIN tags t ON pt.TagId = t.Id WHERE t.Count = (SELECT MAX(Count) FROM tags)\t----- bird -----\tcodebase_community",
    "665": "SELECT COUNT(Id) / 12 FROM postLinks WHERE YEAR(CreationDate) = 2010 AND PostId IN (SELECT Id FROM posts WHERE AnswerCount <= 2)\t----- bird -----\tcodebase_community",
    "666": "SELECT MAX(FavoriteCount) AS MostValuablePostId FROM posts WHERE Id IN (SELECT PostId FROM votes WHERE UserId = 1465)\t----- bird -----\tcodebase_community",
    "667": "SELECT p.Title FROM posts p JOIN postLinks pl ON p.Id = pl.PostId WHERE pl.CreationDate = (SELECT MIN(pl.CreationDate) FROM postLinks pl)\t----- bird -----\tcodebase_community",
    "668": "SELECT u.DisplayName FROM users u JOIN badges b ON u.Id = b.UserId GROUP BY u.Id ORDER BY COUNT(b.Name) DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "669": "SELECT MIN(v.CreationDate) FROM votes v JOIN users u ON v.UserId = u.Id WHERE u.DisplayName = 'chl';\t----- bird -----\tcodebase_community",
    "670": "SELECT MIN(posts.CreaionDate) AS FirstPostDate FROM posts JOIN users ON posts.OwnerUserId = users.Id WHERE users.Age = (SELECT MIN(Age) FROM users);\t----- bird -----\tcodebase_community",
    "671": "SELECT u.DisplayName FROM badges b JOIN users u ON b.UserId = u.Id WHERE b.Name = 'Autobiographer' ORDER BY b.Date LIMIT 1;\t----- bird -----\tcodebase_community",
    "672": "SELECT COUNT(DISTINCT u.Id) FROM users u JOIN posts p ON u.Id = p.OwnerUserId WHERE u.Location = 'United Kingdom' AND p.FavoriteCount >= 4;\t----- bird -----\tcodebase_community",
    "673": "SELECT AVG(PostId) FROM votes WHERE UserId IN (SELECT Id FROM users WHERE Age = (SELECT MAX(Age) FROM users));\t----- bird -----\tcodebase_community",
    "674": "SELECT DisplayName FROM users WHERE Reputation = (SELECT MAX(Reputation) FROM users);\t----- bird -----\tcodebase_community",
    "675": "SELECT COUNT(*) FROM users WHERE Reputation > 2000 AND Views > 1000;\t----- bird -----\tcodebase_community",
    "676": "SELECT DisplayName FROM users WHERE Age BETWEEN 19 AND 65;\t----- bird -----\tcodebase_community",
    "677": "SELECT COUNT(*) FROM posts JOIN users ON posts.OwnerUserId = users.Id WHERE users.DisplayName = 'Jay Stevens' AND YEAR(posts.CreaionDate) = 2010;\t----- bird -----\tcodebase_community",
    "678": "SELECT p.Id, p.Title FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE u.DisplayName = 'Harvey Motulsky' ORDER BY p.ViewCount DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "679": "SELECT Id, Title FROM posts WHERE Score = (SELECT MAX(Score) FROM posts);\t----- bird -----\tcodebase_community",
    "680": "SELECT AVG(Score) AS AverageScore FROM posts WHERE OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'Stephen Turner');\t----- bird -----\tcodebase_community",
    "681": "SELECT u.DisplayName FROM users u JOIN posts p ON u.Id = p.OwnerUserId WHERE p.ViewCount > 20000 AND strftime('%Y', p.CreaionDate) = '2011';\t----- bird -----\tcodebase_community",
    "682": "SELECT p.Id AS PostId, u.DisplayName AS OwnerDisplayName FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE p.FavoriteCount = (SELECT MAX(FavoriteCount) FROM posts WHERE strftime('%Y', CreationDate) = '2010') AND strftime('%Y', p.CreaionDate) = '2010';\t----- bird -----\tcodebase_community",
    "683": "SELECT (CAST(COUNT(p.Id) AS FLOAT) / (SELECT COUNT(Id) FROM posts WHERE strftime('%Y', CreationDate) = '2011')) * 100 as percentage FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE strftime('%Y', p.CreationDate) = '2011' AND u.Reputation > 1000;\t----- bird -----\tcodebase_community",
    "684": "SELECT COUNT(Id) as total_users, COUNT(Id) FILTER (WHERE Age BETWEEN 13 AND 18) as teenage_users, ROUND(COUNT(Id) FILTER (WHERE Age BETWEEN 13 AND 18) * 100.0 / COUNT(Id), 2) as percentage_of_teenage_users FROM users;\t----- bird -----\tcodebase_community",
    "685": "SELECT p.ViewCount AS TotalViews, u.DisplayName AS LastPoster FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE p.Title = 'Computer Game Datasets' AND p.Body = 'Computer Game Datasets';\t----- bird -----\tcodebase_community",
    "686": "SELECT COUNT(*) FROM posts WHERE ViewCount > (SELECT AVG(ViewCount) FROM posts);\t----- bird -----\tcodebase_community",
    "687": "SELECT COUNT(*) FROM comments WHERE PostId = (SELECT Id FROM posts WHERE Score = (SELECT MAX(Score) FROM posts));\t----- bird -----\tcodebase_community",
    "688": "SELECT COUNT(*) FROM posts WHERE ViewCount > 35000 AND CommentCount = 0;\t----- bird -----\tcodebase_community",
    "689": "SELECT u.DisplayName, u.Location FROM posts p JOIN users u ON p.LastEditorUserId = u.Id WHERE p.Id = 183;\t----- bird -----\tcodebase_community",
    "690": "SELECT b.Name FROM badges b JOIN users u ON b.UserId = u.Id WHERE u.DisplayName = 'Emmett' ORDER BY b.Date DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "691": "SELECT COUNT(*) FROM users WHERE Age BETWEEN 19 AND 65 AND UpVotes > 5000;\t----- bird -----\tcodebase_community",
    "692": "SELECT (CreationDate - (SELECT CreationDate FROM users WHERE DisplayName = 'Zolomon')) AS TimeToGetBadge FROM badges WHERE UserId = (SELECT Id FROM users WHERE DisplayName = 'Zolomon');\t----- bird -----\tcodebase_community",
    "693": "SELECT COUNT(posts.Id) AS NumberOfPosts, COUNT(comments.Id) AS NumberOfComments FROM posts JOIN users ON posts.OwnerUserId = users.Id JOIN comments ON comments.UserId = users.Id WHERE users.CreationDate = (SELECT MAX(CreationDate) FROM users)\t----- bird -----\tcodebase_community",
    "694": "SELECT c.Text, u.DisplayName FROM comments c JOIN posts p ON c.PostId = p.Id JOIN users u ON c.UserId = u.Id WHERE p.Title = 'Analysing wind data with R' AND c.CreationDate = (SELECT MAX(CreationDate) FROM comments WHERE PostId = p.Id);\t----- bird -----\tcodebase_community",
    "695": "SELECT COUNT(*) FROM badges WHERE Name = 'Citizen Patrol';\t----- bird -----\tcodebase_community",
    "696": "SELECT COUNT(*) FROM posts JOIN tags ON posts.Id = tags.ExcerptPostId WHERE tags.TagName = 'careers';\t----- bird -----\tcodebase_community",
    "697": "SELECT Reputation, Views FROM users WHERE DisplayName = 'Jarrod Dixon';\t----- bird -----\tcodebase_community",
    "698": "SELECT COUNT(comments.Id) AS NumberOfComments, COUNT(posts.Id) AS NumberOfAnswers FROM comments JOIN posts ON comments.PostId = posts.Id WHERE posts.Title = 'Clustering 1D data';\t----- bird -----\tcodebase_community",
    "699": "SELECT CreationDate FROM users WHERE DisplayName = 'IrishStat';\t----- bird -----\tcodebase_community",
    "700": "SELECT COUNT(*) FROM votes WHERE BountyAmount >= 30;\t----- bird -----\tcodebase_community",
    "701": "SELECT DIVIDE(COUNT(stats_posts.Id where Score >= 50), COUNT(stats_posts.Id)) as percentage FROM ( SELECT p.Id FROM posts p JOIN users u ON p.OwnerUserId = u.Id GROUP BY u.Id ORDER BY MAX(u.Reputation) DESC LIMIT 1 ) AS most_influential_user_posts JOIN posts stats_posts ON most_influential_user_posts.Id = stats_posts.Id;\t----- bird -----\tcodebase_community",
    "702": "SELECT COUNT(*) FROM posts WHERE Score < 20;\t----- bird -----\tcodebase_community",
    "703": "SELECT COUNT(*) FROM tags WHERE Id < 15 AND Count <= 20;\t----- bird -----\tcodebase_community",
    "704": "SELECT ExcerptPostId and WikiPostId of the tag named 'sample' can be found in the tags table. To retrieve this information, you can use the following SQL query: ```sql SELECT ExcerptPostId, WikiPostId FROM tags WHERE TagName = 'sample'; ``` This query will return the ExcerptPostId and WikiPostId associated with the tag named 'sample'.\t----- bird -----\tcodebase_community",
    "705": "SELECT u.Reputation, u.UpVotes FROM users u JOIN comments c ON u.Id = c.UserId WHERE c.Text = 'fine, you win :)';\t----- bird -----\tcodebase_community",
    "706": "SELECT comments.Text FROM comments JOIN posts ON comments.PostId = posts.Id WHERE posts.Title = 'How can I adapt ANOVA for binary data?';\t----- bird -----\tcodebase_community",
    "707": "SELECT comments.Text FROM comments JOIN posts ON comments.PostId = posts.Id WHERE posts.ViewCount BETWEEN 100 AND 150 ORDER BY comments.Score DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "708": "SELECT users.CreationDate, users.Age FROM users JOIN comments ON users.Id = comments.UserId WHERE comments.Text LIKE '%http://%'\t----- bird -----\tcodebase_community",
    "709": "SELECT COUNT(DISTINCT c.PostId) FROM comments c JOIN posts p ON c.PostId = p.Id WHERE c.Score = 0 AND p.ViewCount < 5;\t----- bird -----\tcodebase_community",
    "710": "SELECT COUNT(*) FROM comments WHERE Score = 0 AND PostId IN (SELECT Id FROM posts WHERE CommentCount = 1)\t----- bird -----\tcodebase_community",
    "711": "SELECT COUNT(DISTINCT u.Id) AS TotalUsersAges40 FROM comments c JOIN users u ON c.UserId = u.Id WHERE c.Score = 0 AND u.Age = 40;\t----- bird -----\tcodebase_community",
    "712": "SELECT posts.Id, comments.Text FROM posts JOIN comments ON posts.Id = comments.PostId WHERE posts.Title = 'Group differences on a five point Likert item';\t----- bird -----\tcodebase_community",
    "713": "SELECT u.UpVotes FROM users u JOIN comments c ON u.Id = c.UserId WHERE c.Text = 'R is also lazy evaluated.';\t----- bird -----\tcodebase_community",
    "714": "SELECT c.Text FROM comments c JOIN users u ON c.UserId = u.Id WHERE u.DisplayName = 'Harvey Motulsky';\t----- bird -----\tcodebase_community",
    "715": "SELECT c.UserDisplayName FROM comments c JOIN users u ON c.UserId = u.Id WHERE c.Score BETWEEN 1 AND 5 AND u.DownVotes = 0;\t----- bird -----\tcodebase_community",
    "716": "SELECT (COUNT(CASE WHEN c.Score BETWEEN 5 AND 10 AND u.UpVotes = 0 THEN c.UserId END) * 100.0 / COUNT(CASE WHEN c.Score BETWEEN 5 AND 10 THEN c.UserId END)) as percentage FROM comments c JOIN users u ON c.UserId = u.Id;\t----- bird -----\tcodebase_community",
    "717": "SELECT superpower.power_name FROM superhero JOIN hero_power ON superhero.id = hero_power.hero_id JOIN superpower ON hero_power.power_id = superpower.id WHERE superhero.superhero_name = '3-D Man';\t----- bird -----\tsuperhero",
    "718": "SELECT COUNT(*) FROM superhero JOIN hero_power ON superhero.id = hero_power.hero_id JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'Super Strength';\t----- bird -----\tsuperhero",
    "719": "SELECT COUNT(*) FROM superhero JOIN hero_power ON superhero.id = hero_power.hero_id JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'Super Strength' AND superhero.height_cm > 200;\t----- bird -----\tsuperhero",
    "720": "SELECT s.full_name FROM superhero s JOIN hero_power hp ON s.id = hp.hero_id GROUP BY s.id HAVING COUNT(hp.power_id) > 15;\t----- bird -----\tsuperhero",
    "721": "SELECT COUNT(*) FROM superhero JOIN colour ON superhero.eye_colour_id = colour.id WHERE colour.colour = 'Blue';\t----- bird -----\tsuperhero",
    "722": "SELECT c.colour FROM superhero s JOIN colour c ON s.skin_colour_id = c.id WHERE s.superhero_name = 'Apocalypse';\t----- bird -----\tsuperhero",
    "723": "SELECT COUNT(DISTINCT superhero.id) FROM superhero JOIN colour ON superhero.eye_colour_id = colour.id JOIN hero_power ON superhero.id = hero_power.hero_id JOIN superpower ON hero_power.power_id = superpower.id WHERE colour.colour = 'Blue' AND superpower.power_name = 'Agility';\t----- bird -----\tsuperhero",
    "724": "SELECT s.superhero_name FROM superhero s JOIN colour c1 ON s.eye_colour_id = c1.id JOIN colour c2 ON s.hair_colour_id = c2.id JOIN hero_power hp ON s.id = hp.hero_id JOIN superpower sp ON hp.power_id = sp.id WHERE c1.colour = 'Blue' AND c2.colour = 'Blond' AND sp.power_name = 'Agility';\t----- bird -----\tsuperhero",
    "725": "SELECT COUNT(*) FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher.publisher_name = 'Marvel Comics';\t----- bird -----\tsuperhero",
    "726": "SELECT superhero.full_name FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id WHERE superhero.height_cm = (SELECT MAX(height_cm) FROM superhero) AND publisher.publisher_name = 'Marvel Comics';\t----- bird -----\tsuperhero",
    "727": "SELECT publisher.publisher_name FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id WHERE superhero.superhero_name = 'Sauron';\t----- bird -----\tsuperhero",
    "728": "SELECT COUNT(superhero.id) FROM superhero JOIN colour ON superhero.eye_colour_id = colour.id JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher.publisher_name = 'Marvel Comics' AND colour.colour = 'Blue';\t----- bird -----\tsuperhero",
    "729": "SELECT AVG(height_cm) FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher.publisher_name = 'Marvel Comics';\t----- bird -----\tsuperhero",
    "730": "SELECT ROUND((COUNT(DISTINCT superhero.id) * 100.0) / (SELECT COUNT(DISTINCT superhero.id) FROM superhero INNER JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher.publisher_name = 'Marvel Comics' AND superhero.id IN (SELECT hero_id FROM hero_power INNER JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'Super Strength')), 2) AS percentage_of_superheroes_with_super_strength FROM superhero INNER JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher.publisher_name = 'Marvel Comics' AND superhero.id IN (SELECT hero_id FROM hero_power INNER JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'Super Strength');\t----- bird -----\tsuperhero",
    "731": "SELECT COUNT(*) FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher.publisher_name = 'DC Comics';\t----- bird -----\tsuperhero",
    "732": "SELECT publisher.publisher_name FROM superhero JOIN hero_attribute ON superhero.id = hero_attribute.hero_id JOIN attribute ON hero_attribute.attribute_id = attribute.id JOIN publisher ON superhero.publisher_id = publisher.id WHERE attribute.attribute_name = 'Speed' ORDER BY hero_attribute.attribute_value LIMIT 1;\t----- bird -----\tsuperhero",
    "733": "SELECT COUNT(superhero.id) FROM superhero JOIN colour ON superhero.eye_colour_id = colour.id JOIN publisher ON superhero.publisher_id = publisher.id WHERE colour.colour = 'Gold' AND publisher.publisher_name = 'Marvel Comics';\t----- bird -----\tsuperhero",
    "734": "SELECT publisher.publisher_name FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id WHERE superhero.superhero_name = 'Blue Beetle II';\t----- bird -----\tsuperhero",
    "735": "SELECT COUNT(*) FROM superhero JOIN colour ON superhero.hair_colour_id = colour.id WHERE colour.colour = 'Blond';\t----- bird -----\tsuperhero",
    "736": "SELECT s.superhero_name FROM superhero s JOIN hero_attribute ha ON s.id = ha.hero_id JOIN attribute a ON ha.attribute_id = a.id WHERE a.attribute_name = 'Intelligence' ORDER BY ha.attribute_value LIMIT 1;\t----- bird -----\tsuperhero",
    "737": "SELECT race.race FROM superhero JOIN race ON superhero.race_id = race.id WHERE superhero.superhero_name = 'Copycat';\t----- bird -----\tsuperhero",
    "738": "SELECT COUNT(DISTINCT hero_id) FROM hero_attribute WHERE attribute_id = (SELECT id FROM attribute WHERE attribute_name = 'Durability') AND attribute_value < 50;\t----- bird -----\tsuperhero",
    "739": "SELECT superhero.superhero_name FROM superhero JOIN hero_power ON superhero.id = hero_power.hero_id JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'Death Touch';\t----- bird -----\tsuperhero",
    "740": "SELECT COUNT(superhero.id) FROM superhero JOIN gender ON superhero.gender_id = gender.id JOIN hero_attribute ON superhero.id = hero_attribute.hero_id JOIN attribute ON hero_attribute.attribute_id = attribute.id WHERE gender.gender = 'Female' AND attribute.attribute_name = 'Strength' AND hero_attribute.attribute_value = 100;\t----- bird -----\tsuperhero",
    "741": "SELECT superhero.superhero_name FROM superhero JOIN hero_power ON superhero.id = hero_power.hero_id GROUP BY superhero.superhero_name ORDER BY COUNT(hero_power.power_id) DESC LIMIT 1;\t----- bird -----\tsuperhero",
    "742": "SELECT COUNT(*) FROM superhero WHERE race_id = (SELECT id FROM race WHERE race = 'Vampire');\t----- bird -----\tsuperhero",
    "743": "SELECT (MULTIPLY(DIVIDE(SUM(alignment = 'Bad'), count(id)), 100) AS percentage_of_superheroes FROM superhero WHERE alignment_id = (SELECT id FROM alignment WHERE alignment = 'Bad') AND publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics');\t----- bird -----\tsuperhero",
    "744": "SELECT ABS(SUM(CASE WHEN publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) - SUM(CASE WHEN publisher_name = 'DC Comics' THEN 1 ELSE 0 END)) AS difference FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id;\t----- bird -----\tsuperhero",
    "745": "SELECT id FROM publisher WHERE publisher_name = 'Star Trek';\t----- bird -----\tsuperhero",
    "746": "SELECT AVG(attribute_value) FROM hero_attribute;\t----- bird -----\tsuperhero",
    "747": "SELECT COUNT(*) FROM superhero WHERE full_name IS NULL;\t----- bird -----\tsuperhero",
    "748": "SELECT colour.colour FROM superhero JOIN colour ON superhero.eye_colour_id = colour.id WHERE superhero.id = 75;\t----- bird -----\tsuperhero",
    "749": "SELECT superpower.power_name FROM superhero JOIN hero_power ON superhero.id = hero_power.hero_id JOIN superpower ON hero_power.power_id = superpower.id WHERE superhero.superhero_name = 'Deathlok';\t----- bird -----\tsuperhero",
    "750": "SELECT AVG(weight_kg) FROM superhero WHERE gender_id = 2;\t----- bird -----\tsuperhero",
    "751": "SELECT superpower.power_name FROM superhero JOIN hero_power ON superhero.id = hero_power.hero_id JOIN superpower ON hero_power.power_id = superpower.id JOIN gender ON superhero.gender_id = gender.id WHERE gender.gender = 'Male' LIMIT 5;\t----- bird -----\tsuperhero",
    "752": "SELECT superhero.superhero_name FROM superhero JOIN race ON superhero.race_id = race.id WHERE race.race = 'Alien';\t----- bird -----\tsuperhero",
    "753": "SELECT superhero.superhero_name FROM superhero WHERE superhero.height_cm BETWEEN 170 AND 190 AND superhero.eye_colour_id IS NULL;\t----- bird -----\tsuperhero",
    "754": "SELECT superpower.power_name FROM superhero JOIN hero_power ON superhero.id = hero_power.hero_id JOIN superpower ON hero_power.power_id = superpower.id WHERE superhero.id = 56;\t----- bird -----\tsuperhero",
    "755": "SELECT superhero.full_name FROM superhero JOIN race ON superhero.race_id = race.id WHERE race.race = 'Demi-God';\t----- bird -----\tsuperhero",
    "756": "SELECT COUNT(*) FROM superhero WHERE alignment_id = (SELECT id FROM alignment WHERE alignment = 'Bad');\t----- bird -----\tsuperhero",
    "757": "SELECT race.race FROM superhero JOIN race ON superhero.race_id = race.id WHERE superhero.weight_kg = 169;\t----- bird -----\tsuperhero",
    "758": "SELECT c.colour FROM superhero s JOIN colour c ON s.hair_colour_id = c.id JOIN race r ON s.race_id = r.id WHERE s.height_cm = 185 AND r.race = 'human';\t----- bird -----\tsuperhero",
    "759": "SELECT c.colour FROM superhero s JOIN colour c ON s.eye_colour_id = c.id WHERE s.weight_kg = (SELECT MAX(weight_kg) FROM superhero);\t----- bird -----\tsuperhero",
    "760": "SELECT (MarvelCount * 100.0) / TotalCount AS Percentage FROM ( SELECT COUNT(*) AS TotalCount, SUM(CASE WHEN publisher_id = 13 THEN 1 ELSE 0 END) AS MarvelCount FROM superhero WHERE height_cm BETWEEN 150 AND 180 ) AS Counts;\t----- bird -----\tsuperhero",
    "761": "SELECT s.full_name FROM superhero s JOIN gender g ON s.gender_id = g.id WHERE g.gender = 'male' AND s.weight_kg > (SELECT 0.79 * AVG(weight_kg) FROM superhero);\t----- bird -----\tsuperhero",
    "762": "SELECT power_name FROM superpower JOIN hero_power ON superpower.id = hero_power.power_id GROUP BY power_name ORDER BY COUNT(hero_power.hero_id) DESC LIMIT 1;\t----- bird -----\tsuperhero",
    "763": "SELECT attribute.attribute_name, hero_attribute.attribute_value FROM superhero JOIN hero_attribute ON superhero.id = hero_attribute.hero_id JOIN attribute ON hero_attribute.attribute_id = attribute.id WHERE superhero.superhero_name = 'Abomination';\t----- bird -----\tsuperhero",
    "764": "SELECT sp.power_name FROM superhero s JOIN hero_power hp ON s.id = hp.hero_id JOIN superpower sp ON hp.power_id = sp.id WHERE s.id = 1;\t----- bird -----\tsuperhero",
    "765": "SELECT COUNT(*) AS num_heroes_with_stealth_power FROM superhero JOIN hero_power ON superhero.id = hero_power.hero_id JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'stealth';\t----- bird -----\tsuperhero",
    "766": "SELECT s.superhero_name, s.full_name FROM superhero s JOIN hero_attribute ha ON s.id = ha.hero_id JOIN attribute a ON ha.attribute_id = a.id WHERE a.attribute_name = 'strength' ORDER BY ha.attribute_value DESC LIMIT 1;\t----- bird -----\tsuperhero",
    "767": "SELECT COUNT(superhero.id) / SUM(CASE WHEN skin_colour_id IS NULL THEN 1 ELSE 0 END) as average_no_skin_colour FROM superhero WHERE skin_colour_id IS NULL;\t----- bird -----\tsuperhero",
    "768": "SELECT COUNT(*) FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher.publisher_name = 'Dark Horse Comics';\t----- bird -----\tsuperhero",
    "769": "SELECT s.superhero_name FROM superhero s JOIN publisher p ON s.publisher_id = p.id JOIN hero_attribute ha ON s.id = ha.hero_id JOIN attribute a ON ha.attribute_id = a.id WHERE a.attribute_name = 'durability' AND p.publisher_name = 'Dark Horse Comics' AND ha.attribute_value = ( SELECT MAX(attribute_value) FROM hero_attribute WHERE attribute_id = ( SELECT id FROM attribute WHERE attribute_name = 'durability' ) ) LIMIT 1;\t----- bird -----\tsuperhero",
    "770": "SELECT colour.colour FROM superhero JOIN colour ON superhero.eye_colour_id = colour.id WHERE superhero.full_name = 'Abraham Sapien';\t----- bird -----\tsuperhero",
    "771": "SELECT superhero.superhero_name FROM superhero JOIN hero_power ON superhero.id = hero_power.hero_id JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'Flight';\t----- bird -----\tsuperhero",
    "772": "SELECT colour.colour AS eye_colour, colour_1.colour AS hair_colour, colour_2.colour AS skin_colour FROM superhero JOIN colour ON superhero.eye_colour_id = colour.id JOIN colour AS colour_1 ON superhero.hair_colour_id = colour_1.id JOIN colour AS colour_2 ON superhero.skin_colour_id = colour_2.id JOIN gender ON superhero.gender_id = gender.id JOIN publisher ON superhero.publisher_id = publisher.id WHERE gender.gender = 'Female' AND publisher.publisher_name = 'Dark Horse Comics';\t----- bird -----\tsuperhero",
    "773": "SELECT s.superhero_name, p.publisher_name FROM superhero s JOIN colour c1 ON s.hair_colour_id = c1.id JOIN colour c2 ON s.skin_colour_id = c2.id JOIN colour c3 ON s.eye_colour_id = c3.id JOIN publisher p ON s.publisher_id = p.id WHERE c1.colour = c2.colour AND c1.colour = c3.colour;\t----- bird -----\tsuperhero",
    "774": "SELECT race.race FROM superhero JOIN race ON superhero.race_id = race.id WHERE superhero.superhero_name = 'A-Bomb';\t----- bird -----\tsuperhero",
    "775": "SELECT (COUNT(*) * 100.0) / (SELECT COUNT(*) FROM superhero WHERE gender_id = (SELECT id FROM gender WHERE gender = 'Female')) FROM superhero WHERE gender_id = (SELECT id FROM gender WHERE gender = 'Female') AND eye_colour_id = (SELECT id FROM colour WHERE colour = 'Blue');\t----- bird -----\tsuperhero",
    "776": "SELECT superhero.superhero_name, race.race FROM superhero JOIN race ON superhero.race_id = race.id WHERE superhero.full_name = 'Charles Chandler';\t----- bird -----\tsuperhero",
    "777": "SELECT gender.gender FROM superhero JOIN gender ON superhero.gender_id = gender.id WHERE superhero.superhero_name = 'Agent 13';\t----- bird -----\tsuperhero",
    "778": "SELECT superhero.superhero_name FROM superhero JOIN hero_power ON superhero.id = hero_power.hero_id JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'Adaptation';\t----- bird -----\tsuperhero",
    "779": "SELECT COUNT(*) AS num_powers FROM superhero JOIN hero_power ON superhero.id = hero_power.hero_id JOIN superpower ON hero_power.power_id = superpower.id WHERE superhero.superhero_name = 'Amazo';\t----- bird -----\tsuperhero",
    "780": "SELECT superpower.power_name FROM superhero JOIN hero_power ON superhero.id = hero_power.hero_id JOIN superpower ON hero_power.power_id = superpower.id WHERE superhero.full_name = 'Hunter Zolomon';\t----- bird -----\tsuperhero",
    "781": "SELECT superhero.height_cm FROM superhero JOIN colour ON superhero.eye_colour_id = colour.id WHERE colour.colour = 'Amber';\t----- bird -----\tsuperhero",
    "782": "SELECT superhero.superhero_name FROM superhero JOIN colour AS eye_colour ON superhero.eye_colour_id = eye_colour.id JOIN colour AS hair_colour ON superhero.hair_colour_id = hair_colour.id WHERE eye_colour.colour = 'Black' AND hair_colour.colour = 'Black';\t----- bird -----\tsuperhero",
    "783": "SELECT colour.colour AS eye_colour FROM superhero JOIN colour ON superhero.eye_colour_id = colour.id WHERE superhero.skin_colour_id = (SELECT id FROM colour WHERE colour = 'Gold');\t----- bird -----\tsuperhero",
    "784": "SELECT superhero.full_name FROM superhero JOIN race ON superhero.race_id = race.id WHERE race.race = 'Vampire';\t----- bird -----\tsuperhero",
    "785": "SELECT superhero.superhero_name FROM superhero JOIN alignment ON superhero.alignment_id = alignment.id WHERE alignment.alignment = 'Neutral';\t----- bird -----\tsuperhero",
    "786": "SELECT COUNT(hero_id) FROM hero_attribute JOIN attribute ON hero_attribute.attribute_id = attribute.id WHERE attribute_name = 'Strength' AND attribute_value = (SELECT MAX(attribute_value) FROM hero_attribute WHERE attribute_id = (SELECT id FROM attribute WHERE attribute_name = 'Strength'));\t----- bird -----\tsuperhero",
    "787": "SELECT race.race, alignment.alignment FROM superhero JOIN race ON superhero.race_id = race.id JOIN alignment ON superhero.alignment_id = alignment.id WHERE superhero.superhero_name = 'Cameron Hicks';\t----- bird -----\tsuperhero",
    "788": "SELECT ROUND((COUNT(*) * 100.0) / (SELECT COUNT(*) FROM superhero WHERE gender_id = (SELECT id FROM gender WHERE gender = 'Female') AND publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')), 2) AS percentage_female_heroes_published_by_marvel FROM superhero WHERE gender_id = (SELECT id FROM gender WHERE gender = 'Female') AND publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics');\t----- bird -----\tsuperhero",
    "789": "SELECT AVG(weight_kg) AS average_weight FROM superhero JOIN race ON superhero.race_id = race.id WHERE race.race = 'Alien';\t----- bird -----\tsuperhero",
    "790": "SELECT SUM(s1.weight_kg) - SUM(s2.weight_kg) AS weight_difference FROM superhero s1 JOIN superhero s2 ON s1.full_name = 'Emil Blonsky' AND s2.full_name = 'Charles Chandler';\t----- bird -----\tsuperhero",
    "791": "SELECT superhero.superhero_name, AVG(superhero.height_cm) AS average_height FROM superhero GROUP BY superhero.superhero_name;\t----- bird -----\tsuperhero",
    "792": "SELECT superpower.power_name FROM superhero JOIN hero_power ON superhero.id = hero_power.hero_id JOIN superpower ON hero_power.power_id = superpower.id WHERE superhero.superhero_name = 'Abomination';\t----- bird -----\tsuperhero",
    "793": "SELECT COUNT(superhero.id) FROM superhero WHERE superhero.race_id = 21 AND superhero.gender_id = 1;\t----- bird -----\tsuperhero",
    "794": "SELECT s.superhero_name FROM superhero s JOIN hero_attribute ha ON s.id = ha.hero_id JOIN attribute a ON ha.attribute_id = a.id WHERE a.attribute_name = 'Speed' ORDER BY ha.attribute_value DESC LIMIT 1;\t----- bird -----\tsuperhero",
    "795": "SELECT COUNT(*) FROM superhero WHERE alignment_id = 3;\t----- bird -----\tsuperhero",
    "796": "SELECT attribute.attribute_name, hero_attribute.attribute_value FROM superhero JOIN hero_attribute ON superhero.id = hero_attribute.hero_id JOIN attribute ON hero_attribute.attribute_id = attribute.id WHERE superhero.superhero_name = '3-D Man';\t----- bird -----\tsuperhero",
    "797": "SELECT superhero.superhero_name FROM superhero JOIN colour AS eye_colour ON superhero.eye_colour_id = eye_colour.id JOIN colour AS hair_colour ON superhero.hair_colour_id = hair_colour.id WHERE eye_colour.colour = 'blue' AND hair_colour.colour = 'brown';\t----- bird -----\tsuperhero",
    "798": "SELECT publisher.publisher_name FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id WHERE superhero.superhero_name = 'Hawkman' OR superhero.superhero_name = 'Karate Kid' OR superhero.superhero_name = 'Speedy';\t----- bird -----\tsuperhero",
    "799": "SELECT COUNT(*) FROM superhero WHERE publisher_id IS NULL;\t----- bird -----\tsuperhero",
    "800": "SELECT (MULTIPLY(DIVIDE(SUM(CASE WHEN eye_colour_id = 7 THEN 1 ELSE 0 END), COUNT(superhero_name)), 100.0) as percentage_of_superheroes_with_blue_eyes FROM superhero;\t----- bird -----\tsuperhero",
    "801": "SELECT SUM(CASE WHEN gender_id = 1 THEN 1 ELSE 0 END) AS male_superheroes, SUM(CASE WHEN gender_id = 2 THEN 1 ELSE 0 END) AS female_superheroes, SUM(CASE WHEN gender_id = 1 THEN 1 ELSE 0 END) / SUM(CASE WHEN gender_id = 2 THEN 1 ELSE 0 END) AS ratio FROM superhero;\t----- bird -----\tsuperhero",
    "802": "SELECT superhero_name FROM superhero WHERE height_cm = (SELECT MAX(height_cm) FROM superhero);\t----- bird -----\tsuperhero",
    "803": "SELECT id FROM superpower WHERE power_name = 'cryokinesis';\t----- bird -----\tsuperhero",
    "804": "SELECT superhero_name FROM superhero WHERE id = 294;\t----- bird -----\tsuperhero",
    "805": "SELECT superhero.full_name FROM superhero WHERE superhero.weight_kg = 0 OR superhero.weight_kg IS NULL;\t----- bird -----\tsuperhero",
    "806": "SELECT colour.colour FROM superhero JOIN colour ON superhero.eye_colour_id = colour.id WHERE superhero.full_name = 'Karen Beecher-Duncan';\t----- bird -----\tsuperhero",
    "807": "SELECT sp.power_name FROM superhero s JOIN hero_power hp ON s.id = hp.hero_id JOIN superpower sp ON hp.power_id = sp.id WHERE s.full_name = 'Helen Parr';\t----- bird -----\tsuperhero",
    "808": "SELECT race.race FROM superhero JOIN race ON superhero.race_id = race.id WHERE superhero.weight_kg = 108 AND superhero.height_cm = 188;\t----- bird -----\tsuperhero",
    "809": "SELECT publisher.publisher_name FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id WHERE superhero.id = 38;\t----- bird -----\tsuperhero",
    "810": "SELECT race.race FROM superhero JOIN race ON superhero.race_id = race.id JOIN hero_attribute ON superhero.id = hero_attribute.hero_id WHERE hero_attribute.attribute_value = (SELECT MAX(attribute_value) FROM hero_attribute);\t----- bird -----\tsuperhero",
    "811": "SELECT alignment.alignment, superpower.power_name FROM superhero JOIN alignment ON superhero.alignment_id = alignment.id JOIN hero_power ON superhero.id = hero_power.hero_id JOIN superpower ON hero_power.power_id = superpower.id WHERE superhero.superhero_name = 'Atom IV';\t----- bird -----\tsuperhero",
    "812": "SELECT superhero.full_name FROM superhero JOIN colour ON superhero.eye_colour_id = colour.id WHERE colour.colour = 'Blue';\t----- bird -----\tsuperhero",
    "813": "SELECT AVG(attribute_value) AS average_attribute_value FROM hero_attribute JOIN superhero ON hero_attribute.hero_id = superhero.id WHERE superhero.alignment_id = 3;\t----- bird -----\tsuperhero",
    "814": "SELECT c.colour FROM superhero s JOIN colour c ON s.skin_colour_id = c.id JOIN hero_attribute ha ON s.id = ha.hero_id WHERE ha.attribute_value = 100;\t----- bird -----\tsuperhero",
    "815": "SELECT COUNT(*) FROM superhero WHERE alignment_id = 1 AND gender_id = 2;\t----- bird -----\tsuperhero",
    "816": "SELECT superhero.superhero_name FROM superhero JOIN hero_attribute ON superhero.id = hero_attribute.hero_id WHERE hero_attribute.attribute_value BETWEEN 75 AND 80;\t----- bird -----\tsuperhero",
    "817": "SELECT race.race FROM superhero JOIN colour ON superhero.hair_colour_id = colour.id JOIN gender ON superhero.gender_id = gender.id JOIN race ON superhero.race_id = race.id WHERE colour.colour = 'blue' AND gender.gender = 'male';\t----- bird -----\tsuperhero",
    "818": "SELECT (MULTIPLY(DIVIDE(SUM(CASE WHEN gender_id = 2 THEN 1 ELSE 0 END), COUNT(*)), 100.0)) AS percentage_female_bad_superheroes FROM superhero WHERE alignment_id = 2;\t----- bird -----\tsuperhero",
    "819": "SELECT COUNT(CASE WHEN eye_colour_id = 7 THEN 1 ELSE 0 END) - COUNT(CASE WHEN eye_colour_id = 1 THEN 1 ELSE 0 END) AS difference FROM superhero WHERE (weight_kg = 0 OR weight_kg IS NULL);\t----- bird -----\tsuperhero",
    "820": "SELECT hero.superhero_name, attribute.attribute_value FROM superhero hero JOIN hero_attribute ON hero.id = hero_attribute.hero_id JOIN attribute ON hero_attribute.attribute_id = attribute.id WHERE hero.superhero_name = 'Hulk' AND attribute.attribute_name = 'Strength';\t----- bird -----\tsuperhero",
    "821": "SELECT sp.power_name FROM superhero s JOIN hero_power hp ON s.id = hp.hero_id JOIN superpower sp ON hp.power_id = sp.id WHERE s.superhero_name = 'Ajax';\t----- bird -----\tsuperhero",
    "822": "SELECT COUNT(*) FROM superhero JOIN colour ON superhero.skin_colour_id = colour.id JOIN alignment ON superhero.alignment_id = alignment.id WHERE colour.colour = 'Green' AND alignment.alignment = 'Bad';\t----- bird -----\tsuperhero",
    "823": "SELECT COUNT(*) FROM superhero JOIN gender ON superhero.gender_id = gender.id JOIN publisher ON superhero.publisher_id = publisher.id WHERE gender.gender = 'Female' AND publisher.publisher_name = 'Marvel Comics';\t----- bird -----\tsuperhero",
    "824": "SELECT superhero.superhero_name FROM superhero JOIN hero_power ON superhero.id = hero_power.hero_id JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'Wind Control' ORDER BY superhero.superhero_name ASC;\t----- bird -----\tsuperhero",
    "825": "SELECT gender.gender FROM superhero JOIN hero_power ON superhero.id = hero_power.hero_id JOIN superpower ON hero_power.power_id = superpower.id JOIN gender ON superhero.gender_id = gender.id WHERE superpower.power_name = 'Phoenix Force';\t----- bird -----\tsuperhero",
    "826": "SELECT s.superhero_name FROM superhero s JOIN publisher p ON s.publisher_id = p.id WHERE p.publisher_name = 'DC Comics' ORDER BY s.weight_kg DESC LIMIT 1;\t----- bird -----\tsuperhero",
    "827": "SELECT AVG(height_cm) AS average_height FROM superhero JOIN race ON superhero.race_id = race.id JOIN publisher ON superhero.publisher_id = publisher.id WHERE race.race <> 'Human' AND publisher.publisher_name = 'Dark Horse Comics';\t----- bird -----\tsuperhero",
    "828": "SELECT superhero.superhero_name FROM superhero JOIN hero_attribute ON superhero.id = hero_attribute.hero_id JOIN attribute ON hero_attribute.attribute_id = attribute.id WHERE attribute.attribute_name = 'Speed' AND hero_attribute.attribute_value = 100;\t----- bird -----\tsuperhero",
    "829": "SELECT ABS(SUM(CASE WHEN publisher_name = 'DC Comics' THEN 1 ELSE 0 END) - SUM(CASE WHEN publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END)) AS difference FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id;\t----- bird -----\tsuperhero",
    "830": "SELECT attribute.attribute_name FROM superhero JOIN hero_attribute ON superhero.id = hero_attribute.hero_id JOIN attribute ON hero_attribute.attribute_id = attribute.id WHERE superhero.superhero_name = 'Black Panther' ORDER BY hero_attribute.attribute_value LIMIT 1;\t----- bird -----\tsuperhero",
    "831": "SELECT colour.colour FROM superhero JOIN colour ON superhero.eye_colour_id = colour.id WHERE superhero.superhero_name = 'Abomination';\t----- bird -----\tsuperhero",
    "832": "SELECT superhero.superhero_name FROM superhero WHERE height_cm = (SELECT MAX(height_cm) FROM superhero);\t----- bird -----\tsuperhero",
    "833": "SELECT superhero.superhero_name FROM superhero WHERE superhero.full_name = 'Charles Chandler';\t----- bird -----\tsuperhero",
    "834": "SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'George Lucas')) AS percentage_female FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'George Lucas') AND gender_id = (SELECT id FROM gender WHERE gender = 'Female');\t----- bird -----\tsuperhero",
    "835": "SELECT (MULTIPLY(DIVIDE(SUM(CASE WHEN alignment.alignment = 'Good' THEN 1 ELSE 0 END), COUNT(*)), 100.0) AS percentage_good_superheroes FROM superhero JOIN alignment ON superhero.alignment_id = alignment.id JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher.publisher_name = 'Marvel Comics';\t----- bird -----\tsuperhero",
    "836": "SELECT COUNT(*) FROM superhero WHERE full_name LIKE 'John%';\t----- bird -----\tsuperhero",
    "837": "SELECT hero_id FROM hero_attribute WHERE attribute_value = (SELECT MIN(attribute_value) FROM hero_attribute);\t----- bird -----\tsuperhero",
    "838": "SELECT full_name FROM superhero WHERE superhero_name = 'Alien';\t----- bird -----\tsuperhero",
    "839": "SELECT s.full_name FROM superhero s JOIN colour c ON s.eye_colour_id = c.id WHERE s.weight_kg < 100 AND c.colour = 'brown';\t----- bird -----\tsuperhero",
    "840": "SELECT attribute.attribute_name, hero_attribute.attribute_value FROM superhero JOIN hero_attribute ON superhero.id = hero_attribute.hero_id JOIN attribute ON hero_attribute.attribute_id = attribute.id WHERE superhero.superhero_name = 'Aquababy';\t----- bird -----\tsuperhero",
    "841": "SELECT weight_kg, race.race FROM superhero JOIN race ON superhero.race_id = race.id WHERE superhero.id = 40;\t----- bird -----\tsuperhero",
    "842": "SELECT AVG(height_cm) FROM superhero WHERE alignment_id = (SELECT id FROM alignment WHERE alignment = 'neutral');\t----- bird -----\tsuperhero",
    "843": "SELECT hero_id FROM hero_power JOIN superpower ON hero_power.power_id = superpower.id JOIN superhero ON hero_power.hero_id = superhero.id WHERE superpower.power_name = 'Intelligence';\t----- bird -----\tsuperhero",
    "844": "SELECT colour.colour FROM superhero JOIN colour ON superhero.eye_colour_id = colour.id WHERE superhero.superhero_name = 'Blackwulf';\t----- bird -----\tsuperhero",
    "845": "SELECT sp.power_name FROM superhero s JOIN hero_power hp ON s.id = hp.hero_id JOIN superpower sp ON hp.power_id = sp.id WHERE s.height_cm > (SELECT AVG(height_cm) * 0.8 FROM superhero);\t----- bird -----\tsuperhero",
    "846": "SELECT drivers.driverRef FROM qualifying JOIN drivers ON qualifying.driverId = drivers.driverId WHERE qualifying.raceId = 18 AND qualifying.q1 = ( SELECT MAX(q1) FROM qualifying WHERE raceId = 18 LIMIT 5 )\t----- bird -----\tformula_1",
    "847": "SELECT d.surname FROM drivers d JOIN qualifying q ON d.driverId = q.driverId WHERE q.raceId = 19 AND q.q2 = (SELECT MIN(q2) FROM qualifying WHERE raceId = 19)\t----- bird -----\tformula_1",
    "848": "SELECT races.year FROM races JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.location = 'Shanghai';\t----- bird -----\tformula_1",
    "849": "SELECT races.url FROM races JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.name = 'Circuit de Barcelona-Catalunya';\t----- bird -----\tformula_1",
    "850": "SELECT races.name FROM races JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.country = 'Germany';\t----- bird -----\tformula_1",
    "851": "SELECT circuits.name, constructorStandings.position FROM circuits JOIN races ON circuits.circuitId = races.circuitId JOIN results ON races.raceId = results.raceId JOIN constructors ON results.constructorId = constructors.constructorId JOIN constructorStandings ON constructors.constructorId = constructorStandings.constructorId WHERE constructors.name = 'Renault';\t----- bird -----\tformula_1",
    "852": "SELECT COUNT(*) FROM races JOIN circuits ON races.circuitId = circuits.circuitId WHERE races.year = 2010 AND circuits.country NOT IN ('Asia', 'Europe');\t----- bird -----\tformula_1",
    "853": "SELECT races.name FROM races JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.country = 'Spain';\t----- bird -----\tformula_1",
    "854": "SELECT lat, lng FROM circuits WHERE circuitRef = 'albert_park';\t----- bird -----\tformula_1",
    "855": "SELECT races.url FROM races JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.name = 'Sepang International Circuit';\t----- bird -----\tformula_1",
    "856": "SELECT races.name, races.date, races.time FROM races JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.name = 'Sepang International Circuit';\t----- bird -----\tformula_1",
    "857": "SELECT lat, lng FROM circuits WHERE name = 'Abu Dhabi Grand Prix';\t----- bird -----\tformula_1",
    "858": "SELECT c.country FROM circuits c JOIN races r ON c.circuitId = r.circuitId JOIN constructorResults cr ON r.raceId = cr.raceId WHERE r.raceId = 24 AND cr.points = 1;\t----- bird -----\tformula_1",
    "859": "SELECT q1 FROM qualifying WHERE raceId = 354 AND driverId = (SELECT driverId FROM drivers WHERE forename = 'Bruno' AND surname = 'Senna')\t----- bird -----\tformula_1",
    "860": "SELECT drivers.nationality FROM drivers JOIN qualifying ON drivers.driverId = qualifying.driverId WHERE qualifying.q2 = '0:01:40' AND qualifying.raceId = 355;\t----- bird -----\tformula_1",
    "861": "SELECT drivers.number FROM qualifying JOIN drivers ON qualifying.driverId = drivers.driverId WHERE qualifying.raceId = 903 AND qualifying.q3 = '0:01:54';\t----- bird -----\tformula_1",
    "862": "SELECT COUNT(*) FROM results WHERE raceId = (SELECT raceId FROM races WHERE name = 'Bahrain Grand Prix' AND year = 2007) AND time IS NULL;\t----- bird -----\tformula_1",
    "863": "SELECT s.year, r.raceId, r.name, r.date, c.name AS circuit_name, c.location, c.country FROM seasons s JOIN races r ON s.year = r.year JOIN circuits c ON r.circuitId = c.circuitId WHERE r.raceId = 901;\t----- bird -----\tformula_1",
    "864": "SELECT COUNT(*) FROM results WHERE raceId = (SELECT raceId FROM races WHERE date = '2015-11-29') AND time IS NOT NULL;\t----- bird -----\tformula_1",
    "865": "SELECT drivers.forename, drivers.surname, drivers.dob FROM results JOIN drivers ON results.driverId = drivers.driverId WHERE results.raceId = 592 AND results.time IS NOT NULL ORDER BY drivers.dob ASC LIMIT 1;\t----- bird -----\tformula_1",
    "866": "SELECT d.forename || ' ' || d.surname AS player, d.url AS introduction_website FROM lapTimes l JOIN drivers d ON l.driverId = d.driverId WHERE l.raceId = 161 AND l.time = '0:01:27';\t----- bird -----\tformula_1",
    "867": "SELECT d.nationality FROM drivers d JOIN results r ON d.driverId = r.driverId WHERE r.raceId = 933 AND r.fastestLapSpeed = (SELECT MAX(fastestLapSpeed) FROM results WHERE raceId = 933)\t----- bird -----\tformula_1",
    "868": "SELECT location, lat, lng FROM circuits WHERE name = 'Malaysian Grand Prix';\t----- bird -----\tformula_1",
    "869": "SELECT constructors.url FROM constructorStandings JOIN constructors ON constructorStandings.constructorId = constructors.constructorId WHERE constructorStandings.raceId = 9 ORDER BY constructorStandings.points DESC LIMIT 1;\t----- bird -----\tformula_1",
    "870": "SELECT q1 FROM qualifying WHERE raceId = 345 AND driverId = (SELECT driverId FROM drivers WHERE forename = 'Lucas' AND surname = 'di Grassi')\t----- bird -----\tformula_1",
    "871": "SELECT d.nationality FROM drivers d JOIN qualifying q ON d.driverId = q.driverId WHERE q.q2 = '0:01:15' AND q.raceId = 347;\t----- bird -----\tformula_1",
    "872": "SELECT d.code FROM qualifying q JOIN drivers d ON q.driverId = d.driverId WHERE q.raceId = 45 AND q.q3 = '0:01:33';\t----- bird -----\tformula_1",
    "873": "SELECT results.time FROM results JOIN races ON results.raceId = races.raceId JOIN drivers ON results.driverId = drivers.driverId WHERE races.raceId = 743 AND drivers.forename = 'Bruce' AND drivers.surname = 'McLaren';\t----- bird -----\tformula_1",
    "874": "SELECT drivers.forename, drivers.surname FROM results JOIN races ON results.raceId = races.raceId JOIN drivers ON results.driverId = drivers.driverId WHERE races.name = 'San Marino Grand Prix' AND races.year = 2006 AND results.position = 2;\t----- bird -----\tformula_1",
    "875": "SELECT s.year, r.raceId, r.name, r.date, c.name AS circuit_name, c.location, c.country FROM seasons s JOIN races r ON s.year = r.year JOIN circuits c ON r.circuitId = c.circuitId WHERE r.raceId = 901;\t----- bird -----\tformula_1",
    "876": "SELECT COUNT(driverId) AS total_finished_drivers FROM results WHERE raceId = (SELECT raceId FROM races WHERE date = '2015-11-29');\t----- bird -----\tformula_1",
    "877": "SELECT drivers.forename, drivers.surname FROM results JOIN drivers ON results.driverId = drivers.driverId WHERE results.raceId = 872 AND results.time IS NOT NULL ORDER BY drivers.dob DESC LIMIT 1;\t----- bird -----\tformula_1",
    "878": "SELECT drivers.forename || ' ' || drivers.surname AS best_lap_driver FROM lapTimes JOIN drivers ON lapTimes.driverId = drivers.driverId WHERE lapTimes.raceId = 348 ORDER BY lapTimes.time LIMIT 1;\t----- bird -----\tformula_1",
    "879": "SELECT drivers.nationality FROM drivers JOIN results ON drivers.driverId = results.driverId WHERE results.fastestLapSpeed = (SELECT MAX(fastestLapSpeed) FROM results)\t----- bird -----\tformula_1",
    "880": "SELECT ((r1.fastestLapSpeed - r2.fastestLapSpeed) / r1.fastestLapSpeed) * 100 as percentage FROM results r1 JOIN results r2 ON r1.raceId = 853 AND r2.raceId = 854 WHERE r1.driverId = (SELECT driverId FROM drivers WHERE forename = 'Paul' AND surname = 'di Resta') AND r2.driverId = (SELECT driverId FROM drivers WHERE forename = 'Paul' AND surname = 'di Resta');\t----- bird -----\tformula_1",
    "881": "SELECT ROUND((CAST(COUNT(DISTINCT r.driverId) AS REAL) / COUNT(DISTINCT d.driverId)) * 100, 2) AS percentage FROM results r JOIN races ra ON r.raceId = ra.raceId JOIN drivers d ON r.driverId = d.driverId WHERE ra.date = '1983-07-16' AND r.time IS NOT NULL;\t----- bird -----\tformula_1",
    "882": "SELECT MIN(year) AS first_Singapore_Grand_Prix FROM races WHERE circuitId = (SELECT circuitId FROM circuits WHERE name = 'Marina Bay Street Circuit');\t----- bird -----\tformula_1",
    "883": "SELECT COUNT(*) AS total_races FROM races WHERE year = 2005 ORDER BY round DESC;\t----- bird -----\tformula_1",
    "884": "SELECT races.name AS first_race_recorded, races2.name AS other_races_same_month_year FROM races JOIN races AS races2 ON strftime('%Y-%m', races.date) = strftime('%Y-%m', races2.date) WHERE races.date = (SELECT MIN(date) FROM races) AND races2.date != (SELECT MIN(date) FROM races);\t----- bird -----\tformula_1",
    "885": "SELECT races.name, races.date FROM races WHERE races.year = 1999 ORDER BY races.round DESC LIMIT 1;\t----- bird -----\tformula_1",
    "886": "SELECT year, COUNT(round) AS num_races FROM races GROUP BY year ORDER BY num_races DESC LIMIT 1;\t----- bird -----\tformula_1",
    "887": "SELECT races.name FROM races WHERE races.year = 2017 AND races.name NOT IN ( SELECT races.name FROM races WHERE races.year = 2000 )\t----- bird -----\tformula_1",
    "888": "SELECT c.country, ci.name, ci.location FROM races r JOIN circuits ci ON r.circuitId = ci.circuitId JOIN seasons s ON r.year = s.year WHERE s.year = (SELECT MIN(year) FROM seasons WHERE url LIKE '%europe%');\t----- bird -----\tformula_1",
    "889": "SELECT MAX(year) FROM races JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.name = 'Brands Hatch' AND circuits.country = 'UK' AND races.name = 'British Grand Prix';\t----- bird -----\tformula_1",
    "890": "SELECT COUNT(DISTINCT year) FROM races JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.name = 'Silverstone Circuit' AND races.name = 'British Grand Prix' AND circuits.country = 'United Kingdom';\t----- bird -----\tformula_1",
    "891": "SELECT drivers.forename, drivers.surname FROM drivers JOIN driverStandings ON drivers.driverId = driverStandings.driverId JOIN races ON driverStandings.raceId = races.raceId WHERE races.name = 'Singapore Grand Prix' AND races.year = 2010 ORDER BY driverStandings.position;\t----- bird -----\tformula_1",
    "892": "SELECT drivers.forename || ' ' || drivers.surname AS full_name FROM drivers JOIN driverStandings ON drivers.driverId = driverStandings.driverId WHERE driverStandings.points = (SELECT MAX(points) FROM driverStandings)\t----- bird -----\tformula_1",
    "893": "SELECT drivers.forename || ' ' || drivers.surname AS driver_name, results.points FROM drivers JOIN results ON drivers.driverId = results.driverId JOIN races ON results.raceId = races.raceId JOIN seasons ON races.year = seasons.year WHERE seasons.year = 2017 AND races.name = 'Chinese Grand Prix' ORDER BY results.points DESC LIMIT 3;\t----- bird -----\tformula_1",
    "894": "SELECT drivers.forename || ' ' || drivers.surname AS driver_name, races.name AS race_name, lapTimes.time AS best_lap_time FROM lapTimes JOIN drivers ON lapTimes.driverId = drivers.driverId JOIN races ON lapTimes.raceId = races.raceId WHERE lapTimes.time = (SELECT MIN(time) FROM lapTimes)\t----- bird -----\tformula_1",
    "895": "SELECT AVG(milliseconds) AS average_lap_time FROM lapTimes JOIN drivers ON lapTimes.driverId = drivers.driverId JOIN races ON lapTimes.raceId = races.raceId WHERE drivers.forename = 'Sebastian' AND drivers.surname = 'Vettel' AND races.year = 2009 AND races.name = 'Chinese Grand Prix';\t----- bird -----\tformula_1",
    "896": "SELECT (CAST(COUNT(raceId) AS REAL) / (SELECT COUNT(raceId) FROM results WHERE driverId = (SELECT driverId FROM drivers WHERE surname = 'Hamilton') AND year >= 2010)) * 100 FROM results WHERE driverId = (SELECT driverId FROM drivers WHERE surname = 'Hamilton') AND year >= 2010 AND position > 1;\t----- bird -----\tformula_1",
    "897": "SELECT drivers.forename || ' ' || drivers.surname AS driver_name, drivers.nationality, AVG(driverStandings.points) AS average_points FROM drivers JOIN driverStandings ON drivers.driverId = driverStandings.driverId GROUP BY drivers.driverId ORDER BY COUNT(driverStandings.wins) DESC LIMIT 1;\t----- bird -----\tformula_1",
    "898": "SELECT 2022 - year(MAX(dob)) + 1 AS age, forename || ' ' || surname AS name FROM drivers WHERE nationality = 'Japanese'\t----- bird -----\tformula_1",
    "899": "SELECT circuits.name FROM circuits JOIN races ON circuits.circuitId = races.circuitId WHERE races.year BETWEEN 1990 AND 2000 GROUP BY circuits.circuitId HAVING COUNT(races.raceId) = 4;\t----- bird -----\tformula_1",
    "900": "SELECT circuits.name, circuits.location, races.name FROM circuits JOIN races ON circuits.circuitId = races.circuitId WHERE circuits.country = 'USA' AND races.year = 2006;\t----- bird -----\tformula_1",
    "901": "SELECT races.name, circuits.name, circuits.location FROM races JOIN circuits ON races.circuitId = circuits.circuitId WHERE strftime('%m', races.date) = '09' AND strftime('%Y', races.date) = '2005';\t----- bird -----\tformula_1",
    "902": "SELECT races.name FROM races JOIN results ON races.raceId = results.raceId JOIN drivers ON results.driverId = drivers.driverId WHERE drivers.forename = 'Alex' AND drivers.surname = 'Yoong' AND results.position < 10;\t----- bird -----\tformula_1",
    "903": "SELECT COUNT(*) FROM results JOIN drivers ON results.driverId = drivers.driverId JOIN races ON results.raceId = races.raceId JOIN circuits ON races.circuitId = circuits.circuitId WHERE drivers.forename = 'Michael' AND drivers.surname = 'Schumacher' AND circuits.name = 'Sepang International Circuit' AND results.position = 1;\t----- bird -----\tformula_1",
    "904": "SELECT races.name, races.year FROM results JOIN races ON results.raceId = races.raceId JOIN drivers ON results.driverId = drivers.driverId WHERE drivers.forename = 'Michael' AND drivers.surname = 'Schumacher' ORDER BY results.milliseconds LIMIT 1;\t----- bird -----\tformula_1",
    "905": "SELECT AVG(points) FROM results JOIN drivers ON results.driverId = drivers.driverId JOIN races ON results.raceId = races.raceId WHERE drivers.forename = 'Eddie' AND drivers.surname = 'Irvine' AND races.year = 2000;\t----- bird -----\tformula_1",
    "906": "SELECT races.name, results.points FROM drivers JOIN results ON drivers.driverId = results.driverId JOIN races ON results.raceId = races.raceId WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton' AND races.year = (SELECT MIN(year) FROM races);\t----- bird -----\tformula_1",
    "907": "SELECT races.name, circuits.country FROM races JOIN circuits ON races.circuitId = circuits.circuitId WHERE races.year = 2017 ORDER BY races.date;\t----- bird -----\tformula_1",
    "908": "SELECT races.name, races.year, circuits.location FROM races JOIN circuits ON races.circuitId = circuits.circuitId WHERE races.laps = (SELECT MAX(laps) FROM results)\t----- bird -----\tformula_1",
    "909": "SELECT (CAST(COUNT(*) AS REAL) / (SELECT COUNT(*) FROM races WHERE name = 'European Grand Prix')) * 100 FROM races WHERE country = 'Germany' AND name = 'European Grand Prix';\t----- bird -----\tformula_1",
    "910": "SELECT lat, lng FROM circuits WHERE circuitRef = 'silverstone'\t----- bird -----\tformula_1",
    "911": "SELECT name FROM circuits WHERE lat = (SELECT MAX(lat) FROM circuits) AND name IN ('Silverstone Circuit', 'Hockenheimring', 'Hungaroring');\t----- bird -----\tformula_1",
    "912": "SELECT circuitRef FROM circuits WHERE name = 'Marina Bay Street Circuit';\t----- bird -----\tformula_1",
    "913": "SELECT country FROM circuits WHERE alt = (SELECT MAX(alt) FROM circuits);\t----- bird -----\tformula_1",
    "914": "SELECT COUNT(*) FROM drivers WHERE code IS NULL;\t----- bird -----\tformula_1",
    "915": "SELECT d.nationality FROM drivers d WHERE dob = (SELECT MIN(dob) FROM drivers)\t----- bird -----\tformula_1",
    "916": "SELECT surname FROM drivers WHERE nationality = 'Italian';\t----- bird -----\tformula_1",
    "917": "SELECT url FROM drivers WHERE forename = 'Anthony' AND surname = 'Davidson';\t----- bird -----\tformula_1",
    "918": "SELECT driverRef FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton';\t----- bird -----\tformula_1",
    "919": "SELECT circuits.name FROM races JOIN circuits ON races.circuitId = circuits.circuitId WHERE races.year = 2009 AND races.name = 'Spanish Grand Prix';\t----- bird -----\tformula_1",
    "920": "SELECT races.year FROM races JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.name = 'Silverstone Circuit';\t----- bird -----\tformula_1",
    "921": "SELECT races.url FROM races JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.name = 'Silverstone Circuit';\t----- bird -----\tformula_1",
    "922": "SELECT races.time FROM races JOIN circuits ON races.circuitId = circuits.circuitId WHERE races.year >= 2010 AND races.year < 2020 AND circuits.name = 'Abu Dhabi Circuit';\t----- bird -----\tformula_1",
    "923": "SELECT COUNT(*) FROM races JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.country = 'Italy';\t----- bird -----\tformula_1",
    "924": "SELECT races.date FROM races JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.name = 'Barcelona-Catalunya';\t----- bird -----\tformula_1",
    "925": "SELECT circuits.url FROM circuits JOIN races ON circuits.circuitId = races.circuitId JOIN seasons ON races.year = seasons.year WHERE seasons.year = 2009 AND races.name = 'Spanish Grand Prix';\t----- bird -----\tformula_1",
    "926": "SELECT MIN(fastestLapTime) FROM results WHERE driverId = (SELECT driverId FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton')\t----- bird -----\tformula_1",
    "927": "SELECT drivers.forename, drivers.surname FROM results JOIN drivers ON results.driverId = drivers.driverId WHERE fastestLapSpeed = (SELECT MAX(fastestLapSpeed) FROM results)\t----- bird -----\tformula_1",
    "928": "SELECT drivers.driverRef FROM results JOIN drivers ON results.driverId = drivers.driverId JOIN races ON results.raceId = races.raceId WHERE races.name = 'Australian Grand Prix' AND races.year = 2008 ORDER BY results.positionOrder LIMIT 1;\t----- bird -----\tformula_1",
    "929": "SELECT races.name FROM races JOIN results ON races.raceId = results.raceId JOIN drivers ON results.driverId = drivers.driverId WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton';\t----- bird -----\tformula_1",
    "930": "SELECT r.name AS race_name FROM results AS res JOIN races AS r ON res.raceId = r.raceId JOIN drivers AS d ON res.driverId = d.driverId WHERE d.forename = 'Lewis' AND d.surname = 'Hamilton' ORDER BY res.rank LIMIT 1;\t----- bird -----\tformula_1",
    "931": "SELECT MAX(fastestLapSpeed) FROM results JOIN races ON results.raceId = races.raceId WHERE races.year = 2009 AND races.name = 'Spanish Grand Prix';\t----- bird -----\tformula_1",
    "932": "SELECT DISTINCT year FROM races WHERE raceId IN ( SELECT raceId FROM results WHERE driverId = ( SELECT driverId FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton' ) )\t----- bird -----\tformula_1",
    "933": "SELECT positionOrder FROM results JOIN races ON results.raceId = races.raceId JOIN drivers ON results.driverId = drivers.driverId WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton' AND races.year = 2008 AND races.name = 'Australian Grand Prix'\t----- bird -----\tformula_1",
    "934": "SELECT drivers.forename, drivers.surname FROM results JOIN drivers ON results.driverId = drivers.driverId JOIN races ON results.raceId = races.raceId WHERE races.year = 2008 AND races.name = 'Australian Grand Prix' AND results.grid = 4;\t----- bird -----\tformula_1",
    "935": "SELECT COUNT(driverId) FROM results WHERE raceId = (SELECT raceId FROM races WHERE year = 2008 AND name = 'Australian Grand Prix') AND time IS NOT NULL;\t----- bird -----\tformula_1",
    "936": "SELECT fastestLapTime FROM results JOIN drivers ON results.driverId = drivers.driverId JOIN races ON results.raceId = races.raceId WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton' AND races.year = 2008 AND races.name = 'Australian Grand Prix';\t----- bird -----\tformula_1",
    "937": "SELECT results.time FROM results JOIN races ON results.raceId = races.raceId JOIN drivers ON results.driverId = drivers.driverId WHERE races.year = 2008 AND races.name = 'Australian Grand Prix' AND results.position = 2;\t----- bird -----\tformula_1",
    "938": "SELECT drivers.forename || ' ' || drivers.surname AS champion, drivers.url AS more_info FROM results JOIN races ON results.raceId = races.raceId JOIN drivers ON results.driverId = drivers.driverId WHERE races.year = 2008 AND races.name = 'Australian Grand Prix' AND results.position = 1 AND results.time LIKE '__:__:__.___'\t----- bird -----\tformula_1",
    "939": "SELECT COUNT(*) FROM drivers JOIN results ON drivers.driverId = results.driverId JOIN races ON results.raceId = races.raceId WHERE races.year = 2008 AND races.name = 'Australian Grand Prix' AND drivers.nationality = 'American';\t----- bird -----\tformula_1",
    "940": "SELECT COUNT(DISTINCT driverId) FROM results WHERE raceId = (SELECT raceId FROM races WHERE year = 2008 AND name = 'Australian Grand Prix') AND time != ''\t----- bird -----\tformula_1",
    "941": "SELECT SUM(points) FROM results WHERE driverId = (SELECT driverId FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton');\t----- bird -----\tformula_1",
    "942": "SELECT AVG(SUBSTR(fastestLapTime, 1, 2) * 60 + SUBSTR(fastestLapTime, 4, 2) + SUBSTR(fastestLapTime, 7) / 1000) FROM results JOIN drivers ON results.driverId = drivers.driverId WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton';\t----- bird -----\tformula_1",
    "943": "SELECT COUNT(raceId) as total_races, COUNT(CASE WHEN time IS NOT NULL THEN raceId END) as races_with_all_laps_completed, COUNT(CASE WHEN time IS NOT NULL THEN raceId END) * 1.0 / COUNT(raceId) as rate_of_drivers_completing_all_laps FROM results WHERE raceId IN (SELECT raceId FROM races WHERE year = 2008 AND name = 'Australian Grand Prix');\t----- bird -----\tformula_1",
    "944": "SELECT ((strftime('%s', 'HH:MM:SS.mmm') - strftime('%s', last_driver_time)) / strftime('%s', last_driver_time)) * 100 FROM results WHERE raceId = (SELECT raceId FROM races WHERE year = 2008 AND name = 'Australian Grand Prix') AND time IS NOT NULL ORDER BY position DESC LIMIT 1;\t----- bird -----\tformula_1",
    "945": "SELECT COUNT(*) FROM circuits WHERE country = 'Australia' AND location = 'Melbourne';\t----- bird -----\tformula_1",
    "946": "SELECT lat, lng FROM circuits WHERE country = 'USA';\t----- bird -----\tformula_1",
    "947": "SELECT COUNT(*) FROM drivers WHERE nationality = 'British' AND dob > '1980-01-01';\t----- bird -----\tformula_1",
    "948": "SELECT AVG(points) FROM constructorStandings JOIN constructors ON constructorStandings.constructorId = constructors.constructorId WHERE constructors.nationality = 'British'\t----- bird -----\tformula_1",
    "949": "SELECT constructors.name FROM constructorStandings JOIN constructors ON constructorStandings.constructorId = constructors.constructorId GROUP BY constructors.name ORDER BY SUM(constructorStandings.points) DESC LIMIT 1;\t----- bird -----\tformula_1",
    "950": "SELECT constructors.name FROM constructorStandings JOIN constructors ON constructorStandings.constructorId = constructors.constructorId WHERE constructorStandings.points = 0 AND constructorStandings.raceId = 291;\t----- bird -----\tformula_1",
    "951": "SELECT COUNT(DISTINCT constructors.constructorId) AS Japanese_constructors_with_0_points FROM constructors JOIN constructorStandings ON constructors.constructorId = constructorStandings.constructorId JOIN races ON constructorStandings.raceId = races.raceId JOIN circuits ON races.circuitId = circuits.circuitId WHERE constructors.nationality = 'Japanese' AND constructorStandings.points = 0 GROUP BY constructors.constructorId HAVING COUNT(DISTINCT races.raceId) = 2;\t----- bird -----\tformula_1",
    "952": "SELECT constructors.name FROM constructorStandings JOIN constructors ON constructorStandings.constructorId = constructors.constructorId WHERE constructorStandings.position = 1;\t----- bird -----\tformula_1",
    "953": "SELECT COUNT(DISTINCT constructors.constructorId) FROM constructors JOIN constructorResults ON constructors.constructorId = constructorResults.constructorId JOIN races ON constructorResults.raceId = races.raceId JOIN lapTimes ON races.raceId = lapTimes.raceId JOIN drivers ON lapTimes.driverId = drivers.driverId WHERE constructors.nationality = 'French' AND lapTimes.lap > 50;\t----- bird -----\tformula_1",
    "954": "SELECT (CAST(COUNT(DISTINCT r.driverId) AS REAL) / COUNT(DISTINCT d.driverId)) * 100 AS race_completion_percentage FROM races r JOIN results rs ON r.raceId = rs.raceId JOIN drivers d ON rs.driverId = d.driverId WHERE r.year BETWEEN 2007 AND 2009 AND d.nationality = 'Japanese' AND rs.time IS NOT NULL;\t----- bird -----\tformula_1",
    "955": "SELECT seasons.year, AVG(strftime('%s', results.time) - strftime('%s', '00:00:00.000')) AS average_time_seconds FROM results JOIN races ON results.raceId = races.raceId JOIN seasons ON races.year = seasons.year WHERE results.position = 1 AND results.time IS NOT NULL GROUP BY seasons.year;\t----- bird -----\tformula_1",
    "956": "SELECT forename, surname FROM drivers WHERE dob > '1975-01-01' AND driverId IN ( SELECT driverId FROM results WHERE position = 2 )\t----- bird -----\tformula_1",
    "957": "SELECT COUNT(*) FROM drivers WHERE nationality = 'Italian' AND driverId NOT IN (SELECT driverId FROM results WHERE time IS NOT NULL)\t----- bird -----\tformula_1",
    "958": "SELECT drivers.forename, drivers.surname FROM results JOIN drivers ON results.driverId = drivers.driverId WHERE results.fastestLapTime = (SELECT MIN(fastestLapTime) FROM results WHERE fastestLapTime IS NOT NULL)\t----- bird -----\tformula_1",
    "959": "SELECT results.fastestLap FROM results JOIN driverStandings ON results.driverId = driverStandings.driverId JOIN races ON results.raceId = races.raceId WHERE driverStandings.position = 1 AND races.year = 2009;\t----- bird -----\tformula_1",
    "960": "SELECT AVG(fastestLapSpeed) FROM results JOIN races ON results.raceId = races.raceId WHERE races.name = 'Spanish Grand Prix' AND races.year = 2009;\t----- bird -----\tformula_1",
    "961": "SELECT races.name, races.year FROM races JOIN results ON races.raceId = results.raceId WHERE results.milliseconds IS NOT NULL ORDER BY results.milliseconds LIMIT 1;\t----- bird -----\tformula_1",
    "962": "SELECT (CAST(COUNT(DISTINCT d1.driverId) AS REAL) / COUNT(DISTINCT d2.driverId)) * 100 AS percentage FROM drivers d1 JOIN lapTimes lt ON d1.driverId = lt.driverId JOIN races r ON lt.raceId = r.raceId JOIN seasons s ON r.year = s.year JOIN drivers d2 ON s.year BETWEEN 2000 AND 2005 WHERE strftime('%Y', d1.dob) < '1985' AND lt.lap > 50;\t----- bird -----\tformula_1",
    "963": "SELECT COUNT(*) FROM drivers d JOIN lapTimes lt ON d.driverId = lt.driverId WHERE d.nationality = 'French' AND lt.time < '02:00.00';\t----- bird -----\tformula_1",
    "964": "SELECT * FROM drivers WHERE nationality = 'America';\t----- bird -----\tformula_1",
    "965": "SELECT raceId FROM races WHERE year = 2009;\t----- bird -----\tformula_1",
    "966": "SELECT COUNT(driverId) FROM results WHERE raceId = 18;\t----- bird -----\tformula_1",
    "967": "SELECT driverId, forename, surname, dob, nationality FROM drivers ORDER BY dob DESC LIMIT 3;\t----- bird -----\tformula_1",
    "968": "SELECT driverRef FROM drivers WHERE forename = 'Robert' AND surname = 'Kubica';\t----- bird -----\tformula_1",
    "969": "SELECT COUNT(*) FROM drivers WHERE nationality = 'Australian' AND strftime('%Y', dob) = '1980';\t----- bird -----\tformula_1",
    "970": "SELECT drivers.forename, drivers.surname, drivers.dob, MIN(lapTimes.time) as earliest_lap_time FROM drivers JOIN lapTimes ON drivers.driverId = lapTimes.driverId WHERE drivers.nationality = 'German' AND drivers.dob BETWEEN '1980-01-01' AND '1990-12-31' GROUP BY drivers.driverId ORDER BY earliest_lap_time LIMIT 3;\t----- bird -----\tformula_1",
    "971": "SELECT driverRef FROM drivers WHERE nationality = 'German' ORDER BY dob LIMIT 1;\t----- bird -----\tformula_1",
    "972": "SELECT drivers.driverId, drivers.code FROM drivers JOIN results ON drivers.driverId = results.driverId WHERE strftime('%Y', drivers.dob) = '1971' AND results.fastestLapTime IS NOT NULL;\t----- bird -----\tformula_1",
    "973": "SELECT drivers.forename, drivers.surname FROM drivers JOIN lapTimes ON drivers.driverId = lapTimes.driverId WHERE drivers.nationality = 'Spanish' AND strftime('%Y', drivers.dob) < '1982' ORDER BY lapTimes.time DESC LIMIT 10;\t----- bird -----\tformula_1",
    "974": "SELECT races.year FROM races JOIN results ON races.raceId = results.raceId WHERE results.fastestLapTime IS NOT NULL ORDER BY results.fastestLapTime LIMIT 1;\t----- bird -----\tformula_1",
    "975": "SELECT races.year FROM lapTimes JOIN races ON lapTimes.raceId = races.raceId WHERE lapTimes.time = (SELECT MAX(time) FROM lapTimes)\t----- bird -----\tformula_1",
    "976": "SELECT driverId FROM lapTimes WHERE lap = 1 ORDER BY time LIMIT 5;\t----- bird -----\tformula_1",
    "977": "SELECT COUNT(*) FROM results WHERE raceId > 50 AND raceId < 100 AND statusId = 2 AND time IS NOT NULL;\t----- bird -----\tformula_1",
    "978": "SELECT COUNT(*) AS times_held, location, lat, lng FROM circuits WHERE country = 'Austria';\t----- bird -----\tformula_1",
    "979": "SELECT r.round AS race_number, COUNT(raceId) AS num_finishers FROM races r JOIN results res ON r.raceId = res.raceId WHERE res.time IS NOT NULL GROUP BY r.round ORDER BY num_finishers DESC LIMIT 1;\t----- bird -----\tformula_1",
    "980": "SELECT drivers.driverRef, drivers.nationality, drivers.dob FROM qualifying JOIN drivers ON qualifying.driverId = drivers.driverId WHERE qualifying.raceId = 23 AND qualifying.q2 IS NOT NULL;\t----- bird -----\tformula_1",
    "981": "SELECT r.name, r.date, r.time FROM races r JOIN qualifying q ON r.raceId = q.raceId JOIN drivers d ON q.driverId = d.driverId WHERE d.dob = (SELECT MIN(dob) FROM drivers) ORDER BY r.date LIMIT 1;\t----- bird -----\tformula_1",
    "982": "SELECT COUNT(*) FROM results JOIN drivers ON results.driverId = drivers.driverId WHERE drivers.nationality = 'American' AND results.statusId = 2;\t----- bird -----\tformula_1",
    "983": "SELECT constructors.name, MAX(constructorStandings.points) as highest_points FROM constructors JOIN constructorStandings ON constructors.constructorId = constructorStandings.constructorId WHERE constructors.nationality = 'Italian'\t----- bird -----\tformula_1",
    "984": "SELECT constructors.url FROM constructors JOIN constructorStandings ON constructors.constructorId = constructorStandings.constructorId WHERE constructorStandings.wins = (SELECT MAX(wins) FROM constructorStandings)\t----- bird -----\tformula_1",
    "985": "SELECT drivers.forename, drivers.surname, lapTimes.time FROM drivers JOIN lapTimes ON drivers.driverId = lapTimes.driverId JOIN races ON lapTimes.raceId = races.raceId WHERE races.name = 'French Grand Prix' AND lapTimes.lap = 3 ORDER BY lapTimes.time DESC LIMIT 1;\t----- bird -----\tformula_1",
    "986": "SELECT races.name, lapTimes.time, lapTimes.milliseconds FROM races JOIN lapTimes ON races.raceId = lapTimes.raceId WHERE lapTimes.lap = 1 ORDER BY lapTimes.milliseconds LIMIT 1;\t----- bird -----\tformula_1",
    "987": "SELECT AVG(fastestLapTime) FROM results WHERE raceId = (SELECT raceId FROM races WHERE year = 2006 AND name = 'United States Grand Prix') AND rank < 11;\t----- bird -----\tformula_1",
    "988": "SELECT drivers.forename, drivers.surname, AVG(pitStops.milliseconds) as avg_duration FROM drivers JOIN pitStops ON drivers.driverId = pitStops.driverId WHERE drivers.nationality = 'German' AND drivers.dob BETWEEN '1980-01-01' AND '1985-12-31' GROUP BY drivers.driverId ORDER BY avg_duration LIMIT 5;\t----- bird -----\tformula_1",
    "989": "SELECT drivers.forename || ' ' || drivers.surname AS champion, results.time AS finish_time FROM results JOIN races ON results.raceId = races.raceId JOIN drivers ON results.driverId = drivers.driverId WHERE races.name = 'Canadian Grand Prix' AND races.year = 2008 ORDER BY results.position LIMIT 1;\t----- bird -----\tformula_1",
    "990": "SELECT constructors.constructorRef, constructors.url, results.time FROM results JOIN constructors ON results.constructorId = constructors.constructorId JOIN races ON results.raceId = races.raceId WHERE races.name = 'Singapore Grand Prix' AND races.year = 2009 ORDER BY results.time DESC LIMIT 1;\t----- bird -----\tformula_1",
    "991": "SELECT forename || ' ' || surname AS full_name, dob FROM drivers WHERE nationality = 'Austrian' AND strftime('%Y', dob) BETWEEN '1981' AND '1991';\t----- bird -----\tformula_1",
    "992": "SELECT forename || ' ' || surname AS full_name, url AS wikipedia_link, dob AS date_of_birth FROM drivers WHERE nationality = 'German' AND strftime('%Y', dob) BETWEEN '1971' AND '1985' ORDER BY dob DESC;\t----- bird -----\tformula_1",
    "993": "SELECT location, country, lat, lng FROM circuits WHERE circuitRef = 'hungaroring';\t----- bird -----\tformula_1",
    "994": "SELECT constructors.name, constructors.nationality, SUM(constructorResults.points) AS total_points FROM constructors JOIN constructorResults ON constructors.constructorId = constructorResults.constructorId JOIN races ON constructorResults.raceId = races.raceId WHERE races.name = 'Monaco Grand Prix' AND races.year BETWEEN 1980 AND 2010 GROUP BY constructors.name ORDER BY total_points DESC LIMIT 1;\t----- bird -----\tformula_1",
    "995": "SELECT AVG(points) FROM results WHERE raceId IN (SELECT raceId FROM races WHERE name = 'Turkish Grand Prix') AND driverId = (SELECT driverId FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton');\t----- bird -----\tformula_1",
    "996": "SELECT AVG(COUNT(*)) FROM races WHERE year BETWEEN 2000 AND 2009;\t----- bird -----\tformula_1",
    "997": "SELECT nationality FROM drivers GROUP BY nationality ORDER BY COUNT(*) DESC LIMIT 1;\t----- bird -----\tformula_1",
    "998": "SELECT COUNT(*) AS victories FROM driverStandings WHERE position = 91;\t----- bird -----\tformula_1",
    "999": "SELECT races.name FROM results JOIN races ON results.raceId = races.raceId WHERE results.fastestLapTime = (SELECT MIN(fastestLapTime) FROM results)\t----- bird -----\tformula_1",
    "1000": "SELECT c.name || ', ' || c.location || ', ' || c.country AS full_location FROM circuits c JOIN races r ON c.circuitId = r.circuitId WHERE r.date = (SELECT MAX(date) FROM races)\t----- bird -----\tformula_1",
    "1001": "SELECT drivers.forename || ' ' || drivers.surname AS full_name FROM qualifying JOIN drivers ON qualifying.driverId = drivers.driverId JOIN races ON qualifying.raceId = races.raceId WHERE races.year = 2008 AND races.name = 'Marina Bay Street Circuit' AND qualifying.q3 = 1;\t----- bird -----\tformula_1",
    "1002": "SELECT forename || ' ' || surname AS full_name, nationality, races.name AS first_race FROM drivers JOIN results ON drivers.driverId = results.driverId JOIN races ON results.raceId = races.raceId WHERE dob = (SELECT MAX(dob) FROM drivers)\t----- bird -----\tformula_1",
    "1003": "SELECT COUNT(*) AS accidents FROM results JOIN races ON results.raceId = races.raceId JOIN drivers ON results.driverId = drivers.driverId JOIN status ON results.statusId = status.statusId WHERE races.name = 'Canadian Grand Prix' AND status.status = 'Accident' AND results.driverId = ( SELECT driverId FROM ( SELECT driverId, COUNT(*) AS num_accidents FROM results JOIN status ON results.statusId = status.statusId WHERE status.status = 'Accident' GROUP BY driverId ORDER BY num_accidents DESC LIMIT 1 ) )\t----- bird -----\tformula_1",
    "1004": "SELECT d.forename || ' ' || d.surname AS \"Full Name\", COUNT(ds.wins) AS \"Number of Wins\" FROM drivers d JOIN driverStandings ds ON d.driverId = ds.driverId WHERE d.dob = (SELECT MIN(dob) FROM drivers) GROUP BY d.forename, d.surname;\t----- bird -----\tformula_1",
    "1005": "SELECT MAX(milliseconds) as longest_time_spent_at_pitstop FROM pitStops;\t----- bird -----\tformula_1",
    "1006": "SELECT MIN(milliseconds) as fastest_lap_time FROM lapTimes;\t----- bird -----\tformula_1",
    "1007": "SELECT MAX(milliseconds) AS longest_time FROM pitStops WHERE driverId = (SELECT driverId FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton');\t----- bird -----\tformula_1",
    "1008": "SELECT lap FROM pitStops JOIN races ON pitStops.raceId = races.raceId JOIN drivers ON pitStops.driverId = drivers.driverId WHERE races.year = 2011 AND races.name = 'Australian Grand Prix' AND drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton';\t----- bird -----\tformula_1",
    "1009": "SELECT drivers.forename, drivers.surname, pitStops.duration FROM drivers JOIN pitStops ON drivers.driverId = pitStops.driverId JOIN races ON pitStops.raceId = races.raceId WHERE races.year = 2011 AND races.name = 'Australian Grand Prix';\t----- bird -----\tformula_1",
    "1010": "SELECT MIN(milliseconds) as lap_record FROM lapTimes JOIN drivers ON lapTimes.driverId = drivers.driverId WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton';\t----- bird -----\tformula_1",
    "1011": "SELECT drivers.forename || ' ' || drivers.surname AS shortest_lap_time_driver FROM lapTimes JOIN drivers ON lapTimes.driverId = drivers.driverId WHERE lapTimes.time = (SELECT MIN(time) FROM lapTimes)\t----- bird -----\tformula_1",
    "1012": "SELECT circuits.name, results.position FROM circuits JOIN races ON circuits.circuitId = races.circuitId JOIN results ON races.raceId = results.raceId JOIN drivers ON results.driverId = drivers.driverId WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton' AND results.fastestLap = 1;\t----- bird -----\tformula_1",
    "1013": "SELECT MIN(milliseconds) AS lap_record FROM lapTimes JOIN races ON lapTimes.raceId = races.raceId JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.name = 'Austrian Grand Prix Circuit';\t----- bird -----\tformula_1",
    "1014": "SELECT c.name AS circuit_name, l.time AS lap_record_time FROM circuits c JOIN races r ON c.circuitId = r.circuitId JOIN lapTimes l ON r.raceId = l.raceId WHERE c.country = 'Italy' ORDER BY l.milliseconds LIMIT 1;\t----- bird -----\tformula_1",
    "1015": "SELECT races.name FROM races JOIN lapTimes ON races.raceId = lapTimes.raceId WHERE lapTimes.time = ( SELECT MIN(time) FROM lapTimes WHERE lapTimes.raceId = races.raceId ) AND races.name LIKE '%Austrian Grand Prix%'\t----- bird -----\tformula_1",
    "1016": "SELECT pitStops.duration FROM races JOIN pitStops ON races.raceId = pitStops.raceId JOIN lapTimes ON races.raceId = lapTimes.raceId JOIN drivers ON lapTimes.driverId = drivers.driverId JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.name = 'Austrian Grand Prix Circuit' AND lapTimes.time = (SELECT MIN(time) FROM lapTimes WHERE raceId = races.raceId) AND pitStops.time = (SELECT MAX(time) FROM pitStops WHERE raceId = races.raceId AND driverId = drivers.driverId)\t----- bird -----\tformula_1",
    "1017": "SELECT circuits.lat, circuits.lng FROM circuits JOIN races ON circuits.circuitId = races.circuitId JOIN lapTimes ON races.raceId = lapTimes.raceId WHERE lapTimes.time = '1:29.488';\t----- bird -----\tformula_1",
    "1018": "SELECT AVG(milliseconds) FROM pitStops WHERE driverId = (SELECT driverId FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton');\t----- bird -----\tformula_1",
    "1019": "SELECT AVG(milliseconds) AS average_lap_time FROM lapTimes JOIN races ON lapTimes.raceId = races.raceId JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.country = 'Italy';\t----- bird -----\tformula_1",
    "1020": "SELECT player_api_id FROM Player_Attributes WHERE overall_rating = (SELECT MAX(overall_rating) FROM Player_Attributes);\t----- bird -----\teuropean_football_2",
    "1021": "SELECT MAX(height) AS tallest_player_height, player_name FROM Player;\t----- bird -----\teuropean_football_2",
    "1022": "SELECT preferred_foot FROM Player_Attributes WHERE potential = (SELECT MIN(potential) FROM Player_Attributes);\t----- bird -----\teuropean_football_2",
    "1023": "SELECT COUNT(*) FROM Player_Attributes WHERE overall_rating >= 60 AND overall_rating < 65 AND defensive_work_rate = 'low';\t----- bird -----\teuropean_football_2",
    "1024": "SELECT id FROM Player_Attributes ORDER BY crossing DESC LIMIT 5;\t----- bird -----\teuropean_football_2",
    "1025": "SELECT League.name FROM Match JOIN League ON Match.league_id = League.id WHERE Match.season = '2015/2016' GROUP BY Match.league_id ORDER BY SUM(Match.home_team_goal + Match.away_team_goal) DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1026": "SELECT Team.team_long_name FROM Match JOIN Team ON Match.home_team_api_id = Team.team_api_id WHERE season = '2015/2016' AND (home_team_goal - away_team_goal) < 0 GROUP BY home_team_api_id ORDER BY COUNT(*) ASC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1027": "SELECT Player.player_name, MAX(Player_Attributes.penalties) AS penalties FROM Player_Attributes JOIN Player ON Player_Attributes.player_api_id = Player.player_api_id GROUP BY Player.player_name ORDER BY penalties DESC LIMIT 10;\t----- bird -----\teuropean_football_2",
    "1028": "SELECT Team.team_long_name FROM Match JOIN Team ON Match.away_team_api_id = Team.team_api_id JOIN League ON Match.league_id = League.id WHERE League.name = 'Scotland Premier League' AND Match.season = '2009/2010' AND Match.away_team_goal > Match.home_team_goal GROUP BY Team.team_long_name ORDER BY COUNT(*) DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1029": "SELECT Team.team_long_name, Team_Attributes.buildUpPlaySpeed FROM Team JOIN Team_Attributes ON Team.team_api_id = Team_Attributes.team_api_id WHERE Team_Attributes.buildUpPlaySpeed = (SELECT MAX(buildUpPlaySpeed) FROM Team_Attributes LIMIT 4) ORDER BY Team_Attributes.buildUpPlaySpeed DESC;\t----- bird -----\teuropean_football_2",
    "1030": "SELECT League.name FROM Match JOIN League ON Match.league_id = League.id WHERE Match.season = '2015/2016' GROUP BY Match.league_id ORDER BY SUM(CASE WHEN Match.home_team_goal = Match.away_team_goal THEN 1 ELSE 0 END) DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1031": "SELECT player_name, (strftime('%Y', 'now') - strftime('%Y', birthday)) - (strftime('%m-%d', 'now') < strftime('%m-%d', birthday)) AS age FROM Player JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE sprint_speed >= 97 AND date >= '2013-01-01 00:00:00' AND date <= '2015-12-31 00:00:00';\t----- bird -----\teuropean_football_2",
    "1032": "SELECT l.name AS league_name, COUNT(m.id) AS total_matches FROM Match m JOIN League l ON m.league_id = l.id GROUP BY l.name ORDER BY total_matches DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1033": "SELECT AVG(height) AS average_height FROM Player WHERE birthday >= '1990-01-01 00:00:00' AND birthday < '1996-01-01 00:00:00';\t----- bird -----\teuropean_football_2",
    "1034": "SELECT `player_api_id` FROM `Player_Attributes` WHERE `overall_rating` > (SELECT AVG(`overall_rating`) FROM `Player_Attributes`) AND substr(`date`,1,4) = '2010' ORDER BY `overall_rating` DESC;\t----- bird -----\teuropean_football_2",
    "1035": "SELECT Team.team_fifa_api_id FROM Team JOIN Team_Attributes ON Team.team_fifa_api_id = Team_Attributes.team_fifa_api_id WHERE Team_Attributes.buildUpPlaySpeed BETWEEN 51 AND 59;\t----- bird -----\teuropean_football_2",
    "1036": "SELECT Team.team_long_name FROM Team JOIN Team_Attributes ON Team.team_api_id = Team_Attributes.team_api_id WHERE Team_Attributes.buildUpPlayPassing > (SELECT AVG(buildUpPlayPassing) FROM Team_Attributes WHERE buildUpPlayPassing IS NOT NULL) AND strftime('%Y', Team_Attributes.date) = '2012';\t----- bird -----\teuropean_football_2",
    "1037": "SELECT DIVIDE(MULTIPLY((SELECT COUNT(*) FROM Player_Attributes WHERE preferred_foot = 'left' AND player_fifa_api_id IN (SELECT player_fifa_api_id FROM Player WHERE birthday BETWEEN '1987-01-01 00:00:00' AND '1992-12-31 00:00:00')), 1.0), (SELECT COUNT(*) FROM Player_Attributes WHERE player_fifa_api_id IN (SELECT player_fifa_api_id FROM Player WHERE birthday BETWEEN '1987-01-01 00:00:00' AND '1992-12-31 00:00:00')))*100 as percentage_left_foot_players;\t----- bird -----\teuropean_football_2",
    "1038": "SELECT l.name AS league_name, SUM(m.home_team_goal + m.away_team_goal) AS total_goals FROM Match m JOIN League l ON m.league_id = l.id GROUP BY l.name ORDER BY total_goals ASC LIMIT 5;\t----- bird -----\teuropean_football_2",
    "1039": "SELECT ROUND(SUM(long_shots) / COUNT(player_fifa_api_id), 2) AS average_long_shots FROM Player_Attributes JOIN Player ON Player_Attributes.player_api_id = Player.player_api_id WHERE player_name = 'Ahmed Samir Farag';\t----- bird -----\teuropean_football_2",
    "1040": "SELECT Player.player_name FROM Player JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE Player.height > 180 GROUP BY Player.player_name ORDER BY AVG(Player_Attributes.heading_accuracy) DESC LIMIT 10;\t----- bird -----\teuropean_football_2",
    "1041": "SELECT Team.team_long_name FROM Team JOIN Team_Attributes ON Team.team_api_id = Team_Attributes.team_api_id WHERE Team_Attributes.buildUpPlayDribblingClass = 'Normal' AND Team_Attributes.date >= '2014-01-01 00:00:00' AND Team_Attributes.date <= '2014-01-31 00:00:00' AND Team_Attributes.chanceCreationPassing > (SELECT AVG(chanceCreationPassing) FROM Team_Attributes) ORDER BY Team_Attributes.chanceCreationPassing DESC;\t----- bird -----\teuropean_football_2",
    "1042": "SELECT l.name AS name_of_league FROM Match m JOIN League l ON m.league_id = l.id WHERE m.season = '2009/2010' GROUP BY l.name HAVING AVG(m.home_team_goal) > AVG(m.away_team_goal)\t----- bird -----\teuropean_football_2",
    "1043": "SELECT team_short_name FROM Team WHERE team_long_name = 'Queens Park Rangers';\t----- bird -----\teuropean_football_2",
    "1044": "SELECT `player_name` FROM `Player` WHERE substr(`birthday`, 1, 4) = '1970' AND substr(`birthday`, 6, 2) = '10';\t----- bird -----\teuropean_football_2",
    "1045": "SELECT `attacking_work_rate` FROM `Player_Attributes` JOIN `Player` ON `Player_Attributes`.`player_api_id` = `Player`.`player_api_id` WHERE `Player`.`player_name` = 'Franco Zennaro';\t----- bird -----\teuropean_football_2",
    "1046": "SELECT Team.team_long_name, Team_Attributes.buildUpPlayPositioningClass FROM Team JOIN Team_Attributes ON Team.team_api_id = Team_Attributes.team_api_id WHERE Team.team_long_name = 'ADO Den Haag' AND Team_Attributes.buildUpPlayPositioningClass = 'Free Form';\t----- bird -----\teuropean_football_2",
    "1047": "SELECT p.heading_accuracy, p.finishing FROM Player_Attributes p JOIN Player pl ON p.player_api_id = pl.player_api_id WHERE pl.player_name = 'Francois Affolter' AND p.date = '2014-09-18 00:00:00';\t----- bird -----\teuropean_football_2",
    "1048": "SELECT `overall_rating` FROM `Player_Attributes` WHERE `player_api_id` = ( SELECT `player_api_id` FROM `Player` WHERE `player_name` = 'Gabriel Tamas' ) AND strftime('%Y', `date`) = '2011';\t----- bird -----\teuropean_football_2",
    "1049": "SELECT COUNT(*) FROM Match JOIN League ON Match.league_id = League.id WHERE League.name = 'Scotland Premier League' AND Match.season = '2015/2016';\t----- bird -----\teuropean_football_2",
    "1050": "SELECT preferred_foot FROM Player_Attributes WHERE date = (SELECT MAX(birthday) FROM Player)\t----- bird -----\teuropean_football_2",
    "1051": "SELECT `player_name`, `potential` FROM `Player` JOIN `Player_Attributes` ON `Player`.`player_api_id` = `Player_Attributes`.`player_api_id` WHERE `potential` = (SELECT MAX(`potential`) FROM `Player_Attributes`)\t----- bird -----\teuropean_football_2",
    "1052": "SELECT COUNT(*) FROM Player_Attributes JOIN Player ON Player_Attributes.player_api_id = Player.player_api_id WHERE Player.weight < 130 AND Player_Attributes.preferred_foot = 'left' AND Player_Attributes.attacking_work_rate = 'high';\t----- bird -----\teuropean_football_2",
    "1053": "SELECT Team.team_short_name FROM Team JOIN Team_Attributes ON Team.team_api_id = Team_Attributes.team_api_id WHERE Team_Attributes.chanceCreationPassingClass = 'Risky';\t----- bird -----\teuropean_football_2",
    "1054": "SELECT `defensive_work_rate` FROM `Player_Attributes` WHERE `player_api_id` = (SELECT `player_api_id` FROM `Player` WHERE `player_name` = 'David Wilson');\t----- bird -----\teuropean_football_2",
    "1055": "SELECT p.player_name, p.birthday FROM Player_Attributes pa JOIN Player p ON pa.player_api_id = p.player_api_id WHERE pa.overall_rating = (SELECT MAX(overall_rating) FROM Player_Attributes);\t----- bird -----\teuropean_football_2",
    "1056": "SELECT `name` FROM `League` WHERE `country_id` = (SELECT `id` FROM `Country` WHERE `name` = 'Netherlands');\t----- bird -----\teuropean_football_2",
    "1057": "SELECT AVG(home_team_goal) FROM Match JOIN Country ON Match.country_id = Country.id WHERE Country.name = 'Poland' AND Match.season = '2010/2011';\t----- bird -----\teuropean_football_2",
    "1058": "SELECT Player.player_name FROM Player JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE Player.height = (SELECT MAX(height) FROM Player) GROUP BY Player.player_name ORDER BY AVG(Player_Attributes.finishing) DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1059": "SELECT player_name FROM Player WHERE height > 180;\t----- bird -----\teuropean_football_2",
    "1060": "SELECT COUNT(*) FROM Player WHERE strftime('%Y', birthday) > '1990';\t----- bird -----\teuropean_football_2",
    "1061": "SELECT COUNT(*) FROM Player JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id JOIN Team ON Player_Attributes.player_api_id = Team.team_api_id JOIN Team_Attributes ON Team.team_api_id = Team_Attributes.team_api_id WHERE Player.player_name LIKE 'Adam%' AND Player.weight > 170 AND Team.team_long_name = 'Fast';\t----- bird -----\teuropean_football_2",
    "1062": "SELECT Player.player_name FROM Player JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE Player_Attributes.overall_rating > 80 AND strftime('%Y', Player_Attributes.date) BETWEEN '2008' AND '2010';\t----- bird -----\teuropean_football_2",
    "1063": "SELECT potential FROM Player_Attributes JOIN Player ON Player_Attributes.player_api_id = Player.player_api_id WHERE Player.player_name = 'Aaron Doran';\t----- bird -----\teuropean_football_2",
    "1064": "SELECT * FROM Player_Attributes WHERE preferred_foot = 'left';\t----- bird -----\teuropean_football_2",
    "1065": "SELECT Team.team_long_name FROM Team JOIN Team_Attributes ON Team.team_api_id = Team_Attributes.team_api_id WHERE Team_Attributes.buildUpPlaySpeedClass = 'Fast';\t----- bird -----\teuropean_football_2",
    "1066": "SELECT `buildUpPlayPassingClass` FROM `Team_Attributes` JOIN `Team` ON `Team_Attributes`.`team_api_id` = `Team`.`team_api_id` WHERE `Team`.`team_short_name` = 'CLB';\t----- bird -----\teuropean_football_2",
    "1067": "SELECT Team.team_short_name FROM Team JOIN Team_Attributes ON Team.team_api_id = Team_Attributes.team_api_id WHERE Team_Attributes.buildUpPlayPassing > 70;\t----- bird -----\teuropean_football_2",
    "1068": "SELECT AVG(overall_rating) AS average_rating FROM Player_Attributes JOIN Player ON Player_Attributes.player_api_id = Player.player_api_id WHERE Player.height > 170 AND strftime('%Y', Player_Attributes.date) BETWEEN '2010' AND '2015';\t----- bird -----\teuropean_football_2",
    "1069": "SELECT player_name FROM Player WHERE height = (SELECT MIN(height) FROM Player);\t----- bird -----\teuropean_football_2",
    "1070": "SELECT c.name FROM League l JOIN Country c ON l.country_id = c.id WHERE l.name = 'Italy Serie A';\t----- bird -----\teuropean_football_2",
    "1071": "SELECT Team.team_short_name FROM Team JOIN Team_Attributes ON Team.team_api_id = Team_Attributes.team_api_id WHERE Team_Attributes.buildUpPlaySpeed = 31 AND Team_Attributes.buildUpPlayDribbling = 53 AND Team_Attributes.buildUpPlayPassing = 32;\t----- bird -----\teuropean_football_2",
    "1072": "SELECT AVG(overall_rating) FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Aaron Doran');\t----- bird -----\teuropean_football_2",
    "1073": "SELECT COUNT(*) FROM Match JOIN League ON Match.league_id = League.id WHERE League.name = 'Germany 1. Bundesliga' AND strftime('%Y-%m', Match.date) BETWEEN '2008-08' AND '2008-10';\t----- bird -----\teuropean_football_2",
    "1074": "SELECT Team.team_short_name FROM Match JOIN Team ON Match.home_team_api_id = Team.team_api_id WHERE Match.home_team_goal = 10;\t----- bird -----\teuropean_football_2",
    "1075": "SELECT Player.player_name FROM Player_Attributes JOIN Player ON Player_Attributes.player_api_id = Player.player_api_id WHERE Player_Attributes.balance = (SELECT MAX(balance) FROM Player_Attributes WHERE potential = 61) AND Player_Attributes.potential = 61;\t----- bird -----\teuropean_football_2",
    "1076": "SELECT AVG(ball_control) AS avg_ball_control FROM Player_Attributes JOIN Player ON Player_Attributes.player_api_id = Player.player_api_id WHERE Player.player_name = 'Abdou Diallo' OR Player.player_name = 'Aaron Appindangoye' GROUP BY Player.player_name;\t----- bird -----\teuropean_football_2",
    "1077": "SELECT team_long_name FROM Team WHERE team_short_name = 'GEN';\t----- bird -----\teuropean_football_2",
    "1078": "SELECT player_name, birthday FROM Player WHERE player_name = 'Aaron Lennon' OR player_name = 'Abdelaziz Barrada';\t----- bird -----\teuropean_football_2",
    "1079": "SELECT player_name FROM Player WHERE height = (SELECT MAX(height) FROM Player)\t----- bird -----\teuropean_football_2",
    "1080": "SELECT COUNT(*) FROM Player_Attributes WHERE preferred_foot = 'left' AND attacking_work_rate = 'low';\t----- bird -----\teuropean_football_2",
    "1081": "SELECT Country.name FROM League JOIN Country ON League.country_id = Country.id WHERE League.name = 'Belgium Jupiler League';\t----- bird -----\teuropean_football_2",
    "1082": "SELECT League.name FROM League JOIN Country ON League.country_id = Country.id WHERE Country.name = 'Germany';\t----- bird -----\teuropean_football_2",
    "1083": "SELECT Player.player_name FROM Player_Attributes JOIN Player ON Player_Attributes.player_api_id = Player.player_api_id WHERE overall_rating = (SELECT MAX(overall_rating) FROM Player_Attributes)\t----- bird -----\teuropean_football_2",
    "1084": "SELECT COUNT(*) FROM Player_Attributes JOIN Player ON Player_Attributes.player_api_id = Player.player_api_id WHERE strftime('%Y', Player.birthday) < '1986' AND Player_Attributes.defensive_work_rate = 'high';\t----- bird -----\teuropean_football_2",
    "1085": "SELECT `player_name` FROM `Player` WHERE `player_api_id` IN ( SELECT `player_api_id` FROM `Player_Attributes` WHERE `crossing` = ( SELECT MAX(`crossing`) FROM `Player_Attributes` WHERE `player_api_id` IN ( SELECT `player_api_id` FROM `Player` WHERE `player_name` IN ('Alexis', 'Ariel Borysiuk', 'Arouna Kone') ) ) );\t----- bird -----\teuropean_football_2",
    "1086": "SELECT heading_accuracy FROM Player_Attributes JOIN Player ON Player_Attributes.player_api_id = Player.player_api_id WHERE Player.player_name = 'Ariel Borysiuk';\t----- bird -----\teuropean_football_2",
    "1087": "SELECT COUNT(*) FROM Player_Attributes JOIN Player ON Player_Attributes.player_api_id = Player.player_api_id WHERE Player.height > 180 AND Player_Attributes.volleys > 70;\t----- bird -----\teuropean_football_2",
    "1088": "SELECT Player.player_name FROM Player JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE Player_Attributes.volleys > 70 AND Player_Attributes.dribbling > 70;\t----- bird -----\teuropean_football_2",
    "1089": "SELECT COUNT(*) FROM Match JOIN Country ON Match.country_id = Country.id WHERE Country.name = 'Belgium' AND season = '2008/2009';\t----- bird -----\teuropean_football_2",
    "1090": "SELECT p.long_passing FROM Player p WHERE p.birthday = (SELECT MAX(birthday) FROM Player)\t----- bird -----\teuropean_football_2",
    "1091": "SELECT COUNT(*) FROM Match JOIN League ON Match.league_id = League.id WHERE League.name = 'Belgium Jupiler League' AND strftime('%Y', Match.date) = '2009' AND strftime('%m', Match.date) = '04';\t----- bird -----\teuropean_football_2",
    "1092": "SELECT League.name FROM Match JOIN League ON Match.league_id = League.id WHERE Match.season = '2008/2009' GROUP BY Match.league_id ORDER BY COUNT(*) DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1093": "SELECT AVG(overall_rating) AS average_overall_rating FROM Player_Attributes INNER JOIN Player ON Player_Attributes.player_api_id = Player.player_api_id WHERE strftime('%Y', birthday) < '1986';\t----- bird -----\teuropean_football_2",
    "1094": "SELECT ((SELECT overall_rating FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Ariel Borysiuk')) - (SELECT overall_rating FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Paulin Puel'))) * 100 / (SELECT overall_rating FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Paulin Puel')) as percentage_higher;\t----- bird -----\teuropean_football_2",
    "1095": "SELECT AVG(buildUpPlaySpeed) AS average_build_up_play_speed FROM Team_Attributes JOIN Team ON Team_Attributes.team_api_id = Team.team_api_id WHERE team_long_name = 'Heart of Midlothian';\t----- bird -----\teuropean_football_2",
    "1096": "SELECT AVG(Player_Attributes.overall_rating) AS average_overall_rating FROM Player_Attributes JOIN Player ON Player_Attributes.player_api_id = Player.player_api_id WHERE Player.player_name = 'Pietro Marino';\t----- bird -----\teuropean_football_2",
    "1097": "SELECT SUM(crossing) AS total_crossing_score FROM Player_Attributes JOIN Player AS T2 ON Player_Attributes.player_api_id = T2.player_api_id WHERE T2.player_name = 'Aaron Lennox';\t----- bird -----\teuropean_football_2",
    "1098": "SELECT MAX(chanceCreationPassing) AS highest_chance_creation_passing_score, chanceCreationPassingClass AS classification FROM Team_Attributes JOIN Team ON Team_Attributes.team_api_id = Team.team_api_id WHERE team_long_name = 'Ajax';\t----- bird -----\teuropean_football_2",
    "1099": "SELECT preferred_foot FROM Player_Attributes JOIN Player ON Player_Attributes.player_api_id = Player.player_api_id WHERE player_name = 'Abdou Diallo';\t----- bird -----\teuropean_football_2",
    "1100": "SELECT MAX(overall_rating) AS highest_overall_rating FROM Player_Attributes JOIN Player ON Player_Attributes.player_api_id = Player.player_api_id WHERE player_name = 'Dorlan Pabon';\t----- bird -----\teuropean_football_2",
    "1101": "SELECT AVG(away_team_goal) FROM Match JOIN Team ON Match.away_team_api_id = Team.team_api_id WHERE Team.team_long_name = 'Parma' AND Match.country_id = (SELECT id FROM Country WHERE name = 'Italy');\t----- bird -----\teuropean_football_2",
    "1102": "SELECT Player.player_name FROM Player JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE Player_Attributes.overall_rating = 77 AND Player_Attributes.date = '2016-06-23' ORDER BY Player.birthday ASC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1103": "SELECT overall_rating FROM Player_Attributes JOIN Player ON Player_Attributes.player_api_id = Player.player_api_id WHERE Player.player_name = 'Aaron Mooy' AND Player_Attributes.date = '2016-02-04 00:00:00';\t----- bird -----\teuropean_football_2",
    "1104": "SELECT potential FROM Player_Attributes JOIN Player ON Player_Attributes.player_api_id = Player.player_api_id WHERE player_name = 'Francesco Parravicini' AND date = '2010-08-30 00:00:00';\t----- bird -----\teuropean_football_2",
    "1105": "SELECT attacking_work_rate FROM Player_Attributes JOIN Player ON Player_Attributes.player_api_id = Player.player_api_id WHERE Player.player_name = 'Francesco Migliore' AND Player_Attributes.date = '2015-05-01 00:00:00';\t----- bird -----\teuropean_football_2",
    "1106": "SELECT Player_Attributes.defensive_work_rate FROM Player_Attributes JOIN Player ON Player_Attributes.player_api_id = Player.player_api_id WHERE Player.player_name = 'Kevin Berigaud' AND Player_Attributes.date = '2013-02-22 00:00:00';\t----- bird -----\teuropean_football_2",
    "1107": "SELECT MAX(`crossing`) AS highest_crossing_score FROM `Player_Attributes` WHERE `player_api_id` = (SELECT `player_api_id` FROM `Player` WHERE `player_name` = 'Kevin Constant');\t----- bird -----\teuropean_football_2",
    "1108": "SELECT `buildUpPlaySpeedClass` FROM `Team_Attributes` JOIN `Team` ON `Team_Attributes`.`team_api_id` = `Team`.`team_api_id` WHERE `Team`.`team_long_name` = 'Willem II' AND `Team_Attributes`.`date` = '2012-02-22 00:00:00';\t----- bird -----\teuropean_football_2",
    "1109": "SELECT Team.team_short_name, Team_Attributes.buildUpPlayDribblingClass FROM Team JOIN Team_Attributes ON Team.team_api_id = Team_Attributes.team_api_id JOIN Match ON Team.team_api_id = Match.home_team_api_id WHERE Team.team_short_name = 'LEI' AND Match.date = '2015-09-10 00:00:00'\t----- bird -----\teuropean_football_2",
    "1110": "SELECT `buildUpPlayPassingClass` FROM `Team_Attributes` JOIN `Team` ON `Team_Attributes`.`team_api_id` = `Team`.`team_api_id` WHERE `Team`.`team_long_name` = 'FC Lorient' AND `Team_Attributes`.`date` = '2010-02-22';\t----- bird -----\teuropean_football_2",
    "1111": "SELECT `chanceCreationPassingClass` FROM `Team_Attributes` JOIN `Team` ON `Team_Attributes`.`team_api_id` = `Team`.`team_api_id` WHERE `Team`.`team_long_name` = 'PEC Zwolle' AND `Team_Attributes`.`date` = '2013-09-20 00:00:00';\t----- bird -----\teuropean_football_2",
    "1112": "SELECT `chanceCreationCrossingClass` FROM `Team_Attributes` JOIN `Team` ON `Team_Attributes`.`team_api_id` = `Team`.`team_api_id` WHERE `Team`.`team_long_name` = 'Hull City' AND `Team_Attributes`.`date` = '2010-02-22 00:00:00';\t----- bird -----\teuropean_football_2",
    "1113": "SELECT Team_Attributes.defenceAggressionClass FROM Team_Attributes JOIN Team ON Team_Attributes.team_api_id = Team.team_api_id WHERE Team.team_long_name = 'Hannover 96' AND Team_Attributes.date = '2015-09-10 00:00:00';\t----- bird -----\teuropean_football_2",
    "1114": "SELECT AVG(overall_rating) AS average_overall_rating FROM Player_Attributes JOIN Player ON Player_Attributes.player_api_id = Player.player_api_id WHERE Player.player_name = 'Marko Arnautovic' AND date BETWEEN '2007-02-22 00:00:00' AND '2016-04-21 00:00:00';\t----- bird -----\teuropean_football_2",
    "1115": "SELECT ((SELECT overall_rating FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Landon Donovan') AND date = '2013-07-12') - (SELECT overall_rating FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Jordan Bowery') AND date = '2013-07-12')) * 100 / (SELECT overall_rating FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Landon Donovan') AND date = '2013-07-12') as percentage;\t----- bird -----\teuropean_football_2",
    "1116": "SELECT player_name FROM Player ORDER BY height DESC LIMIT 5;\t----- bird -----\teuropean_football_2",
    "1117": "SELECT player_api_id FROM Player ORDER BY weight DESC LIMIT 10;\t----- bird -----\teuropean_football_2",
    "1118": "SELECT player_name FROM Player WHERE strftime('%Y', 'now') - strftime('%Y', birthday) > 34;\t----- bird -----\teuropean_football_2",
    "1119": "SELECT SUM(home_team_goal) FROM Match JOIN Player ON Match.home_player_1 = Player.player_api_id WHERE Player.player_name = 'Aaron Lennon';\t----- bird -----\teuropean_football_2",
    "1120": "SELECT SUM(M.away_team_goal) AS total_away_goals FROM Match M JOIN Player P ON M.away_player_1 = P.player_api_id OR M.away_player_2 = P.player_api_id OR M.away_player_3 = P.player_api_id OR M.away_player_4 = P.player_api_id OR M.away_player_5 = P.player_api_id OR M.away_player_6 = P.player_api_id OR M.away_player_7 = P.player_api_id OR M.away_player_8 = P.player_api_id OR M.away_player_9 = P.player_api_id OR M.away_player_10 = P.player_api_id OR M.away_player_11 = P.player_api_id WHERE P.player_name = 'Daan Smith' OR P.player_name = 'Filipe Ferreira';\t----- bird -----\teuropean_football_2",
    "1121": "SELECT SUM(M.home_team_goal) FROM Match M JOIN Player P ON M.home_player_1 = P.player_api_id OR M.home_player_2 = P.player_api_id OR M.home_player_3 = P.player_api_id OR M.home_player_4 = P.player_api_id OR M.home_player_5 = P.player_api_id OR M.home_player_6 = P.player_api_id OR M.home_player_7 = P.player_api_id OR M.home_player_8 = P.player_api_id OR M.home_player_9 = P.player_api_id OR M.home_player_10 = P.player_api_id OR M.home_player_11 = P.player_api_id WHERE strftime('%Y', 'now') - strftime('%Y', P.birthday) <= 30;\t----- bird -----\teuropean_football_2",
    "1122": "SELECT Player.player_name FROM Player JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE Player_Attributes.overall_rating = (SELECT MAX(overall_rating) FROM Player_Attributes) LIMIT 10;\t----- bird -----\teuropean_football_2",
    "1123": "SELECT player_name FROM Player WHERE player_api_id = ( SELECT player_api_id FROM Player_Attributes WHERE potential = ( SELECT MAX(potential) FROM Player_Attributes ) )\t----- bird -----\teuropean_football_2",
    "1124": "SELECT Player.player_name FROM Player JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE Player_Attributes.attacking_work_rate = 'high';\t----- bird -----\teuropean_football_2",
    "1125": "SELECT Player.player_name FROM Player JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE Player_Attributes.finishing = 1 ORDER BY strftime('%Y-%m-%d', 'now') - strftime('%Y-%m-%d', Player.birthday) DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1126": "SELECT `player_name` FROM `Player` JOIN `Country` ON `Player`.`player_api_id` = `Country`.`id` WHERE `Country`.`name` = 'Belgium';\t----- bird -----\teuropean_football_2",
    "1127": "SELECT Player.player_name, Country.name FROM Player JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id JOIN Match ON Player.player_api_id = Match.home_player_1 OR Player.player_api_id = Match.home_player_2 OR Player.player_api_id = Match.home_player_3 OR Player.player_api_id = Match.home_player_4 OR Player.player_api_id = Match.home_player_5 OR Player.player_api_id = Match.home_player_6 OR Player.player_api_id = Match.home_player_7 OR Player.player_api_id = Match.home_player_8 OR Player.player_api_id = Match.home_player_9 OR Player.player_api_id = Match.home_player_10 OR Player.player_api_id = Match.home_player_11 OR Player.player_api_id = Match.away_player_1 OR Player.player_api_id = Match.away_player_2 OR Player.player_api_id = Match.away_player_3 OR Player.player_api_id = Match.away_player_4 OR Player\t----- bird -----\teuropean_football_2",
    "1128": "SELECT Country.name FROM Player JOIN Country ON Player.country_id = Country.id GROUP BY Country.name ORDER BY AVG(Player.weight) DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1129": "SELECT Team.team_long_name FROM Team JOIN Team_Attributes ON Team.team_api_id = Team_Attributes.team_api_id WHERE Team_Attributes.buildUpPlaySpeedClass = 'Slow';\t----- bird -----\teuropean_football_2",
    "1130": "SELECT Team.team_short_name FROM Team JOIN Team_Attributes ON Team.team_api_id = Team_Attributes.team_api_id WHERE Team_Attributes.chanceCreationPassingClass = 'Safe';\t----- bird -----\teuropean_football_2",
    "1131": "SELECT AVG(height) AS average_height FROM Player JOIN Country ON Player.country_id = Country.id WHERE Country.name = 'Italy';\t----- bird -----\teuropean_football_2",
    "1132": "SELECT player_name FROM Player WHERE height > 180 ORDER BY player_name LIMIT 3;\t----- bird -----\teuropean_football_2",
    "1133": "SELECT COUNT(*) FROM Player WHERE player_name LIKE 'Aaron%' AND birthday > '1990';\t----- bird -----\teuropean_football_2",
    "1134": "SELECT (abs((SELECT jumping FROM Player_Attributes WHERE id = 6) - (SELECT jumping FROM Player_Attributes WHERE id = 23))) AS difference;\t----- bird -----\teuropean_football_2",
    "1135": "SELECT `player_api_id` FROM `Player_Attributes` WHERE `potential` = (SELECT MIN(`potential`) FROM `Player_Attributes`) AND `preferred_foot` = 'right' ORDER BY `overall_rating` DESC LIMIT 3;\t----- bird -----\teuropean_football_2",
    "1136": "SELECT COUNT(*) FROM Player_Attributes WHERE crossing = (SELECT MAX(crossing) FROM Player_Attributes) AND preferred_foot = 'left';\t----- bird -----\teuropean_football_2",
    "1137": "SELECT ROUND((SELECT COUNT(*) FROM Player_Attributes WHERE stamina > 80 AND strength > 80) * 100.0 / (SELECT COUNT(*) FROM Player_Attributes), 2) AS percentage_of_players_above_80_strength_and_stamina;\t----- bird -----\teuropean_football_2",
    "1138": "SELECT `name` FROM `League` WHERE `name` = 'Poland Ekstraklasa';\t----- bird -----\teuropean_football_2",
    "1139": "SELECT home_team_goal, away_team_goal FROM Match WHERE date LIKE '2008-09-24%' AND league_id = (SELECT id FROM League WHERE name = 'Belgian Jupiler League');\t----- bird -----\teuropean_football_2",
    "1140": "SELECT sprint_speed, agility, acceleration FROM Player_Attributes JOIN Player ON Player_Attributes.player_api_id = Player.player_api_id WHERE player_name = 'Alexis Blin';\t----- bird -----\teuropean_football_2",
    "1141": "SELECT `Team`.`team_long_name`, `Team_Attributes`.`buildUpPlaySpeedClass` FROM `Team` JOIN `Team_Attributes` ON `Team`.`team_api_id` = `Team_Attributes`.`team_api_id` WHERE `Team`.`team_long_name` = 'KSV Cercle Brugge';\t----- bird -----\teuropean_football_2",
    "1142": "SELECT COUNT(*) FROM Match WHERE league_id = (SELECT id FROM League WHERE name = 'Italian Serie A') AND season = '2015/2016';\t----- bird -----\teuropean_football_2",
    "1143": "SELECT MAX(home_team_goal) FROM Match WHERE league_id = (SELECT id FROM League WHERE name = 'Netherlands Eredivisie');\t----- bird -----\teuropean_football_2",
    "1144": "SELECT Player.player_name, Player.weight, Player_Attributes.finishing, Player_Attributes.curve FROM Player JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE Player.weight = (SELECT MAX(weight) FROM Player)\t----- bird -----\teuropean_football_2",
    "1145": "SELECT League.name, COUNT(Match.id) AS num_games FROM Match JOIN League ON Match.league_id = League.id WHERE Match.season = '2015/2016' GROUP BY League.name ORDER BY num_games DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1146": "SELECT Team.team_long_name FROM Match JOIN Team ON Match.away_team_api_id = Team.team_api_id WHERE away_team_goal = (SELECT MAX(away_team_goal) FROM Match)\t----- bird -----\teuropean_football_2",
    "1147": "SELECT Player.player_name FROM Player JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE Player_Attributes.overall_rating = (SELECT MAX(overall_rating) FROM Player_Attributes)\t----- bird -----\teuropean_football_2",
    "1148": "SELECT (CAST(COUNT(*) AS FLOAT) / (SELECT COUNT(*) FROM Player)) * 100 AS percentage FROM Player_Attributes JOIN Player ON Player_Attributes.player_api_id = Player.player_api_id WHERE Player.height < 180 AND Player_Attributes.strength > 70;\t----- bird -----\teuropean_football_2",
    "1149": "SELECT ABS(COUNT(Patient.ID) WHERE SEX = 'M' AND Admission = '+') - COUNT(Patient.ID) WHERE SEX = 'M' AND Admission = '-') as Deviation FROM Patient WHERE SEX = 'M' AND (Admission = '+' OR Admission = '-');\t----- bird -----\tthrombosis_prediction",
    "1150": "SELECT ROUND((COUNT(ID) WHERE year(Birthday) > '1930' AND SEX = 'F') / COUNT(ID) WHERE SEX = 'F') * 100 AS Percentage FROM Patient;\t----- bird -----\tthrombosis_prediction",
    "1151": "SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM Patient WHERE YEAR(Birthday) BETWEEN 1930 AND 1940) AS Percentage FROM Patient WHERE YEAR(Birthday) BETWEEN 1930 AND 1940 AND Admission = '+';\t----- bird -----\tthrombosis_prediction",
    "1152": "SELECT COUNT(Patient.ID) AS Total_SLE_Patients, SUM(CASE WHEN Patient.Admission = '+' THEN 1 ELSE 0 END) AS Inpatient_SLE_Patients, SUM(CASE WHEN Patient.Admission = '-' THEN 1 ELSE 0 END) AS Outpatient_SLE_Patients, CAST(SUM(CASE WHEN Patient.Admission = '+' THEN 1 ELSE 0 END) AS FLOAT) / CAST(SUM(CASE WHEN Patient.Admission = '-' THEN 1 ELSE 0 END) AS FLOAT) AS Ratio_Inpatient_Outpatient FROM Patient WHERE Patient.Diagnosis = 'SLE';\t----- bird -----\tthrombosis_prediction",
    "1153": "SELECT Diagnosis FROM Patient WHERE ID = 30609; SELECT Date FROM Laboratory WHERE ID = 30609;\t----- bird -----\tthrombosis_prediction",
    "1154": "SELECT Patient.SEX, Patient.Birthday, Examination.`Examination Date`, Examination.Symptoms FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Patient.ID = 163109;\t----- bird -----\tthrombosis_prediction",
    "1155": "SELECT Patient.ID, Patient.SEX, Patient.Birthday FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE LDH > 500;\t----- bird -----\tthrombosis_prediction",
    "1156": "SELECT Patient.ID, YEAR(CURRENT_TIMESTAMP) - YEAR(Patient.Birthday) AS Age FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.RVVT = '+';\t----- bird -----\tthrombosis_prediction",
    "1157": "SELECT Patient.ID, Patient.SEX, Patient.Diagnosis FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.Thrombosis = 2;\t----- bird -----\tthrombosis_prediction",
    "1158": "SELECT Patient.ID, Patient.SEX, Patient.Birthday FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE YEAR(Patient.Birthday) = 1937 AND `T-CHO` >= 250;\t----- bird -----\tthrombosis_prediction",
    "1159": "SELECT Patient.ID, Patient.SEX, Patient.Diagnosis FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.ALB < 3.5;\t----- bird -----\tthrombosis_prediction",
    "1160": "SELECT ROUND((COUNT(DISTINCT p.ID) / (SELECT COUNT(DISTINCT ID) FROM Patient WHERE SEX = 'F')) * 100, 2) AS Percentage FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE p.SEX = 'F' AND (l.TP < 6.0 OR l.TP > 8.5);\t----- bird -----\tthrombosis_prediction",
    "1161": "SELECT AVG(`aCL IgG`) AS Average_aCL_IgG FROM Examination WHERE ID IN (SELECT ID FROM Patient WHERE Admission = '+' AND (YEAR(CURRENT_TIMESTAMP) - YEAR(Birthday) >= 50));\t----- bird -----\tthrombosis_prediction",
    "1162": "SELECT COUNT(*) FROM Patient WHERE SEX = 'F' AND YEAR(Description) = '1997' AND Admission = '-'\t----- bird -----\tthrombosis_prediction",
    "1163": "SELECT MIN(YEAR(`First Date`) - YEAR(Birthday)) AS \"Age of Youngest Patient at Initial Arrival\" FROM Patient;\t----- bird -----\tthrombosis_prediction",
    "1164": "SELECT COUNT(*) FROM Examination e JOIN Patient p ON e.ID = p.ID WHERE e.`Examination Date` LIKE '1997%' AND e.Thrombosis = 1 AND p.SEX = 'F';\t----- bird -----\tthrombosis_prediction",
    "1165": "SELECT MAX(year(Birthday)) - MIN(year(Birthday)) as Age_Gap FROM Patient WHERE ID IN ( SELECT ID FROM Laboratory WHERE TG >= 200 )\t----- bird -----\tthrombosis_prediction",
    "1166": "SELECT Patient.ID, Patient.SEX, Patient.Birthday, Examination.Symptoms, Examination.Diagnosis FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Patient.Birthday = (SELECT MIN(Birthday) FROM Patient);\t----- bird -----\tthrombosis_prediction",
    "1167": "SELECT ROUND(COUNT(DISTINCT L.ID) / 12, 2) AS Average_Male_Patients_Tested_Per_Month FROM Laboratory L JOIN Patient P ON L.ID = P.ID WHERE P.SEX = 'M' AND L.Date BETWEEN '1998-01-01' AND '1998-12-31';\t----- bird -----\tthrombosis_prediction",
    "1168": "SELECT MAX(L.Birthday) as Oldest_Patient_Birthday, L.`First Date` as Hospital_Arrival_Date, L.Date as Lab_Work_Completion_Date, (YEAR(L.Date) - YEAR(L.Birthday)) as Age_At_Lab_Work_Completion FROM Patient P JOIN Laboratory L ON P.ID = L.ID WHERE P.Diagnosis = 'SJS' ORDER BY L.Birthday DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1169": "SELECT DIVIDE( (SELECT COUNT(*) FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE p.SEX = 'M' AND l.UA <= 8.0), (SELECT COUNT(*) FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE p.SEX = 'F' AND l.UA <= 6.5) ) as ratio_male_to_female_abnormal_uric_acid_counts;\t----- bird -----\tthrombosis_prediction",
    "1170": "SELECT COUNT(DISTINCT p.ID) FROM Patient p LEFT JOIN Examination e ON p.ID = e.ID WHERE e.`Examination Date` IS NULL OR (YEAR(e.`Examination Date`) - YEAR(p.`First Date`)) >= 1;\t----- bird -----\tthrombosis_prediction",
    "1171": "SELECT COUNT(DISTINCT p.ID) FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE YEAR(p.Birthday) < 18 AND `Examination Date` BETWEEN '1990-01-01' AND '1993-12-31';\t----- bird -----\tthrombosis_prediction",
    "1172": "SELECT COUNT(*) FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE p.SEX = 'M' AND l.`T-BIL` > 2.0;\t----- bird -----\tthrombosis_prediction",
    "1173": "SELECT Diagnosis, COUNT(Diagnosis) AS DiagnosisCount FROM Examination WHERE `Examination Date` BETWEEN '1985-01-01' AND '1995-12-31' GROUP BY Diagnosis ORDER BY DiagnosisCount DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1174": "SELECT AVG(YEAR('1991-10-01') - YEAR(Birthday)) AS Average_Age FROM Patient WHERE ID IN (SELECT ID FROM Laboratory WHERE Date BETWEEN '1991-10-01' AND '1991-10-30');\t----- bird -----\tthrombosis_prediction",
    "1175": "SELECT SUBTRACT(year(e.`Examination Date`), year(p.Birthday)) as Age, e.Diagnosis FROM Examination e JOIN Patient p ON e.ID = p.ID WHERE e.`HGB` = (SELECT MAX(HGB) FROM Laboratory) LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1176": "SELECT `ANA` FROM Examination WHERE ID = 3605340 AND `Examination Date` = '1996-12-02';\t----- bird -----\tthrombosis_prediction",
    "1177": "SELECT `T-CHO` FROM Laboratory WHERE ID = 2927464 AND Date = '1995-09-04' AND `T-CHO` < 250;\t----- bird -----\tthrombosis_prediction",
    "1178": "SELECT Patient.SEX FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.Diagnosis = 'AORTITIS' ORDER BY Patient.`First Date` LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1179": "SELECT Patient.ID, Examination.`aCL IgM` FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Patient.Diagnosis = 'SLE' AND Patient.Description = '1994-02-19' AND Examination.`Examination Date` = '1993/11/12';\t----- bird -----\tthrombosis_prediction",
    "1180": "SELECT SEX FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE SEX = 'M' AND GPT = 9 AND Date = '1992-06-12';\t----- bird -----\tthrombosis_prediction",
    "1181": "SELECT SUBTRACT('1992', year(Birthday)) AS Age FROM Patient WHERE ID IN (SELECT ID FROM Laboratory WHERE UA = '8.4' AND Date = '1991-10-21');\t----- bird -----\tthrombosis_prediction",
    "1182": "SELECT COUNT(ID) FROM Laboratory WHERE ID = (SELECT ID FROM Patient WHERE `First Date` = '1991-06-13' AND Diagnosis = 'SJS') AND Date LIKE '1995%'\t----- bird -----\tthrombosis_prediction",
    "1183": "SELECT Patient.Diagnosis FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.`Examination Date` = '1997-01-27' AND Patient.`First Date` = '1997-01-27' AND Examination.Diagnosis = 'SLE';\t----- bird -----\tthrombosis_prediction",
    "1184": "SELECT Examination.Symptoms FROM Examination JOIN Patient ON Examination.ID = Patient.ID WHERE Patient.Birthday = '1959-03-01' AND Examination.`Examination Date` = '1993-09-27';\t----- bird -----\tthrombosis_prediction",
    "1185": "SELECT ((SELECT SUM(`T-CHO`) FROM Laboratory WHERE ID = (SELECT ID FROM Patient WHERE Birthday = '1959-02-18') AND Date LIKE '1981-11-%') - (SELECT SUM(`T-CHO`) FROM Laboratory WHERE ID = (SELECT ID FROM Patient WHERE Birthday = '1959-02-18') AND Date LIKE '1981-12-%')) / (SELECT SUM(`T-CHO`) FROM Laboratory WHERE ID = (SELECT ID FROM Patient WHERE Birthday = '1959-02-18') AND Date LIKE '1981-11-%') as Decrease_Rate;\t----- bird -----\tthrombosis_prediction",
    "1186": "SELECT Patient.ID FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Patient.Diagnosis = 'Behcet' AND YEAR(Examination.`Examination Date`) >= 1997 AND YEAR(Examination.`Examination Date`) < 1998;\t----- bird -----\tthrombosis_prediction",
    "1187": "SELECT Patient.ID FROM Examination JOIN Laboratory ON Examination.ID = Laboratory.ID JOIN Patient ON Examination.ID = Patient.ID WHERE Examination.`Examination Date` BETWEEN '1987-07-06' AND '1996-01-31' AND Laboratory.GPT > 30 AND Laboratory.ALB < 4;\t----- bird -----\tthrombosis_prediction",
    "1188": "SELECT Patient.ID FROM Patient WHERE SEX = 'F' AND YEAR(Birthday) = 1964 AND Admission = '+';\t----- bird -----\tthrombosis_prediction",
    "1189": "SELECT COUNT(*) FROM Examination WHERE Thrombosis = 2 AND `ANA Pattern` = 'S' AND `aCL IgM` > (SELECT AVG(`aCL IgM`) * 1.2 FROM Examination)\t----- bird -----\tthrombosis_prediction",
    "1190": "SELECT ROUND((COUNT(*) / (SELECT COUNT(*) FROM Laboratory WHERE `U-PRO` > 0 AND `U-PRO` < 30) * 100), 2) AS Percentage FROM Laboratory WHERE `U-PRO` > 0 AND `U-PRO` < 30 AND UA <= 6.5;\t----- bird -----\tthrombosis_prediction",
    "1191": "SELECT (COUNT(*) * 100.0) / (SELECT COUNT(*) FROM Patient WHERE SEX = 'M' AND YEAR(`First Date`) = '1981') FROM Patient WHERE SEX = 'M' AND YEAR(`First Date`) = '1981' AND Diagnosis = 'BEHCET';\t----- bird -----\tthrombosis_prediction",
    "1192": "SELECT Patient.ID, Patient.SEX, Patient.Birthday, Patient.`First Date` FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.Admission = '-' AND Laboratory.Date LIKE '1991-10%' AND Laboratory.`T-BIL` < 2.0;\t----- bird -----\tthrombosis_prediction",
    "1193": "SELECT COUNT(*) FROM Examination e JOIN Patient p ON e.ID = p.ID WHERE p.SEX = 'F' AND p.Birthday BETWEEN '1980-01-01' AND '1989-12-31' AND e.`ANA Pattern` != 'P';\t----- bird -----\tthrombosis_prediction",
    "1194": "SELECT Patient.SEX FROM Patient JOIN Examination ON Patient.ID = Examination.ID JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Examination.Diagnosis = 'PSS' AND Laboratory.CRP = '2+' AND Laboratory.CRE = 1 AND Laboratory.LDH = 123;\t----- bird -----\tthrombosis_prediction",
    "1195": "SELECT AVG(ALB) as AverageAlbuminLevel FROM Laboratory JOIN Patient ON Laboratory.ID = Patient.ID WHERE Patient.SEX = 'F' AND Laboratory.PLT > 400 AND Patient.Diagnosis = 'SLE'\t----- bird -----\tthrombosis_prediction",
    "1196": "SELECT Symptoms FROM Examination WHERE Diagnosis = 'SLE' GROUP BY Symptoms ORDER BY COUNT(*) DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1197": "SELECT `First Date`, Diagnosis FROM Patient WHERE ID = 48473;\t----- bird -----\tthrombosis_prediction",
    "1198": "SELECT COUNT(*) FROM Patient WHERE SEX = 'F' AND Diagnosis = 'APS';\t----- bird -----\tthrombosis_prediction",
    "1199": "SELECT COUNT(DISTINCT l.ID) FROM Laboratory l JOIN Patient p ON l.ID = p.ID WHERE YEAR(l.Date) = 1997 AND (l.TP < 6 OR l.TP > 8.5)\t----- bird -----\tthrombosis_prediction",
    "1200": "SELECT ROUND((COUNT(CASE WHEN Symptoms LIKE '%thrombocytopenia%' THEN 1 END) / COUNT(CASE WHEN Diagnosis LIKE '%SLE%' THEN 1 END)) * 100, 2) AS Proportion FROM Examination;\t----- bird -----\tthrombosis_prediction",
    "1201": "SELECT ROUND((COUNT(CASE WHEN YEAR(Birthday) = 1980 AND Diagnosis = 'RA' AND SEX = 'F' THEN 1 END) / COUNT(CASE WHEN YEAR(Birthday) = 1980 AND Diagnosis = 'RA' THEN 1 END)) * 100, 2) AS Percentage FROM Patient WHERE YEAR(Birthday) = 1980 AND Diagnosis = 'RA';\t----- bird -----\tthrombosis_prediction",
    "1202": "SELECT COUNT(Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Patient.SEX = 'M' AND Examination.`Examination Date` BETWEEN '1995-01-01' AND '1997-12-31' AND Examination.Diagnosis = 'BEHCET' AND Patient.Admission = '-'\t----- bird -----\tthrombosis_prediction",
    "1203": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.SEX = 'F' AND Laboratory.WBC < 3.5;\t----- bird -----\tthrombosis_prediction",
    "1204": "SELECT DATEDIFF(`Examination Date`, `First Date`) as Evaluation_Start_Time FROM Examination JOIN Patient ON Examination.ID = Patient.ID WHERE Patient.ID = 821298;\t----- bird -----\tthrombosis_prediction",
    "1205": "SELECT UA, SEX FROM Laboratory JOIN Patient ON Laboratory.ID = Patient.ID WHERE Laboratory.ID = 57266 AND (UA > 8.0 AND SEX = 'M') OR (UA > 6.5 AND SEX = 'F');\t----- bird -----\tthrombosis_prediction",
    "1206": "SELECT l.Date FROM Laboratory l WHERE l.ID = 48473 AND l.GOT >= 60;\t----- bird -----\tthrombosis_prediction",
    "1207": "SELECT Patient.ID, Patient.SEX, Patient.Birthday FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.GOT < 60 AND year(Laboratory.Date) = 1994;\t----- bird -----\tthrombosis_prediction",
    "1208": "SELECT Patient.ID FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.SEX = 'M' AND Laboratory.GPT >= 60;\t----- bird -----\tthrombosis_prediction",
    "1209": "SELECT Patient.ID, Patient.Birthday, Laboratory.GPT, Laboratory.Date, Patient.Diagnosis FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.GPT > 60 ORDER BY Patient.Birthday ASC;\t----- bird -----\tthrombosis_prediction",
    "1210": "SELECT AVG(LDH) FROM Laboratory WHERE LDH < 500;\t----- bird -----\tthrombosis_prediction",
    "1211": "SELECT Patient.ID, (YEAR(CURRENT_TIMESTAMP) - YEAR(Birthday)) AS Age FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE LDH BETWEEN 600 AND 800;\t----- bird -----\tthrombosis_prediction",
    "1212": "SELECT Patient.ID, Patient.Admission FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.ALP < 300;\t----- bird -----\tthrombosis_prediction",
    "1213": "SELECT Patient.ID FROM Patient WHERE Birthday = '1982-04-01'; SELECT ID, ALP FROM Laboratory WHERE ID = (SELECT ID FROM Patient WHERE Birthday = '1982-04-01') AND ALP < 300;\t----- bird -----\tthrombosis_prediction",
    "1214": "SELECT Patient.ID, Patient.SEX, Patient.Birthday FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.TP < 6.0;\t----- bird -----\tthrombosis_prediction",
    "1215": "SELECT Patient.ID, Patient.SEX, Laboratory.TP, Laboratory.Date, (Laboratory.TP - 8.5) AS Deviation FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.SEX = 'F' AND Laboratory.TP > 8.5;\t----- bird -----\tthrombosis_prediction",
    "1216": "SELECT Patient.ID, Patient.SEX, Patient.Birthday, Laboratory.ALB FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.SEX = 'M' AND (Laboratory.ALB <= 3.5 OR Laboratory.ALB >= 5.5) ORDER BY Patient.Birthday DESC;\t----- bird -----\tthrombosis_prediction",
    "1217": "SELECT Patient.ID FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE YEAR(Patient.Birthday) = 1982 AND Laboratory.ALB BETWEEN 3.5 AND 5.5;\t----- bird -----\tthrombosis_prediction",
    "1218": "SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM Patient WHERE SEX = 'F') AS Percentage FROM Laboratory JOIN Patient ON Laboratory.ID = Patient.ID WHERE (UA > 8.0 AND SEX = 'M') OR (UA > 6.5 AND SEX = 'F' AND SEX = 'F');\t----- bird -----\tthrombosis_prediction",
    "1219": "SELECT AVG(UA) AS Average_UA_Index FROM Laboratory JOIN Patient ON Laboratory.ID = Patient.ID WHERE Date = (SELECT MAX(Date) FROM Laboratory WHERE ID = Patient.ID) AND (UA < 8.0 AND SEX = 'M' OR UA < 6.5 AND SEX = 'F');\t----- bird -----\tthrombosis_prediction",
    "1220": "SELECT Patient.ID, Patient.SEX, Patient.Birthday FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.UN = 29;\t----- bird -----\tthrombosis_prediction",
    "1221": "SELECT Patient.ID, Patient.SEX, Patient.Birthday FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.UN < 30 AND Patient.Diagnosis = 'RA';\t----- bird -----\tthrombosis_prediction",
    "1222": "SELECT COUNT(*) FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE p.SEX = 'M' AND l.CRE >= 1.5;\t----- bird -----\tthrombosis_prediction",
    "1223": "SELECT CASE WHEN (SELECT COUNT(*) FROM Patient WHERE SEX = 'M' AND ID IN (SELECT ID FROM Laboratory WHERE CRE >= 1.5)) > (SELECT COUNT(*) FROM Patient WHERE SEX = 'F' AND ID IN (SELECT ID FROM Laboratory WHERE CRE >= 1.5)) THEN 'True' ELSE 'False' END as Result;\t----- bird -----\tthrombosis_prediction",
    "1224": "SELECT Patient.ID, Patient.SEX, Patient.Birthday FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE `T-BIL` = (SELECT MAX(`T-BIL`) FROM Laboratory)\t----- bird -----\tthrombosis_prediction",
    "1225": "SELECT Patient.SEX, SUM(CASE WHEN Laboratory.`T-BIL` >= 2.0 THEN 1 ELSE 0 END) AS Abnormal_T_BIL_Count FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID GROUP BY Patient.SEX;\t----- bird -----\tthrombosis_prediction",
    "1226": "SELECT Patient.ID, MAX(Laboratory.`T-CHO`) as T_CHO FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Birthday = (SELECT MIN(Birthday) FROM Patient) GROUP BY Patient.ID ORDER BY T_CHO DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1227": "SELECT DIVIDE(SUM(SUBTRACT(YEAR(NOW()), YEAR(Birthday))), COUNT(ID)) AS average_age FROM Patient WHERE SEX = 'M' AND ID IN ( SELECT ID FROM Laboratory WHERE `T-CHO` >= 250 )\t----- bird -----\tthrombosis_prediction",
    "1228": "SELECT Patient.ID, Patient.Diagnosis FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.TG > 300;\t----- bird -----\tthrombosis_prediction",
    "1229": "SELECT COUNT(*) FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE TG >= 200 AND (YEAR(CURRENT_TIMESTAMP) - YEAR(Birthday)) > 50;\t----- bird -----\tthrombosis_prediction",
    "1230": "SELECT DISTINCT ID FROM Patient WHERE Admission = '-' AND ID IN (SELECT ID FROM Laboratory WHERE CPK < 250);\t----- bird -----\tthrombosis_prediction",
    "1231": "SELECT COUNT(*) FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE YEAR(p.Birthday) BETWEEN 1936 AND 1956 AND p.SEX = 'M' AND l.CPK >= 250;\t----- bird -----\tthrombosis_prediction",
    "1232": "SELECT Patient.ID, Patient.SEX, (YEAR(CURRENT_TIMESTAMP) - YEAR(Patient.Birthday)) AS Age FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.GLU >= 180 AND Laboratory.`T-CHO` < 250;\t----- bird -----\tthrombosis_prediction",
    "1233": "SELECT Patient.ID, Laboratory.GLU FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE YEAR(Patient.Description) >= 1991 AND Laboratory.GLU < 180;\t----- bird -----\tthrombosis_prediction",
    "1234": "SELECT Patient.ID, Patient.SEX, Patient.Birthday FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.WBC <= 3.5 OR Laboratory.WBC >= 9.0 ORDER BY Patient.SEX, Patient.Birthday;\t----- bird -----\tthrombosis_prediction",
    "1235": "SELECT Patient.ID, (YEAR(CURRENT_TIMESTAMP) - YEAR(Birthday)) AS Age, Diagnosis FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE RBC < 3.5;\t----- bird -----\tthrombosis_prediction",
    "1236": "SELECT Patient.ID, Patient.SEX, Patient.Birthday, Patient.Admission FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.SEX = 'F' AND (YEAR(CURRENT_TIMESTAMP) - YEAR(Patient.Birthday)) >= 50 AND (Laboratory.RBC <= 3.5 OR Laboratory.RBC >= 6.0) AND Patient.Admission = '+';\t----- bird -----\tthrombosis_prediction",
    "1237": "SELECT Patient.ID, Patient.SEX FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.Admission = '-' AND Laboratory.HGB < 10;\t----- bird -----\tthrombosis_prediction",
    "1238": "SELECT Patient.ID, Patient.SEX FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Diagnosis = 'SLE' AND HGB > 10 AND HGB < 17 ORDER BY Birthday ASC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1239": "SELECT Patient.ID, (YEAR(CURRENT_TIMESTAMP) - YEAR(Birthday)) AS age FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID GROUP BY Patient.ID HAVING COUNT(Laboratory.ID) > 2 AND MAX(Laboratory.HCT) >= 52;\t----- bird -----\tthrombosis_prediction",
    "1240": "SELECT AVG(HCT) AS Average_Hematocrit_Level FROM Laboratory WHERE Date LIKE '1991%' AND HCT < 29;\t----- bird -----\tthrombosis_prediction",
    "1241": "SELECT COUNT(*) as `Number of Patients with Lower than Normal Range`, (SELECT COUNT(*) FROM Laboratory WHERE PLT > 400) as `Number of Patients with Higher than Normal Range` FROM Laboratory WHERE PLT < 100;\t----- bird -----\tthrombosis_prediction",
    "1242": "SELECT Patient.ID, Patient.SEX, Patient.Birthday FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.Date LIKE '1984%' AND (YEAR(CURRENT_TIMESTAMP) - YEAR(Patient.Birthday)) < 50 AND Laboratory.PLT BETWEEN 100 AND 400;\t----- bird -----\tthrombosis_prediction",
    "1243": "SELECT SUM(CASE WHEN PT >= 14 AND SEX = 'F' THEN 1 ELSE 0 END) / SUM(CASE WHEN PT >= 14 THEN 1 ELSE 0 END) * 100 as Percentage FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE strftime('%Y', 'now') - strftime('%Y', Birthday) > 55;\t----- bird -----\tthrombosis_prediction",
    "1244": "SELECT Patient.ID, Patient.`First Date` FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.`First Date` > '1992-01-01' AND Laboratory.PT < 14;\t----- bird -----\tthrombosis_prediction",
    "1245": "SELECT COUNT(*) FROM Examination WHERE `Examination Date` > '1997-01-01' AND APTT < 45;\t----- bird -----\tthrombosis_prediction",
    "1246": "SELECT COUNT(DISTINCT l.ID) FROM Laboratory l JOIN Examination e ON l.ID = e.ID WHERE l.APTT > 45 AND e.Thrombosis = 3;\t----- bird -----\tthrombosis_prediction",
    "1247": "SELECT COUNT(DISTINCT p.ID) FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE p.SEX = 'M' AND l.WBC BETWEEN 3.5 AND 9.0 AND (l.FG <= 150 OR l.FG >= 450)\t----- bird -----\tthrombosis_prediction",
    "1248": "SELECT COUNT(DISTINCT p.ID) FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE p.Birthday > '1980-01-01' AND l.FG < 150 OR l.FG > 450;\t----- bird -----\tthrombosis_prediction",
    "1249": "SELECT Patient.Diagnosis FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.`U-PRO` >= 30;\t----- bird -----\tthrombosis_prediction",
    "1250": "SELECT Patient.ID FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.`U-PRO` > 0 AND Laboratory.`U-PRO` < 30 AND Patient.Diagnosis = 'SLE';\t----- bird -----\tthrombosis_prediction",
    "1251": "SELECT COUNT(*) FROM Examination WHERE `aCL IgG` < 900 AND Symptoms = 'abortion';\t----- bird -----\tthrombosis_prediction",
    "1252": "SELECT COUNT(*) FROM Examination WHERE `aCL IgG` BETWEEN 900 AND 2000 AND Symptoms IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
    "1253": "SELECT Patient.ID, Patient.Diagnosis FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.`aCL IgA` BETWEEN 80 AND 500 ORDER BY Examination.`aCL IgA` DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1254": "SELECT COUNT(*) FROM Patient WHERE ID IN ( SELECT ID FROM Laboratory WHERE `U-PRO` BETWEEN 80 AND 500 ) AND YEAR(`First Date`) >= 1990;\t----- bird -----\tthrombosis_prediction",
    "1255": "SELECT Diagnosis FROM Examination WHERE `aCL IgM` NOT BETWEEN 40 AND 400 GROUP BY Diagnosis ORDER BY COUNT(*) DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1256": "SELECT COUNT(*) FROM Patient LEFT JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE (CRP LIKE '+' OR CRP LIKE '-' OR CRP < 1.0 OR CRP IS NULL) AND Description IS NULL;\t----- bird -----\tthrombosis_prediction",
    "1257": "SELECT COUNT(DISTINCT p.ID) FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE l.CRP NOT IN ('+-', '-') AND l.CRP >= 1.0 AND (YEAR(CURDATE()) - YEAR(p.Birthday)) < 18;\t----- bird -----\tthrombosis_prediction",
    "1258": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE RA IN ('-', '+-') AND KCT = '+';\t----- bird -----\tthrombosis_prediction",
    "1259": "SELECT Patient.ID, Patient.Diagnosis FROM Patient JOIN Examination ON Patient.ID = Examination.ID JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE YEAR(Patient.Birthday) >= 1995 AND Laboratory.RA IN ('-', '+-')\t----- bird -----\tthrombosis_prediction",
    "1260": "SELECT Patient.ID FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE RF < 20 AND (YEAR(CURDATE()) - YEAR(Birthday)) > 60;\t----- bird -----\tthrombosis_prediction",
    "1261": "SELECT COUNT(*) FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE RF < 20 AND Thrombosis = '0';\t----- bird -----\tthrombosis_prediction",
    "1262": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE C3 > 35 AND `ANA Pattern` = 'P';\t----- bird -----\tthrombosis_prediction",
    "1263": "SELECT Patient.ID FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.HCT < 29 OR Examination.HCT > 52 ORDER BY Examination.`aCL IgA` DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1264": "SELECT COUNT(DISTINCT p.ID) FROM Patient p JOIN Examination e ON p.ID = e.ID JOIN Laboratory l ON p.ID = l.ID WHERE e.Thrombosis = 1 AND l.C4 > 10;\t----- bird -----\tthrombosis_prediction",
    "1265": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE RNP IN ('-', '+-') AND Admission = '+';\t----- bird -----\tthrombosis_prediction",
    "1266": "SELECT Patient.ID, Patient.Birthday FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE RNP NOT IN ('-', '+-') ORDER BY Patient.Birthday ASC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1267": "SELECT COUNT(*) FROM Examination e JOIN Patient p ON e.ID = p.ID WHERE e.`Thrombosis` = 1 AND e.`SM` IN ('-', '+-');\t----- bird -----\tthrombosis_prediction",
    "1268": "SELECT Patient.ID FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.SM NOT IN ('-', '+-') ORDER BY Patient.Birthday DESC LIMIT 3;\t----- bird -----\tthrombosis_prediction",
    "1269": "SELECT Patient.ID FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE `Examination Date` >= '1997-01-01' AND SC170 NOT IN ('-', '+-');\t----- bird -----\tthrombosis_prediction",
    "1270": "SELECT COUNT(DISTINCT p.ID) FROM Patient p JOIN Examination e ON p.ID = e.ID JOIN Laboratory l ON p.ID = l.ID WHERE l.SC170 IN ('-', '+-') AND p.SEX = 'M' AND e.Symptoms = 'vertigo';\t----- bird -----\tthrombosis_prediction",
    "1271": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE YEAR(`First Date`) < 1990 AND SSA IN ('-', '+-')\t----- bird -----\tthrombosis_prediction",
    "1272": "SELECT Patient.ID FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.SSA NOT IN ('-', '+-') ORDER BY Patient.`First Date` LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1273": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.SSB IN ('negative', '0') AND Examination.Diagnosis = 'SLE';\t----- bird -----\tthrombosis_prediction",
    "1274": "SELECT COUNT(DISTINCT p.ID) FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE e.SSB IN ('-', '+-') AND e.Symptoms IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
    "1275": "SELECT COUNT(Patient.ID) FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE CENTROMEA IN ('-', '+-') AND SSB IN ('-', '+-') AND SEX = 'M';\t----- bird -----\tthrombosis_prediction",
    "1276": "SELECT Patient.ID, Patient.Diagnosis FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.DNA >= 8;\t----- bird -----\tthrombosis_prediction",
    "1277": "SELECT COUNT(DISTINCT p.ID) FROM Patient p LEFT JOIN Laboratory l ON p.ID = l.ID WHERE (l.DNA IS NULL OR l.DNA < 8) AND p.Description IS NULL;\t----- bird -----\tthrombosis_prediction",
    "1278": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.`DNA-II` >= 8 AND Patient.Admission = '+';\t----- bird -----\tthrombosis_prediction",
    "1279": "SELECT (MULTIPLY(DIVIDE(COUNT(ID WHERE GOT >= 60 AND Diagnosis = 'SLE'), COUNT(ID WHERE GOT >= 60)), 1.0) * 100 as Percentage FROM Laboratory JOIN Examination ON Laboratory.ID = Examination.ID JOIN Patient ON Laboratory.ID = Patient.ID WHERE GOT >= 60 AND Diagnosis = 'SLE';\t----- bird -----\tthrombosis_prediction",
    "1280": "SELECT COUNT(*) FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE p.SEX = 'M' AND l.GOT < 60;\t----- bird -----\tthrombosis_prediction",
    "1281": "SELECT MAX(Birthday) FROM Patient WHERE ID IN (SELECT ID FROM Laboratory WHERE GOT >= 60)\t----- bird -----\tthrombosis_prediction",
    "1282": "SELECT Patient.Birthday FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.GPT < 60 ORDER BY Laboratory.GPT DESC LIMIT 3;\t----- bird -----\tthrombosis_prediction",
    "1283": "SELECT COUNT(Patient.ID) FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.GOT < 60 AND Patient.SEX = 'M';\t----- bird -----\tthrombosis_prediction",
    "1284": "SELECT MIN(`First Date`) AS `First Recorded Date` FROM Patient WHERE ID = ( SELECT ID FROM Laboratory WHERE LDH < 500 ORDER BY LDH DESC LIMIT 1 )\t----- bird -----\tthrombosis_prediction",
    "1285": "SELECT MAX(Date) FROM Laboratory WHERE ID = (SELECT ID FROM Patient WHERE `First Date` = (SELECT MAX(`First Date`) FROM Patient) ) AND LDH >= 500;\t----- bird -----\tthrombosis_prediction",
    "1286": "SELECT COUNT(*) FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE ALP >= 300 AND Admission = '+';\t----- bird -----\tthrombosis_prediction",
    "1287": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.Admission = '-' AND Laboratory.ALP < 300;\t----- bird -----\tthrombosis_prediction",
    "1288": "SELECT Patient.ID, Patient.Diagnosis FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.TP < 6.0;\t----- bird -----\tthrombosis_prediction",
    "1289": "SELECT COUNT(*) FROM Patient p JOIN Examination e ON p.ID = e.ID JOIN Laboratory l ON p.ID = l.ID WHERE p.Diagnosis = 'SJS' AND l.TP > 6.0 AND l.TP < 8.5;\t----- bird -----\tthrombosis_prediction",
    "1290": "SELECT Examination.`Examination Date` FROM Examination JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Laboratory.ALB = (SELECT MAX(ALB) FROM Laboratory WHERE ALB > 3.5 AND ALB < 5.5);\t----- bird -----\tthrombosis_prediction",
    "1291": "SELECT COUNT(*) FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.SEX = 'M' AND ALB > 3.5 AND ALB < 5.5 AND TP BETWEEN 6.0 AND 8.5;\t----- bird -----\tthrombosis_prediction",
    "1292": "SELECT `aCL IgG`, `aCL IgM`, `aCL IgA` FROM Examination WHERE ID IN ( SELECT ID FROM Patient WHERE SEX = 'F' ) AND UA = ( SELECT MAX(UA) FROM Laboratory WHERE UA <= 6.50 )\t----- bird -----\tthrombosis_prediction",
    "1293": "SELECT MAX(ANA) FROM Examination WHERE ID IN (SELECT ID FROM Laboratory WHERE CRE < 1.5)\t----- bird -----\tthrombosis_prediction",
    "1294": "SELECT Patient.ID FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.`aCL IgA` = (SELECT MAX(`aCL IgA`) FROM Examination) AND Laboratory.CRE < 1.5;\t----- bird -----\tthrombosis_prediction",
    "1295": "SELECT COUNT(*) FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID JOIN Examination ON Patient.ID = Examination.ID WHERE `T-BIL` >= 2.0 AND `ANA Pattern` LIKE '%P%';\t----- bird -----\tthrombosis_prediction",
    "1296": "SELECT ANA FROM Examination WHERE ID = ( SELECT ID FROM Laboratory WHERE `T-BIL` < 2.0 ORDER BY `T-BIL` DESC LIMIT 1 )\t----- bird -----\tthrombosis_prediction",
    "1297": "SELECT COUNT(*) FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID JOIN Examination ON Patient.ID = Examination.ID WHERE `T-CHO` >= 250 AND KCT = '-'\t----- bird -----\tthrombosis_prediction",
    "1298": "SELECT COUNT(*) FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID JOIN Examination ON Patient.ID = Examination.ID WHERE `T-CHO` < 250 AND `ANA Pattern` = 'P';\t----- bird -----\tthrombosis_prediction",
    "1299": "SELECT COUNT(*) FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID JOIN Examination ON Patient.ID = Examination.ID WHERE TG < 200 AND Symptoms IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
    "1300": "SELECT Patient.Diagnosis FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE TG < 200 ORDER BY TG DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1301": "SELECT Patient.ID FROM Patient LEFT JOIN Examination ON Patient.ID = Examination.ID LEFT JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Thrombosis = 0 AND CPK < 250;\t----- bird -----\tthrombosis_prediction",
    "1302": "SELECT COUNT(*) FROM Patient WHERE ID IN (SELECT ID FROM Laboratory WHERE CPK < 250 AND (KCT = '+' OR RVVT = '+' OR LAC = '+'))\t----- bird -----\tthrombosis_prediction",
    "1303": "SELECT MIN(Birthday) FROM Patient WHERE ID IN (SELECT ID FROM Laboratory WHERE GLU > 180)\t----- bird -----\tthrombosis_prediction",
    "1304": "SELECT COUNT(*) FROM Patient p JOIN Laboratory l ON p.ID = l.ID JOIN Examination e ON p.ID = e.ID WHERE l.GLU < 180 AND e.Thrombosis = 0;\t----- bird -----\tthrombosis_prediction",
    "1305": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.Admission = '+' AND Laboratory.WBC >= 3.5 AND Laboratory.WBC <= 9.0;\t----- bird -----\tthrombosis_prediction",
    "1306": "SELECT COUNT(*) FROM Patient JOIN Examination ON Patient.ID = Examination.ID JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Diagnosis = 'SLE' AND WBC >= 3.5 AND WBC <= 9.0;\t----- bird -----\tthrombosis_prediction",
    "1307": "SELECT Patient.ID FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE (Laboratory.RBC <= 3.5 OR Laboratory.RBC >= 6.0) AND Patient.Admission = '-'\t----- bird -----\tthrombosis_prediction",
    "1308": "SELECT COUNT(*) FROM Patient WHERE ID IN (SELECT ID FROM Laboratory WHERE PLT > 100 AND PLT < 400) AND Diagnosis IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
    "1309": "SELECT Patient.ID, Laboratory.PLT FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.PLT > 100 AND Laboratory.PLT < 400 AND Patient.Diagnosis = 'MCTD';\t----- bird -----\tthrombosis_prediction",
    "1310": "SELECT AVG(PT) as AverageProthrombinTime FROM Laboratory JOIN Patient ON Laboratory.ID = Patient.ID WHERE Patient.SEX = 'M' AND Laboratory.PT < 14;\t----- bird -----\tthrombosis_prediction",
    "1311": "SELECT COUNT(*) FROM Examination JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Thrombosis IN (1, 2) AND PT < 14;\t----- bird -----\tthrombosis_prediction",
    "1312": "SELECT major_name FROM member JOIN major ON member.link_to_major = major.major_id WHERE member.first_name = 'Angela' AND member.last_name = 'Sanders';\t----- bird -----\tstudent_club",
    "1313": "SELECT COUNT(*) FROM member WHERE link_to_major IN (SELECT major_id FROM major WHERE college = 'College of Engineering');\t----- bird -----\tstudent_club",
    "1314": "SELECT m.first_name || ' ' || m.last_name AS full_name FROM member m JOIN major ma ON m.link_to_major = ma.major_id WHERE ma.department = 'Art and Design';\t----- bird -----\tstudent_club",
    "1315": "SELECT COUNT(*) FROM attendance JOIN event ON attendance.link_to_event = event.event_id JOIN member ON attendance.link_to_member = member.member_id WHERE event.event_name = 'Women\\'s Soccer';\t----- bird -----\tstudent_club",
    "1316": "SELECT phone FROM member JOIN attendance ON member.member_id = attendance.link_to_member JOIN event ON attendance.link_to_event = event.event_id WHERE event.event_name = 'Women\\'s Soccer';\t----- bird -----\tstudent_club",
    "1317": "SELECT COUNT(*) FROM member m JOIN attendance a ON m.member_id = a.link_to_member JOIN event e ON a.link_to_event = e.event_id WHERE e.event_name = 'Women\\'s Soccer' AND m.t_shirt_size = 'Medium';\t----- bird -----\tstudent_club",
    "1318": "SELECT event.event_id, event.event_name, COUNT(attendance.link_to_member) AS attendance_count FROM event JOIN attendance ON event.event_id = attendance.link_to_event JOIN member ON attendance.link_to_member = member.member_id WHERE member.link_to_major = (SELECT major_id FROM major WHERE major_name = 'Student_Club') GROUP BY event.event_id, event.event_name ORDER BY attendance_count DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1319": "SELECT major.college FROM member JOIN major ON member.link_to_major = major.major_id WHERE member.position = 'Vice President';\t----- bird -----\tstudent_club",
    "1320": "SELECT event.event_name FROM event JOIN attendance ON event.event_id = attendance.link_to_event JOIN member ON member.member_id = attendance.link_to_member WHERE member.first_name = 'Maya' AND member.last_name = 'Mclean';\t----- bird -----\tstudent_club",
    "1321": "SELECT COUNT(*) FROM attendance a JOIN event e ON a.link_to_event = e.event_id JOIN member m ON a.link_to_member = m.member_id WHERE m.first_name = 'Sacha' AND m.last_name = 'Harrison' AND YEAR(e.event_date) = 2019;\t----- bird -----\tstudent_club",
    "1322": "SELECT COUNT(event_id) FROM event JOIN attendance ON event.event_id = attendance.link_to_event GROUP BY event.event_id HAVING COUNT(event.event_id) > 10 AND event.type = 'Meeting';\t----- bird -----\tstudent_club",
    "1323": "SELECT event_name FROM event WHERE event_id IN ( SELECT link_to_event FROM attendance GROUP BY link_to_event HAVING COUNT(link_to_member) > 20 )\t----- bird -----\tstudent_club",
    "1324": "SELECT AVG(attendance_count) FROM ( SELECT COUNT(event_id) AS attendance_count FROM event WHERE type = 'Meeting' AND strftime('%Y', event_date) = '2020' GROUP BY event_name ) as subquery;\t----- bird -----\tstudent_club",
    "1325": "SELECT expense_description, MAX(cost) FROM expense WHERE link_to_budget IN (SELECT budget_id FROM budget WHERE event_status = 'club events');\t----- bird -----\tstudent_club",
    "1326": "SELECT COUNT(*) FROM member WHERE link_to_major = (SELECT major_id FROM major WHERE major_name = 'Environmental Engineering');\t----- bird -----\tstudent_club",
    "1327": "SELECT m.first_name || ' ' || m.last_name AS full_name FROM member m JOIN attendance a ON m.member_id = a.link_to_member JOIN event e ON a.link_to_event = e.event_id WHERE e.event_name = 'Laugh Out Loud';\t----- bird -----\tstudent_club",
    "1328": "SELECT m.last_name FROM member m JOIN major ma ON m.link_to_major = ma.major_id WHERE ma.major_name = 'Law and Constitutional Studies';\t----- bird -----\tstudent_club",
    "1329": "SELECT county FROM member JOIN zip_code ON member.zip = zip_code.zip_code WHERE member.first_name = 'Sherri' AND member.last_name = 'Ramsey';\t----- bird -----\tstudent_club",
    "1330": "SELECT college FROM major JOIN member ON major.major_id = member.link_to_major WHERE member.first_name = 'Tyler' AND member.last_name = 'Hewitt';\t----- bird -----\tstudent_club",
    "1331": "SELECT SUM(amount) FROM income WHERE link_to_member IN (SELECT member_id FROM member WHERE position = 'Vice President');\t----- bird -----\tstudent_club",
    "1332": "SELECT SUM(e.spent) AS total_spent_on_food FROM budget b JOIN event e ON b.link_to_event = e.event_id WHERE b.category = 'Food' AND e.event_name = 'September Meeting';\t----- bird -----\tstudent_club",
    "1333": "SELECT zip_code.city, zip_code.state FROM member JOIN zip_code ON member.zip = zip_code.zip_code WHERE member.position = 'President';\t----- bird -----\tstudent_club",
    "1334": "SELECT m.first_name || ' ' || m.last_name AS full_name FROM member m JOIN zip_code z ON m.zip = z.zip_code WHERE z.state = 'Illinois';\t----- bird -----\tstudent_club",
    "1335": "SELECT SUM(cost) AS total_spent_on_advertisement FROM expense JOIN budget ON expense.link_to_budget = budget.budget_id JOIN event ON budget.link_to_event = event.event_id WHERE category = 'Advertisement' AND event_name = 'September Meeting';\t----- bird -----\tstudent_club",
    "1336": "SELECT department FROM major WHERE major_name IN ('Pierce', 'Guidi');\t----- bird -----\tstudent_club",
    "1337": "SELECT SUM(amount) AS total_budgeted_amount FROM budget WHERE link_to_event = (SELECT event_id FROM event WHERE event_name = 'October Speaker');\t----- bird -----\tstudent_club",
    "1338": "SELECT expense_id, expense_description, approved FROM expense WHERE link_to_budget IN (SELECT budget_id FROM budget WHERE link_to_event IN (SELECT event_id FROM event WHERE event_name = 'October Meeting' AND event_date = '2019-10-08'));\t----- bird -----\tstudent_club",
    "1339": "SELECT AVG(cost) AS average_cost FROM expense WHERE link_to_member = 'Elijah Allen' AND (strftime('%m', expense_date) = '09' OR strftime('%m', expense_date) = '10');\t----- bird -----\tstudent_club",
    "1340": "SELECT SUM(CASE WHEN strftime('%Y', event_date) = '2019' THEN spent ELSE 0 END) - SUM(CASE WHEN strftime('%Y', event_date) = '2020' THEN spent ELSE 0 END) AS difference FROM budget WHERE event_status = 'Student_Club';\t----- bird -----\tstudent_club",
    "1341": "SELECT location FROM event WHERE event_name = 'Spring Budget Review';\t----- bird -----\tstudent_club",
    "1342": "SELECT cost FROM expense WHERE expense_description = 'Posters' AND expense_date = '2019-09-04';\t----- bird -----\tstudent_club",
    "1343": "SELECT MAX(remaining) AS remaining FROM budget WHERE category = 'Food' AND amount = (SELECT MAX(amount) FROM budget WHERE category = 'Food');\t----- bird -----\tstudent_club",
    "1344": "SELECT notes FROM income WHERE source = 'Fundraising' AND date_received = '2019-09-14';\t----- bird -----\tstudent_club",
    "1345": "SELECT COUNT(*) FROM major WHERE college = 'College of Humanities and Social Sciences';\t----- bird -----\tstudent_club",
    "1346": "SELECT phone FROM member WHERE first_name = 'Carlo' AND last_name = 'Jacobs';\t----- bird -----\tstudent_club",
    "1347": "SELECT zip_code.county FROM member JOIN zip_code ON member.zip = zip_code.zip_code WHERE member.first_name = 'Adela' AND member.last_name = 'O'Gallagher';\t----- bird -----\tstudent_club",
    "1348": "SELECT COUNT(*) FROM budget WHERE link_to_event = (SELECT event_id FROM event WHERE event_name = 'November Meeting') AND remaining < 0;\t----- bird -----\tstudent_club",
    "1349": "SELECT SUM(amount) AS total_budget_amount FROM budget WHERE link_to_event = (SELECT event_id FROM event WHERE event_name = 'September Speaker');\t----- bird -----\tstudent_club",
    "1350": "SELECT e.status FROM event e JOIN budget b ON e.event_id = b.link_to_event JOIN expense ex ON b.budget_id = ex.link_to_budget WHERE ex.expense_description = 'Post Cards, Posters' AND ex.expense_date = '2019-8-20';\t----- bird -----\tstudent_club",
    "1351": "SELECT major_name FROM member JOIN major ON member.link_to_major = major.major_id WHERE member.first_name = 'Brent' AND member.last_name = 'Thomason';\t----- bird -----\tstudent_club",
    "1352": "SELECT COUNT(*) FROM member JOIN major ON member.link_to_major = major.major_id WHERE major.major_name = 'Human Development and Family Studies' AND member.t_shirt_size = 'Large';\t----- bird -----\tstudent_club",
    "1353": "SELECT zip_code.type FROM member JOIN zip_code ON member.zip = zip_code.zip_code WHERE member.first_name = 'Christof' AND member.last_name = 'Nielson';\t----- bird -----\tstudent_club",
    "1354": "SELECT major.major_name FROM member JOIN major ON member.link_to_major = major.major_id WHERE member.position = 'Vice President';\t----- bird -----\tstudent_club",
    "1355": "SELECT zip_code.state FROM member JOIN zip_code ON member.zip = zip_code.zip_code WHERE member.first_name = 'Sacha' AND member.last_name = 'Harrison';\t----- bird -----\tstudent_club",
    "1356": "SELECT major.department FROM member JOIN major ON member.link_to_major = major.major_id WHERE member.position = 'President';\t----- bird -----\tstudent_club",
    "1357": "SELECT income.date_received FROM income JOIN member ON income.link_to_member = member.member_id WHERE member.first_name = 'Connor' AND member.last_name = 'Hilton' AND income.source = 'Dues'\t----- bird -----\tstudent_club",
    "1358": "SELECT m.first_name || ' ' || m.last_name AS full_name FROM income i JOIN member m ON i.link_to_member = m.member_id WHERE i.source = 'Dues' ORDER BY i.date_received LIMIT 1;\t----- bird -----\tstudent_club",
    "1359": "SELECT SUM(CASE WHEN event.event_name = 'Yearly Kickoff' AND budget.category = 'Advertisement' THEN budget.amount ELSE 0 END) / SUM(CASE WHEN event.event_name = 'October Meeting' AND budget.category = 'Advertisement' THEN budget.amount ELSE 0 END) FROM budget JOIN event ON budget.link_to_event = event.event_id;\t----- bird -----\tstudent_club",
    "1360": "SELECT (SUM(amount) * 100) / (SELECT SUM(amount) FROM budget WHERE link_to_event = (SELECT event_id FROM event WHERE event_name = 'November Speaker')) FROM budget WHERE category = 'Parking' AND link_to_event = (SELECT event_id FROM event WHERE event_name = 'November Speaker');\t----- bird -----\tstudent_club",
    "1361": "SELECT SUM(cost) AS total_cost_of_pizzas FROM expense WHERE expense_description = 'Pizza';\t----- bird -----\tstudent_club",
    "1362": "SELECT COUNT(DISTINCT city) FROM zip_code WHERE county = 'Orange County' AND state = 'Virginia';\t----- bird -----\tstudent_club",
    "1363": "SELECT department FROM major WHERE college = 'College of Humanities and Social Sciences';\t----- bird -----\tstudent_club",
    "1364": "SELECT zip.city, zip.county, zip.state FROM member m JOIN zip_code zip ON m.zip = zip.zip_code WHERE m.first_name = 'Amy' AND m.last_name = 'Firth';\t----- bird -----\tstudent_club",
    "1365": "SELECT expense.expense_description FROM budget JOIN expense ON budget.budget_id = expense.link_to_budget WHERE budget.remaining = (SELECT MIN(remaining) FROM budget)\t----- bird -----\tstudent_club",
    "1366": "SELECT m.first_name, m.last_name FROM member m JOIN attendance a ON m.member_id = a.link_to_member JOIN event e ON a.link_to_event = e.event_id WHERE e.event_name = 'October Meeting';\t----- bird -----\tstudent_club",
    "1367": "SELECT major.college FROM member JOIN major ON member.link_to_major = major.major_id GROUP BY major.college ORDER BY COUNT(*) DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1368": "SELECT major.major_name FROM member JOIN major ON member.link_to_major = major.major_id WHERE member.phone = '809-555-3360';\t----- bird -----\tstudent_club",
    "1369": "SELECT event_name FROM budget JOIN event ON budget.link_to_event = event.event_id WHERE amount = (SELECT MAX(amount) FROM budget);\t----- bird -----\tstudent_club",
    "1370": "SELECT e.expense_description, e.cost FROM expense e JOIN member m ON e.link_to_member = m.member_id WHERE m.position = 'Vice President';\t----- bird -----\tstudent_club",
    "1371": "SELECT COUNT(link_to_member) FROM attendance WHERE link_to_event = (SELECT event_id FROM event WHERE event_name = 'Women\\'s Soccer');\t----- bird -----\tstudent_club",
    "1372": "SELECT income.date_received FROM member JOIN income ON member.member_id = income.link_to_member WHERE member.first_name = 'Casey' AND member.last_name = 'Mason';\t----- bird -----\tstudent_club",
    "1373": "SELECT COUNT(*) FROM member JOIN zip_code ON member.zip = zip_code.zip_code WHERE zip_code.state = 'Maryland';\t----- bird -----\tstudent_club",
    "1374": "SELECT COUNT(*) FROM attendance WHERE link_to_member = (SELECT member_id FROM member WHERE phone = '954-555-6240');\t----- bird -----\tstudent_club",
    "1375": "SELECT first_name || ' ' || last_name AS full_name FROM member WHERE link_to_major IN (SELECT major_id FROM major WHERE department = 'School of Applied Sciences, Technology and Education');\t----- bird -----\tstudent_club",
    "1376": "SELECT event_id, event_name, MAX(spent/amount) AS spend_to_budget_ratio FROM event JOIN budget ON event.event_id = budget.link_to_event WHERE status = 'Closed' GROUP BY event_id, event_name ORDER BY spend_to_budget_ratio DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1377": "SELECT COUNT(*) FROM member WHERE position = 'President';\t----- bird -----\tstudent_club",
    "1378": "SELECT MAX(spent) AS highest_amount_of_budget_spend FROM budget;\t----- bird -----\tstudent_club",
    "1379": "SELECT COUNT(*) FROM event WHERE type = 'Meeting' AND strftime('%Y', event_date) = '2020';\t----- bird -----\tstudent_club",
    "1380": "SELECT SUM(spent) AS total_amount_spent_for_food FROM budget WHERE category = 'Food';\t----- bird -----\tstudent_club",
    "1381": "SELECT m.first_name || ' ' || m.last_name AS full_name FROM member m JOIN attendance a ON m.member_id = a.link_to_member GROUP BY m.member_id HAVING COUNT(a.link_to_event) > 7;\t----- bird -----\tstudent_club",
    "1382": "SELECT m.first_name, m.last_name FROM member m JOIN major ma ON m.link_to_major = ma.major_id JOIN attendance a ON m.member_id = a.link_to_member JOIN event e ON a.link_to_event = e.event_id WHERE ma.major_name = 'Interior Design' AND e.event_name = 'Community Theater';\t----- bird -----\tstudent_club",
    "1383": "SELECT m.first_name || ' ' || m.last_name AS full_name FROM member m JOIN zip_code z ON m.zip = z.zip_code WHERE z.city = 'Georgetown' AND z.state = 'South Carolina';\t----- bird -----\tstudent_club",
    "1384": "SELECT COUNT(*) FROM income WHERE link_to_member = (SELECT member_id FROM member WHERE first_name = 'Grant' AND last_name = 'Gilmour');\t----- bird -----\tstudent_club",
    "1385": "SELECT first_name || ' ' || last_name AS full_name FROM member JOIN income ON member.member_id = income.link_to_member WHERE income.amount > 40;\t----- bird -----\tstudent_club",
    "1386": "SELECT SUM(cost) AS total_expense FROM expense WHERE link_to_budget IN (SELECT budget_id FROM budget WHERE link_to_event = 'Baseball game');\t----- bird -----\tstudent_club",
    "1387": "SELECT m.first_name, m.last_name FROM member m JOIN budget b ON m.member_id = b.link_to_event JOIN event e ON b.link_to_event = e.event_id WHERE e.event_name = 'Yearly Kickoff';\t----- bird -----\tstudent_club",
    "1388": "SELECT member.first_name || ' ' || member.last_name AS full_name, income.source FROM member JOIN income ON member.member_id = income.link_to_member WHERE income.amount = (SELECT MAX(amount) FROM income)\t----- bird -----\tstudent_club",
    "1389": "SELECT event_name FROM event JOIN budget ON event.event_id = budget.link_to_event ORDER BY budget.amount LIMIT 1;\t----- bird -----\tstudent_club",
    "1390": "SELECT (SUM(CASE WHEN e.event_name = 'Yearly Kickoff' THEN ex.cost ELSE 0 END) / SUM(ex.cost)) * 100 FROM event e JOIN budget b ON e.event_id = b.link_to_event JOIN expense ex ON b.budget_id = ex.link_to_budget;\t----- bird -----\tstudent_club",
    "1391": "SELECT SUM(CASE WHEN major_name = 'Finance' THEN 1 ELSE 0 END) / SUM(CASE WHEN major_name = 'Physics' THEN 1 ELSE 0 END) as ratio FROM major;\t----- bird -----\tstudent_club",
    "1392": "SELECT source, MAX(amount) as top_source_funds FROM income WHERE date_received BETWEEN '2019-09-01' AND '2019-09-30' GROUP BY source;\t----- bird -----\tstudent_club",
    "1393": "SELECT m.first_name || ' ' || m.last_name AS full_name, m.email FROM member m WHERE m.position = 'Secretary';\t----- bird -----\tstudent_club",
    "1394": "SELECT COUNT(*) FROM member WHERE link_to_major = (SELECT major_id FROM major WHERE major_name = 'Physics Teaching');\t----- bird -----\tstudent_club",
    "1395": "SELECT COUNT(link_to_member) FROM attendance WHERE link_to_event = (SELECT event_id FROM event WHERE event_name = 'Community Theater' AND event_date LIKE '%2019%');\t----- bird -----\tstudent_club",
    "1396": "SELECT COUNT(*) AS events_attended, major.major_name FROM attendance JOIN member ON attendance.link_to_member = member.member_id JOIN major ON member.link_to_major = major.major_id WHERE member.first_name = 'Luisa' AND member.last_name = 'Guidi';\t----- bird -----\tstudent_club",
    "1397": "SELECT AVG(spent) AS average_food_spending FROM budget WHERE category = 'Food' AND event_status = 'Closed';\t----- bird -----\tstudent_club",
    "1398": "SELECT event_name FROM event JOIN budget ON event.event_id = budget.link_to_event WHERE category = 'Advertisement' ORDER BY spent DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1399": "SELECT m.first_name, m.last_name, e.event_name FROM member m JOIN attendance a ON m.member_id = a.link_to_member JOIN event e ON a.link_to_event = e.event_id WHERE m.first_name = 'Maya' AND m.last_name = 'Mclean' AND e.event_name = 'Women\\'s Soccer';\t----- bird -----\tstudent_club",
    "1400": "SELECT (SUM(CASE WHEN type = 'Community Service' THEN 1 ELSE 0 END) / COUNT(event_id)) * 100 AS percentage_share FROM event WHERE event_date BETWEEN '2019-01-01' AND '2019-12-31';\t----- bird -----\tstudent_club",
    "1401": "SELECT cost FROM expense JOIN budget ON expense.link_to_budget = budget.budget_id JOIN event ON budget.link_to_event = event.event_id WHERE event.event_name = 'September Speaker' AND expense.expense_description = 'Posters';\t----- bird -----\tstudent_club",
    "1402": "SELECT t_shirt_size, COUNT(t_shirt_size) AS t_shirt_count FROM member GROUP BY t_shirt_size ORDER BY t_shirt_count DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1403": "SELECT event_name FROM event JOIN budget ON event.event_id = budget.link_to_event WHERE status = 'Closed' AND remaining < 0 ORDER BY remaining LIMIT 1;\t----- bird -----\tstudent_club",
    "1404": "SELECT expense_description, cost FROM expense WHERE link_to_budget IN (SELECT budget_id FROM budget WHERE link_to_event IN (SELECT event_id FROM event WHERE event_name = 'October Meeting')) AND approved = 'Yes';\t----- bird -----\tstudent_club",
    "1405": "SELECT SUM(amount) AS amount_budgeted, category FROM budget WHERE link_to_event = (SELECT event_id FROM event WHERE event_name = 'April Speaker') GROUP BY category ORDER BY amount_budgeted ASC;\t----- bird -----\tstudent_club",
    "1406": "SELECT budget_id, category, amount FROM budget WHERE category = 'Food' ORDER BY amount DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1407": "SELECT budget_id, category, amount FROM budget WHERE category = 'Advertisement' ORDER BY amount DESC LIMIT 3;\t----- bird -----\tstudent_club",
    "1408": "SELECT SUM(cost) AS total_cost_spent_for_parking FROM expense WHERE expense_description = 'Parking';\t----- bird -----\tstudent_club",
    "1409": "SELECT SUM(cost) AS total_expense FROM expense WHERE expense_date = '2019-08-20';\t----- bird -----\tstudent_club",
    "1410": "SELECT m.first_name || ' ' || m.last_name AS full_name, SUM(e.cost) AS total_cost FROM member m JOIN expense e ON m.member_id = e.link_to_member WHERE m.member_id = 'rec4BLdZHS2Blfp4v' GROUP BY m.first_name, m.last_name;\t----- bird -----\tstudent_club",
    "1411": "SELECT expense_description FROM expense WHERE link_to_member = 'Sacha Harrison';\t----- bird -----\tstudent_club",
    "1412": "SELECT expense.expense_description FROM member JOIN expense ON member.member_id = expense.link_to_member WHERE member.t_shirt_size = 'X-Large';\t----- bird -----\tstudent_club",
    "1413": "SELECT zip FROM member m JOIN expense e ON m.member_id = e.link_to_member WHERE e.cost < 50;\t----- bird -----\tstudent_club",
    "1414": "SELECT major.major_name FROM member JOIN major ON member.link_to_major = major.major_id WHERE member.first_name = 'Phillip' AND member.last_name = 'Cullen';\t----- bird -----\tstudent_club",
    "1415": "SELECT m.position FROM member m JOIN major ma ON m.link_to_major = ma.major_id WHERE ma.major_name = 'Business';\t----- bird -----\tstudent_club",
    "1416": "SELECT COUNT(*) FROM member WHERE link_to_major = (SELECT major_id FROM major WHERE major_name = 'Business') AND t_shirt_size = 'Medium';\t----- bird -----\tstudent_club",
    "1417": "SELECT type FROM event JOIN budget ON event.event_id = budget.link_to_event WHERE budget.remaining > 30;\t----- bird -----\tstudent_club",
    "1418": "SELECT event_name, type FROM event WHERE location = 'MU 215';\t----- bird -----\tstudent_club",
    "1419": "SELECT event.event_id, event.event_name, event.event_date, event.type, event.notes, event.location, event.status, budget.category FROM event JOIN budget ON event.event_id = budget.link_to_event WHERE event.event_date = '2020-03-24T12:00:00';\t----- bird -----\tstudent_club",
    "1420": "SELECT major.major_name FROM member JOIN major ON member.link_to_major = major.major_id WHERE member.position = 'Vice President';\t----- bird -----\tstudent_club",
    "1421": "SELECT (COUNT(member_id) FILTER (WHERE position = 'Member' AND major_name = 'Mathematics') / COUNT(member_id)) * 100 FROM member INNER JOIN major ON member.link_to_major = major.major_id;\t----- bird -----\tstudent_club",
    "1422": "SELECT event_name, type FROM event WHERE location = 'MU 215';\t----- bird -----\tstudent_club",
    "1423": "SELECT COUNT(*) FROM income WHERE amount = 50;\t----- bird -----\tstudent_club",
    "1424": "SELECT COUNT(*) FROM member WHERE position = 'Member' AND t_shirt_size = 'X-Large';\t----- bird -----\tstudent_club",
    "1425": "SELECT COUNT(*) FROM major WHERE college = 'College of Agriculture and Applied Sciences' AND department = 'School of Applied Sciences, Technology and Education';\t----- bird -----\tstudent_club",
    "1426": "SELECT m.last_name, m.department, m.college FROM member m JOIN major ma ON m.link_to_major = ma.major_id WHERE ma.major_name = 'Environmental Engineering';\t----- bird -----\tstudent_club",
    "1427": "SELECT b.category FROM budget b JOIN event e ON b.link_to_event = e.event_id WHERE e.location = 'MU 215' AND e.type = 'Guest Speaker' AND b.spent = 0;\t----- bird -----\tstudent_club",
    "1428": "SELECT zip_code.city, zip_code.state FROM member JOIN major ON member.link_to_major = major.major_id JOIN zip_code ON member.zip = zip_code.zip_code WHERE major.department = 'Electrical and Computer Engineering Department' AND member.position = 'Member';\t----- bird -----\tstudent_club",
    "1429": "SELECT e.event_name FROM event e JOIN attendance a ON e.event_id = a.link_to_event JOIN member m ON a.link_to_member = m.member_id JOIN major maj ON m.link_to_major = maj.major_id JOIN zip_code z ON m.zip = z.zip_code WHERE e.type = 'Social' AND m.position = 'Vice President' AND z.city = '900 E. Washington St.';\t----- bird -----\tstudent_club",
    "1430": "SELECT m.last_name, m.position FROM member m JOIN expense e ON m.member_id = e.link_to_member WHERE e.expense_description = 'Pizza' AND e.expense_date = '2019-09-10';\t----- bird -----\tstudent_club",
    "1431": "SELECT m.last_name FROM member m JOIN attendance a ON m.member_id = a.link_to_member JOIN event e ON a.link_to_event = e.event_id WHERE m.position = 'Member' AND e.event_name = 'Women\\'s Soccer';\t----- bird -----\tstudent_club",
    "1432": "SELECT (DIVIDE(COUNT(amount = 50), COUNT(member_id)) * 100) AS percentage FROM income JOIN member ON income.link_to_member = member.member_id WHERE member.t_shirt_size = 'Medium' AND member.position = 'Member';\t----- bird -----\tstudent_club",
    "1433": "SELECT DISTINCT country FROM zip_code WHERE type = 'PO Box';\t----- bird -----\tstudent_club",
    "1434": "SELECT zip_code FROM zip_code WHERE type = 'PO Box' AND county = 'San Juan Municipio' AND state = 'Puerto Rico';\t----- bird -----\tstudent_club",
    "1435": "SELECT event_name FROM event WHERE type = 'Game' AND status = 'Closed' AND event_date BETWEEN '2019-03-15' AND '2020-03-20';\t----- bird -----\tstudent_club",
    "1436": "SELECT event.event_id, event.event_name FROM event JOIN budget ON event.event_id = budget.link_to_event JOIN expense ON budget.budget_id = expense.link_to_budget JOIN member ON expense.link_to_member = member.member_id WHERE expense.cost > 50;\t----- bird -----\tstudent_club",
    "1437": "SELECT m.first_name, m.last_name, e.event_id FROM member m JOIN expense ex ON m.member_id = ex.link_to_member JOIN attendance a ON ex.link_to_event = a.link_to_event JOIN event e ON a.link_to_event = e.event_id WHERE ex.approved = 'true' AND ex.expense_date BETWEEN '2019-01-10' AND '2019-11-19';\t----- bird -----\tstudent_club",
    "1438": "SELECT m.college FROM member m WHERE m.first_name = 'Katy' AND m.link_to_major = 'rec1N0upiVLy5esTO';\t----- bird -----\tstudent_club",
    "1439": "SELECT phone FROM member JOIN major ON member.link_to_major = major.major_id WHERE major_name = 'Business' AND college = 'College of Agriculture and Applied Sciences';\t----- bird -----\tstudent_club",
    "1440": "SELECT m.email FROM member m JOIN expense e ON m.member_id = e.link_to_member WHERE e.cost > 20 AND e.expense_date BETWEEN '2019-09-10' AND '2019-11-19';\t----- bird -----\tstudent_club",
    "1441": "SELECT COUNT(*) FROM member WHERE link_to_major IN (SELECT major_id FROM major WHERE major_name = 'education' AND college = 'College of Education & Human Services') AND position = 'Member';\t----- bird -----\tstudent_club",
    "1442": "SELECT (SUM(CASE WHEN remaining < 0 THEN 1 ELSE 0 END) / COUNT(event_id)) * 100 AS percentage_over_budget FROM budget;\t----- bird -----\tstudent_club",
    "1443": "SELECT event_id, location, status FROM event WHERE event_date BETWEEN '2019-11-01' AND '2020-03-31';\t----- bird -----\tstudent_club",
    "1444": "SELECT expense_description FROM expense GROUP BY expense_description HAVING SUM(cost) / COUNT(expense_id) > 50;\t----- bird -----\tstudent_club",
    "1445": "SELECT first_name || ' ' || last_name AS full_name FROM member WHERE t_shirt_size = 'X-Large';\t----- bird -----\tstudent_club",
    "1446": "SELECT (SUM(type = 'PO Box') * 100.0) / COUNT(zip_code) as percentage_of_po_boxes FROM zip_code;\t----- bird -----\tstudent_club",
    "1447": "SELECT event_name, location FROM event JOIN budget ON event.event_id = budget.link_to_event WHERE budget.remaining > 0;\t----- bird -----\tstudent_club",
    "1448": "SELECT event.event_name, event.event_date FROM event JOIN budget ON event.event_id = budget.link_to_event JOIN expense ON budget.budget_id = expense.link_to_budget WHERE expense.expense_description = 'Pizza' AND expense.cost > 50 AND expense.cost < 100;\t----- bird -----\tstudent_club",
    "1449": "SELECT member.first_name || ' ' || member.last_name AS full_name, major.major_name AS major_of_members FROM member JOIN expense ON member.member_id = expense.link_to_member JOIN major ON member.link_to_major = major.major_id WHERE expense.cost > 100;\t----- bird -----\tstudent_club",
    "1450": "SELECT zip_code.city, zip_code.county FROM event JOIN attendance ON event.event_id = attendance.link_to_event JOIN income ON attendance.link_to_member = income.link_to_member JOIN zip_code ON event.location = zip_code.zip_code GROUP BY event.event_id HAVING COUNT(income.income_id) > 40;\t----- bird -----\tstudent_club",
    "1451": "SELECT m.first_name, m.last_name, SUM(e.cost) AS total_cost FROM member m JOIN expense e ON m.member_id = e.link_to_member WHERE m.member_id IN ( SELECT link_to_member FROM expense GROUP BY link_to_member HAVING COUNT(DISTINCT link_to_event) > 1 ) GROUP BY m.first_name, m.last_name ORDER BY total_cost DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1452": "SELECT DIVIDE(SUM(cost), COUNT(event_id)) FROM expense JOIN member ON expense.link_to_member = member.member_id WHERE member.position != 'Member';\t----- bird -----\tstudent_club",
    "1453": "SELECT event.event_name FROM event JOIN budget ON event.event_id = budget.link_to_event WHERE budget.category = 'Parking' GROUP BY event.event_name HAVING budget.spent < (SELECT SUM(cost) / COUNT(event_id) FROM budget WHERE category = 'Parking');\t----- bird -----\tstudent_club",
    "1454": "SELECT DIVIDE(SUM(cost), COUNT(event_id)) * 100 AS percentage_of_cost FROM expense JOIN budget ON expense.link_to_budget = budget.budget_id JOIN event ON budget.link_to_event = event.event_id WHERE event.type = 'Game';\t----- bird -----\tstudent_club",
    "1455": "SELECT budget_id FROM expense WHERE expense_description = 'Water, chips, cookies' GROUP BY budget_id ORDER BY MAX(cost) DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1456": "SELECT m.first_name || ' ' || m.last_name AS full_name FROM member m JOIN expense e ON m.member_id = e.link_to_member GROUP BY m.first_name, m.last_name ORDER BY MAX(e.cost) DESC LIMIT 5;\t----- bird -----\tstudent_club",
    "1457": "SELECT m.first_name || ' ' || m.last_name AS full_name, m.phone AS contact_number FROM member m JOIN expense e ON m.member_id = e.link_to_member WHERE e.cost > (SELECT AVG(cost) FROM expense) ORDER BY m.last_name, m.first_name;\t----- bird -----\tstudent_club",
    "1458": "SELECT (SUM(CASE WHEN state = 'Maine' THEN 1 ELSE 0 END) / COUNT(CASE WHEN position = 'Member' THEN 1 ELSE 0 END) - SUM(CASE WHEN state = 'Vermont' THEN 1 ELSE 0 END) / COUNT(CASE WHEN position = 'Member' THEN 1 ELSE 0 END)) * 100 AS percentage_difference FROM member JOIN zip_code ON member.zip = zip_code.zip_code;\t----- bird -----\tstudent_club",
    "1459": "SELECT major_name, department FROM member JOIN major ON member.link_to_major = major.major_id WHERE first_name = 'Garrett' AND last_name = 'Gerke';\t----- bird -----\tstudent_club",
    "1460": "SELECT m.first_name || ' ' || m.last_name AS full_name, e.cost FROM member m JOIN expense ex ON m.member_id = ex.link_to_member WHERE ex.expense_description = 'Water, Veggie tray, supplies';\t----- bird -----\tstudent_club",
    "1461": "SELECT member.last_name, member.phone FROM member JOIN major ON member.link_to_major = major.major_id WHERE major.major_name = 'Elementary Education';\t----- bird -----\tstudent_club",
    "1462": "SELECT category, amount FROM budget WHERE link_to_event = (SELECT event_id FROM event WHERE event_name = 'January Speaker');\t----- bird -----\tstudent_club",
    "1463": "SELECT event_name FROM budget JOIN event ON budget.link_to_event = event.event_id WHERE category = 'Food';\t----- bird -----\tstudent_club",
    "1464": "SELECT m.first_name || ' ' || m.last_name AS full_name, i.amount AS amount_received FROM member m JOIN income i ON m.member_id = i.link_to_member WHERE i.date_received = '9/9/2019';\t----- bird -----\tstudent_club",
    "1465": "SELECT budget.category FROM expense JOIN budget ON expense.link_to_budget = budget.budget_id WHERE expense.expense_description = 'Posters';\t----- bird -----\tstudent_club",
    "1466": "SELECT m.first_name || ' ' || m.last_name AS full_name, ma.college FROM member m JOIN major ma ON m.link_to_major = ma.major_id WHERE m.position = 'Secretary';\t----- bird -----\tstudent_club",
    "1467": "SELECT event.event_name, SUM(budget.spent) AS total_amount_spent FROM budget JOIN event ON budget.link_to_event = event.event_id WHERE budget.category = 'Speaker Gifts' GROUP BY event.event_name;\t----- bird -----\tstudent_club",
    "1468": "SELECT city FROM member JOIN zip_code ON member.zip = zip_code.zip_code WHERE first_name = 'Garrett' AND last_name = 'Girke';\t----- bird -----\tstudent_club",
    "1469": "SELECT m.first_name || ' ' || m.last_name AS full_name, m.position FROM member m JOIN zip_code z ON m.zip = z.zip_code WHERE z.city = 'Lincolnton' AND z.state = 'North Carolina' AND z.zip_code = 28092;\t----- bird -----\tstudent_club",
    "1470": "SELECT COUNT(GasStationID) FROM gasstations WHERE Country = 'CZE' AND Segment = 'Premium';\t----- bird -----\tdebit_card_specializing",
    "1471": "SELECT COUNT(CASE WHEN Currency = 'EUR' THEN 1 END) / COUNT(CASE WHEN Currency = 'CZK' THEN 1 END) AS ratio FROM customers;\t----- bird -----\tdebit_card_specializing",
    "1472": "SELECT customers.CustomerID, customers.Segment, SUM(yearmonth.Consumption) AS TotalConsumption FROM customers JOIN yearmonth ON customers.CustomerID = yearmonth.CustomerID WHERE yearmonth.Date BETWEEN '201201' AND '201212' AND customers.Segment = 'LAM' GROUP BY customers.CustomerID ORDER BY TotalConsumption LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1473": "SELECT AVG(Consumption) / 12 FROM yearmonth WHERE Date BETWEEN '201301' AND '201312' AND CustomerID IN (SELECT CustomerID FROM customers WHERE Segment = 'SME');\t----- bird -----\tdebit_card_specializing",
    "1474": "SELECT customers.CustomerID, customers.Segment, SUM(transactions_1k.Amount) AS TotalConsumption FROM customers JOIN transactions_1k ON customers.CustomerID = transactions_1k.CustomerID WHERE customers.Currency = 'CZK' AND transactions_1k.Date BETWEEN '201101' AND '201112' GROUP BY customers.CustomerID ORDER BY TotalConsumption DESC;\t----- bird -----\tdebit_card_specializing",
    "1475": "SELECT COUNT(CustomerID) FROM yearmonth WHERE Date BETWEEN '201201' AND '201212' AND Consumption < 30000;\t----- bird -----\tdebit_card_specializing",
    "1476": "SELECT SUM(CASE WHEN c.Currency = 'CZK' THEN y.Consumption ELSE 0 END) - SUM(CASE WHEN c.Currency = 'EUR' THEN y.Consumption ELSE 0 END) AS Difference_in_Consumption FROM customers c JOIN yearmonth y ON c.CustomerID = y.CustomerID WHERE y.Date BETWEEN '201201' AND '201212'\t----- bird -----\tdebit_card_specializing",
    "1477": "SELECT strftime('%Y', Date) AS Year, SUM(Amount * Price) AS TotalGasUsePaid FROM \"transactions_1k\" WHERE Currency = 'EUR' GROUP BY Year ORDER BY TotalGasUsePaid DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1478": "SELECT Segment FROM gasstations JOIN \"transactions_1k\" ON gasstations.GasStationID = \"transactions_1k\".GasStationID JOIN products ON \"transactions_1k\".ProductID = products.ProductID GROUP BY Segment ORDER BY SUM(Amount) ASC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1479": "SELECT substr(Date, 1, 4) as Year, sum(Consumption) as TotalConsumption FROM yearmonth WHERE CustomerID IN (SELECT CustomerID FROM customers WHERE Currency = 'CZK') GROUP BY Year ORDER BY TotalConsumption DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1480": "SELECT MAX(Consumption) AS PeakConsumption FROM yearmonth WHERE Date LIKE '2013%' AND CustomerID IN (SELECT CustomerID FROM customers WHERE Segment = 'SME')\t----- bird -----\tdebit_card_specializing",
    "1481": "SELECT (SUM(Consumption) / COUNT(CustomerID)) AS annual_avg_consumption FROM yearmonth WHERE Date BETWEEN '201301' AND '201312' AND CustomerID IN ( SELECT CustomerID FROM yearmonth WHERE Date BETWEEN '201301' AND '201312' GROUP BY Segment ORDER BY MIN(Consumption) LIMIT 1 ) GROUP BY Segment;\t----- bird -----\tdebit_card_specializing",
    "1482": "SELECT Segment, ((SUM(CASE WHEN Date LIKE '2013%' THEN Consumption ELSE 0 END) - SUM(CASE WHEN Date LIKE '2012%' THEN Consumption ELSE 0 END)) / SUM(CASE WHEN Date LIKE '2013%' THEN Consumption ELSE 0 END)) * 100 AS PercentageIncrease FROM yearmonth JOIN customers ON yearmonth.CustomerID = customers.CustomerID WHERE Segment IN ('SME', 'LAM', 'KAM') GROUP BY Segment ORDER BY PercentageIncrease DESC;\t----- bird -----\tdebit_card_specializing",
    "1483": "SELECT SUM(Consumption) FROM yearmonth WHERE CustomerID = 6 AND Date >= '201308' AND Date <= '201311';\t----- bird -----\tdebit_card_specializing",
    "1484": "SELECT COUNT(*) AS discount_gas_stations_czech FROM gasstations WHERE Country = 'Czech Republic' AND Segment = 'discount'; SELECT COUNT(*) AS discount_gas_stations_slovakia FROM gasstations WHERE Country = 'Slovakia' AND Segment = 'discount'; SELECT discount_gas_stations_czech - discount_gas_stations_slovakia AS more_discount_gas_stations FROM (SELECT COUNT(*) AS discount_gas_stations_czech FROM gasstations WHERE Country = 'Czech Republic' AND Segment = 'discount') AS czech, (SELECT COUNT(*) AS discount_gas_stations_slovakia FROM gasstations WHERE Country = 'Slovakia' AND Segment = 'discount') AS slovakia;\t----- bird -----\tdebit_card_specializing",
    "1485": "SELECT SUM(y1.Consumption) - SUM(y2.Consumption) AS Consumption_Difference FROM yearmonth y1 JOIN yearmonth y2 ON y1.CustomerID = 7 AND y2.CustomerID = 5 WHERE y1.Date = '201304' AND y2.Date = '201304';\t----- bird -----\tdebit_card_specializing",
    "1486": "SELECT COUNT(DISTINCT c.CustomerID) AS Total_SMEs_CZK, COUNT(DISTINCT c.CustomerID) - COUNT(DISTINCT c2.CustomerID) AS More_SMEs FROM customers c JOIN yearmonth y ON c.CustomerID = y.CustomerID WHERE c.Segment = 'SME' AND c.Currency = 'Czech koruna' LEFT JOIN customers c2 ON c2.CustomerID = y.CustomerID AND c2.Currency = 'Euro';\t----- bird -----\tdebit_card_specializing",
    "1487": "SELECT customers.CustomerID FROM customers JOIN yearmonth ON customers.CustomerID = yearmonth.CustomerID WHERE customers.Currency = 'Euro' AND yearmonth.Date = '201310' ORDER BY yearmonth.Consumption DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1488": "SELECT customers.CustomerID, customers.Segment, SUM(yearmonth.Consumption) AS TotalConsumption FROM customers JOIN yearmonth ON customers.CustomerID = yearmonth.CustomerID GROUP BY customers.CustomerID ORDER BY TotalConsumption DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1489": "SELECT SUM(Consumption) FROM yearmonth WHERE Date = '201305' AND CustomerID IN (SELECT CustomerID FROM customers WHERE Segment = 'KAM');\t----- bird -----\tdebit_card_specializing",
    "1490": "SELECT ROUND((COUNT(*) * 100.0 / (SELECT COUNT(*) FROM customers WHERE Segment = 'LAM')) AS Percentage FROM yearmonth JOIN customers ON yearmonth.CustomerID = customers.CustomerID WHERE customers.Segment = 'LAM' AND yearmonth.Consumption > 46.73;\t----- bird -----\tdebit_card_specializing",
    "1491": "SELECT Country, COUNT(GasStationID) AS TotalValueForMoneyGasStations FROM gasstations WHERE Segment = 'value for money' GROUP BY Country;\t----- bird -----\tdebit_card_specializing",
    "1492": "SELECT (SUM(CASE WHEN c.Segment = 'KAM' AND c.Currency = 'Euro' THEN 1 ELSE 0 END) * 1.0 / COUNT(*)) * 100 FROM customers c;\t----- bird -----\tdebit_card_specializing",
    "1493": "SELECT COUNT(CustomerID) * 100.0 / (SELECT COUNT(CustomerID) FROM yearmonth WHERE Date = '201202' AND Consumption > 528.3) as Percentage FROM yearmonth WHERE Date = '201202' AND Consumption > 528.3;\t----- bird -----\tdebit_card_specializing",
    "1494": "SELECT (COUNT(CASE WHEN Country = 'Slovakia' AND Segment = 'Premium' THEN 1 END) / COUNT(CASE WHEN Country = 'Slovakia' THEN 1 END)) * 100 FROM gasstations WHERE Country = 'Slovakia';\t----- bird -----\tdebit_card_specializing",
    "1495": "SELECT CustomerID FROM yearmonth WHERE Date = '201309' ORDER BY Consumption DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1496": "SELECT customers.Segment FROM customers JOIN yearmonth ON customers.CustomerID = yearmonth.CustomerID WHERE yearmonth.Date = '201309' ORDER BY yearmonth.Consumption LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1497": "SELECT customers.CustomerID, customers.Segment FROM customers JOIN yearmonth ON customers.CustomerID = yearmonth.CustomerID WHERE yearmonth.Date = '201206' ORDER BY yearmonth.Consumption LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1498": "SELECT MAX(Consumption) AS HighestMonthlyConsumption FROM yearmonth WHERE Date LIKE '2012%' GROUP BY Date;\t----- bird -----\tdebit_card_specializing",
    "1499": "SELECT customers.CustomerID, customers.Currency, SUM(yearmonth.Consumption) / 12 AS MonthlyConsumption FROM customers JOIN yearmonth ON customers.CustomerID = yearmonth.CustomerID WHERE customers.Currency = 'euro' GROUP BY customers.CustomerID, customers.Currency ORDER BY MonthlyConsumption DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1500": "SELECT products.Description FROM transactions_1k JOIN products ON transactions_1k.ProductID = products.ProductID WHERE strftime('%Y%m', transactions_1k.Date) = '201309';\t----- bird -----\tdebit_card_specializing",
    "1501": "SELECT Country FROM gasstations WHERE GasStationID IN (SELECT GasStationID FROM \"transactions_1k\" WHERE Date LIKE '201306%');\t----- bird -----\tdebit_card_specializing",
    "1502": "SELECT ChainID FROM gasstations WHERE GasStationID IN (SELECT GasStationID FROM transactions_1k WHERE Currency = 'euro');\t----- bird -----\tdebit_card_specializing",
    "1503": "SELECT products.Description FROM transactions_1k JOIN products ON transactions_1k.ProductID = products.ProductID JOIN customers ON transactions_1k.CustomerID = customers.CustomerID WHERE customers.Currency = 'euro';\t----- bird -----\tdebit_card_specializing",
    "1504": "SELECT AVG(Price * Amount) AS AverageTotalPrice FROM transactions_1k WHERE Date LIKE '2012-01%'\t----- bird -----\tdebit_card_specializing",
    "1505": "SELECT COUNT(*) FROM customers JOIN \"transactions_1k\" ON customers.CustomerID = \"transactions_1k\".CustomerID JOIN yearmonth ON customers.CustomerID = yearmonth.CustomerID WHERE customers.Currency = 'Euro' AND yearmonth.Consumption > 1000;\t----- bird -----\tdebit_card_specializing",
    "1506": "SELECT products.Description FROM transactions_1k JOIN gasstations ON transactions_1k.GasStationID = gasstations.GasStationID JOIN products ON transactions_1k.ProductID = products.ProductID WHERE gasstations.Country = 'CZE';\t----- bird -----\tdebit_card_specializing",
    "1507": "SELECT DISTINCT Time FROM transactions_1k JOIN gasstations ON transactions_1k.GasStationID = gasstations.GasStationID WHERE gasstations.ChainID = 11;\t----- bird -----\tdebit_card_specializing",
    "1508": "SELECT COUNT(*) FROM transactions_1k t JOIN gasstations g ON t.GasStationID = g.GasStationID WHERE g.Country = 'CZE' AND t.Price > 1000;\t----- bird -----\tdebit_card_specializing",
    "1509": "SELECT COUNT(*) FROM transactions_1k t JOIN gasstations g ON t.GasStationID = g.GasStationID WHERE g.Country = 'CZE' AND Date > '2012-01-01';\t----- bird -----\tdebit_card_specializing",
    "1510": "SELECT AVG(Price * Amount) AS AverageTotalPrice FROM transactions_1k JOIN gasstations ON transactions_1k.GasStationID = gasstations.GasStationID WHERE gasstations.Country = 'CZE';\t----- bird -----\tdebit_card_specializing",
    "1511": "SELECT AVG(Price) FROM transactions_1k JOIN customers ON transactions_1k.CustomerID = customers.CustomerID WHERE customers.Currency = 'euro';\t----- bird -----\tdebit_card_specializing",
    "1512": "SELECT customers.CustomerID, customers.Segment, customers.Currency FROM customers JOIN \"transactions_1k\" ON customers.CustomerID = \"transactions_1k\".CustomerID JOIN \"yearmonth\" ON customers.CustomerID = \"yearmonth\".CustomerID WHERE \"transactions_1k\".Date = '2012-08-25' ORDER BY \"transactions_1k\".Amount * \"transactions_1k\".Price DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1513": "SELECT Country FROM gasstations WHERE GasStationID = ( SELECT GasStationID FROM \"transactions_1k\" WHERE Date = '2012-08-25' ORDER BY TransactionID LIMIT 1 )\t----- bird -----\tdebit_card_specializing",
    "1514": "SELECT Currency FROM transactions_1k t JOIN customers c ON t.CustomerID = c.CustomerID WHERE t.Time = '16:25:00' AND t.Date = '2012-08-24';\t----- bird -----\tdebit_card_specializing",
    "1515": "SELECT c.Segment FROM customers c JOIN transactions_1k t1 ON c.CustomerID = t1.CustomerID WHERE t1.Date = '2012-08-23' AND t1.Time = '21:20:00';\t----- bird -----\tdebit_card_specializing",
    "1516": "SELECT COUNT(*) FROM transactions_1k WHERE Date = '2012-08-26' AND Time < '13:00:00' AND CustomerID IN (SELECT CustomerID FROM customers WHERE Currency = 'EUR');\t----- bird -----\tdebit_card_specializing",
    "1517": "SELECT Segment FROM customers ORDER BY CustomerID LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1518": "SELECT G.Country FROM transactions_1k AS T1 JOIN gasstations AS G ON T1.GasStationID = G.GasStationID WHERE T1.Date = '2012-08-24' AND T1.Time = '12:42:00';\t----- bird -----\tdebit_card_specializing",
    "1519": "SELECT T1.ProductID FROM transactions_1k T1 WHERE T1.Date = '2012-08-23' AND T1.Time = '21:20:00';\t----- bird -----\tdebit_card_specializing",
    "1520": "SELECT SUM(t.Price) AS January_Expense FROM transactions_1k t JOIN yearmonth y ON t.CustomerID = y.CustomerID WHERE t.Date LIKE '2012-01%' AND y.Date LIKE '2012-01%' AND t.CustomerID = (SELECT CustomerID FROM transactions_1k WHERE Date = '2012-08-24' AND Price = 124.05)\t----- bird -----\tdebit_card_specializing",
    "1521": "SELECT COUNT(*) FROM transactions_1k t JOIN gasstations g ON t.GasStationID = g.GasStationID WHERE t.Date = '2012-08-26' AND t.Time >= '08:00' AND t.Time < '09:00' AND g.Country = 'CZE';\t----- bird -----\tdebit_card_specializing",
    "1522": "SELECT c.Currency FROM customers c JOIN \"yearmonth\" y ON c.CustomerID = y.CustomerID JOIN \"transactions_1k\" t ON c.CustomerID = t.CustomerID WHERE y.Date LIKE '201306%' AND t.Amount * t.Price = 214582.17;\t----- bird -----\tdebit_card_specializing",
    "1523": "SELECT Country FROM gasstations WHERE GasStationID = ( SELECT GasStationID FROM \"transactions_1k\" WHERE CardID = 667467 )\t----- bird -----\tdebit_card_specializing",
    "1524": "SELECT c.Country FROM transactions_1k t JOIN customers c ON t.CustomerID = c.CustomerID WHERE t.Date = '2012-08-24' AND t.Amount * t.Price = 548.4;\t----- bird -----\tdebit_card_specializing",
    "1525": "SELECT COUNT(DISTINCT CustomerID) * 100.0 / (SELECT COUNT(DISTINCT CustomerID) FROM yearmonth WHERE Date = '2012-08-25' AND CustomerID IN (SELECT CustomerID FROM customers WHERE Currency = 'EUR')) AS Percentage FROM yearmonth WHERE Date = '2012-08-25' AND CustomerID IN (SELECT CustomerID FROM customers WHERE Currency = 'EUR');\t----- bird -----\tdebit_card_specializing",
    "1526": "SELECT ((y1.Consumption - y2.Consumption) / y1.Consumption) AS Consumption_Decrease_Rate FROM yearmonth y1 JOIN yearmonth y2 ON y1.CustomerID = y2.CustomerID WHERE y1.Date = '2012-08-25' AND y2.Date = '2013-08-25'\t----- bird -----\tdebit_card_specializing",
    "1527": "SELECT GasStationID, SUM(Amount * Price) AS Revenue FROM transactions_1k GROUP BY GasStationID ORDER BY Revenue DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1528": "SELECT (SUM(CASE WHEN gasstations.Segment = 'premium' THEN 1 ELSE 0 END) * 100.0) / COUNT(*) FROM gasstations WHERE gasstations.Country = 'SVK';\t----- bird -----\tdebit_card_specializing",
    "1529": "SELECT SUM(Price) FROM transactions_1k WHERE CustomerID = 38508; SELECT SUM(Price) FROM transactions_1k WHERE CustomerID = 38508 AND Date LIKE '201201%';\t----- bird -----\tdebit_card_specializing",
    "1530": "SELECT Description, SUM(Amount) AS TotalAmount FROM products JOIN \"transactions_1k\" ON products.ProductID = \"transactions_1k\".ProductID GROUP BY Description ORDER BY TotalAmount DESC LIMIT 5;\t----- bird -----\tdebit_card_specializing",
    "1531": "SELECT c.CustomerID, c.Segment, c.Currency, SUM(t.Price) as TotalSpent, AVG(t.Price / t.Amount) as AvgPricePerItem FROM customers c JOIN transactions_1k t ON c.CustomerID = t.CustomerID GROUP BY c.CustomerID ORDER BY TotalSpent DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1532": "SELECT Country FROM gasstations WHERE GasStationID = (SELECT GasStationID FROM transactions_1k WHERE ProductID = 2 ORDER BY Price DESC LIMIT 1)\t----- bird -----\tdebit_card_specializing",
    "1533": "SELECT customers.CustomerID, customers.Segment, yearmonth.Consumption FROM customers JOIN \"transactions_1k\" ON customers.CustomerID = \"transactions_1k\".CustomerID JOIN products ON \"transactions_1k\".ProductID = products.ProductID JOIN yearmonth ON customers.CustomerID = yearmonth.CustomerID WHERE products.ProductID = 5 AND \"transactions_1k\".Price / \"transactions_1k\".Amount > 29.00 AND yearmonth.Date LIKE '201208%'\t----- bird -----\tdebit_card_specializing"
}