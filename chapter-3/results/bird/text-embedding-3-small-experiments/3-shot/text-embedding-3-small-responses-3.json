{
    "0": "SELECT MAX(`Percent (%) Eligible Free (K-12)`) AS highest_eligible_free_rate FROM frpm WHERE `County Name` = 'Alameda County'\t----- bird -----\tcalifornia_schools",
    "1": "SELECT TOP 3 `Percent (%) Eligible Free (Ages 5-17)` FROM frpm WHERE `Educational Option Type` = 'Continuation School' ORDER BY (`Free Meal Count (Ages 5-17)` / `Enrollment (Ages 5-17)`) ASC LIMIT 3\t----- bird -----\tcalifornia_schools",
    "2": "SELECT T2.Zip FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.`Charter School (Y/N)` = 1 AND T2.County = 'Fresno County Office of Education'\t----- bird -----\tcalifornia_schools",
    "3": "SELECT MailStreet, MailCity, MailZip, MailState FROM schools WHERE CDSCode = (SELECT CDSCode FROM frpm WHERE `FRPM Count (K-12)` = (SELECT MAX(`FRPM Count (K-12)`) FROM frpm))\t----- bird -----\tcalifornia_schools",
    "4": "SELECT Phone FROM schools WHERE Charter = 1 AND OpenDate > '2000-01-01'\t----- bird -----\tcalifornia_schools",
    "5": "SELECT COUNT(schools.school) FROM schools INNER JOIN satscores ON schools.CDSCode = satscores.cds WHERE satscores.AvgScrMath < 400 AND schools.Virtual = 'F'\t----- bird -----\tcalifornia_schools",
    "6": "SELECT T1.School FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T1.NumTstTakr > 500 AND T2.Magnet = 1;\t----- bird -----\tcalifornia_schools",
    "7": "SELECT T3.Phone FROM schools AS T3 INNER JOIN satscores AS T2 ON T3.CDSCode = T2.cds WHERE T2.NumTstTakr = (SELECT MAX(NumTstTakr) FROM satscores WHERE NumGE1500 > 0)\t----- bird -----\tcalifornia_schools",
    "8": "SELECT SUM(NumTstTakr) FROM satscores WHERE cds IN (SELECT CDSCode FROM frpm WHERE `FRPM Count (K-12)` = (SELECT MAX(`FRPM Count (K-12)`) FROM frpm))\t----- bird -----\tcalifornia_schools",
    "9": "SELECT COUNT(*) FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T1.AvgScrMath > 560 AND T2.FundingType = 'Charter'\t----- bird -----\tcalifornia_schools",
    "10": "SELECT T1.`FRPM Count (Ages 5-17)` FROM frpm AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T2.AvgScrRead = (SELECT MAX(AvgScrRead) FROM satscores)\t----- bird -----\tcalifornia_schools",
    "11": "SELECT T1.CDSCode FROM frpm AS T1 WHERE T1.`Enrollment (K-12)` + T1.`Enrollment (Ages 5-17)` > 500\t----- bird -----\tcalifornia_schools",
    "12": "SELECT MAX(`Percent (%) Eligible Free (Ages 5-17)`) FROM frpm WHERE CDSCode IN (SELECT cds FROM satscores WHERE NumGE1500 / NumTstTakr > 0.3)\t----- bird -----\tcalifornia_schools",
    "13": "SELECT T3.Phone FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode ORDER BY CAST(T1.NumGE1500 AS REAL) / T1.NumTstTakr DESC LIMIT 3;\t----- bird -----\tcalifornia_schools",
    "14": "SELECT s.NCESSchool FROM schools AS s INNER JOIN frpm AS f ON s.CDSCode = f.CDSCode ORDER BY f.`Enrollment (Ages 5-17)` DESC LIMIT 5\t----- bird -----\tcalifornia_schools",
    "15": "SELECT DISTRICT_NAME, AVG(AvgScrRead) AS AvgReadingScore FROM satscores JOIN schools ON satscores.cds = schools.CDSCode WHERE schools.StatusType = 'Active' GROUP BY DISTRICT_NAME ORDER BY AvgReadingScore DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "16": "SELECT COUNT(*) FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T2.County = 'Alameda' AND T1.NumTstTakr < 100\t----- bird -----\tcalifornia_schools",
    "17": "SELECT T2.`Charter School Number` FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T1.AvgScrWrite = 499\t----- bird -----\tcalifornia_schools",
    "18": "SELECT COUNT(T1.sname) FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T2.County = 'Contra Costa' AND T2.FundingType = 'directly funded' AND T1.NumTstTakr <= 250\t----- bird -----\tcalifornia_schools",
    "19": "SELECT T3.Phone FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode INNER JOIN ( SELECT cds, MAX(AvgScrMath) AS max_math_score FROM satscores ) AS T4 ON T1.cds = T4.cds AND T1.AvgScrMath = T4.max_math_score INNER JOIN schools AS T3 ON T1.cds = T3.CDSCode\t----- bird -----\tcalifornia_schools",
    "20": "SELECT COUNT(*) FROM frpm WHERE `County Name` = 'Amador' AND `Low Grade` = '9' AND `High Grade` = '12'\t----- bird -----\tcalifornia_schools",
    "21": "SELECT COUNT(school_name) FROM frpm WHERE county_name = 'Los Angeles' AND `Free Meal Count (K-12)` > 500 AND `FRPM Count (K-12)` < 700\t----- bird -----\tcalifornia_schools",
    "22": "SELECT s.sname FROM satscores AS s INNER JOIN schools AS sc ON s.cds = sc.CDSCode WHERE sc.County = 'Contra Costa' ORDER BY s.NumTstTakr DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "23": "SELECT T1.`School Name`, T2.Street FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE ABS(T1.`Enrollment (K-12)` - T1.`Enrollment (Ages 5-17)`) > 30;\t----- bird -----\tcalifornia_schools",
    "24": "SELECT s.School FROM frpm f INNER JOIN satscores s ON f.CDSCode = s.cds WHERE f.`Percent (%) Eligible Free (K-12)` > 0.1 AND s.NumGE1500 > 0;\t----- bird -----\tcalifornia_schools",
    "25": "SELECT T1.School FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T2.County = 'Riverside' GROUP BY T1.cds HAVING AVG(T1.AvgScrMath) > 400;\t----- bird -----\tcalifornia_schools",
    "26": "SELECT s.School AS School_Name, s.Street || ', ' || s.City || ', ' || s.State || ', ' || s.Zip AS Full_Address FROM schools AS s INNER JOIN frpm AS f ON s.CDSCode = f.CDSCode WHERE f.`Free Meal Count (Ages 5-17)` > 800 AND s.County = 'Monterey' AND s.GSoffered LIKE '%12%'\t----- bird -----\tcalifornia_schools",
    "27": "SELECT s.School, s.Phone, AVG(ss.AvgScrWrite) AS AvgWritingScore FROM schools s INNER JOIN satscores ss ON s.CDSCode = ss.cds WHERE s.OpenDate > '1991-01-01' OR s.ClosedDate < '2000-01-01' GROUP BY s.School, s.Phone\t----- bird -----\tcalifornia_schools",
    "28": "SELECT T2.sname, T2.DOCType FROM frpm AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds INNER JOIN schools AS T3 ON T1.CDSCode = T3.CDSCode WHERE T3.FundingType = 'Locally Funded' GROUP BY T2.sname, T2.DOCType HAVING (AVG(T1.`Enrollment (K-12)` - T1.`Enrollment (Ages 5-17)`) > (SELECT AVG(T1.`Enrollment (K-12)` - T1.`Enrollment (Ages 5-17)`) FROM frpm AS T1));\t----- bird -----\tcalifornia_schools",
    "29": "SELECT MIN(OpenDate) FROM schools WHERE GSoffered = 'K-12' ORDER BY Enrollment DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "30": "SELECT DISTINCT City FROM schools ORDER BY (SELECT SUM(enroll12) FROM satscores WHERE rtype = 'K-12' AND cds = schools.CDSCode) ASC LIMIT 5\t----- bird -----\tcalifornia_schools",
    "31": "SELECT (`Free Meal Count (K-12)` / `Enrollment (K-12)`) AS Eligible_Free_Rate FROM frpm WHERE `Educational Option Type` = 'K-12' ORDER BY `Enrollment (K-12)` DESC LIMIT 10, 11\t----- bird -----\tcalifornia_schools",
    "32": "SELECT `School Name`, (`FRPM Count (K-12)` / `Enrollment (K-12)`) AS `Eligible Free or Reduced Price Meal Rate` FROM frpm WHERE `District Type` = 66 AND `Low Grade` = 'K' AND `High Grade` = '12' ORDER BY `FRPM Count (K-12)` DESC LIMIT 5\t----- bird -----\tcalifornia_schools",
    "33": "SELECT T1.`School Name`, T2.Website FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.`Free Meal Count (Ages 5-17)` >= 1900 AND T1.`Free Meal Count (Ages 5-17)` <= 2000\t----- bird -----\tcalifornia_schools",
    "34": "SELECT `Free Meal Count (Ages 5-17)` / `Enrollment (Ages 5-17)` AS \"Free Rate\" FROM frpm WHERE `School Name` = 'Kacey Gibson'\t----- bird -----\tcalifornia_schools",
    "35": "SELECT T3.AdmEmail1 FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode INNER JOIN satscores AS T3 ON T1.CDSCode = T3.cds WHERE T1.`Charter School (Y/N)` = 1 ORDER BY T1.`Enrollment (K-12)` ASC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "36": "SELECT T1.AdmFName1, T1.AdmLName1 FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T2.NumGE1500 = (SELECT MAX(NumGE1500) FROM satscores)\t----- bird -----\tcalifornia_schools",
    "37": "SELECT T3.Street, T3.City, T3.Zip, T3.State FROM schools AS T3 INNER JOIN satscores AS T2 ON T3.CDSCode = T2.cds WHERE T2.NumGE1500 / T2.NumTstTakr = (SELECT MIN(NumGE1500 / NumTstTakr) FROM satscores)\t----- bird -----\tcalifornia_schools",
    "38": "SELECT Website FROM schools WHERE County = 'Los Angeles' AND CDSCode IN (SELECT cds FROM satscores WHERE NumTstTakr BETWEEN 2000 AND 3000)\t----- bird -----\tcalifornia_schools",
    "39": "SELECT AVG(NumTstTakr) FROM satscores INNER JOIN schools ON satscores.cds = schools.CDSCode WHERE schools.County = 'Fresno' AND schools.OpenDate BETWEEN '1980-01-01' AND '1980-12-31'\t----- bird -----\tcalifornia_schools",
    "40": "SELECT T3.phone FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode INNER JOIN employee AS T3 ON T2.District = 'Fresno Unified' WHERE T1.AvgScrRead = (SELECT MIN(AvgScrRead) FROM satscores WHERE rtype = 'S' AND cds IN (SELECT CDSCode FROM schools WHERE District = 'Fresno Unified'))\t----- bird -----\tcalifornia_schools",
    "41": "SELECT T2.School FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T2.Virtual = 'F' ORDER BY T1.AvgScrRead DESC LIMIT 5\t----- bird -----\tcalifornia_schools",
    "42": "SELECT T1.`Educational Option Type` FROM frpm AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T2.AvgScrMath = (SELECT MAX(AvgScrMath) FROM satscores)\t----- bird -----\tcalifornia_schools",
    "43": "SELECT AVG(AvgScrMath + AvgScrRead + AvgScrWrite), County FROM satscores WHERE cds = ( SELECT cds FROM satscores ORDER BY (AvgScrMath + AvgScrRead + AvgScrWrite) ASC LIMIT 1 )\t----- bird -----\tcalifornia_schools",
    "44": "SELECT AVG(AvgScrWrite), schools.City FROM satscores INNER JOIN schools ON satscores.cds = schools.CDSCode WHERE NumTstTakr = (SELECT MAX(NumTstTakr) FROM satscores WHERE NumGE1500 >= 1500)\t----- bird -----\tcalifornia_schools",
    "45": "SELECT T3.`School Name`, AVG(T2.AvgScrWrite) AS AvgWritingScore FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T1.AdmFName1 = 'Ricci' AND T1.AdmLName1 = 'Ulrich' GROUP BY T3.`School Name`\t----- bird -----\tcalifornia_schools",
    "46": "SELECT schools.State, COUNT(enrollment) AS num_enrollees FROM frpm INNER JOIN schools ON frpm.CDSCode = schools.CDSCode WHERE frpm.`District Type` = 'State Special Schools' AND frpm.`Low Grade` = 'K' AND frpm.`High Grade` = '12' GROUP BY schools.State ORDER BY num_enrollees DESC;\t----- bird -----\tcalifornia_schools",
    "47": "SELECT COUNT(schools.CDSCode) / 12 AS monthly_average FROM schools INNER JOIN frpm ON schools.CDSCode = frpm.CDSCode WHERE schools.County = 'Alameda County' AND schools.DOC = '52' AND schools.OpenDate LIKE '%1980%'\t----- bird -----\tcalifornia_schools",
    "48": "SELECT CAST(SUM(CASE WHEN T3.DOC = '54' THEN 1 ELSE 0 END) * 1.0 / SUM(CASE WHEN T3.DOC = '52' THEN 1 ELSE 0 END) AS REAL) FROM frpm AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds INNER JOIN schools AS T3 ON T1.CDSCode = T3.CDSCode WHERE T3.County = 'Orange County'\t----- bird -----\tcalifornia_schools",
    "49": "SELECT T1.County, T2.School, T2.ClosedDate FROM schools AS T2 INNER JOIN frpm AS T1 ON T1.CDSCode = T2.CDSCode WHERE T2.StatusType = 'Closed' GROUP BY T1.County ORDER BY COUNT(T2.School) DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "50": "SELECT T1.Street, T1.School FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds ORDER BY T2.AvgScrMath DESC LIMIT 1 OFFSET 5\t----- bird -----\tcalifornia_schools",
    "51": "SELECT s.MailStreet, s.School FROM schools s JOIN satscores ss ON s.CDSCode = ss.cds WHERE ss.AvgScrRead = (SELECT MIN(AvgScrRead) FROM satscores)\t----- bird -----\tcalifornia_schools",
    "52": "SELECT COUNT(*) FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T2.AvgScrRead + T2.AvgScrMath + T2.AvgScrWrite >= 1500 AND T1.MailCity = 'Lakeport'\t----- bird -----\tcalifornia_schools",
    "53": "SELECT SUM(NumTstTakr) FROM satscores INNER JOIN schools ON satscores.cds = schools.CDSCode WHERE schools.MailCity = 'Fresno';\t----- bird -----\tcalifornia_schools",
    "54": "SELECT s.School, s.MailZip FROM schools s WHERE s.AdmFName1 = 'Avetik' AND s.AdmLName1 = 'Atoian' OR s.AdmFName2 = 'Avetik' AND s.AdmLName2 = 'Atoian' OR s.AdmFName3 = 'Avetik' AND s.AdmLName3 = 'Atoian'\t----- bird -----\tcalifornia_schools",
    "55": "SELECT CAST(COUNT(CASE WHEN T1.County = 'Colusa' THEN T1.CDSCode ELSE NULL END) AS REAL) / COUNT(CASE WHEN T1.County = 'Humboldt' THEN T1.CDSCode ELSE NULL END) FROM schools AS T1 WHERE T1.MailState = 'CA'\t----- bird -----\tcalifornia_schools",
    "56": "SELECT COUNT(*) FROM schools WHERE MailState = 'CA' AND State = 'CA' AND County = 'San Joaquin' AND StatusType = 'Active'\t----- bird -----\tcalifornia_schools",
    "57": "SELECT Phone, Ext FROM schools WHERE CDSCode = ( SELECT cds FROM satscores ORDER BY AvgScrWrite DESC LIMIT 1 OFFSET 332 )\t----- bird -----\tcalifornia_schools",
    "58": "SELECT T1.Phone, T1.Ext, T1.School FROM schools AS T1 WHERE T1.Zip = '95203-3704'\t----- bird -----\tcalifornia_schools",
    "59": "SELECT website FROM schools WHERE AdmFName1 = 'Mike' AND AdmLName1 = 'Larson' OR AdmFName1 = 'Dante' AND AdmLName1 = 'Alvarez' OR AdmFName2 = 'Mike' AND AdmLName2 = 'Larson' OR AdmFName2 = 'Dante' AND AdmLName2 = 'Alvarez' OR AdmFName3 = 'Mike' AND AdmLName3 = 'Larson' OR AdmFName3 = 'Dante' AND AdmLName3 = 'Alvarez'\t----- bird -----\tcalifornia_schools",
    "60": "SELECT T1.Website FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.Virtual = 'P' AND T1.Charter = 1 AND T1.County = 'San Joaquin'\t----- bird -----\tcalifornia_schools",
    "61": "SELECT COUNT(*) FROM schools WHERE Charter = 1 AND City = 'Hickman' AND DOC = 52\t----- bird -----\tcalifornia_schools",
    "62": "SELECT COUNT(*) FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.County = 'Los Angeles' AND T1.Charter = 0 AND T2.`Percent (%) Eligible Free (K-12)` < 0.18\t----- bird -----\tcalifornia_schools",
    "63": "SELECT S.School, S.City, S.AdmFName1, S.AdmLName1, S.AdmFName2, S.AdmLName2, S.AdmFName3, S.AdmLName3 FROM schools AS S WHERE S.Charter = 1 AND S.CharterNum = '00D2'\t----- bird -----\tcalifornia_schools",
    "64": "SELECT COUNT(*) FROM schools WHERE MailCity = 'Hickman' AND CharterNum = '00D4'\t----- bird -----\tcalifornia_schools",
    "65": "SELECT (CAST(SUM(CASE WHEN Charter Funding Type = 'Locally Funded' THEN 1 ELSE 0 END) AS REAL) / COUNT(*)) * 100 FROM frpm WHERE `County Name` = 'Santa Clara'\t----- bird -----\tcalifornia_schools",
    "66": "SELECT COUNT(*) FROM schools WHERE OpenDate BETWEEN '2000-01-01' AND '2005-12-31' AND County = 'Stanislaus' AND FundingType = 'Directly Funded'\t----- bird -----\tcalifornia_schools",
    "67": "SELECT SUM(FRPM.`Enrollment (K-12)`) FROM frpm INNER JOIN schools ON frpm.CDSCode = schools.CDSCode WHERE frpm.`Academic Year` = '1989' AND schools.City = 'San Francisco' AND schools.StatusType = 'Closed' AND schools.DistrictType = 'Community College District'\t----- bird -----\tcalifornia_schools",
    "68": "SELECT County FROM schools WHERE ClosedDate BETWEEN '1980-01-01' AND '1989-12-31' AND SOC = '11' GROUP BY County ORDER BY COUNT(*) DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "69": "SELECT NCESDist FROM schools WHERE SOC = '31'\t----- bird -----\tcalifornia_schools",
    "70": "SELECT COUNT(*) FROM schools WHERE County = 'Alpine' AND StatusType IN ('Active', 'Closed') AND EdOpsName = 'District Community Day School'\t----- bird -----\tcalifornia_schools",
    "71": "SELECT District Code FROM frpm WHERE `School Name` IN (SELECT School FROM schools WHERE City = 'Fresno' AND Magnet = 0)\t----- bird -----\tcalifornia_schools",
    "72": "SELECT SUM(`Enrollment (Ages 5-17)`) FROM frpm WHERE `School Name` = 'State Special School' AND `District Name` = 'Fremont' AND `Academic Year` = '2014-2015' AND EdOpsCode = 'SSS'\t----- bird -----\tcalifornia_schools",
    "73": "SELECT FRPMCount_Ages_5_17 FROM frpm WHERE SchoolName = 'Youth Authority School' AND MailStreet = 'PO Box 1040'\t----- bird -----\tcalifornia_schools",
    "74": "SELECT MIN(`Low Grade`) FROM frpm WHERE `District Type` = 'SPECON' AND NCESDist = '613360'\t----- bird -----\tcalifornia_schools",
    "75": "SELECT T1.`School Name`, T1.`Educational Option Type` FROM frpm AS T1 WHERE T1.`County Code` = 37 AND T1.`NSLP Provision Status` = 'Breakfast Provision 2'\t----- bird -----\tcalifornia_schools",
    "76": "SELECT T1.City FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.EILCode = 'HS' AND T2.`NSLP Provision Status` = '2' AND T2.`Low Grade` = '9' AND T2.`High Grade` = '12' AND T1.County = 'Merced'\t----- bird -----\tcalifornia_schools",
    "77": "SELECT schools.school, frpm.`Percent (%) Eligible FRPM (Ages 5-17)` FROM schools JOIN frpm ON schools.CDSCode = frpm.CDSCode WHERE schools.County = 'Los Angeles' AND schools.GSserved = 'K-9'\t----- bird -----\tcalifornia_schools",
    "78": "SELECT T2.GSserved FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T1.City = 'Adelanto' GROUP BY T2.GSserved ORDER BY COUNT(T2.GSserved) DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "79": "SELECT T1.County, COUNT(T1.CDSCode) AS Num_Schools FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.County IN ('San Diego', 'Santa Barbara') AND T1.Virtual = 'F' GROUP BY T1.County ORDER BY Num_Schools DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "80": "SELECT T1.`School Name`, T1.Latitude, T1.`School Type` FROM schools AS T1 WHERE T1.Latitude = (SELECT MAX(Latitude) FROM schools)\t----- bird -----\tcalifornia_schools",
    "81": "SELECT City, SchoolName, LowGrade FROM schools WHERE State = 'CA' AND Latitude = (SELECT MIN(Latitude) FROM schools WHERE State = 'CA')\t----- bird -----\tcalifornia_schools",
    "82": "SELECT `Low Grade`, `High Grade` FROM schools WHERE Longitude = (SELECT MAX(Longitude) FROM schools)\t----- bird -----\tcalifornia_schools",
    "83": "SELECT COUNT(DISTINCT CDSCode) FROM schools WHERE GSoffered = 'Magnet' AND GSserved = 'K-8' AND EdOpsCode = 'Multiple Provision Types' SELECT City, COUNT(DISTINCT CDSCode) FROM schools WHERE GSserved = 'K-8' GROUP BY City\t----- bird -----\tcalifornia_schools",
    "84": "SELECT AdmFName1, District FROM schools GROUP BY AdmFName1, District ORDER BY COUNT(AdmFName1) DESC LIMIT 2\t----- bird -----\tcalifornia_schools",
    "85": "SELECT T1.`District Code` FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.AdmFName1 = 'Alusine' AND T1.`Enrollment (K-12)` > 0 AND T1.`Free Meal Count (K-12)` IS NOT NULL AND T1.`Enrollment (K-12)` IS NOT NULL AND T1.`Enrollment (K-12)` > 0 AND T1.`Free Meal Count (K-12)` / T1.`Enrollment (K-12)` * 100% IS NOT NULL;\t----- bird -----\tcalifornia_schools",
    "86": "SELECT s.AdmLName1, s.District, s.County, s.School FROM schools s WHERE s.CharterNum = '40'\t----- bird -----\tcalifornia_schools",
    "87": "SELECT T1.AdmEmail1 FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.County = 'San Bernardino' AND T1.District = 'San Bernardino City Unified' AND T1.OpenDate BETWEEN '2009-01-01' AND '2010-12-31' AND (T1.SOC = '62' OR T1.DOC = '54')\t----- bird -----\tcalifornia_schools",
    "88": "SELECT T3.AdmEmail1, T3.School FROM satscores AS T1 INNER JOIN schools AS T3 ON T1.cds = T3.CDSCode WHERE T1.NumTstTakr = (SELECT MAX(NumTstTakr) FROM satscores WHERE NumGE1500 > 0) AND T1.NumGE1500 > 0\t----- bird -----\tcalifornia_schools",
    "89": "SELECT COUNT(T1.account_id) FROM account AS T1 INNER JOIN disp AS T2 ON T1.account_id = T2.account_id INNER JOIN client AS T3 ON T2.client_id = T3.client_id INNER JOIN district AS T4 ON T3.district_id = T4.district_id WHERE T2.type = 'POPLATEK PO OBRATU' AND T4.A3 = 'East Bohemia'\t----- bird -----\tfinancial",
    "90": "SELECT COUNT(T1.account_id) FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.A3 = 'Prague'\t----- bird -----\tfinancial",
    "91": "SELECT AVG(A12) AS avg_unemployment_ratio_1995, AVG(A13) AS avg_unemployment_ratio_1996 FROM district WHERE STRFTIME('%Y', A2) IN ('1995', '1996')\t----- bird -----\tfinancial",
    "92": "SELECT COUNT(DISTINCT district_id) FROM client AS C INNER JOIN district AS D ON C.district_id = D.district_id WHERE C.gender = 'F' GROUP BY D.district_id HAVING AVG(D.A11) > 6000 AND AVG(D.A11) < 10000\t----- bird -----\tfinancial",
    "93": "SELECT COUNT(T1.client_id) FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.gender = 'M' AND T2.A3 = 'North Bohemia' AND T2.A11 > 8000\t----- bird -----\tfinancial",
    "94": "SELECT account.account_id FROM account JOIN disp ON account.account_id = disp.account_id JOIN client ON disp.client_id = client.client_id WHERE client.gender = 'F' AND client.birth_date = (SELECT MIN(birth_date) FROM client WHERE gender = 'F') AND client.birth_date = (SELECT MAX(birth_date) FROM client WHERE gender = 'F') AND client.district_id = (SELECT district_id FROM district WHERE A11 = (SELECT MIN(A11) FROM district)) AND client.district_id = (SELECT district_id FROM district WHERE A11 = (SELECT MAX(A11) FROM district)) SELECT (SELECT MAX(A11) FROM district) - (SELECT MIN(A11) FROM district) as Salary_Gap\t----- bird -----\tfinancial",
    "95": "SELECT account_id FROM disp WHERE client_id IN (SELECT client_id FROM client WHERE birth_date = (SELECT MIN(birth_date) FROM client)) GROUP BY account_id HAVING AVG(A11) = (SELECT MAX(AVG(A11)) FROM client GROUP BY client_id)\t----- bird -----\tfinancial",
    "96": "SELECT COUNT(*) FROM disp AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T2.frequency = 'POPLATEK TYDNE' AND T1.type = 'Owner'\t----- bird -----\tfinancial",
    "97": "SELECT T2.client_id, T2.gender, T2.birth_date FROM disp AS T1 INNER JOIN client AS T2 ON T1.client_id = T2.client_id WHERE T1.type = 'DISPONENT' AND T1.type = 'POPLATEK PO OBRATU'\t----- bird -----\tfinancial",
    "98": "SELECT T1.account_id, T1.frequency FROM account AS T1 INNER JOIN loan AS T2 ON T1.account_id = T2.account_id WHERE T2.date LIKE '1997%' AND T2.status = 'approved' AND T2.amount = (SELECT MIN(amount) FROM loan WHERE status = 'approved') AND T1.frequency = 'POPLATEK TYDNE'\t----- bird -----\tfinancial",
    "99": "SELECT account_id FROM loan WHERE duration > 12 AND date >= '1993-01-01' ORDER BY amount DESC LIMIT 1\t----- bird -----\tfinancial",
    "100": "SELECT COUNT(T1.client_id) FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.gender = 'F' AND T1.birth_date < '1950-01-01' AND T2.A2 = 'Slokolov'\t----- bird -----\tfinancial",
    "101": "SELECT T1.account_id FROM account AS T1 WHERE T1.date = (SELECT MIN(date) FROM account WHERE date LIKE '1995%')\t----- bird -----\tfinancial",
    "102": "SELECT account_id FROM account WHERE date < '1997-01-01' AND account_id IN (SELECT account_id FROM trans WHERE amount > 3000)\t----- bird -----\tfinancial",
    "103": "SELECT client_id FROM client WHERE client_id IN (SELECT client_id FROM disp WHERE disp_id IN (SELECT disp_id FROM card WHERE issued = '1994-03-03'))\t----- bird -----\tfinancial",
    "104": "SELECT MIN(date) AS account_opened_date FROM account WHERE account_id IN (SELECT account_id FROM trans WHERE amount = 840 AND date = '1998-10-14')\t----- bird -----\tfinancial",
    "105": "SELECT A.district_id FROM account AS A INNER JOIN loan AS L ON A.account_id = L.account_id WHERE L.date = '1994-08-25'\t----- bird -----\tfinancial",
    "106": "SELECT MAX(amount) AS biggest_transaction_amount FROM trans WHERE account_id = (SELECT account_id FROM card WHERE issued = '1996-10-21')\t----- bird -----\tfinancial",
    "107": "SELECT T3.gender FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN account AS T3 ON T2.account_id = T3.account_id INNER JOIN district AS T4 ON T3.district_id = T4.district_id WHERE T4.A11 = (SELECT MAX(A11) FROM district) ORDER BY T1.birth_date ASC LIMIT 1\t----- bird -----\tfinancial",
    "108": "SELECT T3.amount FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN account AS T3 ON T2.account_id = T3.account_id INNER JOIN loan AS T4 ON T3.account_id = T4.account_id WHERE T4.amount = (SELECT MAX(amount) FROM loan) ORDER BY T3.date ASC LIMIT 1\t----- bird -----\tfinancial",
    "109": "SELECT COUNT(*) FROM client c JOIN district d ON c.district_id = d.district_id WHERE d.A2 = 'Jesenik' AND c.gender = 'F'\t----- bird -----\tfinancial",
    "110": "SELECT T2.disp_id FROM trans AS T1 INNER JOIN disp AS T2 ON T1.account_id = T2.account_id WHERE T1.amount = 5100 AND T1.date = '1998-09-02'\t----- bird -----\tfinancial",
    "111": "SELECT COUNT(account_id) FROM account WHERE district_id IN (SELECT district_id FROM district WHERE A2 = 'Litomerice') AND STRFTIME('%Y', date) = '1996'\t----- bird -----\tfinancial",
    "112": "SELECT A2 FROM client INNER JOIN disp ON client.client_id = disp.client_id INNER JOIN account ON disp.account_id = account.account_id INNER JOIN district ON client.district_id = district.district_id WHERE client.gender = 'F' AND client.birth_date = '1976-01-29'\t----- bird -----\tfinancial",
    "113": "SELECT T1.birth_date FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN account AS T3 ON T2.account_id = T3.account_id INNER JOIN loan AS T4 ON T3.account_id = T4.account_id WHERE T4.amount = 98832 AND T4.date = '1996-01-03'\t----- bird -----\tfinancial",
    "114": "SELECT T1.account_id FROM client AS T1 INNER JOIN account AS T2 ON T1.client_id = T2.client_id INNER JOIN district AS T3 ON T1.district_id = T3.district_id WHERE T3.A3 = 'Prague' ORDER BY T2.date LIMIT 1\t----- bird -----\tfinancial",
    "115": "SELECT CAST(COUNT(CASE WHEN T2.gender = 'M' THEN 1 END) AS REAL) * 100 / COUNT(T1.client_id) FROM client AS T1 INNER JOIN district AS T3 ON T1.district_id = T3.district_id LEFT JOIN male AS T2 ON T1.client_id = T2.client_id WHERE T3.A3 = 'south Bohemia' ORDER BY T3.A4 DESC LIMIT 1\t----- bird -----\tfinancial",
    "116": "SELECT ((SELECT T2.balance FROM trans AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T1.date = '1993-07-05' AND T1.type = 'Loan' LIMIT 1) - (SELECT T2.balance FROM trans AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T1.date = '1993-03-22' AND T1.type = 'Loan' LIMIT 1)) * 100.0 / (SELECT T2.balance FROM trans AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T1.date = '1993-03-22' AND T1.type = 'Loan' LIMIT 1) AS IncreaseRate;\t----- bird -----\tfinancial",
    "117": "SELECT CAST(SUM(CASE WHEN status = 'A' THEN amount ELSE 0 END) AS REAL) * 100 / SUM(amount) FROM loan\t----- bird -----\tfinancial",
    "118": "SELECT CAST(SUM(CASE WHEN l.amount < 100000 AND l.status = 'C' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(DISTINCT l.account_id) FROM loan l INNER JOIN account a ON l.account_id = a.account_id WHERE a.frequency = 'ok so far'\t----- bird -----\tfinancial",
    "119": "SELECT T1.account_id, T2.A2 AS district_name, T2.A3 AS district_region FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id INNER JOIN card AS T3 ON T1.account_id = T3.account_id WHERE T3.issued > T1.date AND T1.date BETWEEN '1993-01-01' AND '1993-12-31' AND T3.type = 'POPLATEK PO OBRATU'\t----- bird -----\tfinancial",
    "120": "SELECT account.account_id, account.frequency FROM account INNER JOIN disp ON account.account_id = disp.account_id INNER JOIN client ON disp.client_id = client.client_id INNER JOIN district ON client.district_id = district.district_id WHERE district.A6 = 'east Bohemia' AND account.date BETWEEN '1995-01-01' AND '2000-12-31'\t----- bird -----\tfinancial",
    "121": "SELECT account_id, date FROM account WHERE district_id IN (SELECT district_id FROM district WHERE A2 = 'Prachatice')\t----- bird -----\tfinancial",
    "122": "SELECT T1.A2 AS district, T1.A3 AS region FROM district AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id INNER JOIN loan AS T3 ON T2.account_id = T3.account_id WHERE T3.loan_id = 4990\t----- bird -----\tfinancial",
    "123": "SELECT T1.account_id, T2.A2 AS district, T2.A3 AS region FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T1.amount > 300000\t----- bird -----\tfinancial",
    "124": "SELECT loan.loan_id, district.A3, district.A11 FROM loan INNER JOIN account ON loan.account_id = account.account_id INNER JOIN district ON account.district_id = district.district_id WHERE loan.duration = 60;\t----- bird -----\tfinancial",
    "125": "SELECT T1.A2 AS district, ((T1.A13 - T1.A12) / T1.A12) * 100 AS unemployment_increment_rate FROM district AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id INNER JOIN loan AS T3 ON T2.account_id = T3.account_id INNER JOIN client AS T4 ON T2.district_id = T4.district_id WHERE T3.status = 'D' AND T4.client_id IN (SELECT client_id FROM loan WHERE status = 'D')\t----- bird -----\tfinancial",
    "126": "SELECT CAST(SUM(CASE WHEN T4.A2 = 'Decin' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM account AS T1 INNER JOIN district AS T4 ON T1.district_id = T4.district_id WHERE strftime('%Y', T1.date) = '1993'\t----- bird -----\tfinancial",
    "127": "SELECT account_id FROM account WHERE frequency = 'POPLATEK MESICNE'\t----- bird -----\tfinancial",
    "128": "SELECT A2 AS district, COUNT(DISTINCT account_id) AS num_female_account_holders FROM client WHERE gender = 'F' GROUP BY district ORDER BY num_female_account_holders DESC LIMIT 10\t----- bird -----\tfinancial",
    "129": "SELECT T1.A2, SUM(T2.amount) AS TotalWithdrawalAmount FROM district AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id INNER JOIN trans AS T3 ON T2.account_id = T3.account_id WHERE T3.type = 'VYDAJ' AND T3.date LIKE '1996-01%' GROUP BY T1.A2 ORDER BY TotalWithdrawalAmount DESC LIMIT 10\t----- bird -----\tfinancial",
    "130": "SELECT COUNT(DISTINCT account_id) FROM account WHERE district_id IN (SELECT district_id FROM district WHERE A3 = 'South Bohemia') AND account_id NOT IN (SELECT account_id FROM disp WHERE type = 'credit card')\t----- bird -----\tfinancial",
    "131": "SELECT A3 FROM district WHERE district_id IN (SELECT district_id FROM client WHERE client_id IN (SELECT client_id FROM disp WHERE account_id IN (SELECT account_id FROM loan WHERE status = 'C' OR status = 'D'))) GROUP BY A3 ORDER BY COUNT(*) DESC LIMIT 1;\t----- bird -----\tfinancial",
    "132": "SELECT AVG(loan.amount) FROM loan INNER JOIN account ON loan.account_id = account.account_id INNER JOIN disp ON account.account_id = disp.account_id INNER JOIN client ON disp.client_id = client.client_id WHERE client.gender = 'M'\t----- bird -----\tfinancial",
    "133": "SELECT A2, A5 FROM district WHERE A13 = (SELECT MAX(A13) FROM district WHERE A13 IS NOT NULL AND A13 <> 0)\t----- bird -----\tfinancial",
    "134": "SELECT COUNT(T1.account_id) FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id INNER JOIN Crime AS T3 ON T2.A16 = T3.report_no WHERE T3.date LIKE '1996%' ORDER BY T3.report_no DESC LIMIT 1\t----- bird -----\tfinancial",
    "135": "SELECT COUNT(account_id) FROM trans WHERE type = 'VYBER KARTOU' AND balance < 0 AND account_id IN (SELECT account_id FROM account WHERE frequency = 'POPLATEK MESICNE')\t----- bird -----\tfinancial",
    "136": "SELECT COUNT(loan_id) FROM loan INNER JOIN account ON loan.account_id = account.account_id WHERE date BETWEEN '1995-01-01' AND '1997-12-31' AND amount >= 250000 AND account.frequency = 'POPLATEK MESICNE' AND status = 'approved'\t----- bird -----\tfinancial",
    "137": "SELECT COUNT(*) FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T3.A1 = 1 AND T1.status = 'C'\t----- bird -----\tfinancial",
    "138": "SELECT COUNT(T1.client_id) FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.district_id = ( SELECT district_id FROM district ORDER BY A15 DESC LIMIT 1 OFFSET 1 ) AND T1.gender = 'M'\t----- bird -----\tfinancial",
    "139": "SELECT COUNT(T1.card_id) FROM card AS T1 INNER JOIN disp AS T2 ON T1.disp_id = T2.disp_id WHERE T1.type = 'gold' AND T2.type = 'disponent'\t----- bird -----\tfinancial",
    "140": "SELECT COUNT(*) FROM account INNER JOIN district ON account.district_id = district.district_id WHERE district.A2 = 'Pisek'\t----- bird -----\tfinancial",
    "141": "SELECT DISTINCT A2, A3, A4, A5, A6, A7 FROM district AS D INNER JOIN account AS A ON D.district_id = A.district_id INNER JOIN trans AS T ON A.account_id = T.account_id WHERE T.amount > 10000 AND STRFTIME('%Y', T.date) = '1997'\t----- bird -----\tfinancial",
    "142": "SELECT T1.account_id FROM `order` AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T1.k_symbol = 'SIPO' AND T3.A4 = 'Pisek'\t----- bird -----\tfinancial",
    "143": "SELECT T1.account_id FROM account AS T1 INNER JOIN disp AS T2 ON T1.account_id = T2.account_id INNER JOIN card AS T3 ON T2.disp_id = T3.disp_id WHERE T3.type = 'Gold' AND T3.type = 'Junior'\t----- bird -----\tfinancial",
    "144": "SELECT AVG(amount) FROM trans WHERE operation = 'VYBER KARTOU' AND type = 'credit card' AND date BETWEEN '2021-01-01' AND '2021-12-31'\t----- bird -----\tfinancial",
    "145": "SELECT T1.client_id FROM disp AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN trans AS T3 ON T2.account_id = T3.account_id WHERE T3.type = 'credit card withdrawal' AND STRFTIME('%Y', T3.date) = '1998' GROUP BY T1.client_id HAVING AVG(T3.amount) < (SELECT AVG(T4.amount) FROM trans AS T4 WHERE STRFTIME('%Y', T4.date) = '1998' AND T4.type = 'credit card withdrawal')\t----- bird -----\tfinancial",
    "146": "SELECT client.client_id FROM client JOIN disp ON client.client_id = disp.client_id JOIN card ON disp.disp_id = card.disp_id JOIN account ON disp.account_id = account.account_id JOIN loan ON account.account_id = loan.account_id WHERE client.gender = 'F' AND card.type = 'credit'\t----- bird -----\tfinancial",
    "147": "SELECT COUNT(T1.client_id) FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.gender = 'F' AND T2.A3 = 'South Bohemia'\t----- bird -----\tfinancial",
    "148": "SELECT T1.account_id FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id INNER JOIN disp AS T3 ON T1.account_id = T3.account_id WHERE T2.A2 = 'Tabor' AND T3.type = 'OWNER'\t----- bird -----\tfinancial",
    "149": "SELECT DISTINCT type FROM disp WHERE type != 'OWNER' AND account_id IN ( SELECT account_id FROM account WHERE district_id IN ( SELECT district_id FROM district WHERE A11 > 8000 AND A11 <= 9000 ) )\t----- bird -----\tfinancial",
    "150": "SELECT COUNT(DISTINCT T1.account_id) FROM account AS T1 INNER JOIN trans AS T2 ON T1.account_id = T2.account_id INNER JOIN district AS T3 ON T1.district_id = T3.district_id WHERE T3.A3 = 'North Bohemia' AND T2.bank = 'AB'\t----- bird -----\tfinancial",
    "151": "SELECT A2 FROM district WHERE district_id IN (SELECT district_id FROM account WHERE account_id IN (SELECT account_id FROM trans WHERE type = 'VYDAJ'))\t----- bird -----\tfinancial",
    "152": "SELECT AVG(A15) FROM district WHERE A15 > 4000 AND district_id IN (SELECT district_id FROM account WHERE date >= '1997-01-01')\t----- bird -----\tfinancial",
    "153": "SELECT COUNT(T1.card_id) FROM card AS T1 INNER JOIN disp AS T2 ON T1.disp_id = T2.disp_id INNER JOIN account AS T3 ON T2.account_id = T3.account_id INNER JOIN client AS T4 ON T2.client_id = T4.client_id WHERE T1.type = 'classic' AND T2.type = 'OWNER'\t----- bird -----\tfinancial",
    "154": "SELECT COUNT(T1.client_id) FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.gender = 'M' AND T2.A2 = 'Hl.m. Praha'\t----- bird -----\tfinancial",
    "155": "SELECT CAST(SUM(CASE WHEN type = 'gold' AND issued < '1998-01-01' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM card\t----- bird -----\tfinancial",
    "156": "SELECT T4.client_id FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN disp AS T3 ON T2.account_id = T3.account_id INNER JOIN client AS T4 ON T3.client_id = T4.client_id GROUP BY T4.client_id ORDER BY SUM(T1.amount) DESC LIMIT 1;\t----- bird -----\tfinancial",
    "157": "SELECT SUM(A15) FROM district WHERE district_id = (SELECT district_id FROM account WHERE account_id = 532)\t----- bird -----\tfinancial",
    "158": "SELECT T1.district_id FROM account AS T1 INNER JOIN `order` AS T2 ON T1.account_id = T2.account_id WHERE T2.order_id = 33333\t----- bird -----\tfinancial",
    "159": "SELECT T1.trans_id, T1.amount, T1.date FROM trans AS T1 INNER JOIN disp AS T2 ON T1.account_id = T2.account_id WHERE T1.type = 'VYBER' AND T2.client_id = 3356\t----- bird -----\tfinancial",
    "160": "SELECT COUNT(*) FROM account AS T1 INNER JOIN loan AS T2 ON T1.account_id = T2.account_id WHERE T1.frequency = 'POPLATEK TYDNE' AND T2.amount < 200000\t----- bird -----\tfinancial",
    "161": "SELECT C.type FROM client AS A INNER JOIN disp AS B ON A.client_id = B.client_id INNER JOIN card AS C ON B.disp_id = C.disp_id WHERE A.client_id = 13539\t----- bird -----\tfinancial",
    "162": "SELECT T1.A3 FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.client_id = 3541\t----- bird -----\tfinancial",
    "163": "SELECT T2.A2 FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id INNER JOIN loan AS T3 ON T1.account_id = T3.account_id WHERE T3.status = 'A' GROUP BY T2.A2 ORDER BY COUNT(T1.account_id) DESC LIMIT 1\t----- bird -----\tfinancial",
    "164": "SELECT client.client_id FROM `order` INNER JOIN disp ON `order`.account_id = disp.account_id INNER JOIN client ON disp.client_id = client.client_id WHERE `order`.order_id = 32423;\t----- bird -----\tfinancial",
    "165": "SELECT T1.trans_id, T1.date, T1.type, T1.operation, T1.amount, T1.balance, T1.k_symbol, T1.bank, T1.account FROM trans AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T3.district_id = 5;\t----- bird -----\tfinancial",
    "166": "SELECT COUNT(*) FROM account WHERE district_id = (SELECT district_id FROM district WHERE A2 = 'Jesenik')\t----- bird -----\tfinancial",
    "167": "SELECT client.client_id FROM client INNER JOIN disp ON client.client_id = disp.client_id INNER JOIN card ON disp.disp_id = card.disp_id WHERE card.type = 'junior' AND card.issued > '1997-01-01'\t----- bird -----\tfinancial",
    "168": "SELECT CAST(COUNT(T1.client_id) AS REAL) * 100 / (SELECT COUNT(T2.client_id) FROM client T2 INNER JOIN district T3 ON T2.district_id = T3.district_id WHERE T3.A11 > 10000) FROM client T1 INNER JOIN district T4 ON T1.district_id = T4.district_id WHERE T1.gender = 'F'\t----- bird -----\tfinancial",
    "169": "SELECT ((SELECT SUM(T2.amount) FROM loan AS T2 INNER JOIN account AS T1 ON T1.account_id = T2.account_id INNER JOIN disp AS T3 ON T3.account_id = T1.account_id INNER JOIN client AS T4 ON T4.client_id = T3.client_id WHERE T4.gender = 'M' AND T2.date BETWEEN '1996-01-01' AND '1996-12-31') - (SELECT SUM(T2.amount) FROM loan AS T2 INNER JOIN account AS T1 ON T1.account_id = T2.account_id INNER JOIN disp AS T3 ON T3.account_id = T1.account_id INNER JOIN client AS T4 ON T4.client_id = T3.client_id WHERE T4.gender = 'M' AND T2.date BETWEEN '1997-01-01' AND '1997-12-31')) * 1.0 / (SELECT SUM(T2.amount) FROM loan AS T2 INNER\t----- bird -----\tfinancial",
    "170": "SELECT COUNT(*) FROM trans WHERE operation = 'VYBER KARTOU' AND STRFTIME('%Y', date) > '1995'\t----- bird -----\tfinancial",
    "171": "SELECT SUM(CASE WHEN A3 = 'North Bohemia' THEN A16 ELSE 0 END) - SUM(CASE WHEN A3 = 'East Bohemia' THEN A16 ELSE 0 END) AS Difference FROM district WHERE A16 = 1996\t----- bird -----\tfinancial",
    "172": "SELECT COUNT(DISTINCT disp_id) FROM disp WHERE account_id BETWEEN 1 AND 10\t----- bird -----\tfinancial",
    "173": "SELECT frequency, SUM(amount) FROM account AS T1 INNER JOIN trans AS T2 ON T1.account_id = T2.account_id WHERE T1.account_id = 3 AND T2.k_symbol = 'SIPO' GROUP BY frequency SELECT SUM(amount) FROM trans WHERE account_id = 3 AND k_symbol = 'VYBER'\t----- bird -----\tfinancial",
    "174": "SELECT birth_date FROM client WHERE client_id = 130;\t----- bird -----\tfinancial",
    "175": "SELECT COUNT(*) FROM account AS a INNER JOIN disp AS d ON a.account_id = d.account_id WHERE d.type = 'OWNER' AND a.frequency = 'POPLATEK PO OBRATU'\t----- bird -----\tfinancial",
    "176": "SELECT SUM(amount) AS total_debt, status FROM loan WHERE account_id = (SELECT account_id FROM disp WHERE client_id = 992) GROUP BY status\t----- bird -----\tfinancial",
    "177": "SELECT SUM(T1.amount) AS total_amount, T2.gender FROM trans AS T1 INNER JOIN disp AS T2 ON T1.account_id = T2.account_id WHERE T1.trans_id = 851 AND T2.client_id = 4 GROUP BY T2.gender\t----- bird -----\tfinancial",
    "178": "SELECT T2.type FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id WHERE T1.client_id = 9\t----- bird -----\tfinancial",
    "179": "SELECT SUM(amount) AS total_payment FROM trans WHERE account_id = 617 AND STRFTIME('%Y', date) = '1998'\t----- bird -----\tfinancial",
    "180": "SELECT client_id, birth_date FROM client WHERE birth_date BETWEEN '1983-01-01' AND '1987-12-31' AND district_id IN (SELECT district_id FROM district WHERE A2 = 'East Bohemia');\t----- bird -----\tfinancial",
    "181": "SELECT T1.client_id FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN loan AS T3 ON T2.account_id = T3.account_id WHERE T1.gender = 'F' ORDER BY T3.amount DESC LIMIT 3\t----- bird -----\tfinancial",
    "182": "SELECT COUNT(T1.client_id) FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN account AS T3 ON T2.account_id = T3.account_id INNER JOIN trans AS T4 ON T3.account_id = T4.account_id WHERE T1.gender = 'M' AND T1.birth_date BETWEEN '1974-01-01' AND '1976-12-31' AND T4.type = 'SIPO' AND T4.amount > 4000;\t----- bird -----\tfinancial",
    "183": "SELECT COUNT(account_id) FROM account WHERE district_id = (SELECT district_id FROM district WHERE A2 = 'Beroun') AND date > '1996-01-01'\t----- bird -----\tfinancial",
    "184": "SELECT COUNT(DISTINCT T1.client_id) FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN card AS T3 ON T2.disp_id = T3.disp_id WHERE T1.gender = 'F' AND T3.type = 'junior'\t----- bird -----\tfinancial",
    "185": "SELECT CAST(SUM(CASE WHEN T1.gender = 'F' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.client_id) FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN account AS T3 ON T2.account_id = T3.account_id INNER JOIN district AS T4 ON T3.district_id = T4.district_id WHERE T4.A3 = 'Prague'\t----- bird -----\tfinancial",
    "186": "SELECT CAST(COUNT(CASE WHEN T1.gender = 'M' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T1.client_id) FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN account AS T3 ON T2.account_id = T3.account_id WHERE T3.frequency = 'POPLATEK TYDNE'\t----- bird -----\tfinancial",
    "187": "SELECT COUNT(DISTINCT C.client_id) FROM client AS C INNER JOIN disp AS D ON C.client_id = D.client_id INNER JOIN account AS A ON D.account_id = A.account_id WHERE A.frequency = 'POPLATEK TYDNE'\t----- bird -----\tfinancial",
    "188": "SELECT T1.account_id FROM account AS T1 INNER JOIN loan AS T2 ON T1.account_id = T2.account_id WHERE T2.duration > 24 AND T2.amount = ( SELECT MIN(amount) FROM loan WHERE account_id = T1.account_id ) AND T1.date < '1997-01-01'\t----- bird -----\tfinancial",
    "189": "SELECT account.account_id FROM account INNER JOIN client ON account.client_id = client.client_id WHERE client.gender = 'F' ORDER BY client.birth_date ASC, district.A11 ASC LIMIT 1\t----- bird -----\tfinancial",
    "190": "SELECT COUNT(client_id) FROM client INNER JOIN district ON client.district_id = district.district_id WHERE strftime('%Y', birth_date) LIKE '192%' AND A3 = 'East Bohemia';\t----- bird -----\tfinancial",
    "191": "SELECT COUNT(account_id) FROM loan INNER JOIN account ON loan.account_id = account.account_id WHERE duration = 24 AND frequency = 'POPLATEK TYDNE'\t----- bird -----\tfinancial",
    "192": "SELECT AVG(amount) FROM loan WHERE status = 'C' AND k_symbol = 'POPLATEK PO OBRATU'\t----- bird -----\tfinancial",
    "193": "SELECT client.client_id, district.A2 FROM client JOIN disp ON client.client_id = disp.client_id JOIN account ON disp.account_id = account.account_id JOIN district ON client.district_id = district.district_id WHERE disp.type = 'OWNER'\t----- bird -----\tfinancial",
    "194": "SELECT client.client_id, client.birth_date FROM client INNER JOIN disp ON client.client_id = disp.client_id INNER JOIN card ON disp.disp_id = card.disp_id WHERE card.type = 'gold'\t----- bird -----\tfinancial",
    "195": "SELECT bond_type FROM bond GROUP BY bond_type ORDER BY COUNT(bond_type) DESC LIMIT 1\t----- bird -----\ttoxicology",
    "196": "SELECT COUNT(DISTINCT T1.molecule_id) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '-' AND T1.element = 'cl'\t----- bird -----\ttoxicology",
    "197": "SELECT AVG(CASE WHEN a.element = 'o' THEN 1 ELSE 0 END) FROM atom a JOIN bond b ON a.molecule_id = b.molecule_id WHERE b.bond_type = '-'\t----- bird -----\ttoxicology",
    "198": "SELECT CAST(SUM(CASE WHEN m.label = '+' AND b.bond_type = '-' THEN 1 ELSE 0 END) AS REAL) / COUNT(DISTINCT c.atom_id) FROM molecule m JOIN bond b ON m.molecule_id = b.molecule_id JOIN connected c ON b.bond_id = c.bond_id;\t----- bird -----\ttoxicology",
    "199": "SELECT COUNT(*) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'na' AND T2.label = '-'\t----- bird -----\ttoxicology",
    "200": "SELECT T1.molecule_id FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '#' AND T2.label = '+'\t----- bird -----\ttoxicology",
    "201": "SELECT CAST(SUM(CASE WHEN T1.element = 'c' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.atom_id) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN bond AS T3 ON T2.molecule_id = T3.molecule_id WHERE T3.bond_type = ' = '\t----- bird -----\ttoxicology",
    "202": "SELECT COUNT(*) FROM bond WHERE bond_type = '#'\t----- bird -----\ttoxicology",
    "203": "SELECT COUNT(atom_id) FROM atom WHERE element != 'br'\t----- bird -----\ttoxicology",
    "204": "SELECT COUNT(*) FROM molecule WHERE molecule_id BETWEEN 'TR000' AND 'TR099' AND label = '+'\t----- bird -----\ttoxicology",
    "205": "SELECT molecule_id FROM atom WHERE element = 'si'\t----- bird -----\ttoxicology",
    "206": "SELECT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_id = 'TR004_8_9'\t----- bird -----\ttoxicology",
    "207": "SELECT element FROM atom JOIN bond ON atom.molecule_id = bond.molecule_id WHERE bond.bond_type = ' = '\t----- bird -----\ttoxicology",
    "208": "SELECT T.label FROM ( SELECT T2.label, COUNT(T2.label) AS num FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'h' GROUP BY T2.label ) AS T ORDER BY T.num DESC LIMIT 1\t----- bird -----\ttoxicology",
    "209": "SELECT T2.bond_type FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'te'\t----- bird -----\ttoxicology",
    "210": "SELECT T1.atom_id, T2.atom_id FROM connected INNER JOIN bond ON connected.bond_id = bond.bond_id INNER JOIN atom AS T1 ON connected.atom_id = T1.atom_id INNER JOIN atom AS T2 ON connected.atom_id2 = T2.atom_id WHERE bond.bond_type = '-'\t----- bird -----\ttoxicology",
    "211": "SELECT T1.atom_id, T2.atom_id2 FROM connected AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T1.bond_id = T3.bond_id INNER JOIN molecule AS T4 ON T3.molecule_id = T4.molecule_id WHERE T4.label = '-'\t----- bird -----\ttoxicology",
    "212": "SELECT element FROM atom WHERE molecule_id IN (SELECT molecule_id FROM molecule WHERE label = '-') GROUP BY element ORDER BY COUNT(*) ASC LIMIT 1\t----- bird -----\ttoxicology",
    "213": "SELECT T2.bond_type FROM connected AS T1 INNER JOIN bond AS T2 ON T1.bond_id = T2.bond_id WHERE T1.atom_id = 'TR004_8' AND T1.atom_id2 = 'TR004_20'\t----- bird -----\ttoxicology",
    "214": "SELECT T2.label FROM molecule AS T2 INNER JOIN atom AS T1 ON T2.molecule_id = T1.molecule_id WHERE T1.element != 'sn' GROUP BY T2.label\t----- bird -----\ttoxicology",
    "215": "SELECT COUNT(*) FROM atom a JOIN molecule m ON a.molecule_id = m.molecule_id JOIN bond b ON m.molecule_id = b.molecule_id WHERE (a.element = 'i' OR a.element = 's') AND b.bond_type = '-'\t----- bird -----\ttoxicology",
    "216": "SELECT T1.atom_id, T2.atom_id2 FROM connected AS T1 INNER JOIN bond AS T2 ON T1.bond_id = T2.bond_id WHERE T2.bond_type = '#'\t----- bird -----\ttoxicology",
    "217": "SELECT T1.atom_id, T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN molecule AS T3 ON T1.molecule_id = T3.molecule_id WHERE T3.molecule_id = 'TR181'\t----- bird -----\ttoxicology",
    "218": "SELECT CAST(SUM(CASE WHEN T1.element != 'f' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.molecule_id) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+'\t----- bird -----\ttoxicology",
    "219": "SELECT CAST(SUM(CASE WHEN T4.label = '+' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T3.bond_id) FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN connected AS T3 ON T1.atom_id = T3.atom_id INNER JOIN molecule AS T4 ON T1.molecule_id = T4.molecule_id WHERE T2.bond_type = '#'\t----- bird -----\ttoxicology",
    "220": "SELECT element FROM atom WHERE molecule_id = 'TR000' ORDER BY element LIMIT 3\t----- bird -----\ttoxicology",
    "221": "SELECT T1.atom_id, T2.atom_id2 FROM connected AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T1.bond_id = 'TR001_2_6' AND T2.bond_id = 'TR001_2_6'\t----- bird -----\ttoxicology",
    "222": "SELECT SUM(CASE WHEN T1.label = '+' THEN 1 ELSE 0 END) - SUM(CASE WHEN T1.label = '-' THEN 1 ELSE 0 END) FROM molecule AS T1\t----- bird -----\ttoxicology",
    "223": "SELECT T1.atom_id FROM connected AS T1 INNER JOIN bond AS T2 ON T1.bond_id = T2.bond_id WHERE T2.bond_id = 'TR_000_2_5'\t----- bird -----\ttoxicology",
    "224": "SELECT T2.bond_id FROM connected AS T1 INNER JOIN connected AS T2 ON T1.atom_id2 = T2.atom_id2 WHERE T1.atom_id = 'TR000_2'\t----- bird -----\ttoxicology",
    "225": "SELECT T2.label FROM molecule AS T2 INNER JOIN bond AS T1 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = ' = ' ORDER BY T2.label LIMIT 5\t----- bird -----\ttoxicology",
    "226": "SELECT CAST(SUM(CASE WHEN bond_type = ' = ' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(bond_id) FROM bond WHERE molecule_id = 'TR008'\t----- bird -----\ttoxicology",
    "227": "SELECT CAST(SUM(CASE WHEN label = '+' THEN 1 ELSE 0 END) AS REAL) / COUNT(molecule_id) * 100 as percent FROM molecule\t----- bird -----\ttoxicology",
    "228": "SELECT CAST(SUM(CASE WHEN T1.element = 'h' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.atom_id) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.molecule_id = 'TR206'\t----- bird -----\ttoxicology",
    "229": "SELECT T2.bond_type FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.molecule_id = 'TR000'\t----- bird -----\ttoxicology",
    "230": "SELECT T1.element, T2.label FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.molecule_id = 'TR060'\t----- bird -----\ttoxicology",
    "231": "SELECT T2.bond_type, T3.label FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN connected AS T3 ON T2.bond_id = T3.bond_id WHERE T1.molecule_id = 'TR018' GROUP BY T2.bond_type ORDER BY COUNT(T2.bond_type) DESC LIMIT 1\t----- bird -----\ttoxicology",
    "232": "SELECT T2.label FROM molecule AS T2 INNER JOIN bond AS T1 ON T1.molecule_id = T2.molecule_id INNER JOIN connected AS T3 ON T3.bond_id = T1.bond_id WHERE T1.bond_type = '-' AND T2.label = '-' GROUP BY T2.molecule_id ORDER BY T2.label ASC LIMIT 3\t----- bird -----\ttoxicology",
    "233": "SELECT T2.bond_id FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.molecule_id = 'TR006' ORDER BY T2.bond_id LIMIT 2\t----- bird -----\ttoxicology",
    "234": "SELECT COUNT(*) FROM connected WHERE (atom_id = 'TR009_12' OR atom_id2 = 'TR009_12') AND bond_id LIKE 'TR009_%'\t----- bird -----\ttoxicology",
    "235": "SELECT COUNT(DISTINCT m.molecule_id) FROM molecule m INNER JOIN atom a ON m.molecule_id = a.molecule_id WHERE m.label = '+' AND a.element = 'br'\t----- bird -----\ttoxicology",
    "236": "SELECT T2.bond_type, T1.atom_id, T1.atom_id2 FROM connected AS T1 INNER JOIN bond AS T2 ON T1.bond_id = T2.bond_id WHERE T2.bond_id = 'TR001_6_9'\t----- bird -----\ttoxicology",
    "237": "SELECT T2.label, CASE WHEN T2.label = '+' THEN 'Carcinogenic' ELSE 'Not Carcinogenic' END AS Carcinogenicity FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.atom_id = 'TR001_10'\t----- bird -----\ttoxicology",
    "238": "SELECT COUNT(DISTINCT molecule_id) FROM bond WHERE bond_type = '#'\t----- bird -----\ttoxicology",
    "239": "SELECT COUNT(bond_id) FROM connected WHERE atom_id LIKE 'TR%_19' OR atom_id2 LIKE 'TR%_19'\t----- bird -----\ttoxicology",
    "240": "SELECT T1.element FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.molecule_id = 'TR004'\t----- bird -----\ttoxicology",
    "241": "SELECT COUNT(*) FROM molecule WHERE label = '-'\t----- bird -----\ttoxicology",
    "242": "SELECT T2.label FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE SUBSTRING(T1.atom_id, 7, 2) BETWEEN 21 AND 25 AND T2.label = '+'\t----- bird -----\ttoxicology",
    "243": "SELECT T2.bond_id FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN atom AS T3 ON T2.atom_id2 = T3.atom_id WHERE (T1.element = 'p' OR T1.element = 'n') AND (T3.element = 'p' OR T3.element = 'n')\t----- bird -----\ttoxicology",
    "244": "SELECT m.label FROM molecule AS m INNER JOIN bond AS b ON m.molecule_id = b.molecule_id WHERE b.bond_type = ' = ' GROUP BY m.molecule_id ORDER BY COUNT(*) DESC LIMIT 1\t----- bird -----\ttoxicology",
    "245": "SELECT CAST(COUNT(bond_id) AS REAL) / COUNT(atom_id) FROM atom INNER JOIN bond ON atom.molecule_id = bond.molecule_id WHERE element = 'i'\t----- bird -----\ttoxicology",
    "246": "SELECT T2.bond_type, T2.bond_id FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.atom_id = 'atom_' || 45\t----- bird -----\ttoxicology",
    "247": "SELECT element FROM atom WHERE atom_id NOT IN (SELECT atom_id FROM connected) AND element IN ('cl', 'c', 'h', 'o', 's', 'n', 'p', 'na', 'br', 'f', 'i', 'sn', 'pb', 'te', 'ca')\t----- bird -----\ttoxicology",
    "248": "SELECT atom_id, atom_id2 FROM connected WHERE bond_id IN (SELECT bond_id FROM bond WHERE molecule_id = 'TR447' AND bond_type = '#');\t----- bird -----\ttoxicology",
    "249": "SELECT a.element FROM atom AS a INNER JOIN connected AS c ON a.atom_id = c.atom_id INNER JOIN bond AS b ON c.bond_id = b.bond_id WHERE b.bond_id = 'TR144_8_19'\t----- bird -----\ttoxicology",
    "250": "SELECT T2.label FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '+' AND T2.bond_type = ' = ' GROUP BY T1.molecule_id ORDER BY COUNT(T2.bond_id) DESC LIMIT 1\t----- bird -----\ttoxicology",
    "251": "SELECT T.element FROM atom AS T INNER JOIN molecule AS M ON T.molecule_id = M.molecule_id WHERE M.label = '+' GROUP BY T.element ORDER BY COUNT(T.atom_id) ASC LIMIT 1\t----- bird -----\ttoxicology",
    "252": "SELECT T2.atom_id FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T2.atom_id2 IN ( SELECT atom_id FROM atom WHERE element = 'pb' )\t----- bird -----\ttoxicology",
    "253": "SELECT element FROM atom JOIN bond ON atom.molecule_id = bond.molecule_id WHERE bond.bond_type = '#';\t----- bird -----\ttoxicology",
    "254": "SELECT (COUNT(bond_id) / (SELECT COUNT(atom_id) FROM atom WHERE element = (SELECT element FROM atom GROUP BY element ORDER BY COUNT(element) DESC LIMIT 1))) * 100 AS percentage FROM bond\t----- bird -----\ttoxicology",
    "255": "SELECT CAST(SUM(CASE WHEN T2.label = '+' THEN 1 ELSE 0 END) AS REAL) / COUNT(T1.bond_id) FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '-'\t----- bird -----\ttoxicology",
    "256": "SELECT COUNT(*) FROM atom WHERE element IN ('c', 'h')\t----- bird -----\ttoxicology",
    "257": "SELECT T2.atom_id2 FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T1.element = 's'\t----- bird -----\ttoxicology",
    "258": "SELECT T2.bond_type FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'sn'\t----- bird -----\ttoxicology",
    "259": "SELECT COUNT(DISTINCT atom.element) FROM atom INNER JOIN bond ON atom.molecule_id = bond.molecule_id WHERE bond.bond_type = '-'\t----- bird -----\ttoxicology",
    "260": "SELECT COUNT(DISTINCT A.atom_id) FROM atom A JOIN connected C ON A.atom_id = C.atom_id JOIN bond B ON C.bond_id = B.bond_id WHERE B.bond_type = '#' AND (A.element = 'p' OR A.element = 'br')\t----- bird -----\ttoxicology",
    "261": "SELECT T2.bond_id FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '+'\t----- bird -----\ttoxicology",
    "262": "SELECT T2.molecule_id FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '-' AND T2.label = '-'\t----- bird -----\ttoxicology",
    "263": "SELECT CAST(SUM(CASE WHEN T1.element = 'cl' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.atom_id) FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.bond_type = '-'\t----- bird -----\ttoxicology",
    "264": "SELECT T2.label FROM molecule AS T2 WHERE T2.molecule_id IN ('TR000', 'TR001', 'TR002')\t----- bird -----\ttoxicology",
    "265": "SELECT molecule_id FROM molecule WHERE label = '-'\t----- bird -----\ttoxicology",
    "266": "SELECT COUNT(*) FROM molecule WHERE molecule_id BETWEEN 'TR000' AND 'TR030' AND label = '+'\t----- bird -----\ttoxicology",
    "267": "SELECT T2.bond_type FROM bond AS T2 INNER JOIN molecule AS T1 ON T2.molecule_id = T1.molecule_id WHERE T1.molecule_id >= 'TR000' AND T1.molecule_id <= 'TR050'\t----- bird -----\ttoxicology",
    "268": "SELECT T1.element FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.bond_id = 'TR001_10_11'\t----- bird -----\ttoxicology",
    "269": "SELECT COUNT(bond_id) FROM atom WHERE element = 'iodine'\t----- bird -----\ttoxicology",
    "270": "SELECT MAX(T1.label) FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.element = 'Ca'\t----- bird -----\ttoxicology",
    "271": "SELECT COUNT(*) FROM atom AS A JOIN connected AS C ON A.atom_id = C.atom_id JOIN bond AS B ON C.bond_id = B.bond_id WHERE B.bond_id = 'TR001_1_8' AND (A.element = 'cl' OR A.element = 'c') HAVING COUNT(DISTINCT A.element) = 2;\t----- bird -----\ttoxicology",
    "272": "SELECT molecule_id FROM bond JOIN molecule ON bond.molecule_id = molecule.molecule_id JOIN atom ON atom.molecule_id = molecule.molecule_id WHERE bond_type = '#' AND element = 'c' AND label = '-'\t----- bird -----\ttoxicology",
    "273": "SELECT CAST(SUM(CASE WHEN T1.element = 'cl' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.molecule_id) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+'\t----- bird -----\ttoxicology",
    "274": "SELECT T1.element FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.molecule_id = 'TR001'\t----- bird -----\ttoxicology",
    "275": "SELECT T2.molecule_id FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = ' = ';\t----- bird -----\ttoxicology",
    "276": "SELECT T1.atom_id, T2.atom_id2 FROM connected AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T1.bond_id = T3.bond_id WHERE T3.bond_type = '#'\t----- bird -----\ttoxicology",
    "277": "SELECT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_id = 'TR005_16_26'\t----- bird -----\ttoxicology",
    "278": "SELECT COUNT(*) FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.bond_type = '-' AND T1.label = '-'\t----- bird -----\ttoxicology",
    "279": "SELECT T2.label FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_id = 'TR001_10_11'\t----- bird -----\ttoxicology",
    "280": "SELECT T2.bond_id, CASE WHEN T3.label = '+' THEN 'Carcinogenic' WHEN T3.label = '-' THEN 'Non-carcinogenic' END AS Carcinogenicity FROM bond AS T1 INNER JOIN connected AS T2 ON T1.molecule_id = T2.bond_id INNER JOIN molecule AS T3 ON T1.molecule_id = T3.molecule_id WHERE T1.bond_type = '#'\t----- bird -----\ttoxicology",
    "281": "SELECT T1.element, COUNT(T1.element) AS element_count FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+' AND SUBSTR(T1.atom_id, 7, 1) = '4' AND T1.element IN ('cl', 'c', 'h', 'o', 's', 'n', 'p', 'na', 'br', 'f', 'i', 'sn', 'pb', 'te', 'ca') GROUP BY T1.element\t----- bird -----\ttoxicology",
    "282": "SELECT CAST(SUM(CASE WHEN T1.element = 'H' THEN 1 ELSE 0 END) AS REAL) / COUNT(T1.element), T2.label FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.molecule_id = 'TR006'\t----- bird -----\ttoxicology",
    "283": "SELECT T1.label FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.element = 'ca' AND T1.label = '+' OR T1.label = '-'\t----- bird -----\ttoxicology",
    "284": "SELECT T2.bond_type FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'te'\t----- bird -----\ttoxicology",
    "285": "SELECT element FROM atom WHERE atom_id IN ( SELECT atom_id FROM connected WHERE bond_id = 'TR001_10_11' )\t----- bird -----\ttoxicology",
    "286": "SELECT (COUNT(DISTINCT molecule_id) / (SELECT COUNT(DISTINCT molecule_id) FROM bond)) * 100 AS percentage_triple_bond FROM bond WHERE bond_type = '#'\t----- bird -----\ttoxicology",
    "287": "SELECT CAST(SUM(CASE WHEN b.bond_type = ' = ' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(b.bond_id) FROM bond b INNER JOIN molecule m ON b.molecule_id = m.molecule_id WHERE m.molecule_id = 'TR047'\t----- bird -----\ttoxicology",
    "288": "SELECT CASE WHEN T2.label = '+' THEN 'Carcinogenic' ELSE 'Not Carcinogenic' END AS Carcinogenic FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.atom_id = 'TR001_1'\t----- bird -----\ttoxicology",
    "289": "SELECT CASE WHEN T2.label = '+' THEN 'Yes' ELSE 'No' END AS Is_Carcinogenic FROM molecule AS T1 WHERE T1.molecule_id = 'TR151'\t----- bird -----\ttoxicology",
    "290": "SELECT element FROM atom WHERE molecule_id = 'TR151' AND element = 'cl'\t----- bird -----\ttoxicology",
    "291": "SELECT COUNT(*) FROM molecule WHERE label = '+'\t----- bird -----\ttoxicology",
    "292": "SELECT T1.atom_id FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'c' AND substr(T2.molecule_id, 3, 3) > 10 AND substr(T2.molecule_id, 3, 3) < 50\t----- bird -----\ttoxicology",
    "293": "SELECT COUNT(*) FROM atom WHERE molecule_id IN (SELECT molecule_id FROM molecule WHERE label = '+')\t----- bird -----\ttoxicology",
    "294": "SELECT bond.bond_id FROM bond INNER JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE bond.bond_type = ' = ' AND molecule.label = '+'\t----- bird -----\ttoxicology",
    "295": "SELECT COUNT(*) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'h' AND T2.label = '+'\t----- bird -----\ttoxicology",
    "296": "SELECT T2.molecule_id FROM connected AS T1 INNER JOIN bond AS T2 ON T1.bond_id = T2.bond_id INNER JOIN atom AS T3 ON T1.atom_id = T3.atom_id WHERE T3.element = 'TR00_1' AND T2.bond_type = 'TR00_1_2'\t----- bird -----\ttoxicology",
    "297": "SELECT T1.atom_id FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'carbon' AND T2.label = '-'\t----- bird -----\ttoxicology",
    "298": "SELECT CAST(SUM(CASE WHEN T1.label = '+' AND T2.element = 'h' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.molecule_id) FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id\t----- bird -----\ttoxicology",
    "299": "SELECT CASE WHEN T2.label = '+' THEN 'Yes' ELSE 'No' END AS Is_Carcinogenic FROM molecule AS T1 WHERE T1.molecule_id = 'TR124'\t----- bird -----\ttoxicology",
    "300": "SELECT T1.element FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.molecule_id = 'TR186'\t----- bird -----\ttoxicology",
    "301": "SELECT T2.bond_type FROM connected AS T1 INNER JOIN bond AS T2 ON T1.bond_id = T2.bond_id WHERE T1.atom_id = 'TR007_4_19' OR T1.atom_id2 = 'TR007_4_19';\t----- bird -----\ttoxicology",
    "302": "SELECT element FROM atom WHERE atom_id IN ( SELECT atom_id FROM connected WHERE bond_id = 'TR001_2_4' )\t----- bird -----\ttoxicology",
    "303": "SELECT COUNT(T1.bond_id) AS double_bonds, T2.label AS carcinogenic FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = ' = ' AND T2.molecule_id = 'TR006'\t----- bird -----\ttoxicology",
    "304": "SELECT m.label, a.element FROM molecule AS m INNER JOIN atom AS a ON m.molecule_id = a.molecule_id WHERE m.label = '+' AND (a.element = 'cl' OR a.element = 'c' OR a.element = 'h' OR a.element = 'o' OR a.element = 's' OR a.element = 'n' OR a.element = 'p' OR a.element = 'na' OR a.element = 'br' OR a.element = 'f' OR a.element = 'i' OR a.element = 'sn' OR a.element = 'pb' OR a.element = 'te' OR a.element = 'ca')\t----- bird -----\ttoxicology",
    "305": "SELECT bond.bond_id, atom.atom_id, atom.element, connected.atom_id2 FROM bond JOIN connected ON bond.bond_id = connected.bond_id JOIN atom ON connected.atom_id = atom.atom_id WHERE bond.bond_type = '-'\t----- bird -----\ttoxicology",
    "306": "SELECT m.label, a.element FROM molecule m JOIN bond b ON m.molecule_id = b.molecule_id JOIN connected c ON b.bond_id = c.bond_id JOIN atom a ON c.atom_id = a.atom_id WHERE b.bond_type = '#' AND (a.element = 'cl' OR a.element = 'c' OR a.element = 'h' OR a.element = 'o' OR a.element = 's' OR a.element = 'n' OR a.element = 'p' OR a.element = 'na' OR a.element = 'br' OR a.element = 'f' OR a.element = 'i' OR a.element = 'sn' OR a.element = 'pb' OR a.element = 'te' OR a.element = 'ca') GROUP BY m.label, a.element;\t----- bird -----\ttoxicology",
    "307": "SELECT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_id = 'TR000_2_3'\t----- bird -----\ttoxicology",
    "308": "SELECT COUNT(bond_id) FROM bond INNER JOIN atom ON bond.molecule_id = atom.molecule_id WHERE atom.element = 'cl'\t----- bird -----\ttoxicology",
    "309": "SELECT T1.atom_id, COUNT(T2.bond_type) AS num_bond_types FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN molecule AS T3 ON T1.molecule_id = T3.molecule_id WHERE T3.label = 'TR346' GROUP BY T1.atom_id;\t----- bird -----\ttoxicology",
    "310": "SELECT COUNT(DISTINCT T1.molecule_id) FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = ' = ' AND T2.label = '+'\t----- bird -----\ttoxicology",
    "311": "SELECT COUNT(DISTINCT M.molecule_id) FROM molecule M LEFT JOIN atom A ON M.molecule_id = A.molecule_id LEFT JOIN bond B ON M.molecule_id = B.molecule_id WHERE A.element != 's' OR B.bond_type != ' = '\t----- bird -----\ttoxicology",
    "312": "SELECT T2.label FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_id = 'TR001_2_4' AND T2.label = '+'\t----- bird -----\ttoxicology",
    "313": "SELECT COUNT(atom_id) FROM atom WHERE molecule_id = 'TR005'\t----- bird -----\ttoxicology",
    "314": "SELECT COUNT(*) FROM bond WHERE bond_type = '-'\t----- bird -----\ttoxicology",
    "315": "SELECT T2.label FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'cl' AND T2.label = '+'\t----- bird -----\ttoxicology",
    "316": "SELECT T1.label FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.element = 'c' AND T1.label = '-'\t----- bird -----\ttoxicology",
    "317": "SELECT CAST(COUNT(DISTINCT CASE WHEN T1.label = '+' AND T2.element = 'Cl' THEN T1.molecule_id ELSE NULL END) AS REAL) * 100 / COUNT(DISTINCT T1.molecule_id) FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id\t----- bird -----\ttoxicology",
    "318": "SELECT T2.molecule_id FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_id = 'TR001_1_7'\t----- bird -----\ttoxicology",
    "319": "SELECT COUNT(element) FROM atom WHERE molecule_id = (SELECT molecule_id FROM bond WHERE bond_id = 'TR001_3_4')\t----- bird -----\ttoxicology",
    "320": "SELECT T2.bond_type FROM connected AS T1 INNER JOIN bond AS T2 ON T1.bond_id = T2.bond_id WHERE T1.atom_id = 'TR000_1' AND T1.atom_id2 = 'TR000_2'\t----- bird -----\ttoxicology",
    "321": "SELECT T2.label FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.atom_id = 'TR000_2' OR T1.atom_id = 'TR000_4'\t----- bird -----\ttoxicology",
    "322": "SELECT T1.element FROM atom AS T1 WHERE T1.atom_id = 'TR000_1' AND T1.molecule_id IN (SELECT T2.molecule_id FROM molecule AS T2 WHERE T2.label = 'toxicology')\t----- bird -----\ttoxicology",
    "323": "SELECT CASE WHEN T2.label = '+' THEN 'Carcinogenic' WHEN T2.label = '-' THEN 'Non-Carcinogenic' ELSE 'Unknown' END AS Carcinogenicity FROM molecule AS T1 LEFT JOIN connected AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.molecule_id = 'TR000'\t----- bird -----\ttoxicology",
    "324": "SELECT CAST(SUM(CASE WHEN bond_type = '-' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(bond_id) FROM bond\t----- bird -----\ttoxicology",
    "325": "SELECT COUNT(DISTINCT T1.molecule_id) FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.element = 'N' AND T1.label = '+'\t----- bird -----\ttoxicology",
    "326": "SELECT T4.label FROM molecule AS T4 INNER JOIN atom AS T1 ON T4.molecule_id = T1.molecule_id INNER JOIN bond AS T2 ON T4.molecule_id = T2.molecule_id WHERE T1.element = 'S' AND T2.bond_type = ' = '\t----- bird -----\ttoxicology",
    "327": "SELECT molecule_id, COUNT(atom_id) AS num_atoms FROM atom WHERE molecule_id IN ( SELECT molecule_id FROM molecule WHERE label = '-' ) GROUP BY molecule_id HAVING COUNT(atom_id) > 5\t----- bird -----\ttoxicology",
    "328": "SELECT element FROM atom INNER JOIN bond ON atom.molecule_id = bond.molecule_id INNER JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE bond.bond_type = '=' AND molecule.label = 'TR024'\t----- bird -----\ttoxicology",
    "329": "SELECT T2.label FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+' GROUP BY T2.molecule_id ORDER BY COUNT(T1.atom_id) DESC LIMIT 1\t----- bird -----\ttoxicology",
    "330": "SELECT CAST(SUM(CASE WHEN T1.label = '+' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(DISTINCT T1.molecule_id) FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN connected AS T3 ON T2.atom_id = T3.atom_id OR T2.atom_id = T3.atom_id2 INNER JOIN bond AS T4 ON T3.bond_id = T4.bond_id WHERE T2.element = 'h' AND T4.bond_type = '#'\t----- bird -----\ttoxicology",
    "331": "SELECT COUNT(*) FROM molecule WHERE label = '+'\t----- bird -----\ttoxicology",
    "332": "SELECT COUNT(DISTINCT T1.molecule_id) FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '-' AND T2.molecule_id BETWEEN 'TR004' AND 'TR010'\t----- bird -----\ttoxicology",
    "333": "SELECT COUNT(*) FROM atom WHERE molecule_id = 'TR008' AND element = 'c'\t----- bird -----\ttoxicology",
    "334": "SELECT T1.element FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.atom_id = 'TR004_7' AND T2.label = '-'\t----- bird -----\ttoxicology",
    "335": "SELECT COUNT(DISTINCT m.molecule_id) FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id JOIN bond b ON m.molecule_id = b.molecule_id JOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2 WHERE a.element = 'o' AND b.bond_type = ' = ';\t----- bird -----\ttoxicology",
    "336": "SELECT COUNT(DISTINCT T1.molecule_id) FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '#' AND T2.label = '-'\t----- bird -----\ttoxicology",
    "337": "SELECT A.element, B.bond_type FROM atom AS A JOIN bond AS B ON A.molecule_id = B.molecule_id WHERE A.molecule_id = 'TR016'\t----- bird -----\ttoxicology",
    "338": "SELECT T1.atom_id FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN connected AS T3 ON T1.atom_id = T3.atom_id WHERE T1.element = 'c' AND T2.bond_type = ' = ' AND T1.molecule_id = 'TR012'\t----- bird -----\ttoxicology",
    "339": "SELECT T1.atom_id FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+' AND T1.element = 'o'\t----- bird -----\ttoxicology",
    "340": "SELECT * FROM cards WHERE cardKingdomFoilId = cardKingdomId AND cardKingdomId IS NOT NULL\t----- bird -----\tcard_games",
    "341": "SELECT asciiName FROM cards WHERE borderColor = 'borderless' AND cardKingdomFoilId IS NULL AND cardKingdomId IS NOT NULL\t----- bird -----\tcard_games",
    "342": "SELECT name FROM cards WHERE convertedManaCost > faceConvertedManaCost;\t----- bird -----\tcard_games",
    "343": "SELECT T1.name FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.frameVersion = '2015' AND T1.edhrecRank < 100\t----- bird -----\tcard_games",
    "344": "SELECT T1.name FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.rarity = 'mythic' AND T2.status = 'Banned' AND T2.format = 'gladiator'\t----- bird -----\tcard_games",
    "345": "SELECT T1.name, T2.status FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.types = 'Artifact' AND T1.side IS NULL AND T2.format = 'vintage'\t----- bird -----\tcard_games",
    "346": "SELECT T1.id, T1.artist FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE (T1.power = '*' OR T1.power IS NULL) AND T2.format = 'commander' AND T2.status = 'Legal'\t----- bird -----\tcard_games",
    "347": "SELECT T1.asciiName, T2.text, T1.hasContentWarning FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.uuid = T2.uuid WHERE T1.artist = 'Stephen Daniele'\t----- bird -----\tcard_games",
    "348": "SELECT T1.text FROM rulings AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T2.name = 'Sublime Epiphany' AND T2.number = '74s'\t----- bird -----\tcard_games",
    "349": "SELECT T1.name, T1.artist, T1.isPromo FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.uuid = T2.uuid GROUP BY T1.name, T1.artist, T1.isPromo ORDER BY COUNT(T2.uuid) DESC LIMIT 1\t----- bird -----\tcard_games",
    "350": "SELECT T2.language FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.name = 'Annul' AND T1.number = '29'\t----- bird -----\tcard_games",
    "351": "SELECT T1.name FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.language = 'Japanese'\t----- bird -----\tcard_games",
    "352": "SELECT CAST(SUM(CASE WHEN T2.language = 'Chinese Simplified' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid;\t----- bird -----\tcard_games",
    "353": "SELECT T1.name, T2.totalSetSize FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.language = 'Italian'\t----- bird -----\tcard_games",
    "354": "SELECT COUNT(DISTINCT T1.type) FROM cards AS T1 WHERE T1.artist = 'Aaron Boyd'\t----- bird -----\tcard_games",
    "355": "SELECT T1.keywords FROM cards AS T1 WHERE T1.name = 'Angel of Mercy';\t----- bird -----\tcard_games",
    "356": "SELECT COUNT(name) FROM cards WHERE power = '*'\t----- bird -----\tcard_games",
    "357": "SELECT promoTypes FROM cards WHERE name = 'Duress'\t----- bird -----\tcard_games",
    "358": "SELECT borderColor FROM cards WHERE name = \"Ancestor's Chosen\"\t----- bird -----\tcard_games",
    "359": "SELECT originalType FROM cards WHERE name = \"Ancestor's Chosen\"\t----- bird -----\tcard_games",
    "360": "SELECT T2.language FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T1.name = 'Angel of Mercy'\t----- bird -----\tcard_games",
    "361": "SELECT COUNT(*) FROM cards INNER JOIN legalities ON cards.uuid = legalities.uuid WHERE legalities.status = 'restricted' AND cards.isTextless = 0\t----- bird -----\tcard_games",
    "362": "SELECT T1.text FROM rulings AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T2.name = 'Condemn'\t----- bird -----\tcard_games",
    "363": "SELECT COUNT(*) FROM cards INNER JOIN legalities ON cards.uuid = legalities.uuid WHERE legalities.status = 'restricted' AND cards.isStarter = 1\t----- bird -----\tcard_games",
    "364": "SELECT T2.status FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.name = 'Cloudchaser Eagle';\t----- bird -----\tcard_games",
    "365": "SELECT T1.type FROM cards AS T1 WHERE T1.name = 'Benalish Knight'\t----- bird -----\tcard_games",
    "366": "SELECT T2.format FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.name = 'Benalish Knight'\t----- bird -----\tcard_games",
    "367": "SELECT artist FROM cards WHERE language = 'Phyrexian'\t----- bird -----\tcard_games",
    "368": "SELECT CAST(COUNT(CASE WHEN borderColor = 'borderless' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(id) FROM cards;\t----- bird -----\tcard_games",
    "369": "SELECT COUNT(*) FROM cards INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE foreign_data.language = 'German' AND cards.isReprint = 1\t----- bird -----\tcard_games",
    "370": "SELECT COUNT(T1.id) FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.borderColor = 'borderless' AND T2.language = 'Russian'\t----- bird -----\tcard_games",
    "371": "SELECT CAST(SUM(CASE WHEN T1.language = 'French' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) FROM foreign_data AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T2.isStorySpotlight = 1\t----- bird -----\tcard_games",
    "372": "SELECT COUNT(*) FROM cards WHERE toughness = '99'\t----- bird -----\tcard_games",
    "373": "SELECT name FROM cards WHERE artist = 'Aaron Boyd';\t----- bird -----\tcard_games",
    "374": "SELECT COUNT(id) FROM cards WHERE borderColor = 'black' AND availability = 'mtgo'\t----- bird -----\tcard_games",
    "375": "SELECT id FROM cards WHERE convertedManaCost = 0\t----- bird -----\tcard_games",
    "376": "SELECT layout FROM cards WHERE keywords LIKE '%flying%'\t----- bird -----\tcard_games",
    "377": "SELECT COUNT(*) FROM cards WHERE originalType = 'Summon - Angel' AND subtypes NOT LIKE '%Angel%'\t----- bird -----\tcard_games",
    "378": "SELECT id FROM cards WHERE cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL\t----- bird -----\tcard_games",
    "379": "SELECT id FROM cards WHERE duelDeck = 'a'\t----- bird -----\tcard_games",
    "380": "SELECT edhrecRank FROM cards WHERE frameVersion = '2015'\t----- bird -----\tcard_games",
    "381": "SELECT T1.artist FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.language = 'Chinese Simplified'\t----- bird -----\tcard_games",
    "382": "SELECT c.name FROM cards c INNER JOIN foreign_data fd ON c.uuid = fd.uuid WHERE c.availability = 'paper' AND fd.language = 'Japanese'\t----- bird -----\tcard_games",
    "383": "SELECT COUNT(*) FROM cards AS c INNER JOIN legalities AS l ON c.uuid = l.uuid WHERE l.status = 'Banned' AND c.borderColor = 'white'\t----- bird -----\tcard_games",
    "384": "SELECT T1.uuid, T2.language FROM cards AS T1 INNER JOIN legalities AS T3 ON T1.uuid = T3.uuid INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T3.format = 'legacy'\t----- bird -----\tcard_games",
    "385": "SELECT T1.text FROM rulings AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T2.name = 'Beacon of Immortality'\t----- bird -----\tcard_games",
    "386": "SELECT COUNT(*) AS TotalCards, T2.status FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.frameVersion = 'future' AND T2.status = 'legal'\t----- bird -----\tcard_games",
    "387": "SELECT name, colors FROM cards WHERE setCode = 'OGW'\t----- bird -----\tcard_games",
    "388": "SELECT c.name AS card_name, t.language AS translation_language FROM cards c JOIN set_translations st ON c.setCode = st.setCode JOIN sets s ON c.setCode = s.code JOIN foreign_data fd ON c.uuid = fd.uuid WHERE s.code = '10E' AND c.convertedManaCost = 5;\t----- bird -----\tcard_games",
    "389": "SELECT T1.name, T2.date FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.uuid = T2.uuid WHERE T1.originalType = 'Creature - Elf'\t----- bird -----\tcard_games",
    "390": "SELECT colors, format FROM cards WHERE id BETWEEN 1 AND 20;\t----- bird -----\tcard_games",
    "391": "SELECT c.name FROM cards c INNER JOIN foreign_data f ON c.uuid = f.uuid WHERE c.originalType = 'Artifact' AND c.colors = 'B' AND f.language <> 'en'\t----- bird -----\tcard_games",
    "392": "SELECT name FROM cards WHERE rarity = 'uncommon' ORDER BY (SELECT date FROM rulings WHERE rulings.uuid = cards.uuid ORDER BY date ASC) LIMIT 3\t----- bird -----\tcard_games",
    "393": "SELECT COUNT(*) FROM cards WHERE artist = 'John Avon' AND hasFoil = 1 AND cardKingdomFoilId IS NOT NULL\t----- bird -----\tcard_games",
    "394": "SELECT COUNT(*) FROM cards WHERE borderColor = 'white' AND cardKingdomFoilId = cardKingdomId AND cardKingdomId IS NOT NULL\t----- bird -----\tcard_games",
    "395": "SELECT COUNT(*) FROM cards WHERE artist = 'UDON' AND availability = 'mtgo' AND hand = -1\t----- bird -----\tcard_games",
    "396": "SELECT COUNT(id) FROM cards WHERE frameVersion = '1993' AND availability = 'paper' AND hasContentWarning = 1\t----- bird -----\tcard_games",
    "397": "SELECT manaCost FROM cards WHERE layout = 'normal' AND frameVersion = '2003' AND borderColor = 'black' AND availability = 'paper' AND availability = 'mtgo'\t----- bird -----\tcard_games",
    "398": "SELECT SUM(`convertedManaCost`) FROM `cards` WHERE `artist` = 'Rob Alexander'\t----- bird -----\tcard_games",
    "399": "SELECT DISTINCT types FROM cards WHERE availability = 'arena'\t----- bird -----\tcard_games",
    "400": "SELECT T2.setCode FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.language = 'Spanish'\t----- bird -----\tcard_games",
    "401": "SELECT CAST(COUNT(CASE WHEN hand = '+3' THEN 1 END) AS REAL) * 100 / COUNT(id) FROM cards WHERE frameEffects = 'legendary'\t----- bird -----\tcard_games",
    "402": "SELECT CAST(SUM(CASE WHEN isStorySpotlight = 1 AND isTextless = 0 THEN 1 ELSE 0 END) AS REAL) * 100 / SUM(COUNT(id)) AS percentage, id FROM cards GROUP BY id HAVING isStorySpotlight = 1;\t----- bird -----\tcard_games",
    "403": "SELECT CAST(COUNT(CASE WHEN T2.language = 'Spanish' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T1.id) as percentage, T1.name FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.language = 'Spanish' GROUP BY T1.name;\t----- bird -----\tcard_games",
    "404": "SELECT T2.language FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.baseSetSize = 309\t----- bird -----\tcard_games",
    "405": "SELECT COUNT(T1.setCode) FROM set_translations AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T1.language = 'Portuguese (Brasil)' AND T2.block = 'Commander'\t----- bird -----\tcard_games",
    "406": "SELECT id FROM cards WHERE type LIKE '%Creature%' AND types LIKE '%Goblin%' AND id IN (SELECT id FROM legalities WHERE status = 'legal')\t----- bird -----\tcard_games",
    "407": "SELECT DISTINCT types FROM cards WHERE language = 'German' AND subtypes IS NOT NULL AND supertypes IS NOT NULL;\t----- bird -----\tcard_games",
    "408": "SELECT COUNT(*) FROM cards WHERE power IS NULL AND text LIKE '%triggered ability%'\t----- bird -----\tcard_games",
    "409": "SELECT COUNT(*) FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid INNER JOIN rulings AS T3 ON T1.uuid = T3.uuid WHERE T2.format = 'pre-modern' AND T3.text = 'This is a triggered mana ability' AND T1.side IS NULL\t----- bird -----\tcard_games",
    "410": "SELECT T1.id FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.artist = 'Erica Yang' AND T2.format = 'pauper' AND T1.availability = 'paper'\t----- bird -----\tcard_games",
    "411": "SELECT artist FROM cards WHERE flavorText = 'Das perfekte Gegenmittel zu einer dichten Formation'\t----- bird -----\tcard_games",
    "412": "SELECT F1.name FROM cards AS F1 INNER JOIN foreign_data AS F2 ON F1.uuid = F2.uuid WHERE F1.type = 'Creature' AND F1.layout = 'normal' AND F1.borderColor = 'black' AND F1.artist = 'Matthew D. Wilson' AND F2.language = 'French'\t----- bird -----\tcard_games",
    "413": "SELECT COUNT(c.id) FROM cards c JOIN rulings r ON c.uuid = r.uuid WHERE c.rarity = 'rare' AND r.date = '2009-01-10'\t----- bird -----\tcard_games",
    "414": "SELECT T2.language FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.baseSetSize = 180 AND T1.block = 'Ravnica'\t----- bird -----\tcard_games",
    "415": "SELECT CAST(SUM(CASE WHEN hasContentWarning = 0 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(ID) FROM legalities WHERE format = 'commander' AND status = 'legal';\t----- bird -----\tcard_games",
    "416": "SELECT CAST(SUM(IIF(T1.language = 'French' AND (T1.power IS NULL OR T1.power = '*'), 1, 0)) AS REAL) * 100 / COUNT(T1.uuid) FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.power IS NULL OR T1.power = '*'\t----- bird -----\tcard_games",
    "417": "SELECT CAST(COUNT(CASE WHEN T2.type = 'expansion' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(*) FROM set_translations AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T1.language = 'Japanese'\t----- bird -----\tcard_games",
    "418": "SELECT T1.availability FROM cards AS T1 WHERE T1.artist = 'Daren Bader'\t----- bird -----\tcard_games",
    "419": "SELECT COUNT(*) FROM cards WHERE borderColor = 'borderless' AND edhrecRank > 12000\t----- bird -----\tcard_games",
    "420": "SELECT COUNT(*) FROM cards WHERE isOversized = 1 AND isReprint = 1 AND isPromo = 1;\t----- bird -----\tcard_games",
    "421": "SELECT name FROM cards WHERE (power IS NULL OR power = '*') AND promoTypes = 'arenaleague' ORDER BY name LIMIT 3\t----- bird -----\tcard_games",
    "422": "SELECT T2.language FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.multiverseid = 149934\t----- bird -----\tcard_games",
    "423": "SELECT id FROM cards WHERE cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL ORDER BY cardKingdomFoilId, cardKingdomId LIMIT 3\t----- bird -----\tcard_games",
    "424": "SELECT CAST(SUM(CASE WHEN isTextless = 1 AND layout = 'normal' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(isTextless) FROM cards\t----- bird -----\tcard_games",
    "425": "SELECT number FROM cards WHERE side IS NULL AND subtypes LIKE '%Angel%' AND subtypes LIKE '%Wizard%' AND name NOT IN (SELECT name FROM cards WHERE side IS NOT NULL)\t----- bird -----\tcard_games",
    "426": "SELECT name FROM sets WHERE mtgoCode IS NULL OR mtgoCode = '' ORDER BY name ASC LIMIT 3\t----- bird -----\tcard_games",
    "427": "SELECT T2.language FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.name = 'Archenemy' AND T1.code = 'ARC'\t----- bird -----\tcard_games",
    "428": "SELECT name, translation FROM sets INNER JOIN set_translations ON sets.code = set_translations.setCode WHERE sets.id = 5\t----- bird -----\tcard_games",
    "429": "SELECT T2.language, T1.type FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.id = 206\t----- bird -----\tcard_games",
    "430": "SELECT T1.name, T1.id FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code INNER JOIN foreign_data AS T3 ON T1.uuid = T3.uuid WHERE T3.language = 'Italian' AND T2.block = 'Shadowmoor' ORDER BY T1.name LIMIT 2\t----- bird -----\tcard_games",
    "431": "SELECT T1.id, T1.name FROM sets AS T1 WHERE T1.isForeignOnly = 1 AND T1.isFoilOnly = 1 AND EXISTS (SELECT 1 FROM cards AS T2 INNER JOIN foreign_data AS T3 ON T2.uuid = T3.uuid WHERE T2.setCode = T1.code AND T3.language = 'Japanese')\t----- bird -----\tcard_games",
    "432": "SELECT T1.name FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.language = 'Russian' ORDER BY T1.baseSetSize DESC LIMIT 1\t----- bird -----\tcard_games",
    "433": "SELECT CAST(SUM(CASE WHEN T1.isOnlineOnly = 1 AND T2.language = 'Chinese Simplified' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.isOnlineOnly) FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid\t----- bird -----\tcard_games",
    "434": "SELECT COUNT(*) FROM sets WHERE isOnlineOnly = 0 AND isForeignOnly = 1 AND (mtgoCode IS NULL OR mtgoCode = '')\t----- bird -----\tcard_games",
    "435": "SELECT COUNT(id) AS num_cards, id FROM cards WHERE borderColor = 'black'\t----- bird -----\tcard_games",
    "436": "SELECT COUNT(id) AS num_cards, id FROM cards WHERE frameEffects = 'extendedart'\t----- bird -----\tcard_games",
    "437": "SELECT c.name FROM cards c WHERE c.borderColor = 'black' AND c.isFullArt = 1;\t----- bird -----\tcard_games",
    "438": "SELECT language FROM set_translations WHERE setCode = '174'\t----- bird -----\tcard_games",
    "439": "SELECT name FROM sets WHERE code = 'ALL'\t----- bird -----\tcard_games",
    "440": "SELECT T2.language FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.name = 'A Pedra Fellwar'\t----- bird -----\tcard_games",
    "441": "SELECT code FROM sets WHERE releaseDate = '2007-07-13';\t----- bird -----\tcard_games",
    "442": "SELECT sets.baseSetSize, sets.code FROM sets WHERE sets.block = 'Masques' AND sets.block = 'Mirage'\t----- bird -----\tcard_games",
    "443": "SELECT code FROM sets WHERE type = 'expansion'\t----- bird -----\tcard_games",
    "444": "SELECT T1.name, T2.type FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.watermark = 'boros'\t----- bird -----\tcard_games",
    "445": "SELECT T2.language, T2.flavorText, T1.type FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.watermark = 'colorpie'\t----- bird -----\tcard_games",
    "446": "SELECT CAST(SUM(IIF(T1.convertedManaCost = 10, 1, 0)) AS REAL) * 100 / COUNT(T1.convertedManaCost) FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.name = 'Abyssal Horror'\t----- bird -----\tcard_games",
    "447": "SELECT T1.code FROM sets AS T1 INNER JOIN cards AS T2 ON T1.code = T2.setCode WHERE T2.types LIKE '%Commander%'\t----- bird -----\tcard_games",
    "448": "SELECT foreign_data.name AS foreign_name, cards.type FROM foreign_data INNER JOIN cards ON foreign_data.uuid = cards.uuid WHERE cards.watermark = 'abzan'\t----- bird -----\tcard_games",
    "449": "SELECT T2.language, T1.type FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.watermark = 'Azorius'\t----- bird -----\tcard_games",
    "450": "SELECT COUNT(*) FROM cards WHERE artist = 'Aaron Miller' AND cardKingdomFoilId = cardKingdomId AND cardKingdomId IS NOT NULL\t----- bird -----\tcard_games",
    "451": "SELECT COUNT(id) FROM cards WHERE availability LIKE '%paper%' AND hand LIKE '+%'\t----- bird -----\tcard_games",
    "452": "SELECT name FROM cards WHERE isTextless = 0;\t----- bird -----\tcard_games",
    "453": "SELECT convertedManaCost FROM cards WHERE name = 'Ancestor`s Chosen'\t----- bird -----\tcard_games",
    "454": "SELECT COUNT(*) FROM cards WHERE borderColor = 'white' AND (power = '*' OR power IS NULL)\t----- bird -----\tcard_games",
    "455": "SELECT name FROM cards WHERE isPromo = 1 AND side IS NOT NULL\t----- bird -----\tcard_games",
    "456": "SELECT T1.subtypes, T1.supertypes FROM cards AS T1 WHERE T1.name = 'Molimo, Maro-Sorcerer'\t----- bird -----\tcard_games",
    "457": "SELECT c.purchaseUrls FROM cards c WHERE c.promoTypes = 'bundle'\t----- bird -----\tcard_games",
    "458": "SELECT COUNT(DISTINCT T1.artist) FROM cards AS T1 WHERE T1.borderColor = 'black' AND T1.availability LIKE '%arena,mtgo%'\t----- bird -----\tcard_games",
    "459": "SELECT name FROM cards WHERE name IN ('Serra Angel', 'Shrine Keeper') ORDER BY convertedManaCost DESC LIMIT 1\t----- bird -----\tcard_games",
    "460": "SELECT artist FROM cards WHERE flavorName = 'Battra, Dark Destroyer'\t----- bird -----\tcard_games",
    "461": "SELECT T1.name FROM cards AS T1 WHERE T1.frameVersion = '2003' ORDER BY T1.convertedManaCost DESC LIMIT 3\t----- bird -----\tcard_games",
    "462": "SELECT T3.translation FROM cards AS T1 INNER JOIN set_translations AS T2 ON T1.setCode = T2.setCode INNER JOIN sets AS T3 ON T2.setCode = T3.code WHERE T1.name = 'Ancestor\\'s Chosen' AND T2.language = 'Italian'\t----- bird -----\tcard_games",
    "463": "SELECT COUNT(T1.translation) FROM set_translations AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code INNER JOIN cards AS T3 ON T2.name = T3.name WHERE T3.name = 'Angel of Mercy'\t----- bird -----\tcard_games",
    "464": "SELECT T1.name FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code INNER JOIN set_translations AS T3 ON T2.code = T3.setCode WHERE T3.translation = 'Hauptset Zehnte Edition'\t----- bird -----\tcard_games",
    "465": "SELECT T1.name FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.name = 'Ancestor\\'s Chosen' AND T2.language = 'Korean';\t----- bird -----\tcard_games",
    "466": "SELECT COUNT(*) FROM cards INNER JOIN set_translations ON cards.setCode = set_translations.code WHERE set_translations.translation = 'Hauptset Zehnte Edition' AND cards.artist = 'Adam Rex'\t----- bird -----\tcard_games",
    "467": "SELECT T2.baseSetSize FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.translation = 'Hauptset Zehnte Edition'\t----- bird -----\tcard_games",
    "468": "SELECT T2.translation FROM set_translations AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.name = 'Eighth Edition' AND T1.language = 'Simplified Chinese'\t----- bird -----\tcard_games",
    "469": "SELECT CASE WHEN mtgoCode IS NOT NULL THEN 'Yes' ELSE 'No' END AS appeared_on_mtgo FROM cards WHERE name = 'Angel of Mercy'\t----- bird -----\tcard_games",
    "470": "SELECT releaseDate FROM sets WHERE code IN (SELECT setCode FROM cards WHERE name = 'Ancestor''s Chosen')\t----- bird -----\tcard_games",
    "471": "SELECT T2.type FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.translation = 'Hauptset Zehnte Edition'\t----- bird -----\tcard_games",
    "472": "SELECT COUNT(T1.setCode) FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.block = 'Ice Age' AND T2.language = 'Italian'\t----- bird -----\tcard_games",
    "473": "SELECT CASE WHEN T1.isForeignOnly = 1 THEN 'Yes' ELSE 'No' END AS isAvailableOutsideUS FROM cards AS T1 WHERE T1.name = 'Adarkar Valkyrie';\t----- bird -----\tcard_games",
    "474": "SELECT COUNT(*) FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.language = 'Italian' AND T2.translation IS NOT NULL AND T1.baseSetSize < 10\t----- bird -----\tcard_games",
    "475": "SELECT COUNT(*) FROM cards WHERE name = 'Coldsnap' AND borderColor = 'black';\t----- bird -----\tcard_games",
    "476": "SELECT name FROM cards WHERE setCode = (SELECT code FROM sets WHERE name = 'Coldsnap') ORDER BY convertedManaCost DESC LIMIT 1\t----- bird -----\tcard_games",
    "477": "SELECT DISTINCT artist FROM cards WHERE setCode = 'Coldsnap' AND artist IN ('Jeremy Jarvis', 'Aaron Miller', 'Chippy');\t----- bird -----\tcard_games",
    "478": "SELECT * FROM cards WHERE setCode = (SELECT code FROM sets WHERE name = 'Coldsnap') AND number = '4'\t----- bird -----\tcard_games",
    "479": "SELECT COUNT(*) FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T1.convertedManaCost > 5 AND T1.power = '*' AND T2.name = 'Coldsnap'\t----- bird -----\tcard_games",
    "480": "SELECT T2.flavorText FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid INNER JOIN language AS T3 ON T2.language = T3.name WHERE T1.name = 'Ancestor''s Chosen' AND T3.language = 'Italian'\t----- bird -----\tcard_games",
    "481": "SELECT language FROM foreign_data WHERE name = 'Ancestor''s Chosen' AND flavorText IS NOT NULL\t----- bird -----\tcard_games",
    "482": "SELECT T2.type FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.language = 'German' AND T1.name = 'Ancestor''s Chosen'\t----- bird -----\tcard_games",
    "483": "SELECT T1.text FROM rulings AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid INNER JOIN sets AS T3 ON T2.setCode = T3.code INNER JOIN set_translations AS T4 ON T3.code = T4.setCode WHERE T4.language = 'Italian' AND T3.name = 'Coldsnap'\t----- bird -----\tcard_games",
    "484": "SELECT T1.name FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code INNER JOIN set_translations AS T3 ON T2.code = T3.setCode INNER JOIN `language` AS T4 ON T3.language = T4.name WHERE T2.name = 'Coldsnap' AND T4.name = 'Italian' ORDER BY T1.convertedManaCost DESC LIMIT 1\t----- bird -----\tcard_games",
    "485": "SELECT R.date FROM rulings AS R INNER JOIN cards AS C ON R.uuid = C.uuid WHERE C.name = 'Reminisce'\t----- bird -----\tcard_games",
    "486": "SELECT CAST(SUM(CASE WHEN T1.convertedManaCost = 7 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.convertedManaCost) FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.name = 'Coldsnap'\t----- bird -----\tcard_games",
    "487": "SELECT CAST(SUM(CASE WHEN cardKingdomFoilId = cardKingdomId AND cardKingdomId IS NOT NULL THEN 1 ELSE 0 END) AS REAL) * 100 / SUM(name = 'Coldsnap') FROM cards WHERE name = 'Coldsnap'\t----- bird -----\tcard_games",
    "488": "SELECT T1.code FROM sets AS T1 WHERE T1.releaseDate = '2017-07-14'\t----- bird -----\tcard_games",
    "489": "SELECT keyruneCode FROM sets WHERE code = 'PKHC'\t----- bird -----\tcard_games",
    "490": "SELECT mcmId FROM sets WHERE code = 'SS2'\t----- bird -----\tcard_games",
    "491": "SELECT T1.mcmName FROM sets AS T1 WHERE T1.releaseDate = '2017-06-09'\t----- bird -----\tcard_games",
    "492": "SELECT T1.type FROM sets AS T1 WHERE T1.name LIKE 'From the Vault: Lore'\t----- bird -----\tcard_games",
    "493": "SELECT parentCode FROM sets WHERE name = 'Commander 2014 Oversized'\t----- bird -----\tcard_games",
    "494": "SELECT T1.name, T2.text, CASE WHEN T1.hasContentWarning = 1 THEN 'Missing or degraded properties and values' ELSE 'No missing or degraded properties and values' END AS Property_Status FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.uuid = T2.uuid WHERE T1.artist = 'Jim Pavelec'\t----- bird -----\tcard_games",
    "495": "SELECT s.releaseDate FROM cards AS c INNER JOIN sets AS s ON c.setCode = s.code WHERE c.name = 'Evacuation'\t----- bird -----\tcard_games",
    "496": "SELECT baseSetSize FROM sets WHERE code = (SELECT setCode FROM set_translations WHERE translation = 'Rinascita di Alara')\t----- bird -----\tcard_games",
    "497": "SELECT T2.type FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.translation = 'Huiti\u00c3\u00a8me \u00c3\u00a9dition'\t----- bird -----\tcard_games",
    "498": "SELECT ST.translation FROM set_translations AS ST INNER JOIN sets AS S ON ST.setCode = S.code INNER JOIN cards AS C ON S.code = C.setCode WHERE C.name = 'Tendo Ice Bridge' AND ST.language = 'French'\t----- bird -----\tcard_games",
    "499": "SELECT COUNT(translation) FROM set_translations WHERE setCode = (SELECT code FROM sets WHERE name = 'Salvat 2011') AND translation IS NOT NULL;\t----- bird -----\tcard_games",
    "500": "SELECT T2.translation FROM cards AS T1 INNER JOIN set_translations AS T2 ON T1.setCode = T2.setCode WHERE T1.name = 'Fellwar Stone' AND T2.language = 'Japanese'\t----- bird -----\tcard_games",
    "501": "SELECT c.name FROM cards AS c INNER JOIN sets AS s ON c.setCode = s.code WHERE s.name = 'Journey into Nyx Hero''s Path' ORDER BY c.convertedManaCost DESC LIMIT 1;\t----- bird -----\tcard_games",
    "502": "SELECT T1.releaseDate FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.translation = 'Ola de fr\u00edo'\t----- bird -----\tcard_games",
    "503": "SELECT s.type FROM cards AS c INNER JOIN sets AS s ON c.setCode = s.code WHERE c.name = 'Samite Pilgrim';\t----- bird -----\tcard_games",
    "504": "SELECT COUNT(*) FROM cards WHERE setCode = (SELECT code FROM sets WHERE name = 'World Championship Decks 2004') AND convertedManaCost = 3;\t----- bird -----\tcard_games",
    "505": "SELECT T2.translation FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.language = 'Chinese Simplified' AND T1.name = 'Mirrodin'\t----- bird -----\tcard_games",
    "506": "SELECT CAST(COUNT(CASE WHEN T2.isNonFoilOnly = 1 THEN T1.uuid ELSE NULL END) AS REAL) * 100 / COUNT(T1.uuid) FROM cards AS T1 INNER JOIN set_translations AS T2 ON T1.setCode = T2.setCode WHERE T2.language = 'Japanese'\t----- bird -----\tcard_games",
    "507": "SELECT CAST(SUM(CASE WHEN T1.isOnlineOnly = 1 THEN 1 ELSE 0 END) AS REAL) * 100 / SUM(CASE WHEN T2.language = 'Portuguese (Brazil)' THEN 1 ELSE 0 END) FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.language = 'Portuguese (Brazil)'\t----- bird -----\tcard_games",
    "508": "SELECT T.availability FROM cards AS T WHERE T.artist = 'Aleksi Briclot' AND T.isTextless = 1;\t----- bird -----\tcard_games",
    "509": "SELECT id FROM sets WHERE baseSetSize = (SELECT MAX(baseSetSize) FROM sets)\t----- bird -----\tcard_games",
    "510": "SELECT T1.artist FROM cards AS T1 WHERE T1.side IS NULL AND T1.convertedManaCost = (SELECT MAX(convertedManaCost) FROM cards WHERE side IS NULL)\t----- bird -----\tcard_games",
    "511": "SELECT T1.frameEffects FROM cards AS T1 WHERE T1.cardKingdomFoilId IS NOT NULL AND T1.cardKingdomId IS NOT NULL ORDER BY T1.frameEffects DESC LIMIT 1\t----- bird -----\tcard_games",
    "512": "SELECT COUNT(*) FROM cards WHERE (power IS NULL OR power = '*') AND hasFoil = 0 AND duelDeck = 'A'\t----- bird -----\tcard_games",
    "513": "SELECT s.id FROM sets s WHERE s.type = 'commander' AND s.code NOT IN (SELECT code FROM sets WHERE type = 'alchemy') ORDER BY s.totalSetSize DESC LIMIT 1;\t----- bird -----\tcard_games",
    "514": "SELECT name FROM cards WHERE format = 'duel' ORDER BY convertedManaCost DESC LIMIT 10;\t----- bird -----\tcard_games",
    "515": "SELECT MIN(c.originalReleaseDate) AS oldest_release_date, c.name AS card_name, l.format AS legal_play_format FROM cards AS c INNER JOIN legalities AS l ON c.uuid = l.uuid WHERE c.rarity = 'mythic' AND l.status = 'legal' ORDER BY c.originalReleaseDate ASC LIMIT 1\t----- bird -----\tcard_games",
    "516": "SELECT COUNT(*) FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.artist = 'Volkan Baga' AND T2.language = 'French'\t----- bird -----\tcard_games",
    "517": "SELECT COUNT(*) FROM cards WHERE rarity = 'rare' AND types = 'Enchantment' AND name = 'Abundance' AND uuid IN (SELECT uuid FROM legalities WHERE format = 'Legal')\t----- bird -----\tcard_games",
    "518": "SELECT T2.format, T1.name FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T2.status = 'banned' GROUP BY T2.format ORDER BY COUNT(T2.status) DESC LIMIT 1\t----- bird -----\tcard_games",
    "519": "SELECT T2.language FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.name = 'Battlebond'\t----- bird -----\tcard_games",
    "520": "SELECT artist, format FROM cards WHERE artist = (SELECT artist FROM cards GROUP BY artist ORDER BY COUNT(*) ASC LIMIT 1)\t----- bird -----\tcard_games",
    "521": "SELECT T1.status FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.frameVersion = '1997' AND T1.artist = 'D. Alexander Gregory' AND (T1.hasContentWarning = 1 OR T1.artist = 'Wizards of the Coast') AND T2.format = 'legacy'\t----- bird -----\tcard_games",
    "522": "SELECT T1.name, T2.format FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.edhrecRank = 1 AND T2.status = 'banned'\t----- bird -----\tcard_games",
    "523": "SELECT AVG(id), MAX(COUNT(language)) FROM sets WHERE releaseDate BETWEEN '2012-01-01' AND '2015-12-31'\t----- bird -----\tcard_games",
    "524": "SELECT artist FROM cards WHERE borderColor = 'black' AND availability = 'arena'\t----- bird -----\tcard_games",
    "525": "SELECT cards.uuid FROM cards INNER JOIN legalities ON cards.uuid = legalities.uuid WHERE legalities.format = 'oldschool' AND (legalities.status = 'banned' OR legalities.status = 'restricted')\t----- bird -----\tcard_games",
    "526": "SELECT COUNT(id) FROM cards WHERE artist = 'Matthew D. Wilson' AND availability = 'paper'\t----- bird -----\tcard_games",
    "527": "SELECT text FROM rulings WHERE uuid IN (SELECT uuid FROM cards WHERE artist = 'Kev Walker') ORDER BY date DESC\t----- bird -----\tcard_games",
    "528": "SELECT T1.name, T2.format FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid INNER JOIN sets AS T3 ON T1.setCode = T3.code WHERE T3.name = 'Hour of Devastation' AND T2.status = 'legal'\t----- bird -----\tcard_games",
    "529": "SELECT T1.name FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.language = 'Korean' AND T1.code NOT IN (SELECT T3.setCode FROM set_translations AS T3 WHERE T3.language LIKE '%Japanese%')\t----- bird -----\tcard_games",
    "530": "SELECT frameVersion, name FROM cards WHERE artist = 'Allen Williams'; SELECT name FROM cards INNER JOIN legalities ON cards.uuid = legalities.uuid WHERE artist = 'Allen Williams' AND status = 'banned';\t----- bird -----\tcard_games",
    "531": "SELECT DisplayName FROM users WHERE DisplayName = 'Harlan' OR DisplayName = 'Jarrod Dixon' ORDER BY Reputation DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "532": "SELECT DisplayName FROM users WHERE strftime('%Y', CreationDate) = '2014'\t----- bird -----\tcodebase_community",
    "533": "SELECT COUNT(*) FROM users WHERE LastAccessDate > '2014-09-01 00:00:00'\t----- bird -----\tcodebase_community",
    "534": "SELECT DisplayName FROM users ORDER BY Views DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "535": "SELECT COUNT(Id) FROM users WHERE UpVotes > 100 AND DownVotes > 1;\t----- bird -----\tcodebase_community",
    "536": "SELECT COUNT(*) FROM users WHERE Views > 10 AND strftime('%Y', CreationDate) > '2013'\t----- bird -----\tcodebase_community",
    "537": "SELECT COUNT(*) FROM posts WHERE OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'csgillespie')\t----- bird -----\tcodebase_community",
    "538": "SELECT Title FROM posts WHERE OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'csgillespie')\t----- bird -----\tcodebase_community",
    "539": "SELECT U.DisplayName FROM posts AS P INNER JOIN users AS U ON P.OwnerUserId = U.Id WHERE P.Title = 'Eliciting priors from experts';\t----- bird -----\tcodebase_community",
    "540": "SELECT T1.Title FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'csgillespie' ORDER BY T1.ViewCount DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "541": "SELECT DisplayName FROM users WHERE Id = (SELECT OwnerUserId FROM posts WHERE FavoriteCount = (SELECT MAX(FavoriteCount) FROM posts))\t----- bird -----\tcodebase_community",
    "542": "SELECT SUM(P1.CommentCount) FROM posts AS P1 INNER JOIN users AS U1 ON P1.OwnerUserId = U1.Id WHERE U1.DisplayName = 'csgillespie'\t----- bird -----\tcodebase_community",
    "543": "SELECT MAX(p.AnswerCount) AS Max_Answers FROM posts p INNER JOIN users u ON p.OwnerUserId = u.Id WHERE u.DisplayName = 'csgillespie'\t----- bird -----\tcodebase_community",
    "544": "SELECT U.DisplayName FROM posts AS P INNER JOIN users AS U ON P.LastEditorUserId = U.Id WHERE P.Title = 'Examples for teaching: Correlation does not mean causation'\t----- bird -----\tcodebase_community",
    "545": "SELECT COUNT(*) FROM posts WHERE OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'csgillespie') AND ParentId IS NULL\t----- bird -----\tcodebase_community",
    "546": "SELECT DisplayName FROM users WHERE Id IN (SELECT OwnerUserId FROM posts WHERE ClosedDate IS NOT NULL)\t----- bird -----\tcodebase_community",
    "547": "SELECT COUNT(T1.Id) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.Age > 65 AND T1.Score >= 20\t----- bird -----\tcodebase_community",
    "548": "SELECT U.Location FROM posts AS P JOIN users AS U ON P.OwnerUserId = U.Id WHERE P.Title = 'Eliciting priors from experts'\t----- bird -----\tcodebase_community",
    "549": "SELECT P.Body FROM posts AS P INNER JOIN tags AS T ON P.Id = T.ExcerptPostId WHERE T.TagName = 'bayesian'\t----- bird -----\tcodebase_community",
    "550": "SELECT T2.Body FROM tags AS T1 INNER JOIN posts AS T2 ON T1.ExcerptPostId = T2.Id ORDER BY T1.Count DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "551": "SELECT COUNT(*) FROM badges WHERE UserId = (SELECT Id FROM users WHERE DisplayName = 'csgillespie')\t----- bird -----\tcodebase_community",
    "552": "SELECT T1.Name FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.DisplayName = 'csgillespie'\t----- bird -----\tcodebase_community",
    "553": "SELECT COUNT(*) FROM badges WHERE UserId = (SELECT Id FROM users WHERE DisplayName = 'csgillespie') AND STRFTIME('%Y', Date) = '2011'\t----- bird -----\tcodebase_community",
    "554": "SELECT DisplayName FROM users WHERE Id = ( SELECT UserId FROM badges GROUP BY UserId ORDER BY COUNT(Id) DESC LIMIT 1 )\t----- bird -----\tcodebase_community",
    "555": "SELECT AVG(T1.Score) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'csgillespie'\t----- bird -----\tcodebase_community",
    "556": "SELECT CAST(COUNT(Id) AS REAL) / COUNT(DisplayName) FROM badges WHERE UserId IN (SELECT Id FROM users WHERE Views > 200)\t----- bird -----\tcodebase_community",
    "557": "SELECT CAST(SUM(CASE WHEN T1.Age > 65 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.Id) FROM posts AS T1 WHERE T1.Score > 20\t----- bird -----\tcodebase_community",
    "558": "SELECT COUNT(*) FROM votes WHERE UserId = 58 AND CreationDate = '2010-07-19'\t----- bird -----\tcodebase_community",
    "559": "SELECT CreationDate FROM votes GROUP BY CreationDate ORDER BY COUNT(Id) DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "560": "SELECT COUNT(Id) FROM badges WHERE Name = 'Revival'\t----- bird -----\tcodebase_community",
    "561": "SELECT Title FROM posts WHERE Id = (SELECT PostId FROM comments ORDER BY Score DESC LIMIT 1)\t----- bird -----\tcodebase_community",
    "562": "SELECT COUNT(*) FROM comments WHERE PostId = (SELECT Id FROM posts WHERE ViewCount = 1910)\t----- bird -----\tcodebase_community",
    "563": "SELECT P.FavoriteCount FROM comments AS C INNER JOIN posts AS P ON C.PostId = P.Id WHERE C.UserId = 3025 AND C.CreationDate = '2014-04-23 20:29:39.0'\t----- bird -----\tcodebase_community",
    "564": "SELECT Text FROM comments WHERE PostId = 107829 AND CommentCount = '1'\t----- bird -----\tcodebase_community",
    "565": "SELECT CASE WHEN T1.ClosedDate IS NULL THEN 'Well-finished' ELSE 'Not well-finished' END AS PostStatus FROM posts AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.PostId WHERE T2.UserId = '23853' AND T2.CreationDate = '2013-07-12 09:08:18.0'\t----- bird -----\tcodebase_community",
    "566": "SELECT T2.Reputation FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T2.Id = '65041'\t----- bird -----\tcodebase_community",
    "567": "SELECT COUNT(*) AS PostCount FROM posts WHERE OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'Tiago Pasqualini')\t----- bird -----\tcodebase_community",
    "568": "SELECT T2.DisplayName FROM votes AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Id = 6347\t----- bird -----\tcodebase_community",
    "569": "SELECT COUNT(T1.Id) FROM votes AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T2.Title LIKE '%data visualization%'\t----- bird -----\tcodebase_community",
    "570": "SELECT T1.Name FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.DisplayName = \"DatEpicCoderGuyWhoPrograms\"\t----- bird -----\tcodebase_community",
    "571": "SELECT COUNT(post.Id) / COUNT(votes.Id) FROM posts AS post LEFT JOIN votes AS vote ON post.Id = vote.PostId WHERE post.OwnerUserId = 24\t----- bird -----\tcodebase_community",
    "572": "SELECT ViewCount FROM posts WHERE Title = 'Integration of Weka and/or RapidMiner into Informatica PowerCenter/Developer'\t----- bird -----\tcodebase_community",
    "573": "SELECT Text FROM comments WHERE Score = 17\t----- bird -----\tcodebase_community",
    "574": "SELECT DisplayName FROM users WHERE WebsiteUrl = 'http://stackoverflow.com'\t----- bird -----\tcodebase_community",
    "575": "SELECT T1.Name FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.DisplayName = 'SilentGhost'\t----- bird -----\tcodebase_community",
    "576": "SELECT T1.DisplayName FROM comments AS T2 INNER JOIN users AS T1 ON T2.UserId = T1.Id WHERE T2.Text = 'thank you user93!'\t----- bird -----\tcodebase_community",
    "577": "SELECT comments.Text FROM comments INNER JOIN users ON comments.UserId = users.Id WHERE users.DisplayName = 'A Lion'\t----- bird -----\tcodebase_community",
    "578": "SELECT T1.DisplayName, T1.Reputation FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T2.Title = 'Understanding what Dassault iSight is doing?'\t----- bird -----\tcodebase_community",
    "579": "SELECT comments.Text FROM comments INNER JOIN posts ON comments.PostId = posts.Id WHERE posts.Title = 'How does gentle boosting differ from AdaBoost?'\t----- bird -----\tcodebase_community",
    "580": "SELECT U.DisplayName FROM users AS U INNER JOIN badges AS B ON U.Id = B.UserId WHERE B.Name = 'Necromancer' LIMIT 10;\t----- bird -----\tcodebase_community",
    "581": "SELECT T1.DisplayName FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T2.Title = 'Open source tools for visualizing multi-dimensional data'\t----- bird -----\tcodebase_community",
    "582": "SELECT T2.Title FROM posts AS T2 INNER JOIN users AS T1 ON T2.LastEditorUserId = T1.Id WHERE T1.DisplayName = 'Vebjorn Ljosa'\t----- bird -----\tcodebase_community",
    "583": "SELECT SUM(T1.Score), T2.WebsiteUrl FROM posts AS T1 INNER JOIN users AS T2 ON T1.LastEditorUserId = T2.Id WHERE T2.DisplayName = 'Yevgeny'\t----- bird -----\tcodebase_community",
    "584": "SELECT T2.Text FROM comments AS T2 INNER JOIN postHistory AS T1 ON T1.PostId = T2.PostId INNER JOIN posts AS T3 ON T3.Id = T1.PostId WHERE T3.Title = 'Why square the difference instead of taking the absolute value in standard deviation?';\t----- bird -----\tcodebase_community",
    "585": "SELECT SUM(BountyAmount) FROM posts WHERE Title LIKE '%data%'\t----- bird -----\tcodebase_community",
    "586": "SELECT T1.DisplayName FROM users AS T1 INNER JOIN votes AS T2 ON T1.Id = T2.UserId INNER JOIN posts AS T3 ON T2.PostId = T3.Id WHERE T2.BountyAmount = 50 AND T3.Title LIKE '%variance%'\t----- bird -----\tcodebase_community",
    "587": "SELECT AVG(T1.ViewCount), T2.Title, T3.Text, T2.Score FROM posts AS T1 INNER JOIN tags AS T2 ON T1.Tags LIKE '%' || T2.TagName || '%' LEFT JOIN comments AS T3 ON T1.Id = T3.PostId WHERE T2.TagName = 'humor' GROUP BY T1.Id, T2.Title, T3.Text, T2.Score;\t----- bird -----\tcodebase_community",
    "588": "SELECT COUNT(*) FROM comments WHERE UserId = 13;\t----- bird -----\tcodebase_community",
    "589": "SELECT Id FROM users WHERE Reputation = (SELECT MAX(Reputation) FROM users)\t----- bird -----\tcodebase_community",
    "590": "SELECT Id FROM users ORDER BY Views ASC LIMIT 1\t----- bird -----\tcodebase_community",
    "591": "SELECT COUNT(DISTINCT T1.UserId) FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Name = 'Supporter' AND strftime('%Y', T1.Date) = '2011'\t----- bird -----\tcodebase_community",
    "592": "SELECT COUNT(UserId) FROM badges GROUP BY UserId HAVING COUNT(Name) > 5\t----- bird -----\tcodebase_community",
    "593": "SELECT COUNT(b.Id) FROM badges b JOIN users u ON b.UserId = u.Id WHERE u.Location = 'New York' AND b.Name IN ('Supporter', 'Teacher')\t----- bird -----\tcodebase_community",
    "594": "SELECT T2.DisplayName, T2.Reputation FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T1.Id = 1\t----- bird -----\tcodebase_community",
    "595": "SELECT T1.UserId FROM postHistory AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T2.ViewCount >= 1000 GROUP BY T1.UserId HAVING COUNT(DISTINCT T1.PostId) = 1\t----- bird -----\tcodebase_community",
    "596": "SELECT T1.UserId, T2.Name FROM comments AS T1 INNER JOIN badges AS T2 ON T1.UserId = T2.UserId GROUP BY T1.UserId ORDER BY COUNT(T1.Id) DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "597": "SELECT COUNT(T1.Id) FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T1.Location = 'India' AND T2.Name = 'Teacher'\t----- bird -----\tcodebase_community",
    "598": "SELECT ((CAST(COUNT(CASE WHEN strftime('%Y', Date) = '2010' AND Name = 'Students' THEN 1 END) AS REAL) / COUNT(Name) * 100) - (CAST(COUNT(CASE WHEN strftime('%Y', Date) = '2011' AND Name = 'Students' THEN 1 END) AS REAL) / COUNT(Name) * 100)) AS percentage_difference FROM badges\t----- bird -----\tcodebase_community",
    "599": "SELECT DISTINCT PostHistoryTypeId FROM postHistory WHERE PostId = 3720 SELECT COUNT(DISTINCT UserId) FROM comments WHERE PostId = 3720\t----- bird -----\tcodebase_community",
    "600": "SELECT T1.Id, T1.Title, T1.ViewCount FROM posts AS T1 INNER JOIN postLinks AS T2 ON T1.Id = T2.PostId WHERE T2.RelatedPostId = 61217;\t----- bird -----\tcodebase_community",
    "601": "SELECT Score, LinkTypeId FROM postLinks WHERE PostId = 395\t----- bird -----\tcodebase_community",
    "602": "SELECT posts.Id AS PostID, posts.OwnerUserId AS UserID FROM posts WHERE posts.Score > 60\t----- bird -----\tcodebase_community",
    "603": "SELECT SUM(FavoriteCount) FROM posts WHERE OwnerUserId = 686 AND strftime('%Y', CreationDate) = '2011'\t----- bird -----\tcodebase_community",
    "604": "SELECT AVG(UpVotes), AVG(Age) FROM users WHERE Id IN (SELECT UserId FROM posts GROUP BY UserId HAVING COUNT(UserId) > 10)\t----- bird -----\tcodebase_community",
    "605": "SELECT COUNT(DISTINCT UserId) FROM badges WHERE Name = 'Announcer'\t----- bird -----\tcodebase_community",
    "606": "SELECT T1.Name FROM badges AS T1 WHERE T1.Date = '2010-07-19 19:39:08 PM';\t----- bird -----\tcodebase_community",
    "607": "SELECT COUNT(*) FROM comments WHERE Score > 60\t----- bird -----\tcodebase_community",
    "608": "SELECT Text FROM comments WHERE CreationDate = '2010-07-19 19:25:47'\t----- bird -----\tcodebase_community",
    "609": "SELECT COUNT(*) AS postCount FROM posts WHERE Score = 10\t----- bird -----\tcodebase_community",
    "610": "SELECT b.Name FROM badges b INNER JOIN users u ON b.UserId = u.Id WHERE u.Reputation = (SELECT MAX(Reputation) FROM users)\t----- bird -----\tcodebase_community",
    "611": "SELECT T2.Reputation FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Date = '2010-07-19 19:39:08.0';\t----- bird -----\tcodebase_community",
    "612": "SELECT T1.Name FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.DisplayName = 'Pierre'\t----- bird -----\tcodebase_community",
    "613": "SELECT T1.Date FROM badges T1 INNER JOIN users T2 ON T1.UserId = T2.Id WHERE T2.Location = 'Rochester, NY'\t----- bird -----\tcodebase_community",
    "614": "SELECT CAST(COUNT(T1.UserId) AS REAL) * 100 / (SELECT COUNT(*) FROM users) FROM badges AS T1 WHERE T1.Name = 'Teacher';\t----- bird -----\tcodebase_community",
    "615": "SELECT COUNT(CASE WHEN T1.Age BETWEEN 13 AND 18 THEN T1.UserId END) * 100 / COUNT(T1.UserId) AS Percentage FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T2.Name = 'Organizer';\t----- bird -----\tcodebase_community",
    "616": "SELECT T2.Score FROM comments AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T2.CreationDate = '2010-07-19 19:19:56.0'\t----- bird -----\tcodebase_community",
    "617": "SELECT Text FROM comments WHERE PostId IN (SELECT Id FROM posts WHERE CreaionDate = '2010-07-19 19:37:33.0')\t----- bird -----\tcodebase_community",
    "618": "SELECT Age FROM users WHERE Location = 'Vienna, Austria' AND Id IN (SELECT UserId FROM badges)\t----- bird -----\tcodebase_community",
    "619": "SELECT COUNT(DISTINCT T1.UserId) FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Name = 'Supporter' AND T2.Age BETWEEN 19 AND 65\t----- bird -----\tcodebase_community",
    "620": "SELECT SUM(T3.Views) FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Date = '2010-07-19 19:39:08.0';\t----- bird -----\tcodebase_community",
    "621": "SELECT T2.Name FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T1.Reputation = (SELECT MIN(Reputation) FROM users)\t----- bird -----\tcodebase_community",
    "622": "SELECT b.Name FROM badges AS b INNER JOIN users AS u ON b.UserId = u.Id WHERE u.DisplayName = 'Sharpie'\t----- bird -----\tcodebase_community",
    "623": "SELECT COUNT(T1.Id) FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.Age > 65 AND T1.Name = 'Supporter'\t----- bird -----\tcodebase_community",
    "624": "SELECT DisplayName FROM users WHERE Id = 30\t----- bird -----\tcodebase_community",
    "625": "SELECT COUNT(*) FROM users WHERE Location LIKE '%New York%'\t----- bird -----\tcodebase_community",
    "626": "SELECT COUNT(Id) FROM votes WHERE strftime('%Y', CreationDate) = '2010'\t----- bird -----\tcodebase_community",
    "627": "SELECT COUNT(*) FROM users WHERE Age BETWEEN 19 AND 65;\t----- bird -----\tcodebase_community",
    "628": "SELECT DisplayName FROM users ORDER BY Views DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "629": "SELECT COUNT(CASE WHEN strftime('%Y', CreationDate) = '2010' THEN 1 ELSE NULL END) * 1.0 / COUNT(CASE WHEN strftime('%Y', CreationDate) = '2011' THEN 1 ELSE NULL END) FROM votes;\t----- bird -----\tcodebase_community",
    "630": "SELECT T2.TagName FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T1.DisplayName = 'John Stauffer'\t----- bird -----\tcodebase_community",
    "631": "SELECT COUNT(*) FROM posts WHERE OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'Daniel Vassallo')\t----- bird -----\tcodebase_community",
    "632": "SELECT COUNT(*) FROM votes WHERE UserId = (SELECT Id FROM users WHERE DisplayName = 'Harlan')\t----- bird -----\tcodebase_community",
    "633": "SELECT posts.Id FROM posts INNER JOIN users ON posts.OwnerUserId = users.Id WHERE users.DisplayName = 'slashnick' ORDER BY posts.AnswerCount DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "634": "SELECT MAX(SUM(ViewCount)) FROM posts WHERE OwnerDisplayName = 'Harvey Motulsky' OR OwnerDisplayName = 'Noah Snyder'\t----- bird -----\tcodebase_community",
    "635": "SELECT COUNT(*) FROM posts WHERE OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'Matt Parker') AND Id IN (SELECT PostId FROM votes GROUP BY PostId HAVING COUNT(PostId) > 4)\t----- bird -----\tcodebase_community",
    "636": "SELECT COUNT(T2.Text) FROM comments AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.DisplayName = 'Neil McGuigan' AND T1.Score < 60\t----- bird -----\tcodebase_community",
    "637": "SELECT T2.TagName FROM posts AS T1 INNER JOIN tags AS T2 ON T1.Tags LIKE '%' || T2.TagName || '%' LEFT JOIN comments AS T3 ON T1.Id = T3.PostId INNER JOIN users AS T4 ON T1.OwnerUserId = T4.Id WHERE T4.DisplayName = 'Mark Meckes' AND T3.Id IS NULL;\t----- bird -----\tcodebase_community",
    "638": "SELECT DisplayName FROM users WHERE Id IN (SELECT UserId FROM badges WHERE Name = 'Organizer')\t----- bird -----\tcodebase_community",
    "639": "SELECT CAST(COUNT(DISTINCT CASE WHEN T2.TagName = 'r' THEN T1.Id ELSE NULL END) AS REAL) * 100 / COUNT(DISTINCT T1.Id) AS percentage FROM posts AS T1 INNER JOIN tags AS T2 ON T1.Id = T2.ExcerptPostId WHERE T1.OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'Community')\t----- bird -----\tcodebase_community",
    "640": "SELECT SUM(CASE WHEN T1.OwnerDisplayName = 'Mornington' THEN T2.ViewCount ELSE 0 END) - SUM(CASE WHEN T1.OwnerDisplayName = 'Amos' THEN T2.ViewCount ELSE 0 END) AS \"ViewCount Difference\" FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id\t----- bird -----\tcodebase_community",
    "641": "SELECT COUNT(DISTINCT UserId) FROM badges WHERE Name = 'commentator' AND year(Date) = 2014\t----- bird -----\tcodebase_community",
    "642": "SELECT COUNT(*) FROM posts WHERE CreationDate BETWEEN '2010-07-21 00:00:00' AND '2010-07-21 23:59:59';\t----- bird -----\tcodebase_community",
    "643": "SELECT T1.DisplayName, T1.Age FROM users AS T1 WHERE T1.Views = (SELECT MAX(Views) FROM users)\t----- bird -----\tcodebase_community",
    "644": "SELECT P.LastEditDate, P.LastEditorUserId FROM posts AS P WHERE P.Title = 'Detecting a given face in a database of facial images'\t----- bird -----\tcodebase_community",
    "645": "SELECT COUNT(*) FROM comments WHERE UserId = 13 AND Score < 60\t----- bird -----\tcodebase_community",
    "646": "SELECT T1.Title, T2.UserDisplayName FROM posts AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.PostId WHERE T2.Score > 60\t----- bird -----\tcodebase_community",
    "647": "SELECT b.Name FROM badges AS b INNER JOIN users AS u ON b.UserId = u.Id WHERE u.Location = 'North Pole' AND year(b.Date) = 2011\t----- bird -----\tcodebase_community",
    "648": "SELECT U.DisplayName, U.WebsiteUrl FROM posts AS P INNER JOIN users AS U ON P.OwnerUserId = U.Id WHERE P.FavoriteCount > 150;\t----- bird -----\tcodebase_community",
    "649": "SELECT COUNT(*) AS post_history_counts, MAX(CreationDate) AS last_edit_date FROM postHistory WHERE PostId = (SELECT Id FROM posts WHERE Title = 'What is the best introductory Bayesian statistics textbook?')\t----- bird -----\tcodebase_community",
    "650": "SELECT T1.LastAccessDate, T1.Location FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T2.Name = 'Outliers'\t----- bird -----\tcodebase_community",
    "651": "SELECT T2.Title FROM posts AS T1 INNER JOIN postLinks AS T2 ON T1.Id = T2.RelatedPostId WHERE T1.Title = 'How to tell if something happened in a data set which monitors a value over time'\t----- bird -----\tcodebase_community",
    "652": "SELECT T1.Id, T2.Name FROM posts AS T1 INNER JOIN badges AS T2 ON T1.OwnerUserId = T2.UserId INNER JOIN users AS T3 ON T1.OwnerUserId = T3.Id WHERE T3.DisplayName = 'Samuel' AND YEAR(T1.CreationDate) = 2013 AND YEAR(T2.Date) = 2013;\t----- bird -----\tcodebase_community",
    "653": "SELECT OwnerDisplayName FROM posts WHERE ViewCount = (SELECT MAX(ViewCount) FROM posts)\t----- bird -----\tcodebase_community",
    "654": "SELECT T1.DisplayName, T1.Location FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId INNER JOIN tags AS T3 ON T2.Id = T3.ExcerptPostId WHERE T3.TagName = 'hypothesis-testing'\t----- bird -----\tcodebase_community",
    "655": "SELECT T2.Title, T1.LinkTypeId FROM postLinks AS T1 INNER JOIN posts AS T2 ON T1.RelatedPostId = T2.Id WHERE T2.Title = 'What are principal component scores?'\t----- bird -----\tcodebase_community",
    "656": "SELECT posts.OwnerDisplayName FROM posts WHERE posts.ParentId IS NOT NULL AND posts.Score = (SELECT MAX(Score) FROM posts WHERE ParentId IS NOT NULL)\t----- bird -----\tcodebase_community",
    "657": "SELECT U.DisplayName, U.WebsiteUrl FROM votes AS V INNER JOIN users AS U ON V.UserId = U.Id WHERE V.VoteTypeId = 8 AND V.BountyAmount = (SELECT MAX(BountyAmount) FROM votes WHERE VoteTypeId = 8)\t----- bird -----\tcodebase_community",
    "658": "SELECT Title FROM posts ORDER BY ViewCount DESC LIMIT 5;\t----- bird -----\tcodebase_community",
    "659": "SELECT COUNT(Id) FROM tags WHERE Count BETWEEN 5000 AND 7000;\t----- bird -----\tcodebase_community",
    "660": "SELECT OwnerUserId FROM posts WHERE FavoriteCount = (SELECT MAX(FavoriteCount) FROM posts)\t----- bird -----\tcodebase_community",
    "661": "SELECT Age FROM users WHERE Reputation = (SELECT MAX(Reputation) FROM users)\t----- bird -----\tcodebase_community",
    "662": "SELECT COUNT(*) FROM posts WHERE Id IN (SELECT PostId FROM votes WHERE YEAR(CreationDate) = 2011 AND BountyAmount = 50)\t----- bird -----\tcodebase_community",
    "663": "SELECT Id FROM users WHERE Age = (SELECT MIN(Age) FROM users)\t----- bird -----\tcodebase_community",
    "664": "SELECT Score FROM posts WHERE Id = (SELECT PostId FROM postLinks WHERE RelatedPostId = (SELECT Id FROM tags WHERE Count = (SELECT MAX(Count) FROM tags)))\t----- bird -----\tcodebase_community",
    "665": "SELECT COUNT(T1.Id) / 12 AS average FROM postLinks AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE YEAR(T1.CreationDate) = 2010 AND T2.AnswerCount <= 2\t----- bird -----\tcodebase_community",
    "666": "SELECT PostId FROM votes INNER JOIN posts ON votes.PostId = posts.Id WHERE votes.UserId = 1465 ORDER BY posts.FavoriteCount DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "667": "SELECT T1.Title FROM posts AS T1 INNER JOIN postLinks AS T2 ON T1.Id = T2.PostId ORDER BY T2.CreationDate ASC LIMIT 1\t----- bird -----\tcodebase_community",
    "668": "SELECT T1.DisplayName FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId GROUP BY T1.DisplayName ORDER BY COUNT(T2.Name) DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "669": "SELECT MIN(CreationDate) FROM votes WHERE UserId = (SELECT Id FROM users WHERE DisplayName = 'chl')\t----- bird -----\tcodebase_community",
    "670": "SELECT MIN(posts.CreaionDate) FROM posts INNER JOIN users ON posts.OwnerUserId = users.Id WHERE users.Age = (SELECT MIN(Age) FROM users)\t----- bird -----\tcodebase_community",
    "671": "SELECT U.DisplayName FROM badges AS B INNER JOIN users AS U ON B.UserId = U.Id WHERE B.Name = 'Autobiographer' ORDER BY B.Date LIMIT 1;\t----- bird -----\tcodebase_community",
    "672": "SELECT COUNT(T1.Id) FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T1.Location = 'United Kingdom' AND T2.FavoriteCount >= 4\t----- bird -----\tcodebase_community",
    "673": "SELECT AVG(PostId) FROM votes WHERE UserId IN (SELECT Id FROM users WHERE Age = (SELECT MAX(Age) FROM users))\t----- bird -----\tcodebase_community",
    "674": "SELECT DisplayName FROM users WHERE Reputation = (SELECT MAX(Reputation) FROM users)\t----- bird -----\tcodebase_community",
    "675": "SELECT COUNT(Id) FROM users WHERE Reputation > 2000 AND Views > 1000;\t----- bird -----\tcodebase_community",
    "676": "SELECT DisplayName FROM users WHERE Age BETWEEN 19 AND 65\t----- bird -----\tcodebase_community",
    "677": "SELECT COUNT(*) FROM posts WHERE OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'Jay Stevens') AND YEAR(CreationDate) = 2010\t----- bird -----\tcodebase_community",
    "678": "SELECT p.Id, p.Title FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE u.DisplayName = 'Harvey Motulsky' ORDER BY p.ViewCount DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "679": "SELECT p.Id, p.Title FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE p.Score = (SELECT MAX(Score) FROM posts)\t----- bird -----\tcodebase_community",
    "680": "SELECT AVG(posts.Score) FROM posts INNER JOIN users ON posts.OwnerUserId = users.Id WHERE users.DisplayName = 'Stephen Turner'\t----- bird -----\tcodebase_community",
    "681": "SELECT DisplayName FROM users WHERE Id IN ( SELECT OwnerUserId FROM posts WHERE ViewCount > 20000 AND YEAR(CreationDate) = 2011 )\t----- bird -----\tcodebase_community",
    "682": "SELECT T1.Id, T1.OwnerDisplayName FROM posts AS T1 WHERE year(T1.CreationDate) = 2010 ORDER BY T1.FavoriteCount DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "683": "SELECT CAST(SUM(CASE WHEN U.Reputation > 1000 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(P.Id) AS percentage FROM posts AS P INNER JOIN users AS U ON P.OwnerUserId = U.Id WHERE STRFTIME('%Y', P.CreaionDate) = '2011'\t----- bird -----\tcodebase_community",
    "684": "SELECT CAST(COUNT(CASE WHEN Age BETWEEN 13 AND 18 THEN 1 END) AS REAL) * 100 / COUNT(Id) FROM users\t----- bird -----\tcodebase_community",
    "685": "SELECT P.ViewCount AS total_views, U.DisplayName AS user_name FROM posts AS P INNER JOIN users AS U ON P.OwnerUserId = U.Id WHERE P.Title = 'Computer Game Datasets'\t----- bird -----\tcodebase_community",
    "686": "SELECT COUNT(*) FROM posts WHERE ViewCount > (SELECT AVG(ViewCount) FROM posts);\t----- bird -----\tcodebase_community",
    "687": "SELECT COUNT(*) FROM comments WHERE PostId = (SELECT Id FROM posts WHERE Score = (SELECT MAX(Score) FROM posts))\t----- bird -----\tcodebase_community",
    "688": "SELECT COUNT(*) FROM posts WHERE ViewCount > 35000 AND CommentCount = 0\t----- bird -----\tcodebase_community",
    "689": "SELECT u.DisplayName, u.Location FROM users u JOIN posts p ON u.Id = p.LastEditorUserId WHERE p.Id = 183 ORDER BY p.LastEditDate DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "690": "SELECT Name FROM badges WHERE UserId = (SELECT Id FROM users WHERE DisplayName = 'Emmett') ORDER BY Date DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "691": "SELECT COUNT(Id) FROM users WHERE Age BETWEEN 19 AND 65 AND UpVotes > 5000;\t----- bird -----\tcodebase_community",
    "692": "SELECT strftime('%J', b.Date) - strftime('%J', u.CreationDate) AS TimeToGetBadge FROM badges b INNER JOIN users u ON b.UserId = u.Id WHERE u.DisplayName = 'Zolomon'\t----- bird -----\tcodebase_community",
    "693": "SELECT COUNT(posts.Id) AS num_posts, COUNT(comments.Id) AS num_comments FROM users LEFT JOIN posts ON users.Id = posts.OwnerUserId LEFT JOIN comments ON users.Id = comments.UserId WHERE CreationDate = (SELECT MAX(CreationDate) FROM users)\t----- bird -----\tcodebase_community",
    "694": "SELECT T1.Text, T1.UserDisplayName FROM comments AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T2.Title = 'Analysing wind data with R' ORDER BY T1.CreationDate DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "695": "SELECT COUNT(*) FROM badges WHERE Name = 'Citizen Patrol'\t----- bird -----\tcodebase_community",
    "696": "SELECT COUNT(*) FROM posts WHERE Tags LIKE '%careers%'\t----- bird -----\tcodebase_community",
    "697": "SELECT T1.Reputation, T1.Views FROM users AS T1 WHERE T1.DisplayName = 'Jarrod Dixon'\t----- bird -----\tcodebase_community",
    "698": "SELECT COUNT(*) FROM comments WHERE PostId = (SELECT Id FROM posts WHERE Title = 'Clustering 1D data') UNION SELECT COUNT(*) FROM posts WHERE ParentId = (SELECT Id FROM posts WHERE Title = 'Clustering 1D data')\t----- bird -----\tcodebase_community",
    "699": "SELECT CreationDate FROM users WHERE DisplayName = 'IrishStat'\t----- bird -----\tcodebase_community",
    "700": "SELECT COUNT(Id) FROM votes WHERE BountyAmount >= 30\t----- bird -----\tcodebase_community",
    "701": "SELECT CAST(COUNT(CASE WHEN T1.Score >= 50 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.Reputation = (SELECT MAX(Reputation) FROM users)\t----- bird -----\tcodebase_community",
    "702": "SELECT COUNT(*) FROM posts WHERE Score < 20;\t----- bird -----\tcodebase_community",
    "703": "SELECT COUNT(Id) FROM tags WHERE Id < 15 AND Count <= 20\t----- bird -----\tcodebase_community",
    "704": "SELECT T1.ExcerptPostId, T1.WikiPostId FROM tags AS T1 WHERE T1.TagName = 'sample'\t----- bird -----\tcodebase_community",
    "705": "SELECT T1.Reputation, T1.UpVotes FROM users AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.UserId WHERE T2.Text = 'fine, you win :)'\t----- bird -----\tcodebase_community",
    "706": "SELECT T2.Text FROM comments AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T2.Title = 'How can I adapt ANOVA for binary data?'\t----- bird -----\tcodebase_community",
    "707": "SELECT T2.Text FROM posts AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.PostId WHERE T1.ViewCount BETWEEN 100 AND 150 ORDER BY T2.Score DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "708": "SELECT CreationDate, Age FROM users JOIN comments ON users.Id = comments.UserId WHERE users.WebsiteUrl LIKE '%http%'\t----- bird -----\tcodebase_community",
    "709": "SELECT COUNT(DISTINCT T1.PostId) FROM comments AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T1.Score = 0 AND T2.ViewCount < 5\t----- bird -----\tcodebase_community",
    "710": "SELECT COUNT(c.Id) FROM comments c INNER JOIN posts p ON c.PostId = p.Id WHERE p.CommentCount = 1 AND c.Score = 0;\t----- bird -----\tcodebase_community",
    "711": "SELECT COUNT(DISTINCT T1.UserId) FROM comments AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Score = 0 AND T2.Age = 40\t----- bird -----\tcodebase_community",
    "712": "SELECT T1.Id AS PostID, T2.Text AS Comment FROM posts AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.PostId WHERE T1.Title = 'Group differences on a five point Likert item'\t----- bird -----\tcodebase_community",
    "713": "SELECT T1.UpVotes FROM users AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.UserId WHERE T2.Text = 'R is also lazy evaluated.'\t----- bird -----\tcodebase_community",
    "714": "SELECT Text FROM comments WHERE UserId = (SELECT Id FROM users WHERE DisplayName = 'Harvey Motulsky')\t----- bird -----\tcodebase_community",
    "715": "SELECT T1.UserDisplayName FROM comments AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Score BETWEEN 1 AND 5 AND T2.DownVotes = 0\t----- bird -----\tcodebase_community",
    "716": "SELECT CAST(SUM(CASE WHEN T1.UpVotes = 0 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.UserId) FROM comments AS T1 WHERE T1.Score BETWEEN 5 AND 10\t----- bird -----\tcodebase_community",
    "717": "SELECT T2.power_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T1.superhero_name = '3-D Man'\t----- bird -----\tsuperhero",
    "718": "SELECT COUNT(*) FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T3.power_name = 'Super Strength';\t----- bird -----\tsuperhero",
    "719": "SELECT COUNT(*) FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id WHERE T2.power_id = (SELECT id FROM superpower WHERE power_name = 'Super Strength') AND T1.height_cm > 200\t----- bird -----\tsuperhero",
    "720": "SELECT T1.full_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id GROUP BY T1.full_name HAVING COUNT(T2.power_id) > 15\t----- bird -----\tsuperhero",
    "721": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T2.colour = 'Blue'\t----- bird -----\tsuperhero",
    "722": "SELECT T2.colour FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.skin_colour_id = T2.id WHERE T1.superhero_name = 'Apocalypse'\t----- bird -----\tsuperhero",
    "723": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id INNER JOIN hero_power AS T3 ON T1.id = T3.hero_id INNER JOIN superpower AS T4 ON T3.power_id = T4.id WHERE T2.colour = 'Blue' AND T4.power_name = 'Agility'\t----- bird -----\tsuperhero",
    "724": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id INNER JOIN colour AS T3 ON T1.hair_colour_id = T3.id WHERE T2.colour = 'Blue' AND T3.colour = 'Blond'\t----- bird -----\tsuperhero",
    "725": "SELECT COUNT(*) FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')\t----- bird -----\tsuperhero",
    "726": "SELECT T1.full_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'Marvel Comics' ORDER BY T1.height_cm DESC LIMIT 1\t----- bird -----\tsuperhero",
    "727": "SELECT T2.publisher_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.superhero_name = 'Sauron';\t----- bird -----\tsuperhero",
    "728": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id INNER JOIN colour AS T3 ON T1.eye_colour_id = T3.id WHERE T2.publisher_name = 'Marvel Comics' AND T3.colour = 'Blue'\t----- bird -----\tsuperhero",
    "729": "SELECT AVG(height_cm) FROM superhero INNER JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher.publisher_name = 'Marvel Comics';\t----- bird -----\tsuperhero",
    "730": "SELECT (CAST(SUM(CASE WHEN T3.power_name = 'Super Strength' THEN 1 ELSE 0 END) AS REAL) / COUNT(T1.id)) * 100 FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id INNER JOIN hero_power AS T3 ON T1.id = T3.hero_id WHERE T2.publisher_name = 'Marvel Comics';\t----- bird -----\tsuperhero",
    "731": "SELECT COUNT(*) FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'DC Comics')\t----- bird -----\tsuperhero",
    "732": "SELECT P.publisher_name FROM superhero AS S INNER JOIN hero_attribute AS HA ON S.id = HA.hero_id INNER JOIN attribute AS A ON HA.attribute_id = A.id INNER JOIN publisher AS P ON S.publisher_id = P.id WHERE A.attribute_name = 'Speed' ORDER BY HA.attribute_value ASC LIMIT 1\t----- bird -----\tsuperhero",
    "733": "SELECT COUNT(DISTINCT T1.id) FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id INNER JOIN publisher AS T3 ON T1.publisher_id = T3.id INNER JOIN alignment AS T4 ON T1.alignment_id = T4.id WHERE T2.colour = 'Gold' AND T3.publisher_name = 'Marvel Comics'\t----- bird -----\tsuperhero",
    "734": "SELECT T2.publisher_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.superhero_name = 'Blue Beetle II'\t----- bird -----\tsuperhero",
    "735": "SELECT COUNT(*) FROM superhero AS s INNER JOIN colour AS c ON s.hair_colour_id = c.id WHERE c.colour = 'Blond'\t----- bird -----\tsuperhero",
    "736": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN attribute AS T3 ON T2.attribute_id = T3.id WHERE T3.attribute_name = 'Intelligence' ORDER BY T2.attribute_value ASC LIMIT 1\t----- bird -----\tsuperhero",
    "737": "SELECT T1.race FROM superhero AS T1 WHERE T1.superhero_name = 'Copycat'\t----- bird -----\tsuperhero",
    "738": "SELECT COUNT(DISTINCT hero_id) FROM hero_attribute INNER JOIN attribute ON hero_attribute.attribute_id = attribute.id WHERE attribute.attribute_name = 'Durability' AND hero_attribute.attribute_value < 50\t----- bird -----\tsuperhero",
    "739": "SELECT superhero.superhero_name FROM superhero INNER JOIN hero_power ON superhero.id = hero_power.hero_id INNER JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'Death Touch'\t----- bird -----\tsuperhero",
    "740": "SELECT COUNT(T1.id) FROM superhero T1 INNER JOIN gender T2 ON T1.gender_id = T2.id INNER JOIN hero_attribute T3 ON T1.id = T3.hero_id INNER JOIN attribute T4 ON T3.attribute_id = T4.id WHERE T2.gender = 'Female' AND T4.attribute_name = 'Strength' AND T3.attribute_value = 100\t----- bird -----\tsuperhero",
    "741": "SELECT superhero.superhero_name FROM superhero JOIN hero_power ON superhero.id = hero_power.hero_id GROUP BY superhero.superhero_name ORDER BY COUNT(hero_power.power_id) DESC LIMIT 1\t----- bird -----\tsuperhero",
    "742": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T2.race = 'Vampire'\t----- bird -----\tsuperhero",
    "743": "SELECT CAST(COUNT(CASE WHEN T1.alignment = 'Bad' THEN T1.id ELSE NULL END) AS REAL) * 100 / COUNT(T1.id) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'Marvel Comics'\t----- bird -----\tsuperhero",
    "744": "SELECT (SELECT publisher_name FROM publisher WHERE publisher_name = 'Marvel Comics' OR publisher_name = 'DC Comics' GROUP BY publisher_name ORDER BY COUNT(id) DESC LIMIT 1) \"has published more superheroes\", (SELECT COUNT(id) FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')) - (SELECT COUNT(id) FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'DC Comics')) \"difference in number of superheroes\"\t----- bird -----\tsuperhero",
    "745": "SELECT id FROM publisher WHERE publisher_name = 'Star Trek';\t----- bird -----\tsuperhero",
    "746": "SELECT AVG(attribute_value) FROM hero_attribute;\t----- bird -----\tsuperhero",
    "747": "SELECT COUNT(id) FROM superhero WHERE full_name IS NULL\t----- bird -----\tsuperhero",
    "748": "SELECT C.colour FROM superhero AS S INNER JOIN colour AS C ON S.eye_colour_id = C.id WHERE S.id = 75;\t----- bird -----\tsuperhero",
    "749": "SELECT T2.power_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id WHERE T1.superhero_name = 'Deathlok'\t----- bird -----\tsuperhero",
    "750": "SELECT AVG(weight_kg) FROM superhero WHERE gender_id = 2\t----- bird -----\tsuperhero",
    "751": "SELECT T2.power_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN gender AS T3 ON T1.gender_id = T3.id INNER JOIN superpower AS T4 ON T2.power_id = T4.id WHERE T3.gender = 'Male' LIMIT 5\t----- bird -----\tsuperhero",
    "752": "SELECT superhero_name FROM superhero WHERE race_id = (SELECT id FROM race WHERE race = 'Alien')\t----- bird -----\tsuperhero",
    "753": "SELECT superhero_name FROM superhero WHERE height_cm BETWEEN 170 AND 190 AND eye_colour_id IS NULL\t----- bird -----\tsuperhero",
    "754": "SELECT T2.power_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T1.id = 56;\t----- bird -----\tsuperhero",
    "755": "SELECT T1.full_name FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T2.race = 'Demi-God' LIMIT 5\t----- bird -----\tsuperhero",
    "756": "SELECT COUNT(*) FROM superhero WHERE alignment_id = (SELECT id FROM alignment WHERE alignment = 'Bad')\t----- bird -----\tsuperhero",
    "757": "SELECT T2.race FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T1.weight_kg = 169\t----- bird -----\tsuperhero",
    "758": "SELECT C.colour FROM superhero AS S INNER JOIN colour AS C ON S.hair_colour_id = C.id WHERE S.height_cm = 185 AND S.race_id = (SELECT id FROM race WHERE race = 'human')\t----- bird -----\tsuperhero",
    "759": "SELECT T3.colour FROM superhero AS T1 INNER JOIN colour AS T3 ON T1.eye_colour_id = T3.id WHERE T1.weight_kg = (SELECT MAX(weight_kg) FROM superhero)\t----- bird -----\tsuperhero",
    "760": "SELECT CAST(COUNT(CASE WHEN T1.publisher_id = 13 THEN T2.id ELSE NULL END) AS REAL) * 100 / COUNT(T2.id) FROM superhero AS T2 INNER JOIN publisher AS T1 ON T2.publisher_id = T1.id WHERE T2.height_cm BETWEEN 150 AND 180;\t----- bird -----\tsuperhero",
    "761": "SELECT T1.full_name FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id WHERE T2.gender = 'Male' AND T1.weight_kg > (SELECT AVG(weight_kg) * 0.79 FROM superhero)\t----- bird -----\tsuperhero",
    "762": "SELECT T2.power_name FROM superpower AS T2 INNER JOIN hero_power AS T1 ON T2.id = T1.power_id GROUP BY T2.power_name ORDER BY COUNT(T2.power_name) DESC LIMIT 1\t----- bird -----\tsuperhero",
    "763": "SELECT HA.attribute_value FROM superhero AS HS INNER JOIN hero_attribute AS HA ON HS.id = HA.hero_id WHERE HS.superhero_name = 'Abomination'\t----- bird -----\tsuperhero",
    "764": "SELECT S.power_name FROM superpower AS S INNER JOIN hero_power AS HP ON S.id = HP.power_id WHERE HP.hero_id = 1\t----- bird -----\tsuperhero",
    "765": "SELECT COUNT(DISTINCT hero_id) FROM hero_power INNER JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'stealth'\t----- bird -----\tsuperhero",
    "766": "SELECT T1.full_name FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN attribute AS T3 ON T2.attribute_id = T3.id WHERE T3.attribute_name = 'strength' ORDER BY T2.attribute_value DESC LIMIT 1\t----- bird -----\tsuperhero",
    "767": "SELECT CAST(COUNT(superhero.id) AS REAL) / SUM(CASE WHEN skin_colour_id IS NULL THEN 1 ELSE 0 END) FROM superhero\t----- bird -----\tsuperhero",
    "768": "SELECT COUNT(*) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'Dark Horse Comics'\t----- bird -----\tsuperhero",
    "769": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id INNER JOIN hero_attribute AS T3 ON T1.id = T3.hero_id INNER JOIN attribute AS T4 ON T3.attribute_id = T4.id WHERE T4.attribute_name = 'durability' AND T2.publisher_name = 'Dark Horse Comics' ORDER BY T3.attribute_value DESC LIMIT 1\t----- bird -----\tsuperhero",
    "770": "SELECT C.colour FROM superhero AS S INNER JOIN colour AS C ON S.eye_colour_id = C.id WHERE S.full_name = 'Abraham Sapien'\t----- bird -----\tsuperhero",
    "771": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T3.power_name = 'Flight'\t----- bird -----\tsuperhero",
    "772": "SELECT T1.colour AS eye_colour, T2.colour AS hair_colour, T3.colour AS skin_colour FROM superhero AS T4 INNER JOIN colour AS T1 ON T4.eye_colour_id = T1.id INNER JOIN colour AS T2 ON T4.hair_colour_id = T2.id INNER JOIN colour AS T3 ON T4.skin_colour_id = T3.id INNER JOIN gender AS T5 ON T4.gender_id = T5.id INNER JOIN publisher AS T6 ON T4.publisher_id = T6.id WHERE T5.gender = 'Female' AND T6.publisher_name = 'Dark Horse Comics'\t----- bird -----\tsuperhero",
    "773": "SELECT S.superhero_name, P.publisher_name FROM superhero S INNER JOIN publisher P ON S.publisher_id = P.id WHERE S.hair_colour_id = S.skin_colour_id AND S.hair_colour_id = S.eye_colour_id;\t----- bird -----\tsuperhero",
    "774": "SELECT T2.race FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T1.superhero_name = 'A-Bomb'\t----- bird -----\tsuperhero",
    "775": "SELECT CAST(SUM(T3.colour = 'Blue' AND T2.gender = 'Female') AS REAL) * 100 / COUNT(T2.gender) FROM superhero T1 INNER JOIN gender T2 ON T1.gender_id = T2.id INNER JOIN colour T3 ON T1.eye_colour_id = T3.id OR T1.hair_colour_id = T3.id OR T1.skin_colour_id = T3.id WHERE T2.gender = 'Female'\t----- bird -----\tsuperhero",
    "776": "SELECT T1.superhero_name, T2.race FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T1.full_name = 'Charles Chandler'\t----- bird -----\tsuperhero",
    "777": "SELECT T2.gender FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id WHERE T1.superhero_name = 'Agent 13'\t----- bird -----\tsuperhero",
    "778": "SELECT superhero_name FROM superhero INNER JOIN hero_power ON superhero.id = hero_power.hero_id INNER JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'Adaptation'\t----- bird -----\tsuperhero",
    "779": "SELECT COUNT(T2.power_id) FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id WHERE T1.superhero_name = 'Amazo'\t----- bird -----\tsuperhero",
    "780": "SELECT T2.power_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id WHERE T1.full_name = 'Hunter Zolomon'\t----- bird -----\tsuperhero",
    "781": "SELECT T1.height_cm FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T2.colour = 'Amber'\t----- bird -----\tsuperhero",
    "782": "SELECT superhero_name FROM superhero INNER JOIN colour AS eye_color ON superhero.eye_colour_id = eye_color.id INNER JOIN colour AS hair_color ON superhero.hair_colour_id = hair_color.id WHERE eye_color.colour = 'Black' AND hair_color.colour = 'Black'\t----- bird -----\tsuperhero",
    "783": "SELECT T2.colour FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.skin_colour_id = (SELECT id FROM colour WHERE colour = 'Gold')\t----- bird -----\tsuperhero",
    "784": "SELECT T1.full_name FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T2.race = 'Vampire'\t----- bird -----\tsuperhero",
    "785": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN alignment AS T2 ON T1.alignment_id = T2.id WHERE T2.alignment = 'Neutral'\t----- bird -----\tsuperhero",
    "786": "SELECT COUNT(hero_id) FROM hero_attribute WHERE attribute_id = (SELECT id FROM attribute WHERE attribute_name = 'Strength') AND attribute_value = (SELECT MAX(attribute_value) FROM hero_attribute WHERE attribute_id = (SELECT id FROM attribute WHERE attribute_name = 'Strength'))\t----- bird -----\tsuperhero",
    "787": "SELECT T2.race, T3.alignment FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id INNER JOIN alignment AS T3 ON T1.alignment_id = T3.id WHERE T1.superhero_name = 'Cameron Hicks'\t----- bird -----\tsuperhero",
    "788": "SELECT CAST(COUNT(CASE WHEN T3.gender = 'Female' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(CASE WHEN T4.publisher_name = 'Marvel Comics' THEN 1 ELSE NULL END) FROM superhero AS T1 INNER JOIN gender AS T3 ON T1.gender_id = T3.id INNER JOIN publisher AS T4 ON T1.publisher_id = T4.id WHERE T4.publisher_name = 'Marvel Comics'\t----- bird -----\tsuperhero",
    "789": "SELECT AVG(weight_kg) FROM superhero WHERE race_id = (SELECT id FROM race WHERE race = 'Alien')\t----- bird -----\tsuperhero",
    "790": "SELECT (SUM(CASE WHEN T1.full_name = 'Emil Blonsky' THEN T1.weight_kg ELSE 0 END) - SUM(CASE WHEN T1.full_name = 'Charles Chandler' THEN T1.weight_kg ELSE 0 END)) AS weight_difference FROM superhero AS T1\t----- bird -----\tsuperhero",
    "791": "SELECT AVG(height_cm) FROM superhero;\t----- bird -----\tsuperhero",
    "792": "SELECT power_name FROM superhero JOIN hero_power ON superhero.id = hero_power.hero_id JOIN superpower ON hero_power.power_id = superpower.id WHERE superhero_name = 'Abomination'\t----- bird -----\tsuperhero",
    "793": "SELECT COUNT(superhero.id) FROM superhero WHERE race_id = 21 AND gender_id = 1;\t----- bird -----\tsuperhero",
    "794": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN attribute AS T3 ON T2.attribute_id = T3.id WHERE T3.attribute_name = 'Speed' ORDER BY T2.attribute_value DESC LIMIT 1\t----- bird -----\tsuperhero",
    "795": "SELECT COUNT(*) FROM superhero WHERE alignment_id = 3\t----- bird -----\tsuperhero",
    "796": "SELECT A.attribute_name, HA.attribute_value FROM superhero AS S INNER JOIN hero_attribute AS HA ON S.id = HA.hero_id INNER JOIN attribute AS A ON HA.attribute_id = A.id WHERE S.superhero_name = '3-D Man'\t----- bird -----\tsuperhero",
    "797": "SELECT superhero.superhero_name FROM superhero WHERE eye_colour_id = 7 AND hair_colour_id = 9\t----- bird -----\tsuperhero",
    "798": "SELECT T5.publisher_name FROM superhero AS T1 INNER JOIN publisher AS T5 ON T1.publisher_id = T5.id WHERE T1.superhero_name IN ('Hawkman', 'Karate Kid', 'Speedy')\t----- bird -----\tsuperhero",
    "799": "SELECT COUNT(*) FROM superhero WHERE publisher_id IS NULL\t----- bird -----\tsuperhero",
    "800": "SELECT CAST(SUM(CASE WHEN T1.eye_colour_id = 7 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.superhero_name) FROM superhero AS T1\t----- bird -----\tsuperhero",
    "801": "SELECT CAST(SUM(CASE WHEN gender_id = 1 THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN gender_id = 2 THEN 1 ELSE 0 END) FROM superhero\t----- bird -----\tsuperhero",
    "802": "SELECT T1.superhero_name FROM superhero AS T1 ORDER BY T1.height_cm DESC LIMIT 1\t----- bird -----\tsuperhero",
    "803": "SELECT id FROM superpower WHERE power_name = 'cryokinesis'\t----- bird -----\tsuperhero",
    "804": "SELECT superhero_name FROM superhero WHERE id = 294\t----- bird -----\tsuperhero",
    "805": "SELECT full_name FROM superhero WHERE weight_kg = 0 OR weight_kg IS NULL\t----- bird -----\tsuperhero",
    "806": "SELECT C.colour FROM superhero AS S INNER JOIN colour AS C ON S.eye_colour_id = C.id WHERE S.full_name = 'Karen Beecher-Duncan'\t----- bird -----\tsuperhero",
    "807": "SELECT T3.power_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T1.full_name = 'Helen Parr';\t----- bird -----\tsuperhero",
    "808": "SELECT T1.race FROM superhero AS T1 WHERE T1.weight_kg = 108 AND T1.height_cm = 188\t----- bird -----\tsuperhero",
    "809": "SELECT publisher.publisher_name FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id WHERE superhero.id = 38\t----- bird -----\tsuperhero",
    "810": "SELECT r.race FROM superhero s JOIN race r ON s.race_id = r.id JOIN hero_attribute ha ON s.id = ha.hero_id WHERE ha.attribute_value = (SELECT MAX(attribute_value) FROM hero_attribute)\t----- bird -----\tsuperhero",
    "811": "SELECT A.alignment, SP.power_name FROM superhero AS S INNER JOIN alignment AS A ON S.alignment_id = A.id INNER JOIN hero_power AS HP ON S.id = HP.hero_id INNER JOIN superpower AS SP ON HP.power_id = SP.id WHERE S.superhero_name = 'Atom IV'\t----- bird -----\tsuperhero",
    "812": "SELECT S.full_name FROM superhero AS S INNER JOIN colour AS C ON S.eye_colour_id = C.id WHERE C.colour = 'Blue' LIMIT 5\t----- bird -----\tsuperhero",
    "813": "SELECT AVG(T2.attribute_value) FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id WHERE T1.alignment_id = 3;\t----- bird -----\tsuperhero",
    "814": "SELECT C.colour FROM superhero AS S INNER JOIN colour AS C ON S.skin_colour_id = C.id INNER JOIN hero_attribute AS HA ON S.id = HA.hero_id WHERE HA.attribute_value = 100;\t----- bird -----\tsuperhero",
    "815": "SELECT COUNT(*) FROM superhero WHERE alignment_id = 1 AND gender_id = 2\t----- bird -----\tsuperhero",
    "816": "SELECT superhero_name FROM superhero INNER JOIN hero_attribute ON superhero.id = hero_attribute.hero_id WHERE hero_attribute.attribute_value BETWEEN 75 AND 80;\t----- bird -----\tsuperhero",
    "817": "SELECT race.race FROM superhero INNER JOIN colour ON superhero.hair_colour_id = colour.id INNER JOIN gender ON superhero.gender_id = gender.id INNER JOIN race ON superhero.race_id = race.id WHERE colour.colour = 'blue' AND gender.gender = 'male'\t----- bird -----\tsuperhero",
    "818": "SELECT CAST(COUNT(CASE WHEN T2.id = 2 AND T3.id = 2 THEN 1 END) AS REAL) * 100 / COUNT(CASE WHEN T2.id = 2 THEN 1 END) FROM superhero AS T1 INNER JOIN alignment AS T2 ON T1.alignment_id = T2.id INNER JOIN gender AS T3 ON T1.gender_id = T3.id WHERE T2.id = 2\t----- bird -----\tsuperhero",
    "819": "SELECT COUNT(CASE WHEN T1.eye_colour_id = 7 THEN T1.id ELSE NULL END) - COUNT(CASE WHEN T1.eye_colour_id = 1 THEN T1.id ELSE NULL END) AS DIFFERENCE FROM superhero AS T1 LEFT JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.weight_kg = 0 OR T1.weight_kg IS NULL\t----- bird -----\tsuperhero",
    "820": "SELECT HA.attribute_value FROM superhero AS S INNER JOIN hero_attribute AS HA ON S.id = HA.hero_id INNER JOIN attribute AS A ON HA.attribute_id = A.id WHERE S.superhero_name = 'Hulk' AND A.attribute_name = 'Strength'\t----- bird -----\tsuperhero",
    "821": "SELECT T2.power_name FROM superhero AS T1 INNER JOIN hero_power AS T3 ON T1.id = T3.hero_id INNER JOIN superpower AS T2 ON T2.id = T3.power_id WHERE T1.superhero_name = 'Ajax'\t----- bird -----\tsuperhero",
    "822": "SELECT COUNT(*) FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.skin_colour_id = T2.id INNER JOIN alignment AS T3 ON T1.alignment_id = T3.id WHERE T2.colour = 'Green' AND T3.alignment = 'Bad'\t----- bird -----\tsuperhero",
    "823": "SELECT COUNT(*) FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id INNER JOIN publisher AS T3 ON T1.publisher_id = T3.id WHERE T2.gender = 'Female' AND T3.publisher_name = 'Marvel Comics'\t----- bird -----\tsuperhero",
    "824": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T3.power_name = 'Wind Control' ORDER BY T1.superhero_name ASC\t----- bird -----\tsuperhero",
    "825": "SELECT gender.gender FROM superhero JOIN hero_power ON superhero.id = hero_power.hero_id JOIN superpower ON hero_power.power_id = superpower.id JOIN gender ON superhero.gender_id = gender.id WHERE superpower.power_name = 'Phoenix Force'\t----- bird -----\tsuperhero",
    "826": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'DC Comics' ORDER BY T1.weight_kg DESC LIMIT 1\t----- bird -----\tsuperhero",
    "827": "SELECT AVG(height_cm) FROM superhero WHERE race_id <> (SELECT id FROM race WHERE race = 'Human') AND publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Dark Horse Comics');\t----- bird -----\tsuperhero",
    "828": "SELECT COUNT(*) FROM superhero INNER JOIN hero_attribute ON superhero.id = hero_attribute.hero_id INNER JOIN attribute ON hero_attribute.attribute_id = attribute.id WHERE attribute.attribute_name = 'Speed' AND hero_attribute.attribute_value = 100\t----- bird -----\tsuperhero",
    "829": "SELECT CASE WHEN SUM(T1.publisher_name = 'DC Comics') > SUM(T1.publisher_name = 'Marvel Comics') THEN 'DC Comics' ELSE 'Marvel Comics' END AS \"Publisher with more superheroes\", ABS(SUM(CASE WHEN T1.publisher_name = 'DC Comics' THEN 1 ELSE 0 END) - SUM(CASE WHEN T1.publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END)) AS \"Difference in number of superheroes\" FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id;\t----- bird -----\tsuperhero",
    "830": "SELECT attribute.attribute_name FROM superhero JOIN hero_attribute ON superhero.id = hero_attribute.hero_id JOIN attribute ON hero_attribute.attribute_id = attribute.id WHERE superhero.superhero_name = 'Black Panther' GROUP BY attribute.attribute_name ORDER BY MIN(hero_attribute.attribute_value) LIMIT 1\t----- bird -----\tsuperhero",
    "831": "SELECT C.colour FROM superhero AS S JOIN colour AS C ON S.eye_colour_id = C.id WHERE S.superhero_name = 'Abomination'\t----- bird -----\tsuperhero",
    "832": "SELECT superhero.superhero_name FROM superhero ORDER BY superhero.height_cm DESC LIMIT 1\t----- bird -----\tsuperhero",
    "833": "SELECT superhero_name FROM superhero WHERE full_name = 'Charles Chandler'\t----- bird -----\tsuperhero",
    "834": "SELECT CAST(COUNT(CASE WHEN T2.gender = 'Female' THEN T1.id ELSE NULL END) AS REAL) * 100 / COUNT(T1.id) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'George Lucas'\t----- bird -----\tsuperhero",
    "835": "SELECT (SUM(CASE WHEN T3.alignment = 'Good' THEN 1 ELSE 0 END) * 1.0 / COUNT(T1.publisher_name = 'Marvel Comics')) * 100.0 FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id INNER JOIN alignment AS T3 ON T1.alignment_id = T3.id WHERE T2.publisher_name = 'Marvel Comics'\t----- bird -----\tsuperhero",
    "836": "SELECT COUNT(*) FROM superhero WHERE full_name LIKE 'John%'\t----- bird -----\tsuperhero",
    "837": "SELECT hero_id FROM hero_attribute WHERE attribute_value = (SELECT MIN(attribute_value) FROM hero_attribute)\t----- bird -----\tsuperhero",
    "838": "SELECT superhero.full_name FROM superhero WHERE superhero.superhero_name = 'Alien'\t----- bird -----\tsuperhero",
    "839": "SELECT T1.full_name FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.weight_kg < 100 AND T2.colour = 'brown'\t----- bird -----\tsuperhero",
    "840": "SELECT HA.attribute_value FROM superhero AS HS INNER JOIN hero_attribute AS HA ON HS.id = HA.hero_id WHERE HS.superhero_name = 'Aquababy'\t----- bird -----\tsuperhero",
    "841": "SELECT T1.weight_kg, T2.race FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T1.id = 40;\t----- bird -----\tsuperhero",
    "842": "SELECT AVG(height_cm) FROM superhero WHERE alignment_id = (SELECT id FROM alignment WHERE alignment = 'Neutral');\t----- bird -----\tsuperhero",
    "843": "SELECT hero_id FROM superhero INNER JOIN hero_power ON superhero.id = hero_power.hero_id INNER JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'Intelligence'\t----- bird -----\tsuperhero",
    "844": "SELECT c.colour FROM superhero s JOIN colour c ON s.eye_colour_id = c.id WHERE s.superhero_name = 'Blackwulf'\t----- bird -----\tsuperhero",
    "845": "SELECT T2.power_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id WHERE T1.height_cm > (SELECT AVG(height_cm) FROM superhero) * 0.8;\t----- bird -----\tsuperhero",
    "846": "SELECT driverRef FROM qualifying WHERE raceId = 18 ORDER BY q1 DESC LIMIT 5\t----- bird -----\tformula_1",
    "847": "SELECT D.surname FROM drivers AS D INNER JOIN qualifying AS Q ON D.driverId = Q.driverId WHERE Q.raceId = 19 AND Q.q2 = (SELECT MIN(q2) FROM qualifying WHERE raceId = 19)\t----- bird -----\tformula_1",
    "848": "SELECT T1.year FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T2.location = 'Shanghai'\t----- bird -----\tformula_1",
    "849": "SELECT url FROM races WHERE circuitId = (SELECT circuitId FROM circuits WHERE name = 'Circuit de Barcelona-Catalunya')\t----- bird -----\tformula_1",
    "850": "SELECT races.name FROM races INNER JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.country = 'Germany'\t----- bird -----\tformula_1",
    "851": "SELECT T1.position FROM constructorStandings AS T1 INNER JOIN constructors AS T2 ON T1.constructorId = T2.constructorId WHERE T2.name = 'Renault'\t----- bird -----\tformula_1",
    "852": "SELECT COUNT(raceId) FROM races WHERE year = 2010 AND circuitId NOT IN (SELECT circuitId FROM circuits WHERE country NOT IN ('Asia', 'Europe'))\t----- bird -----\tformula_1",
    "853": "SELECT T1.name FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T2.country = 'Spain'\t----- bird -----\tformula_1",
    "854": "SELECT lat, lng FROM circuits WHERE country = 'Australia' AND name = 'Australian Grand Prix'\t----- bird -----\tformula_1",
    "855": "SELECT T1.url FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T2.name = 'Sepang International Circuit'\t----- bird -----\tformula_1",
    "856": "SELECT T1.time FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T2.name = 'Sepang International Circuit'\t----- bird -----\tformula_1",
    "857": "SELECT lat, lng FROM circuits WHERE name = 'Abu Dhabi Grand Prix'\t----- bird -----\tformula_1",
    "858": "SELECT c.country FROM constructors c INNER JOIN constructorResults cr ON c.constructorId = cr.constructorId WHERE cr.raceId = 24 AND cr.points = 1;\t----- bird -----\tformula_1",
    "859": "SELECT q1 FROM qualifying WHERE raceId = 354 AND driverId = (SELECT driverId FROM drivers WHERE forename = 'Bruno' AND surname = 'Senna')\t----- bird -----\tformula_1",
    "860": "SELECT T1.nationality FROM drivers AS T1 INNER JOIN qualifying AS T2 ON T1.driverId = T2.driverId WHERE T2.raceId = 355 AND T2.q2 = '0:01:40'\t----- bird -----\tformula_1",
    "861": "SELECT T1.number FROM drivers AS T1 INNER JOIN qualifying AS T2 ON T1.driverId = T2.driverId WHERE T2.raceId = 903 AND T2.q3 = '0:01:54'\t----- bird -----\tformula_1",
    "862": "SELECT COUNT(*) FROM results WHERE raceId = (SELECT raceId FROM races WHERE name = 'Bahrain Grand Prix' AND year = 2007) AND time IS NULL\t----- bird -----\tformula_1",
    "863": "SELECT T2.year FROM races AS T1 INNER JOIN seasons AS T2 ON T1.year = T2.year WHERE T1.raceId = 901;\t----- bird -----\tformula_1",
    "864": "SELECT COUNT(*) FROM results WHERE raceId = (SELECT raceId FROM races WHERE date = '2015-11-29') AND time IS NOT NULL\t----- bird -----\tformula_1",
    "865": "SELECT drivers.forename, drivers.surname FROM results JOIN drivers ON results.driverId = drivers.driverId WHERE results.raceId = 592 AND results.time IS NOT NULL ORDER BY drivers.dob ASC LIMIT 1\t----- bird -----\tformula_1",
    "866": "SELECT driver.forename, driver.surname, driver.url FROM drivers JOIN lapTimes ON drivers.driverId = lapTimes.driverId WHERE lapTimes.time = '0:01:27' AND lapTimes.raceId = 161;\t----- bird -----\tformula_1",
    "867": "SELECT T2.nationality FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.raceId = 933 ORDER BY T1.fastestLapSpeed DESC LIMIT 1\t----- bird -----\tformula_1",
    "868": "SELECT location, lat, lng FROM circuits WHERE name = 'Malaysian Grand Prix'\t----- bird -----\tformula_1",
    "869": "SELECT T2.url FROM constructors AS T2 INNER JOIN constructorResults AS T1 ON T1.constructorId = T2.constructorId WHERE T1.raceId = 9 ORDER BY T1.points DESC LIMIT 1\t----- bird -----\tformula_1",
    "870": "SELECT q1 FROM qualifying WHERE raceId = 345 AND driverId = (SELECT driverId FROM drivers WHERE forename = 'Lucas' AND surname = 'di Grassi')\t----- bird -----\tformula_1",
    "871": "SELECT T1.nationality FROM drivers AS T1 INNER JOIN qualifying AS T2 ON T1.driverId = T2.driverId WHERE T2.raceId = 347 AND T2.q2 = '0:01:15'\t----- bird -----\tformula_1",
    "872": "SELECT T1.code FROM drivers AS T1 INNER JOIN qualifying AS T2 ON T1.driverId = T2.driverId WHERE T2.q3 = '0:01:33' AND T2.raceId = 45\t----- bird -----\tformula_1",
    "873": "SELECT T1.time FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T2.forename = 'Bruce' AND T2.surname = 'McLaren' AND T1.raceId = 743;\t----- bird -----\tformula_1",
    "874": "SELECT D.surname, D.forename FROM results AS R INNER JOIN races AS RA ON R.raceId = RA.raceId INNER JOIN drivers AS D ON R.driverId = D.driverId WHERE RA.name = 'San Marino Grand Prix' AND RA.year = 2006 AND R.position = 2;\t----- bird -----\tformula_1",
    "875": "SELECT T2.year FROM races AS T1 INNER JOIN seasons AS T2 ON T1.year = T2.year WHERE T1.raceId = 901;\t----- bird -----\tformula_1",
    "876": "SELECT COUNT(*) FROM results WHERE raceId = (SELECT raceId FROM races WHERE date = '2015-11-29') AND position IS NOT NULL\t----- bird -----\tformula_1",
    "877": "SELECT T1.forename, T1.surname FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T2.raceId = 872 AND T2.time IS NOT NULL ORDER BY T1.dob DESC LIMIT 1\t----- bird -----\tformula_1",
    "878": "SELECT drivers.forename, drivers.surname FROM drivers INNER JOIN results ON drivers.driverId = results.driverId WHERE results.raceId = 348 ORDER BY results.time ASC LIMIT 1\t----- bird -----\tformula_1",
    "879": "SELECT drivers.nationality FROM results INNER JOIN drivers ON results.driverId = drivers.driverId WHERE results.fastestLapSpeed = (SELECT MAX(fastestLapSpeed) FROM results)\t----- bird -----\tformula_1",
    "880": "SELECT ((T1.fastestLapSpeed - T2.fastestLapSpeed) / T1.fastestLapSpeed) * 100 AS percentage FROM results AS T1 INNER JOIN results AS T2 ON T1.raceId = 853 AND T2.raceId = 854 WHERE T1.driverId = (SELECT driverId FROM drivers WHERE forename = 'Paul' AND surname = 'di Resta')\t----- bird -----\tformula_1",
    "881": "SELECT CAST(COUNT(CASE WHEN T2.time IS NOT NULL THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T2.driverId) FROM races AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId WHERE T1.date = '1983-07-16'\t----- bird -----\tformula_1",
    "882": "SELECT MIN(year) FROM races WHERE circuitId = (SELECT circuitId FROM circuits WHERE name = 'Marina Bay Street Circuit')\t----- bird -----\tformula_1",
    "883": "SELECT COUNT(*) AS total_races, name FROM races WHERE year = 2005 ORDER BY name DESC;\t----- bird -----\tformula_1",
    "884": "SELECT r1.name AS first_race, r2.name AS other_races FROM races AS r1 INNER JOIN races AS r2 ON r1.year = r2.year AND r1.month = r2.month WHERE r1.date = (SELECT MIN(date) FROM races) AND r2.raceId <> r1.raceId;\t----- bird -----\tformula_1",
    "885": "SELECT T1.name, T1.date FROM races AS T1 INNER JOIN seasons AS T2 ON T1.year = T2.year WHERE T2.year = 1999 AND T1.round = (SELECT MAX(round) FROM races WHERE year = 1999)\t----- bird -----\tformula_1",
    "886": "SELECT year FROM seasons WHERE year = ( SELECT year FROM races GROUP BY year ORDER BY COUNT(round) DESC LIMIT 1 )\t----- bird -----\tformula_1",
    "887": "SELECT name FROM races WHERE year = 2017 AND raceId NOT IN (SELECT raceId FROM races WHERE year = 2000)\t----- bird -----\tformula_1",
    "888": "SELECT T2.country, T2.name, T2.location FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T1.name = 'European Grand Prix' ORDER BY T1.year LIMIT 1\t----- bird -----\tformula_1",
    "889": "SELECT T1.year FROM seasons AS T1 INNER JOIN races AS T2 ON T1.year = T2.year INNER JOIN circuits AS T3 ON T2.circuitId = T3.circuitId WHERE T3.name = 'Brands Hatch' AND T2.name = 'British Grand Prix' ORDER BY T1.year DESC LIMIT 1\t----- bird -----\tformula_1",
    "890": "SELECT COUNT(T1.year) FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T2.name = 'Silverstone Circuit' AND T1.name = 'British Grand Prix'\t----- bird -----\tformula_1",
    "891": "SELECT D.forename, D.surname FROM drivers AS D INNER JOIN results AS R ON D.driverId = R.driverId INNER JOIN races AS RA ON R.raceId = RA.raceId WHERE RA.name = 'Singapore Grand Prix' AND RA.year = 2010 ORDER BY R.position;\t----- bird -----\tformula_1",
    "892": "SELECT T1.forename || ' ' || T1.surname AS full_name FROM drivers AS T1 INNER JOIN driverStandings AS T2 ON T1.driverId = T2.driverId GROUP BY T1.driverId ORDER BY SUM(T2.points) DESC LIMIT 1;\t----- bird -----\tformula_1",
    "893": "SELECT T2.forename, T2.surname, T1.points FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T1.raceId = T3.raceId WHERE T3.year = 2017 AND T3.name = 'Chinese Grand Prix' ORDER BY T1.points DESC LIMIT 3\t----- bird -----\tformula_1",
    "894": "SELECT T2.forename, T2.surname, T1.name FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.time = (SELECT MIN(time) FROM results);\t----- bird -----\tformula_1",
    "895": "SELECT AVG(T1.milliseconds) FROM lapTimes AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T1.raceId = T3.raceId WHERE T2.forename = 'Sebastian' AND T2.surname = 'Vettel' AND T3.year = 2009 AND T3.name = 'Chinese Grand Prix'\t----- bird -----\tformula_1",
    "896": "SELECT CAST(COUNT(CASE WHEN T2.surname = 'Hamilton' AND T1.year >= 2010 AND T3.position > 1 THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(CASE WHEN T2.surname = 'Hamilton' AND T1.year >= 2010 THEN 1 ELSE NULL END) FROM races AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId INNER JOIN results AS T3 ON T1.raceId = T3.raceId;\t----- bird -----\tformula_1",
    "897": "SELECT T1.forename || ' ' || T1.surname AS driver_name, T1.nationality, AVG(T2.points) AS avg_points FROM drivers AS T1 INNER JOIN driverStandings AS T2 ON T1.driverId = T2.driverId GROUP BY T1.driverId ORDER BY COUNT(T2.wins) DESC LIMIT 1\t----- bird -----\tformula_1",
    "898": "SELECT 2022 - year(dob) + 1 AS age, forename || ' ' || surname AS name FROM drivers WHERE nationality = 'Japanese' ORDER BY dob DESC LIMIT 1\t----- bird -----\tformula_1",
    "899": "SELECT T2.name FROM circuits AS T1 INNER JOIN races AS T2 ON T1.circuitId = T2.circuitId WHERE T2.year BETWEEN 1990 AND 2000 GROUP BY T1.circuitId HAVING COUNT(T2.raceId) = 4;\t----- bird -----\tformula_1",
    "900": "SELECT C.name AS circuit_name, C.location, R.name AS race_name FROM circuits AS C JOIN races AS R ON C.circuitId = R.circuitId WHERE C.country = 'USA' AND R.year = 2006;\t----- bird -----\tformula_1",
    "901": "SELECT R.name, C.name, C.location FROM races AS R INNER JOIN circuits AS C ON R.circuitId = C.circuitId WHERE month(R.date) = 9 AND R.year = 2005;\t----- bird -----\tformula_1",
    "902": "SELECT T1.name FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T2.raceId = T3.raceId WHERE T1.forename = 'Alex' AND T1.surname = 'Yoong' AND T2.position < 10;\t----- bird -----\tformula_1",
    "903": "SELECT COUNT(T1.driverId) FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T1.raceId = T3.raceId INNER JOIN circuits AS T4 ON T3.circuitId = T4.circuitId WHERE T2.forename = 'Michael' AND T2.surname = 'Schumacher' AND T1.position = 1 AND T4.name = 'Sepang International Circuit'\t----- bird -----\tformula_1",
    "904": "SELECT T2.name, T1.year FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T1.driverId = (SELECT driverId FROM drivers WHERE forename = 'Michael' AND surname = 'Schumacher') AND T1.milliseconds = (SELECT MIN(milliseconds) FROM results WHERE driverId = (SELECT driverId FROM drivers WHERE forename = 'Michael' AND surname = 'Schumacher'))\t----- bird -----\tformula_1",
    "905": "SELECT AVG(points) FROM results INNER JOIN drivers ON results.driverId = drivers.driverId WHERE drivers.forename = 'Eddie' AND drivers.surname = 'Irvine' AND results.year = 2000\t----- bird -----\tformula_1",
    "906": "SELECT T4.name AS Race_Name, T5.points AS Points FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T2.raceId = T3.raceId INNER JOIN circuits AS T4 ON T3.circuitId = T4.circuitId INNER JOIN driverStandings AS T5 ON T1.driverId = T5.driverId WHERE T1.forename = 'Lewis' AND T1.surname = 'Hamilton' ORDER BY T3.year LIMIT 1\t----- bird -----\tformula_1",
    "907": "SELECT T1.name, T2.country FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T1.year = 2017 ORDER BY T1.date;\t----- bird -----\tformula_1",
    "908": "SELECT races.name, races.year, circuits.location FROM races INNER JOIN circuits ON races.circuitId = circuits.circuitId WHERE raceId IN (SELECT raceId FROM results GROUP BY raceId HAVING MAX(laps))\t----- bird -----\tformula_1",
    "909": "SELECT CAST(SUM(IIF(T1.country = 'Germany' AND T2.name = 'European Grand Prix', 1, 0)) AS REAL) * 100 / COUNT(T1.raceId) FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T2.country = 'Germany' AND T2.name = 'European Grand Prix'\t----- bird -----\tformula_1",
    "910": "SELECT lat, lng FROM circuits WHERE name = 'Silverstone Circuit'\t----- bird -----\tformula_1",
    "911": "SELECT name FROM circuits WHERE name IN ('Silverstone Circuit', 'Hockenheimring', 'Hungaroring') ORDER BY lat DESC LIMIT 1\t----- bird -----\tformula_1",
    "912": "SELECT circuitRef FROM circuits WHERE name = 'Marina Bay Street Circuit'\t----- bird -----\tformula_1",
    "913": "SELECT country FROM circuits WHERE alt = (SELECT MAX(alt) FROM circuits)\t----- bird -----\tformula_1",
    "914": "SELECT COUNT(driverId) FROM drivers WHERE code IS NULL\t----- bird -----\tformula_1",
    "915": "SELECT nationality FROM drivers WHERE dob = (SELECT MIN(dob) FROM drivers)\t----- bird -----\tformula_1",
    "916": "SELECT surname FROM drivers WHERE nationality = 'Italian'\t----- bird -----\tformula_1",
    "917": "SELECT T2.url FROM drivers AS T1 INNER JOIN constructors AS T2 ON T1.constructorId = T2.constructorId WHERE T1.forename = 'Anthony' AND T1.surname = 'Davidson'\t----- bird -----\tformula_1",
    "918": "SELECT driverRef FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton'\t----- bird -----\tformula_1",
    "919": "SELECT circuits.name FROM races JOIN circuits ON races.circuitId = circuits.circuitId WHERE races.name = 'Spanish Grand Prix' AND races.year = 2009\t----- bird -----\tformula_1",
    "920": "SELECT S.year FROM races AS R INNER JOIN circuits AS C ON R.circuitId = C.circuitId INNER JOIN seasons AS S ON R.year = S.year WHERE C.name = 'Silverstone Circuit'\t----- bird -----\tformula_1",
    "921": "SELECT races.name, races.date, races.time, races.url FROM races INNER JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.name = 'Silverstone Circuit'\t----- bird -----\tformula_1",
    "922": "SELECT T1.time FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T1.year LIKE '201%' AND T2.location = 'Abu Dhabi'\t----- bird -----\tformula_1",
    "923": "SELECT COUNT(T1.raceId) FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T2.country = 'Italy'\t----- bird -----\tformula_1",
    "924": "SELECT T1.date FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T2.name = 'Barcelona-Catalunya'\t----- bird -----\tformula_1",
    "925": "SELECT c.url FROM circuits c INNER JOIN races r ON c.circuitId = r.circuitId INNER JOIN seasons s ON r.year = s.year WHERE r.name = 'Spanish Grand Prix' AND s.year = 2009;\t----- bird -----\tformula_1",
    "926": "SELECT MIN(T1.fastestLapTime) FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T2.forename = 'Lewis' AND T2.surname = 'Hamilton'\t----- bird -----\tformula_1",
    "927": "SELECT T2.forename, T2.surname FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.fastestLapSpeed = (SELECT MAX(fastestLapSpeed) FROM results WHERE fastestLapSpeed IS NOT NULL)\t----- bird -----\tformula_1",
    "928": "SELECT T2.driverRef FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T1.raceId = T3.raceId INNER JOIN circuits AS T4 ON T3.circuitId = T4.circuitId WHERE T3.name = 'Australian Grand Prix' AND T3.year = 2008 AND T1.position = 1\t----- bird -----\tformula_1",
    "929": "SELECT T2.name FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T1.forename = 'Lewis' AND T1.surname = 'Hamilton'\t----- bird -----\tformula_1",
    "930": "SELECT T1.name FROM races AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId INNER JOIN drivers AS T3 ON T2.driverId = T3.driverId WHERE T3.forename = 'Lewis' AND T3.surname = 'Hamilton' ORDER BY T2.rank ASC LIMIT 1\t----- bird -----\tformula_1",
    "931": "SELECT MAX(fastestLapSpeed) FROM results WHERE raceId = (SELECT raceId FROM races WHERE year = 2009 AND name = 'Spanish Grand Prix')\t----- bird -----\tformula_1",
    "932": "SELECT DISTINCT T1.year FROM drivers AS T2 INNER JOIN results AS T1 ON T2.driverId = T1.driverId INNER JOIN races AS T3 ON T1.raceId = T3.raceId WHERE T2.forename = 'Lewis' AND T2.surname = 'Hamilton' AND T3.name = 'Formula_1'\t----- bird -----\tformula_1",
    "933": "SELECT positionOrder FROM results WHERE raceId = (SELECT raceId FROM races WHERE year = 2008 AND name = 'Australian Grand Prix') AND driverId = (SELECT driverId FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton')\t----- bird -----\tformula_1",
    "934": "SELECT forename, surname FROM drivers INNER JOIN results ON drivers.driverId = results.driverId INNER JOIN races ON results.raceId = races.raceId WHERE races.year = 2008 AND results.grid = 4\t----- bird -----\tformula_1",
    "935": "SELECT COUNT(DISTINCT driverId) FROM results WHERE raceId = (SELECT raceId FROM races WHERE name = 'Australian Grand Prix' AND year = 2008) AND time IS NOT NULL\t----- bird -----\tformula_1",
    "936": "SELECT r.fastestLapTime FROM results AS r INNER JOIN races AS ra ON r.raceId = ra.raceId INNER JOIN drivers AS d ON r.driverId = d.driverId WHERE ra.name = 'Australian Grand Prix' AND ra.year = 2008 AND d.forename = 'Lewis' AND d.surname = 'Hamilton'\t----- bird -----\tformula_1",
    "937": "SELECT T1.time FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId INNER JOIN drivers AS T3 ON T1.driverId = T3.driverId INNER JOIN circuits AS T4 ON T2.circuitId = T4.circuitId WHERE T2.year = 2008 AND T4.country = 'Australia' AND T1.position = 2;\t----- bird -----\tformula_1",
    "938": "SELECT D.forename || ' ' || D.surname AS Champion, D.url FROM results AS R JOIN races AS RA ON R.raceId = RA.raceId JOIN drivers AS D ON R.driverId = D.driverId WHERE RA.name = 'Australian Grand Prix' AND RA.year = 2008 AND R.position = 1 AND R.time = 'HH:MM:SS.mmm'\t----- bird -----\tformula_1",
    "939": "SELECT COUNT(T2.driverId) FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T2.raceId = T3.raceId WHERE T1.nationality = 'American' AND T3.year = 2008 AND T3.country = 'Australia';\t----- bird -----\tformula_1",
    "940": "SELECT COUNT(DISTINCT T1.driverId) FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.year = 2008 AND T2.name = 'Australian Grand Prix' AND T1.time IS NOT NULL\t----- bird -----\tformula_1",
    "941": "SELECT SUM(points) FROM results WHERE driverId = (SELECT driverId FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton')\t----- bird -----\tformula_1",
    "942": "SELECT AVG((CAST(SUBSTR(T1.fastestLapTime, 1, 2) AS INTEGER) * 60) + CAST(SUBSTR(T1.fastestLapTime, 4, 2) AS INTEGER) + CAST(SUBSTR(T1.fastestLapTime, 7, 3) AS REAL)) FROM drivers AS T2 INNER JOIN results AS T1 ON T2.driverId = T1.driverId WHERE T2.forename = 'Lewis' AND T2.surname = 'Hamilton'\t----- bird -----\tformula_1",
    "943": "SELECT CAST(COUNT(CASE WHEN time IS NOT NULL THEN raceId ELSE NULL END) AS REAL) / COUNT(raceId) FROM results WHERE raceId IN (SELECT raceId FROM races WHERE name = 'Australian Grand Prix' AND year = 2008)\t----- bird -----\tformula_1",
    "944": "SELECT (CAST((T1.milliseconds - T2.milliseconds) AS REAL) / T2.milliseconds) * 100 FROM results AS T1 INNER JOIN races AS T3 ON T1.raceId = T3.raceId INNER JOIN ( SELECT MAX(milliseconds) AS milliseconds FROM results WHERE raceId = ( SELECT raceId FROM races WHERE year = 2008 AND name = 'Australian Grand Prix' ) ) AS T2 ON T1.raceId = T2.raceId WHERE T3.year = 2008 AND T3.name = 'Australian Grand Prix' AND T1.time IS NOT NULL;\t----- bird -----\tformula_1",
    "945": "SELECT COUNT(*) FROM circuits WHERE location = 'Melbourne' AND country = 'Australia'\t----- bird -----\tformula_1",
    "946": "SELECT lat, lng FROM circuits WHERE country = 'USA'\t----- bird -----\tformula_1",
    "947": "SELECT COUNT(driverId) FROM drivers WHERE nationality = 'British' AND SUBSTR(dob, 1, 4) > 1980\t----- bird -----\tformula_1",
    "948": "SELECT AVG(points) AS avg_points FROM constructorResults AS CR INNER JOIN constructors AS C ON CR.constructorId = C.constructorId WHERE C.nationality = 'British'\t----- bird -----\tformula_1",
    "949": "SELECT constructors.name FROM constructors INNER JOIN constructorStandings ON constructors.constructorId = constructorStandings.constructorId ORDER BY constructorStandings.points DESC LIMIT 1\t----- bird -----\tformula_1",
    "950": "SELECT T2.name FROM constructorStandings AS T1 INNER JOIN constructors AS T2 ON T1.constructorId = T2.constructorId WHERE T1.points = 0 AND T1.raceId = 291\t----- bird -----\tformula_1",
    "951": "SELECT COUNT(T1.constructorId) FROM constructorStandings AS T1 INNER JOIN constructors AS T2 ON T1.constructorId = T2.constructorId INNER JOIN races AS T3 ON T1.raceId = T3.raceId WHERE T2.nationality = 'Japanese' AND T1.points = 0 GROUP BY T1.constructorId HAVING COUNT(T1.raceId) = 2\t----- bird -----\tformula_1",
    "952": "SELECT T2.name FROM constructorStandings AS T1 INNER JOIN constructors AS T2 ON T1.constructorId = T2.constructorId WHERE T1.position = 1\t----- bird -----\tformula_1",
    "953": "SELECT COUNT(DISTINCT constructors.constructorId) FROM constructors INNER JOIN results ON constructors.constructorId = results.constructorId INNER JOIN races ON results.raceId = races.raceId INNER JOIN circuits ON races.circuitId = circuits.circuitId WHERE constructors.nationality = 'French' AND results.laps > 50;\t----- bird -----\tformula_1",
    "954": "SELECT CAST(SUM(CASE WHEN T1.time IS NOT NULL THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.driverId) FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T1.driverId IN (SELECT driverId FROM drivers) AND T2.year BETWEEN 2007 AND 2009 AND T1.driverId IN (SELECT driverId FROM drivers WHERE nationality = 'Japanese')\t----- bird -----\tformula_1",
    "955": "SELECT T2.year, AVG(STRFTIME('%s', T1.time)) FROM results AS T1 JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T1.position = 1 AND T1.time IS NOT NULL GROUP BY T2.year\t----- bird -----\tformula_1",
    "956": "SELECT forename, surname FROM drivers WHERE year(dob) > 1975 AND driverId IN (SELECT driverId FROM results WHERE position = 2)\t----- bird -----\tformula_1",
    "957": "SELECT COUNT(driverId) FROM results WHERE nationality = 'Italian' AND time IS NULL\t----- bird -----\tformula_1",
    "958": "SELECT forename, surname FROM drivers WHERE driverId = (SELECT driverId FROM results WHERE fastestLapTime = (SELECT MIN(fastestLapTime) FROM results WHERE fastestLapTime IS NOT NULL))\t----- bird -----\tformula_1",
    "959": "SELECT MAX(R.fastestLap) AS fastest_lap_number FROM results AS R JOIN races AS RA ON R.raceId = RA.raceId JOIN driverStandings AS DS ON R.driverId = DS.driverId WHERE RA.year = 2009 AND DS.position = 1\t----- bird -----\tformula_1",
    "960": "SELECT AVG(fastestLapSpeed) FROM results INNER JOIN races ON results.raceId = races.raceId WHERE races.name = 'Spanish Grand Prix' AND races.year = 2009\t----- bird -----\tformula_1",
    "961": "SELECT races.name, seasons.year FROM races JOIN seasons ON races.year = seasons.year WHERE races.milliseconds IS NOT NULL ORDER BY races.milliseconds ASC LIMIT 1;\t----- bird -----\tformula_1",
    "962": "SELECT CAST(SUM(CASE WHEN strftime('%Y', dob) < '1985' AND laps > 50 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(driverId) FROM results WHERE strftime('%Y', dob) < '1985' AND raceId IN (SELECT raceId FROM races WHERE year BETWEEN 2000 AND 2005);\t----- bird -----\tformula_1",
    "963": "SELECT COUNT(T2.driverId) FROM drivers AS T1 INNER JOIN lapTimes AS T2 ON T1.driverId = T2.driverId WHERE T1.nationality = 'French' AND T2.time < '02:00.00'\t----- bird -----\tformula_1",
    "964": "SELECT driverRef FROM drivers WHERE nationality = 'America'\t----- bird -----\tformula_1",
    "965": "SELECT raceId FROM races WHERE year = 2009\t----- bird -----\tformula_1",
    "966": "SELECT COUNT(driverId) FROM results WHERE raceId = 18\t----- bird -----\tformula_1",
    "967": "SELECT driverId, nationality FROM drivers WHERE dob = (SELECT MAX(dob) FROM drivers) ORDER BY dob ASC LIMIT 3 SELECT COUNT(driverId) FROM drivers WHERE nationality = 'Dutch' AND driverId IN (SELECT driverId FROM drivers WHERE dob = (SELECT MAX(dob) FROM drivers) ORDER BY dob ASC LIMIT 3)\t----- bird -----\tformula_1",
    "968": "SELECT driverRef FROM drivers WHERE forename = 'Robert' AND surname = 'Kubica'\t----- bird -----\tformula_1",
    "969": "SELECT COUNT(driverId) FROM drivers WHERE nationality = 'Australian' AND strftime('%Y', dob) = '1980'\t----- bird -----\tformula_1",
    "970": "SELECT forename, surname FROM drivers WHERE nationality = 'German' AND year(dob) BETWEEN 1980 AND 1990 ORDER BY time LIMIT 3;\t----- bird -----\tformula_1",
    "971": "SELECT driverRef FROM drivers WHERE nationality = 'German' ORDER BY dob ASC LIMIT 1\t----- bird -----\tformula_1",
    "972": "SELECT driverId, code FROM drivers JOIN results ON drivers.driverId = results.driverId WHERE year(dob) = 1971 AND fastestLapTime IS NOT NULL;\t----- bird -----\tformula_1",
    "973": "SELECT forename, surname FROM drivers WHERE nationality = 'Spanish' AND year(dob) < 1982 ORDER BY time DESC LIMIT 10\t----- bird -----\tformula_1",
    "974": "SELECT T1.year FROM races AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId WHERE T2.fastestLapTime IS NOT NULL ORDER BY T2.fastestLapTime ASC LIMIT 1\t----- bird -----\tformula_1",
    "975": "SELECT T1.year FROM races AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId ORDER BY T2.fastestLapSpeed ASC LIMIT 1\t----- bird -----\tformula_1",
    "976": "SELECT driverId FROM lapTimes WHERE lap = 1 ORDER BY time ASC LIMIT 5\t----- bird -----\tformula_1",
    "977": "SELECT COUNT(*) FROM results WHERE raceId > 50 AND raceId < 100 AND statusId = 2 AND time IS NOT NULL\t----- bird -----\tformula_1",
    "978": "SELECT COUNT(*) AS NumOfRaces, location, lat, lng FROM circuits INNER JOIN races ON circuits.circuitId = races.circuitId WHERE circuits.country = 'Austria' GROUP BY location, lat, lng;\t----- bird -----\tformula_1",
    "979": "SELECT T1.round FROM races AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId WHERE T2.time IS NOT NULL GROUP BY T1.round ORDER BY COUNT(T2.driverId) DESC LIMIT 1\t----- bird -----\tformula_1",
    "980": "SELECT D.driverRef, D.nationality, D.dob FROM drivers AS D INNER JOIN qualifying AS Q ON D.driverId = Q.driverId WHERE Q.raceId = 23 AND Q.q2 IS NOT NULL\t----- bird -----\tformula_1",
    "981": "SELECT T1.year, T1.name, T1.date, T1.time FROM races AS T1 INNER JOIN qualifying AS T2 ON T1.raceId = T2.raceId INNER JOIN drivers AS T3 ON T2.driverId = T3.driverId WHERE T3.dob = (SELECT MAX(year(dob)) FROM drivers) ORDER BY T1.year ASC LIMIT 1\t----- bird -----\tformula_1",
    "982": "SELECT COUNT(*) FROM results INNER JOIN drivers ON results.driverId = drivers.driverId WHERE drivers.nationality = 'American' AND results.statusId = 2\t----- bird -----\tformula_1",
    "983": "SELECT T2.name, T2.url FROM constructorStandings AS T1 INNER JOIN constructors AS T2 ON T1.constructorId = T2.constructorId WHERE T2.nationality = 'Italian' ORDER BY T1.points DESC LIMIT 1;\t----- bird -----\tformula_1",
    "984": "SELECT T2.url FROM constructors AS T1 INNER JOIN constructorStandings AS T2 ON T1.constructorId = T2.constructorId ORDER BY T2.wins DESC LIMIT 1\t----- bird -----\tformula_1",
    "985": "SELECT drivers.forename, drivers.surname FROM drivers INNER JOIN results ON drivers.driverId = results.driverId INNER JOIN races ON results.raceId = races.raceId INNER JOIN lapTimes ON results.raceId = lapTimes.raceId AND results.driverId = lapTimes.driverId WHERE races.name = 'French Grand Prix' AND lapTimes.lap = 3 ORDER BY lapTimes.time DESC LIMIT 1\t----- bird -----\tformula_1",
    "986": "SELECT races.name, results.fastestLapTime, results.milliseconds FROM races INNER JOIN results ON races.raceId = results.raceId WHERE results.fastestLap = 1 ORDER BY results.milliseconds LIMIT 1;\t----- bird -----\tformula_1",
    "987": "SELECT AVG(fastestLapTime) FROM results WHERE raceId = (SELECT raceId FROM races WHERE name = 'United States Grand Prix' AND year = 2006) AND rank < 11;\t----- bird -----\tformula_1",
    "988": "SELECT Drivers.forename, Drivers.surname FROM Drivers JOIN PitStops ON Drivers.driverId = PitStops.driverId WHERE Drivers.nationality = 'German' AND Drivers.dob BETWEEN '1980-01-01' AND '1985-12-31' GROUP BY Drivers.driverId ORDER BY AVG(PitStops.milliseconds) ASC LIMIT 5\t----- bird -----\tformula_1",
    "989": "SELECT D.forename || ' ' || D.surname AS champion, R.time FROM results AS R JOIN races AS RA ON R.raceId = RA.raceId JOIN drivers AS D ON R.driverId = D.driverId WHERE RA.name = 'Canadian Grand Prix' AND RA.year = 2008 AND R.position = 1;\t----- bird -----\tformula_1",
    "990": "SELECT C.constructorRef, C.url FROM constructorResults AS CR JOIN constructors AS C ON CR.constructorId = C.constructorId JOIN races AS R ON CR.raceId = R.raceId WHERE R.name = 'Singapore Grand Prix' AND R.year = 2009 ORDER BY CR.points DESC LIMIT 1\t----- bird -----\tformula_1",
    "991": "SELECT forename || ' ' || surname AS full_name, dob FROM drivers WHERE nationality = 'Austrian' AND strftime('%Y', dob) BETWEEN '1981' AND '1991'\t----- bird -----\tformula_1",
    "992": "SELECT forename || ' ' || surname AS full_name, url, dob FROM drivers WHERE nationality = 'German' AND year(dob) BETWEEN '1971' AND '1985' ORDER BY dob DESC;\t----- bird -----\tformula_1",
    "993": "SELECT location, country, lat, lng FROM circuits WHERE name = 'Hungaroring'\t----- bird -----\tformula_1",
    "994": "SELECT C.name, C.nationality, SUM(R.points) AS total_points FROM constructors AS C INNER JOIN results AS R ON C.constructorId = R.constructorId INNER JOIN races AS RA ON R.raceId = RA.raceId WHERE RA.name = 'Monaco Grand Prix' AND RA.year BETWEEN 1980 AND 2010 GROUP BY C.name, C.nationality ORDER BY total_points DESC LIMIT 1\t----- bird -----\tformula_1",
    "995": "SELECT AVG(T1.points) FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T1.raceId = T3.raceId WHERE T2.forename = 'Lewis' AND T2.surname = 'Hamilton' AND T3.name = 'Turkish Grand Prix'\t----- bird -----\tformula_1",
    "996": "SELECT CAST(COUNT(DISTINCT raceId) AS REAL) / 10 FROM races WHERE date BETWEEN '2000-01-01' AND '2010-12-31'\t----- bird -----\tformula_1",
    "997": "SELECT nationality FROM drivers GROUP BY nationality ORDER BY COUNT(nationality) DESC LIMIT 1\t----- bird -----\tformula_1",
    "998": "SELECT SUM(R.points) FROM Results AS R WHERE R.positionOrder = 91\t----- bird -----\tformula_1",
    "999": "SELECT T1.name FROM races AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId WHERE T2.fastestLapTime = (SELECT MIN(fastestLapTime) FROM results)\t----- bird -----\tformula_1",
    "1000": "SELECT c.name, c.location || ', ' || c.country AS full_location FROM circuits c INNER JOIN races r ON c.circuitId = r.circuitId WHERE r.date = (SELECT MAX(date) FROM races)\t----- bird -----\tformula_1",
    "1001": "SELECT T2.forename, T2.surname FROM qualifying AS T1 JOIN drivers AS T2 ON T1.driverId = T2.driverId JOIN races AS T3 ON T1.raceId = T3.raceId JOIN circuits AS T4 ON T3.circuitId = T4.circuitId WHERE T1.q3 = (SELECT MIN(q3) FROM qualifying WHERE raceId = T1.raceId) AND T3.year = 2008 AND T4.name = 'Marina Bay Street Circuit' AND T1.position = 1;\t----- bird -----\tformula_1",
    "1002": "SELECT T1.forename || ' ' || T1.surname AS full_name, T1.nationality, T3.name FROM drivers AS T1 INNER JOIN ( SELECT T1.driverId, T2.raceId, T2.year, T2.name FROM driverStandings AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T1.position = 1 ) AS T3 ON T1.driverId = T3.driverId ORDER BY T1.dob DESC LIMIT 1\t----- bird -----\tformula_1",
    "1003": "SELECT COUNT(T1.resultId) FROM results T1 INNER JOIN races T2 ON T1.raceId = T2.raceId INNER JOIN drivers T3 ON T1.driverId = T3.driverId WHERE T2.name = 'Canadian Grand Prix' AND T1.statusId = 3 AND T3.driverId = (SELECT driverId FROM (SELECT driverId, COUNT(resultId) AS num_accidents FROM results WHERE statusId = 3 GROUP BY driverId ORDER BY num_accidents DESC LIMIT 1) )\t----- bird -----\tformula_1",
    "1004": "SELECT T1.forename || ' ' || T1.surname AS full_name, COUNT(T2.wins) AS total_wins FROM drivers AS T1 INNER JOIN driverStandings AS T2 ON T1.driverId = T2.driverId WHERE T1.dob = (SELECT MIN(dob) FROM drivers) GROUP BY T1.forename, T1.surname;\t----- bird -----\tformula_1",
    "1005": "SELECT MAX(milliseconds) FROM pitStops\t----- bird -----\tformula_1",
    "1006": "SELECT MIN(milliseconds) AS fastest_lap_time FROM lapTimes\t----- bird -----\tformula_1",
    "1007": "SELECT MAX(duration) FROM pitStops WHERE driverId = (SELECT driverId FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton')\t----- bird -----\tformula_1",
    "1008": "SELECT T1.lap FROM pitStops AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId INNER JOIN drivers AS T3 ON T1.driverId = T3.driverId WHERE T2.year = 2011 AND T2.name = 'Australian Grand Prix' AND T3.forename = 'Lewis' AND T3.surname = 'Hamilton'\t----- bird -----\tformula_1",
    "1009": "SELECT T1.forename, T1.surname, T2.duration FROM drivers AS T1 INNER JOIN pitStops AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T2.raceId = T3.raceId WHERE T3.year = 2011 AND T3.name = 'Australian Grand Prix'\t----- bird -----\tformula_1",
    "1010": "SELECT MIN(T1.time) FROM lapTimes AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T2.forename = 'Lewis' AND T2.surname = 'Hamilton' AND T2.code = 'HAM'\t----- bird -----\tformula_1",
    "1011": "SELECT drivers.forename, drivers.surname FROM drivers JOIN lapTimes ON drivers.driverId = lapTimes.driverId WHERE lapTimes.time = (SELECT MIN(time) FROM lapTimes)\t----- bird -----\tformula_1",
    "1012": "SELECT T3.position FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T2.raceId = T3.raceId WHERE T1.forename = 'Lewis' AND T1.surname = 'Hamilton' AND T2.fastestLapTime = (SELECT MIN(fastestLapTime) FROM results WHERE driverId = T1.driverId)\t----- bird -----\tformula_1",
    "1013": "SELECT MIN(time) AS lap_record FROM lapTimes AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId INNER JOIN circuits AS T3 ON T2.circuitId = T3.circuitId WHERE T3.name = 'Austrian Grand Prix Circuit'\t----- bird -----\tformula_1",
    "1014": "SELECT T2.name, T1.time FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId INNER JOIN ( SELECT circuitId, MIN(milliseconds) AS min_time FROM lapTimes GROUP BY circuitId ) AS T3 ON T1.circuitId = T3.circuitId AND T1.milliseconds = T3.min_time INNER JOIN ( SELECT circuitId FROM circuits WHERE country = 'Italy' ) AS T4 ON T1.circuitId = T4.circuitId\t----- bird -----\tformula_1",
    "1015": "SELECT T1.name FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId INNER JOIN lapTimes AS T3 ON T1.raceId = T3.raceId WHERE T2.name = 'Austrian Grand Prix Circuit' ORDER BY T3.time ASC LIMIT 1\t----- bird -----\tformula_1",
    "1016": "SELECT T1.time, T2.duration FROM lapTimes AS T1 INNER JOIN pitStops AS T2 ON T1.raceId = T2.raceId AND T1.driverId = T2.driverId INNER JOIN races AS T3 ON T1.raceId = T3.raceId INNER JOIN circuits AS T4 ON T3.circuitId = T4.circuitId WHERE T1.time = (SELECT MIN(time) FROM lapTimes WHERE raceId = T1.raceId) AND T4.name = 'Austrian Grand Prix Circuit'\t----- bird -----\tformula_1",
    "1017": "SELECT c.lat, c.lng FROM circuits AS c INNER JOIN races AS r ON c.circuitId = r.circuitId INNER JOIN results AS res ON r.raceId = res.raceId WHERE res.fastestLapTime = '1:29.488'\t----- bird -----\tformula_1",
    "1018": "SELECT AVG(milliseconds) FROM pitStops WHERE driverId = (SELECT driverId FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton')\t----- bird -----\tformula_1",
    "1019": "SELECT AVG(T1.milliseconds) FROM lapTimes AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId INNER JOIN circuits AS T3 ON T2.circuitId = T3.circuitId WHERE T3.country = 'Italy'\t----- bird -----\tformula_1",
    "1020": "SELECT player_api_id FROM Player_Attributes ORDER BY overall_rating DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1021": "SELECT MAX(height) AS tallest_player_height, player_name FROM Player ORDER BY height DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1022": "SELECT preferred_foot FROM Player_Attributes WHERE potential = (SELECT MIN(potential) FROM Player_Attributes)\t----- bird -----\teuropean_football_2",
    "1023": "SELECT COUNT(T1.id) FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.overall_rating >= 60 AND T1.overall_rating < 65 AND T1.defensive_work_rate = 'low'\t----- bird -----\teuropean_football_2",
    "1024": "SELECT player_api_id FROM Player_Attributes ORDER BY crossing DESC LIMIT 5;\t----- bird -----\teuropean_football_2",
    "1025": "SELECT T2.name FROM Match AS T1 INNER JOIN League AS T2 ON T1.league_id = T2.id WHERE T1.season = '2015/2016' GROUP BY T1.league_id ORDER BY SUM(T1.home_team_goal + T1.away_team_goal) DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1026": "SELECT T1.team_long_name FROM Team AS T1 INNER JOIN Match AS T2 ON T1.team_api_id = T2.home_team_api_id WHERE T2.season = '2015/2016' AND (T2.home_team_goal - T2.away_team_goal) < 0 GROUP BY T1.team_long_name ORDER BY COUNT(*) LIMIT 1\t----- bird -----\teuropean_football_2",
    "1027": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id GROUP BY T1.player_name ORDER BY MAX(T2.penalties) DESC LIMIT 10\t----- bird -----\teuropean_football_2",
    "1028": "SELECT T2.team_long_name FROM Match AS T1 INNER JOIN Team AS T2 ON T1.away_team_api_id = T2.team_api_id INNER JOIN League AS T3 ON T1.league_id = T3.id WHERE T3.name = 'Scotland Premier League' AND T1.season = '2009/2010' AND (T1.away_team_goal - T1.home_team_goal) > 0 GROUP BY T1.away_team_api_id ORDER BY COUNT(*) DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1029": "SELECT Team.team_long_name, Team_Attributes.buildUpPlaySpeed FROM Team JOIN Team_Attributes ON Team.team_api_id = Team_Attributes.team_api_id ORDER BY Team_Attributes.buildUpPlaySpeed DESC LIMIT 4;\t----- bird -----\teuropean_football_2",
    "1030": "SELECT L.name FROM League AS L JOIN Match AS M ON L.id = M.league_id WHERE M.season = '2015/2016' GROUP BY L.name ORDER BY SUM(M.home_team_goal = M.away_team_goal) DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1031": "SELECT strftime('%Y', 'now') - strftime('%Y', T2.birthday) AS age FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.sprint_speed >= 97 AND T2.date >= '2013-01-01 00:00:00' AND T2.date <= '2015-12-31 00:00:00'\t----- bird -----\teuropean_football_2",
    "1032": "SELECT L.name AS League_Name, COUNT(M.league_id) AS Matches_Played FROM Match AS M INNER JOIN League AS L ON M.league_id = L.id GROUP BY M.league_id ORDER BY COUNT(M.league_id) DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1033": "SELECT AVG(height) AS avg_height FROM Player WHERE birthday >= '1990-01-01 00:00:00' AND birthday < '1996-01-01 00:00:00'\t----- bird -----\teuropean_football_2",
    "1034": "SELECT player_api_id FROM Player_Attributes WHERE overall_rating > (SELECT AVG(overall_rating) FROM Player_Attributes WHERE SUBSTR(date,1,4) = '2010') AND SUBSTR(date,1,4) = '2010' ORDER BY overall_rating DESC;\t----- bird -----\teuropean_football_2",
    "1035": "SELECT team_fifa_api_id FROM Team_Attributes WHERE buildUpPlaySpeed BETWEEN 51 AND 59;\t----- bird -----\teuropean_football_2",
    "1036": "SELECT T1.team_long_name FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.buildUpPlayPassing > (SELECT AVG(buildUpPlayPassing) FROM Team_Attributes WHERE buildUpPlayPassing IS NOT NULL) AND strftime('%Y', T2.date) = '2012'\t----- bird -----\teuropean_football_2",
    "1037": "SELECT CAST(SUM(CASE WHEN T1.preferred_foot = 'left' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.player_fifa_api_id) FROM Player AS T1 WHERE T1.birthday BETWEEN '1987-01-01 00:00:00' AND '1992-12-31 00:00:00'\t----- bird -----\teuropean_football_2",
    "1038": "SELECT L.name AS League_Name, SUM(M.home_team_goal + M.away_team_goal) AS Total_Goals FROM League AS L JOIN Match AS M ON L.id = M.league_id GROUP BY L.name ORDER BY Total_Goals ASC LIMIT 5\t----- bird -----\teuropean_football_2",
    "1039": "SELECT CAST(SUM(long_shots) AS REAL) / COUNT(player_fifa_api_id) FROM Player_Attributes INNER JOIN Player ON Player_Attributes.player_api_id = Player.player_api_id WHERE player_name = 'Ahmed Samir Farag'\t----- bird -----\teuropean_football_2",
    "1040": "SELECT Player.player_name FROM Player INNER JOIN Player_Attributes ON Player.player_fifa_api_id = Player_Attributes.player_fifa_api_id WHERE Player.height > 180 GROUP BY Player.player_name ORDER BY AVG(Player_Attributes.heading_accuracy) DESC LIMIT 10\t----- bird -----\teuropean_football_2",
    "1041": "SELECT T1.team_long_name FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.buildUpPlayDribblingClass = 'Normal' AND T2.date >= '2014-01-01 00:00:00' AND T2.date <= '2014-01-31 00:00:00' GROUP BY T1.team_long_name HAVING SUM(T2.chanceCreationPassing) / COUNT(T2.id) < AVG(T2.chanceCreationPassing) ORDER BY SUM(T2.chanceCreationPassing) DESC;\t----- bird -----\teuropean_football_2",
    "1042": "SELECT League.name FROM Match JOIN League ON Match.league_id = League.id WHERE Match.season = '2009/2010' GROUP BY League.name HAVING AVG(home_team_goal) > AVG(away_team_goal)\t----- bird -----\teuropean_football_2",
    "1043": "SELECT T1.team_short_name FROM Team AS T1 WHERE T1.team_long_name = 'Queens Park Rangers'\t----- bird -----\teuropean_football_2",
    "1044": "SELECT Player_name FROM Player WHERE substr(birthday,1,4) = '1970' AND substr(birthday,6,2) = '10'\t----- bird -----\teuropean_football_2",
    "1045": "SELECT attacking_work_rate FROM Player_Attributes INNER JOIN Player ON Player_Attributes.player_api_id = Player.player_api_id WHERE Player.player_name = 'Franco Zennaro'\t----- bird -----\teuropean_football_2",
    "1046": "SELECT T2.buildUpPlayPositioningClass FROM Team_Attributes AS T1 INNER JOIN Team AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.team_long_name = 'ADO Den Haag' AND T1.buildUpPlayPositioningClass = 'Free Form'\t----- bird -----\teuropean_football_2",
    "1047": "SELECT ROUND((heading_accuracy * 100.0) / 100.0, 2) AS heading_finishing_rate FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Francois Affolter') AND date = '2014-09-18 00:00:00'\t----- bird -----\teuropean_football_2",
    "1048": "SELECT T1.overall_rating FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Gabriel Tamas' AND strftime('%Y', T1.date) = '2011'\t----- bird -----\teuropean_football_2",
    "1049": "SELECT COUNT(*) FROM Match WHERE season = '2015/2016' AND league_id = (SELECT id FROM League WHERE name = 'Scotland Premier League')\t----- bird -----\teuropean_football_2",
    "1050": "SELECT T1.preferred_foot FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id ORDER BY T2.birthday DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1051": "SELECT player_name FROM Player WHERE potential = (SELECT MAX(potential) FROM Player_Attributes)\t----- bird -----\teuropean_football_2",
    "1052": "SELECT COUNT(*) FROM Player_Attributes WHERE weight < 130 AND attacking_work_rate = 'left'\t----- bird -----\teuropean_football_2",
    "1053": "SELECT T2.team_short_name FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.chanceCreationPassingClass = 'Risky'\t----- bird -----\teuropean_football_2",
    "1054": "SELECT pa.defensive_work_rate FROM Player_Attributes AS pa INNER JOIN Player AS p ON pa.player_api_id = p.player_api_id WHERE p.player_name = 'David Wilson'\t----- bird -----\teuropean_football_2",
    "1055": "SELECT birthday FROM Player WHERE player_api_id = (SELECT player_api_id FROM Player_Attributes ORDER BY overall_rating DESC LIMIT 1)\t----- bird -----\teuropean_football_2",
    "1056": "SELECT name FROM League WHERE country_id = (SELECT id FROM Country WHERE name = 'Netherlands')\t----- bird -----\teuropean_football_2",
    "1057": "SELECT AVG(home_team_goal) FROM Match INNER JOIN Country ON Match.country_id = Country.id WHERE Country.name = 'Poland' AND Match.season = '2010/2011'\t----- bird -----\teuropean_football_2",
    "1058": "SELECT Player.player_name FROM Player_Attributes INNER JOIN Player ON Player_Attributes.player_api_id = Player.player_api_id WHERE Player.height = (SELECT MAX(height) FROM Player) OR Player.height = (SELECT MIN(height) FROM Player) GROUP BY Player.player_name ORDER BY AVG(Player_Attributes.finishing) DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1059": "SELECT player_name FROM Player WHERE height > 180\t----- bird -----\teuropean_football_2",
    "1060": "SELECT COUNT(*) FROM Player WHERE strftime('%Y', birthday) > '1990'\t----- bird -----\teuropean_football_2",
    "1061": "SELECT COUNT(T1.player_name) FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name LIKE 'Adam%' AND T1.weight > 170\t----- bird -----\teuropean_football_2",
    "1062": "SELECT T2.player_name FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.overall_rating > 80 AND strftime('%Y', T1.date) BETWEEN '2008' AND '2010';\t----- bird -----\teuropean_football_2",
    "1063": "SELECT T1.potential FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Aaron Doran'\t----- bird -----\teuropean_football_2",
    "1064": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.preferred_foot = 'left'\t----- bird -----\teuropean_football_2",
    "1065": "SELECT T1.team_long_name FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.buildUpPlaySpeedClass = 'Fast'\t----- bird -----\teuropean_football_2",
    "1066": "SELECT T2.buildUpPlayPassingClass FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.team_short_name = 'CLB'\t----- bird -----\teuropean_football_2",
    "1067": "SELECT team_short_name FROM Team_Attributes INNER JOIN Team ON Team_Attributes.team_api_id = Team.team_api_id WHERE buildUpPlayPassing > 70\t----- bird -----\teuropean_football_2",
    "1068": "SELECT AVG(overall_rating) FROM Player_Attributes WHERE height > 170 AND strftime('%Y', date) BETWEEN '2010' AND '2015'\t----- bird -----\teuropean_football_2",
    "1069": "SELECT player_name FROM Player WHERE height = (SELECT MIN(height) FROM Player)\t----- bird -----\teuropean_football_2",
    "1070": "SELECT T3.name FROM League AS T1 INNER JOIN Country AS T2 ON T1.country_id = T2.id WHERE T1.name = 'Italy Serie A'\t----- bird -----\teuropean_football_2",
    "1071": "SELECT T1.team_short_name FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.buildUpPlaySpeed = 31 AND T2.buildUpPlayDribbling = 53 AND T2.buildUpPlayPassing = 32\t----- bird -----\teuropean_football_2",
    "1072": "SELECT AVG(overall_rating) FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Aaron Doran')\t----- bird -----\teuropean_football_2",
    "1073": "SELECT COUNT(id) FROM Match WHERE league_id = (SELECT id FROM League WHERE name = 'Germany 1. Bundesliga') AND strftime('%Y-%m', date) BETWEEN '2008-08' AND '2008-10'\t----- bird -----\teuropean_football_2",
    "1074": "SELECT team_short_name FROM Team WHERE team_api_id IN (SELECT home_team_api_id FROM Match WHERE home_team_goal = 10)\t----- bird -----\teuropean_football_2",
    "1075": "SELECT player_name FROM Player WHERE balance = (SELECT MAX(balance) FROM Player WHERE potential = 61)\t----- bird -----\teuropean_football_2",
    "1076": "SELECT AVG(T1.ball_control) - (SELECT AVG(T1.ball_control) FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Aaron Appindangoye') AS diff FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Abdou Diallo'\t----- bird -----\teuropean_football_2",
    "1077": "SELECT team_long_name FROM Team WHERE team_short_name = 'GEN'\t----- bird -----\teuropean_football_2",
    "1078": "SELECT Player_Name FROM Player WHERE Player_Name = 'Aaron Lennon' OR Player_Name = 'Abdelaziz Barrada' ORDER BY birthday ASC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1079": "SELECT Player.player_name FROM Player ORDER BY Player.height DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1080": "SELECT COUNT(*) FROM Player_Attributes WHERE preferred_foot = 'left' AND attacking_work_rate = 'low'\t----- bird -----\teuropean_football_2",
    "1081": "SELECT T2.name FROM League AS T1 INNER JOIN Country AS T2 ON T1.country_id = T2.id WHERE T1.name = 'Belgium Jupiler League'\t----- bird -----\teuropean_football_2",
    "1082": "SELECT L.name FROM League AS L INNER JOIN Country AS C ON L.country_id = C.id WHERE C.name = 'Germany'\t----- bird -----\teuropean_football_2",
    "1083": "SELECT Player.player_name FROM Player INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE overall_rating = (SELECT MAX(overall_rating) FROM Player_Attributes)\t----- bird -----\teuropean_football_2",
    "1084": "SELECT COUNT(id) FROM Player_Attributes WHERE strftime('%Y', (SELECT birthday FROM Player WHERE Player.player_api_id = Player_Attributes.player_api_id)) < '1986' AND defensive_work_rate = 'high'\t----- bird -----\teuropean_football_2",
    "1085": "SELECT player_name FROM Player INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE player_name IN ('Alexis', 'Ariel Borysiuk', 'Arouna Kone') ORDER BY crossing DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1086": "SELECT heading_accuracy FROM Player_Attributes INNER JOIN Player ON Player_Attributes.player_api_id = Player.player_api_id WHERE Player.player_name = 'Ariel Borysiuk'\t----- bird -----\teuropean_football_2",
    "1087": "SELECT COUNT(*) FROM Player_Attributes WHERE height > 180 AND volleys > 70;\t----- bird -----\teuropean_football_2",
    "1088": "SELECT player_name FROM Player INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE volleys > 70 AND dribbling > 70;\t----- bird -----\teuropean_football_2",
    "1089": "SELECT COUNT(*) FROM Match AS T1 INNER JOIN Country AS T2 ON T1.country_id = T2.id WHERE T1.season = '2008/2009' AND T2.name = 'Belgium'\t----- bird -----\teuropean_football_2",
    "1090": "SELECT T1.long_passing FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id ORDER BY T2.birthday ASC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1091": "SELECT COUNT(id) FROM Match WHERE league_id = (SELECT id FROM League WHERE name = 'Belgium Jupiler League') AND strftime('%Y', date) = '2009' AND strftime('%m', date) = '04'\t----- bird -----\teuropean_football_2",
    "1092": "SELECT l.name FROM League l JOIN Match m ON l.id = m.league_id WHERE m.season = '2008/2009' GROUP BY l.id ORDER BY COUNT(m.id) DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1093": "SELECT AVG(overall_rating) FROM Player_Attributes WHERE strftime('%Y', birthday) < '1986';\t----- bird -----\teuropean_football_2",
    "1094": "SELECT (CAST((T1.overall_rating - T2.overall_rating) AS REAL) * 100 / T2.overall_rating) FROM Player AS P1 INNER JOIN Player_Attributes AS T1 ON P1.player_api_id = T1.player_api_id INNER JOIN Player AS P2 INNER JOIN Player_Attributes AS T2 ON P2.player_api_id = T2.player_api_id WHERE P1.player_name = 'Ariel Borysiuk' AND P2.player_name = 'Paulin Puel';\t----- bird -----\teuropean_football_2",
    "1095": "SELECT AVG(buildUpPlaySpeed) FROM Team_Attributes WHERE team_fifa_api_id = (SELECT team_fifa_api_id FROM Team WHERE team_long_name = 'Heart of Midlothian')\t----- bird -----\teuropean_football_2",
    "1096": "SELECT AVG(T1.overall_rating) FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Pietro Marino'\t----- bird -----\teuropean_football_2",
    "1097": "SELECT SUM(T1.crossing) AS Total_Crossing_Score FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Aaron Lennox'\t----- bird -----\teuropean_football_2",
    "1098": "SELECT MAX(T2.chanceCreationPassing), T2.chanceCreationPassingClass FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.team_long_name = 'Ajax'\t----- bird -----\teuropean_football_2",
    "1099": "SELECT preferred_foot FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Abdou Diallo')\t----- bird -----\teuropean_football_2",
    "1100": "SELECT MAX(T1.overall_rating) FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Dorlan Pabon'\t----- bird -----\teuropean_football_2",
    "1101": "SELECT AVG(away_team_goal) FROM Match AS T1 INNER JOIN Team AS T2 ON T1.away_team_api_id = T2.team_api_id WHERE T2.team_long_name = 'Parma' AND T1.country_id = (SELECT id FROM Country WHERE name = 'Italy')\t----- bird -----\teuropean_football_2",
    "1102": "SELECT Player.player_name FROM Player INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE Player_Attributes.overall_rating = 77 AND Player_Attributes.date = '2016-06-23' ORDER BY Player.birthday ASC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1103": "SELECT T1.overall_rating FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Aaron Mooy' AND T1.date = '2016-02-04 00:00:00'\t----- bird -----\teuropean_football_2",
    "1104": "SELECT T1.potential FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Francesco Parravicini' AND T1.date = '2010-08-30 00:00:00'\t----- bird -----\teuropean_football_2",
    "1105": "SELECT T1.attacking_work_rate FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Francesco Migliore' AND T1.date = '2015-05-01 00:00:00'\t----- bird -----\teuropean_football_2",
    "1106": "SELECT T1.defensive_work_rate FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Kevin Berigaud' AND T1.date = '2013-02-22 00:00:00'\t----- bird -----\teuropean_football_2",
    "1107": "SELECT T1.date FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Kevin Constant' AND T1.crossing = (SELECT MAX(crossing) FROM Player_Attributes WHERE player_api_id = T2.player_api_id)\t----- bird -----\teuropean_football_2",
    "1108": "SELECT T2.buildUpPlaySpeedClass FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.team_long_name = 'Willem II' AND T2.date = '2012-02-22 00:00:00'\t----- bird -----\teuropean_football_2",
    "1109": "SELECT T2.buildUpPlayDribblingClass FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.team_short_name = 'LEI' AND T2.date = '2015-09-10 00:00:00'\t----- bird -----\teuropean_football_2",
    "1110": "SELECT T2.buildUpPlayPassingClass FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.team_long_name = 'FC Lorient' AND T2.date = '2010-02-22'\t----- bird -----\teuropean_football_2",
    "1111": "SELECT T2.chanceCreationPassingClass FROM Team_Attributes AS T1 INNER JOIN Team AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.team_long_name = 'PEC Zwolle' AND T1.date = '2013-09-20 00:00:00'\t----- bird -----\teuropean_football_2",
    "1112": "SELECT T2.chanceCreationCrossingClass FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.team_long_name = 'Hull City' AND T2.date = '2010-02-22 00:00:00'\t----- bird -----\teuropean_football_2",
    "1113": "SELECT T2.defenceAggressionClass FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.team_long_name = 'Hannover 96' AND T2.date = '2015-09-10 00:00:00'\t----- bird -----\teuropean_football_2",
    "1114": "SELECT AVG(overall_rating) FROM Player_Attributes WHERE player_api_id IN (SELECT player_api_id FROM Player WHERE player_name = 'Marko Arnautovic') AND date BETWEEN '2007-02-22 00:00:00' AND '2016-04-21 00:00:00'\t----- bird -----\teuropean_football_2",
    "1115": "SELECT (CAST((SELECT T1.overall_rating FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Landon Donovan' AND T1.date = '2013-07-12') - (SELECT T1.overall_rating FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Jordan Bowery' AND T1.date = '2013-07-12') AS REAL) / (SELECT T1.overall_rating FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Landon Donovan' AND T1.date = '2013-07-12') * 100) as percentage;\t----- bird -----\teuropean_football_2",
    "1116": "SELECT Player.player_name FROM Player ORDER BY Player.height DESC LIMIT 5;\t----- bird -----\teuropean_football_2",
    "1117": "SELECT player_api_id FROM Player ORDER BY weight DESC LIMIT 10\t----- bird -----\teuropean_football_2",
    "1118": "SELECT player_name FROM Player WHERE (strftime('%Y', CURRENT_TIMESTAMP) - strftime('%Y', birthday)) > 34\t----- bird -----\teuropean_football_2",
    "1119": "SELECT COUNT(home_team_goal) FROM Match WHERE home_player_1 IN (SELECT player_api_id FROM Player WHERE player_name = 'Aaron Lennon') OR home_player_2 IN (SELECT player_api_id FROM Player WHERE player_name = 'Aaron Lennon') OR home_player_3 IN (SELECT player_api_id FROM Player WHERE player_name = 'Aaron Lennon') OR home_player_4 IN (SELECT player_api_id FROM Player WHERE player_name = 'Aaron Lennon') OR home_player_5 IN (SELECT player_api_id FROM Player WHERE player_name = 'Aaron Lennon') OR home_player_6 IN (SELECT player_api_id FROM Player WHERE player_name = 'Aaron Lennon') OR home_player_7 IN (SELECT player_api_id FROM Player WHERE player_name = 'Aaron Lennon') OR home_player_8 IN (SELECT player_api_id FROM Player WHERE player_name = 'Aaron Lennon') OR home_player_9 IN (SELECT player_api_id FROM Player WHERE player_name = 'Aaron Lennon') OR home_player_\t----- bird -----\teuropean_football_2",
    "1120": "SELECT SUM(T2.away_team_goal) FROM Match AS T1 INNER JOIN Player AS T2 ON T1.away_player_1 = T2.player_api_id OR T1.away_player_2 = T2.player_api_id OR T1.away_player_3 = T2.player_api_id OR T1.away_player_4 = T2.player_api_id OR T1.away_player_5 = T2.player_api_id OR T1.away_player_6 = T2.player_api_id OR T1.away_player_7 = T2.player_api_id OR T1.away_player_8 = T2.player_api_id OR T1.away_player_9 = T2.player_api_id OR T1.away_player_10 = T2.player_api_id OR T1.away_player_11 = T2.player_api_id WHERE T2.player_name = 'Daan Smith' OR T2.player_name = 'Filipe Ferreira'\t----- bird -----\teuropean_football_2",
    "1121": "SELECT SUM(T1.home_team_goal) FROM Match AS T1 INNER JOIN Player AS T2 ON T1.home_player_1 = T2.player_api_id OR T1.home_player_2 = T2.player_api_id OR T1.home_player_3 = T2.player_api_id OR T1.home_player_4 = T2.player_api_id OR T1.home_player_5 = T2.player_api_id OR T1.home_player_6 = T2.player_api_id OR T1.home_player_7 = T2.player_api_id OR T1.home_player_8 = T2.player_api_id OR T1.home_player_9 = T2.player_api_id OR T1.home_player_10 = T2.player_api_id OR T1.home_player_11 = T2.player_api_id WHERE strftime('%Y', CURRENT_TIMESTAMP) - strftime('%Y', T2.birthday) < 31\t----- bird -----\teuropean_football_2",
    "1122": "SELECT Player.player_name FROM Player INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE overall_rating = (SELECT MAX(overall_rating) FROM Player_Attributes) LIMIT 10\t----- bird -----\teuropean_football_2",
    "1123": "SELECT player_name FROM Player WHERE player_api_id IN (SELECT player_api_id FROM Player_Attributes WHERE potential = (SELECT MAX(potential) FROM Player_Attributes))\t----- bird -----\teuropean_football_2",
    "1124": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.attacking_work_rate = 'high'\t----- bird -----\teuropean_football_2",
    "1125": "SELECT Player.player_name FROM Player INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE Player_Attributes.finishing = 1 ORDER BY (julianday('now') - julianday(Player.birthday)) DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1126": "SELECT player_name FROM Player WHERE player_api_id IN (SELECT player_api_id FROM Player_Attributes WHERE player_fifa_api_id IN (SELECT player_fifa_api_id FROM Country WHERE name = 'Belgium'))\t----- bird -----\teuropean_football_2",
    "1127": "SELECT T2.player_name, T3.name FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id INNER JOIN Country AS T3 ON T2.country_id = T3.id WHERE T1.vision >= 90;\t----- bird -----\teuropean_football_2",
    "1128": "SELECT Country.name FROM Player INNER JOIN Country ON Player.country_id = Country.id GROUP BY Country.name ORDER BY AVG(Player.weight) DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1129": "SELECT T1.team_long_name FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.buildUpPlaySpeedClass = 'Slow'\t----- bird -----\teuropean_football_2",
    "1130": "SELECT T2.team_short_name FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.chanceCreationPassingClass = 'Safe'\t----- bird -----\teuropean_football_2",
    "1131": "SELECT AVG(T6.height) FROM Country AS T1 INNER JOIN League AS T2 ON T1.id = T2.country_id INNER JOIN Match AS T3 ON T2.id = T3.league_id INNER JOIN Team AS T4 ON T3.home_team_api_id = T4.team_api_id INNER JOIN Player AS T5 ON T4.team_api_id = T5.player_api_id WHERE T1.name = 'Italy'\t----- bird -----\teuropean_football_2",
    "1132": "SELECT player_name FROM Player WHERE height > 180 ORDER BY player_name LIMIT 3;\t----- bird -----\teuropean_football_2",
    "1133": "SELECT COUNT(player_api_id) AS cnt FROM Player WHERE player_name LIKE 'Aaron%' AND birthday > '1990'\t----- bird -----\teuropean_football_2",
    "1134": "SELECT T1.jumping - T2.jumping FROM Player_Attributes AS T1 JOIN Player_Attributes AS T2 ON T1.id = 6 AND T2.id = 23;\t----- bird -----\teuropean_football_2",
    "1135": "SELECT id FROM Player_Attributes WHERE potential = (SELECT MIN(potential) FROM Player_Attributes) AND preferred_foot = 'right' ORDER BY potential ASC LIMIT 3\t----- bird -----\teuropean_football_2",
    "1136": "SELECT COUNT(*) FROM Player_Attributes WHERE crossing = (SELECT MAX(crossing) FROM Player_Attributes) AND preferred_foot = 'left'\t----- bird -----\teuropean_football_2",
    "1137": "SELECT (COUNT(*) * 100) / (SELECT COUNT(*) FROM Player_Attributes WHERE stamina > 80 AND strength > 80) FROM Player_Attributes WHERE stamina > 80 AND strength > 80;\t----- bird -----\teuropean_football_2",
    "1138": "SELECT T2.name FROM League AS T1 INNER JOIN Country AS T2 ON T1.country_id = T2.id WHERE T1.name = 'Poland Ekstraklasa'\t----- bird -----\teuropean_football_2",
    "1139": "SELECT home_team_goal, away_team_goal FROM Match WHERE date LIKE '2008-09-24%' AND league_id = (SELECT id FROM League WHERE name = 'Belgian Jupiler League')\t----- bird -----\teuropean_football_2",
    "1140": "SELECT T1.sprint_speed, T1.agility, T1.acceleration FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Alexis Blin'\t----- bird -----\teuropean_football_2",
    "1141": "SELECT T2.`buildUpPlaySpeedClass` FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.`team_api_id` = T2.`team_api_id` WHERE T1.`team_long_name` = 'KSV Cercle Brugge'\t----- bird -----\teuropean_football_2",
    "1142": "SELECT COUNT(*) FROM Match WHERE league_id = (SELECT id FROM League WHERE name = 'Italian Serie A') AND season = '2015/2016'\t----- bird -----\teuropean_football_2",
    "1143": "SELECT MAX(home_team_goal) FROM Match WHERE league_id = (SELECT id FROM League WHERE name = 'Netherlands Eredivisie') AND home_team_goal IS NOT NULL;\t----- bird -----\teuropean_football_2",
    "1144": "SELECT T1.finishing, T1.curve FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.weight = (SELECT MAX(weight) FROM Player)\t----- bird -----\teuropean_football_2",
    "1145": "SELECT T2.team_long_name FROM Match AS T1 INNER JOIN Team AS T2 ON T1.home_team_api_id = T2.team_api_id WHERE T1.season = '2015/2016' GROUP BY T2.team_long_name ORDER BY COUNT(T1.id) DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1146": "SELECT T2.team_long_name FROM Match AS T1 INNER JOIN Team AS T2 ON T2.team_api_id = T1.away_team_api_id ORDER BY T1.away_team_goal DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1147": "SELECT player_name FROM Player INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE overall_rating = (SELECT MAX(overall_rating) FROM Player_Attributes)\t----- bird -----\teuropean_football_2",
    "1148": "SELECT CAST(SUM(CASE WHEN T1.height < 180 AND T2.overall_rating > 70 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id;\t----- bird -----\teuropean_football_2",
    "1149": "SELECT COUNT(T1.ID) AS inPatientMale, COUNT(T2.ID) AS outPatientMale, (COUNT(T1.ID) - COUNT(T2.ID)) AS deviation FROM Patient AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND T1.Admission = '+' AND T2.SEX = 'M' AND T2.Admission = '-'\t----- bird -----\tthrombosis_prediction",
    "1150": "SELECT CAST(SUM(CASE WHEN strftime('%Y', Birthday) > '1930' AND SEX = 'F' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(ID) FROM Patient;\t----- bird -----\tthrombosis_prediction",
    "1151": "SELECT CAST(SUM(CASE WHEN Admission = '+' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM Patient WHERE strftime('%Y', Birthday) BETWEEN '1930' AND '1940';\t----- bird -----\tthrombosis_prediction",
    "1152": "SELECT CAST((SELECT COUNT(ID) FROM Patient WHERE Diagnosis = 'SLE' AND Admission = '+') AS REAL) / (SELECT COUNT(ID) FROM Patient WHERE Diagnosis = 'SLE' AND Admission = '-')\t----- bird -----\tthrombosis_prediction",
    "1153": "SELECT Diagnosis, Date FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.ID = '30609'\t----- bird -----\tthrombosis_prediction",
    "1154": "SELECT T2.SEX, T2.Birthday, T1.`Examination Date`, T1.Symptoms FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.ID = 163109;\t----- bird -----\tthrombosis_prediction",
    "1155": "SELECT T1.ID, T2.SEX, T2.Birthday FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.LDH > 500\t----- bird -----\tthrombosis_prediction",
    "1156": "SELECT T1.ID, ROUND((strftime('%Y', 'now') - strftime('%Y', T1.Birthday)) - (strftime('%m-%d', 'now') < strftime('%m-%d', T1.Birthday)) AS Age FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.RVVT = '+';\t----- bird -----\tthrombosis_prediction",
    "1157": "SELECT T1.ID, T1.SEX, T1.Diagnosis FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.Thrombosis = 2;\t----- bird -----\tthrombosis_prediction",
    "1158": "SELECT Patient.ID, Patient.SEX, Patient.Birthday, Laboratory.`T-CHO` FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE strftime('%Y', Patient.Birthday) = '1937' AND Laboratory.`T-CHO` >= 250;\t----- bird -----\tthrombosis_prediction",
    "1159": "SELECT T1.ID, T2.SEX, T2.Diagnosis FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.ALB < 3.5\t----- bird -----\tthrombosis_prediction",
    "1160": "SELECT SUM(CASE WHEN T1.SEX = 'F' AND (T2.TP < 6.0 OR T2.TP > 8.5) THEN 1 ELSE 0 END) / COUNT(DISTINCT T1.ID) * 100 AS percentage FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID\t----- bird -----\tthrombosis_prediction",
    "1161": "SELECT AVG(aCL IgG) AS averageAntiCardiolipinIgGConcentration FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T2.Admission = '+' AND (strftime('%Y', 'now') - strftime('%Y', T2.Birthday)) >= 50\t----- bird -----\tthrombosis_prediction",
    "1162": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 WHERE T1.SEX = 'F' AND strftime('%Y', T1.Description) = '1997' AND T1.Admission = '-'\t----- bird -----\tthrombosis_prediction",
    "1163": "SELECT YEAR(`First Date`) - YEAR(Birthday) AS age FROM Patient ORDER BY age ASC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1164": "SELECT COUNT(T1.ID) FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.Thrombosis = 1 AND T2.SEX = 'F' AND YEAR(T1.`Examination Date`) = 1997\t----- bird -----\tthrombosis_prediction",
    "1165": "SELECT MAX(year(Birthday)) - MIN(year(Birthday)) AS age_gap FROM Patient WHERE ID IN (SELECT ID FROM Laboratory WHERE TG >= 200)\t----- bird -----\tthrombosis_prediction",
    "1166": "SELECT Symptoms, Diagnosis FROM Patient INNER JOIN Examination ON Patient.ID = Examination.ID WHERE Birthday = (SELECT MIN(Birthday) FROM Patient)\t----- bird -----\tthrombosis_prediction",
    "1167": "SELECT COUNT(DISTINCT L.ID) / 12 AS avg_male_patients_per_month FROM Laboratory AS L INNER JOIN Patient AS P ON L.ID = P.ID WHERE P.SEX = 'M' AND L.Date BETWEEN '1998-01-01' AND '1998-12-31'\t----- bird -----\tthrombosis_prediction",
    "1168": "SELECT MAX(P.Birthday) AS OldestPatientBirthday, L.Date AS LabWorkCompletionDate, (YEAR(P.`First Date`) - YEAR(P.Birthday)) AS AgeAtHospitalArrival FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE P.Diagnosis = 'SJS' ORDER BY P.Birthday DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1169": "SELECT SUM(CASE WHEN T1.SEX = 'M' AND T2.UA <= 8.0 THEN 1 ELSE 0 END) / SUM(CASE WHEN T1.SEX = 'F' AND T2.UA <= 6.5 THEN 1 ELSE 0 END) AS ratio FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID;\t----- bird -----\tthrombosis_prediction",
    "1170": "SELECT COUNT(DISTINCT ID) FROM Patient WHERE ID NOT IN (SELECT ID FROM Examination WHERE (julianday(`Examination Date`) - julianday(`First Date`)) <= 365)\t----- bird -----\tthrombosis_prediction",
    "1171": "SELECT COUNT(DISTINCT T1.ID) FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE year(T2.Birthday) > 1975 AND year(T2.Birthday) < 1993 AND `Examination Date` BETWEEN '1990-01-01' AND '1993-12-31'\t----- bird -----\tthrombosis_prediction",
    "1172": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND T2.`T-BIL` > 2.0;\t----- bird -----\tthrombosis_prediction",
    "1173": "SELECT Diagnosis FROM Examination WHERE `Examination Date` BETWEEN '1985-01-01' AND '1995-12-31' GROUP BY Diagnosis ORDER BY COUNT(Diagnosis) DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1174": "SELECT CAST(SUM(SUBTRACT('1999', year(T1.Birthday))) AS REAL) / COUNT(T1.ID) AS average_age FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID INNER JOIN Laboratory AS T3 ON T1.ID = T3.ID WHERE T3.Date BETWEEN '1991-10-01' AND '1991-10-30'\t----- bird -----\tthrombosis_prediction",
    "1175": "SELECT SUBTRACT(year(`Examination Date`), year(Birthday)) AS Age, Diagnosis FROM Examination INNER JOIN Patient ON Examination.ID = Patient.ID WHERE HGB = (SELECT MAX(HGB) FROM Examination)\t----- bird -----\tthrombosis_prediction",
    "1176": "SELECT T1.ANA FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.`Examination Date` = '1996-12-02' AND T1.ID = 3605340;\t----- bird -----\tthrombosis_prediction",
    "1177": "SELECT T1.`T-CHO` FROM Laboratory AS T1 WHERE T1.ID = 2927464 AND T1.Date = '1995-09-04' AND T1.`T-CHO` < 250\t----- bird -----\tthrombosis_prediction",
    "1178": "SELECT SEX FROM Patient WHERE ID = (SELECT ID FROM Examination WHERE Diagnosis = 'AORTITIS' ORDER BY `Examination Date` LIMIT 1)\t----- bird -----\tthrombosis_prediction",
    "1179": "SELECT T1.`aCL IgM` FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T2.Diagnosis = 'SLE' AND T2.Description = '1994-02-19' AND T1.`Examination Date` = '1993-11-12'\t----- bird -----\tthrombosis_prediction",
    "1180": "SELECT T1.SEX FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.GPT = 9 AND T2.Date = '1992-06-12'\t----- bird -----\tthrombosis_prediction",
    "1181": "SELECT SUBTRACT('1992', year(Birthday)) AS Age FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE L.UA = '8.4' AND L.Date = '1991-10-21'\t----- bird -----\tthrombosis_prediction",
    "1182": "SELECT COUNT(T2.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.`First Date` = '1991-06-13' AND T1.Diagnosis = 'SJS' AND T2.Date BETWEEN '1995-01-01' AND '1995-12-31'\t----- bird -----\tthrombosis_prediction",
    "1183": "SELECT T1.Diagnosis FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.Diagnosis = 'SLE' AND T2.`Examination Date` = '1997-01-27' AND T1.`First Date` = (SELECT MIN(`First Date`) FROM Patient)\t----- bird -----\tthrombosis_prediction",
    "1184": "SELECT T1.Symptoms FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T2.Birthday = '1959-03-01' AND T1.`Examination Date` = '1993-09-27'\t----- bird -----\tthrombosis_prediction",
    "1185": "SELECT CAST(((SUM(CASE WHEN p.Birthday = '1959-02-18' AND l.Date LIKE '1981-11-%' THEN l.`T-CHO` ELSE 0 END) - SUM(CASE WHEN p.Birthday = '1959-02-18' AND l.Date LIKE '1981-12-%' THEN l.`T-CHO` ELSE 0 END)) AS REAL) FROM Patient p INNER JOIN Laboratory l ON p.ID = l.ID\t----- bird -----\tthrombosis_prediction",
    "1186": "SELECT T1.ID FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.Diagnosis = 'Behcet' AND YEAR(T2.`Examination Date`) >= 1997 AND YEAR(T2.`Examination Date`) < 1998\t----- bird -----\tthrombosis_prediction",
    "1187": "SELECT COUNT(DISTINCT T1.ID) FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.\"Examination Date\" BETWEEN '1987-07-06' AND '1996-01-31' AND T2.GPT > 30 AND T2.ALB < 4\t----- bird -----\tthrombosis_prediction",
    "1188": "SELECT COUNT(ID) FROM Patient WHERE SEX = 'F' AND YEAR(Birthday) = 1964 AND Admission = '+'; SELECT ID FROM Patient WHERE SEX = 'F' AND YEAR(Birthday) = 1964 AND Admission = '+';\t----- bird -----\tthrombosis_prediction",
    "1189": "SELECT COUNT(T1.ID) FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.Thrombosis = 2 AND T1.`ANA Pattern` = 'S' AND T1.`aCL IgM` > (SELECT 1.2 * AVG(`aCL IgM`) FROM Examination)\t----- bird -----\tthrombosis_prediction",
    "1190": "SELECT CAST(COUNT(CASE WHEN UA <= 6.5 AND `U-PRO` > 0 AND `U-PRO` < 30 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(CASE WHEN `U-PRO` > 0 AND `U-PRO` < 30 THEN 1 ELSE 0 END) AS percentage FROM Laboratory\t----- bird -----\tthrombosis_prediction",
    "1191": "SELECT CAST(COUNT(CASE WHEN T2.SEX = 'M' AND strftime('%Y', T2.`First Date`) = '1981' AND T2.Diagnosis = 'BEHCET' THEN 1 END) AS REAL) * 100 / COUNT(CASE WHEN strftime('%Y', T2.`First Date`) = '1981' THEN 1 END) FROM Patient AS T2\t----- bird -----\tthrombosis_prediction",
    "1192": "SELECT T1.ID, T1.SEX, T1.Birthday FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Admission = '-' AND T2.Date LIKE '1991-10%' AND T2.`T-BIL` < 2.0\t----- bird -----\tthrombosis_prediction",
    "1193": "SELECT COUNT(*) FROM Patient WHERE SEX = 'F' AND Birthday BETWEEN '1980-01-01' AND '1989-12-31' AND ID NOT IN (SELECT ID FROM Examination WHERE `ANA Pattern` = 'P')\t----- bird -----\tthrombosis_prediction",
    "1194": "SELECT T1.SEX FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID INNER JOIN Laboratory AS T3 ON T1.ID = T3.ID WHERE T2.Diagnosis = 'PSS' AND T3.CRP = '2+' AND T3.CRE = 1 AND T3.LDH = 123\t----- bird -----\tthrombosis_prediction",
    "1195": "SELECT AVG(ALB) FROM Laboratory AS L INNER JOIN Patient AS P ON L.ID = P.ID WHERE P.SEX = 'F' AND L.PLT > 400 AND P.Diagnosis = 'SLE'\t----- bird -----\tthrombosis_prediction",
    "1196": "SELECT Symptoms FROM Examination WHERE Diagnosis = 'SLE' GROUP BY Symptoms ORDER BY COUNT(*) DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1197": "SELECT T1.`First Date`, T1.Diagnosis FROM Patient AS T1 WHERE T1.ID = 48473\t----- bird -----\tthrombosis_prediction",
    "1198": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'F' AND T2.Diagnosis = 'APS'\t----- bird -----\tthrombosis_prediction",
    "1199": "SELECT COUNT(DISTINCT L.ID) FROM Laboratory AS L INNER JOIN Patient AS P ON L.ID = P.ID WHERE YEAR(L.Date) = '1997' AND (L.TP < 6 OR L.TP > 8.5)\t----- bird -----\tthrombosis_prediction",
    "1200": "SELECT CAST(SUM(CASE WHEN T1.Symptoms LIKE '%thrombocytopenia%' THEN 1 ELSE 0 END) AS REAL) * 100 / SUM(CASE WHEN T1.Diagnosis LIKE '%SLE%' THEN 1 ELSE 0 END) FROM Examination AS T1\t----- bird -----\tthrombosis_prediction",
    "1201": "SELECT CAST(SUM(CASE WHEN T2.SEX = 'F' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.ID) AS percentage FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE strftime('%Y', T1.Birthday) = '1980' AND T2.Diagnosis = 'RA';\t----- bird -----\tthrombosis_prediction",
    "1202": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND T2.`Examination Date` BETWEEN '1995' AND '1997' AND T1.Diagnosis = 'BEHCET' AND T1.Admission = '-'\t----- bird -----\tthrombosis_prediction",
    "1203": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'F' AND T2.WBC < 3.5\t----- bird -----\tthrombosis_prediction",
    "1204": "SELECT julianday(Examination.`Examination Date`) - julianday(Patient.`First Date`) AS days FROM Examination INNER JOIN Patient ON Examination.ID = Patient.ID WHERE Patient.ID = 821298\t----- bird -----\tthrombosis_prediction",
    "1205": "SELECT CASE WHEN L.UA > 8.0 AND P.SEX = 'M' THEN 'Above normal range' WHEN L.UA > 6.5 AND P.SEX = 'F' THEN 'Above normal range' ELSE 'Within normal range' END AS UricAcidRange FROM Laboratory AS L INNER JOIN Patient AS P ON L.ID = P.ID WHERE L.ID = 57266;\t----- bird -----\tthrombosis_prediction",
    "1206": "SELECT Date FROM Laboratory WHERE ID = 48473 AND GOT >= 60\t----- bird -----\tthrombosis_prediction",
    "1207": "SELECT P.SEX, P.Birthday FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE L.GOT < 60 AND STRFTIME('%Y', L.Date) = '1994'\t----- bird -----\tthrombosis_prediction",
    "1208": "SELECT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND T2.GPT > 60;\t----- bird -----\tthrombosis_prediction",
    "1209": "SELECT T1.Diagnosis FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.GPT > 60 ORDER BY T1.Birthday ASC;\t----- bird -----\tthrombosis_prediction",
    "1210": "SELECT AVG(LDH) FROM Laboratory WHERE LDH < 500\t----- bird -----\tthrombosis_prediction",
    "1211": "SELECT T1.ID, (CAST(strftime('%Y', 'now') AS INTEGER) - CAST(strftime('%Y', T1.Birthday) AS INTEGER)) AS age FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.LDH BETWEEN 600 AND 800;\t----- bird -----\tthrombosis_prediction",
    "1212": "SELECT T1.ID, T1.Admission FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.ALP < 300 GROUP BY T1.ID, T1.Admission\t----- bird -----\tthrombosis_prediction",
    "1213": "SELECT ID FROM Patient WHERE Birthday = '1982-04-01' AND ID IN (SELECT ID FROM Laboratory WHERE ALP < 300)\t----- bird -----\tthrombosis_prediction",
    "1214": "SELECT T1.ID, T2.SEX, T2.Birthday FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.TP < 6.0;\t----- bird -----\tthrombosis_prediction",
    "1215": "SELECT ABS(TP - 8.5) AS deviation FROM Laboratory WHERE ID IN (SELECT ID FROM Patient WHERE SEX = 'F') AND TP > 8.5\t----- bird -----\tthrombosis_prediction",
    "1216": "SELECT * FROM Patient WHERE SEX = 'M' AND (ALB <= 3.5 OR ALB >= 5.5) ORDER BY Birthday DESC\t----- bird -----\tthrombosis_prediction",
    "1217": "SELECT P.ID, P.Birthday, L.ALB, CASE WHEN strftime('%Y', P.Birthday) = '1982' AND L.ALB BETWEEN 3.5 AND 5.5 THEN 'Albumin within normal range' ELSE 'Albumin not within normal range' END AS Albumin_Status FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID;\t----- bird -----\tthrombosis_prediction",
    "1218": "SELECT CAST(SUM(CASE WHEN L.UA > 8.0 AND P.SEX = 'M' THEN 1 WHEN L.UA > 6.5 AND P.SEX = 'F' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(DISTINCT P.ID) FROM Laboratory AS L INNER JOIN Patient AS P ON L.ID = P.ID WHERE P.SEX = 'F'\t----- bird -----\tthrombosis_prediction",
    "1219": "SELECT AVG(UA) FROM Laboratory WHERE UA < 8.0 AND SEX = 'M' OR UA < 6.5 AND SEX = 'F' AND (ID, Date) IN (SELECT ID, MAX(Date) FROM Laboratory GROUP BY ID)\t----- bird -----\tthrombosis_prediction",
    "1220": "SELECT T1.ID, T2.SEX, T2.Birthday FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.UN = 29\t----- bird -----\tthrombosis_prediction",
    "1221": "SELECT T1.ID, T1.SEX, T1.Birthday FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.UN < 30 AND T2.RA = 'RA'\t----- bird -----\tthrombosis_prediction",
    "1222": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND T2.CRE >= 1.5\t----- bird -----\tthrombosis_prediction",
    "1223": "SELECT CASE WHEN SUM(CASE WHEN SEX = 'M' AND CRE >= 1.5 THEN 1 ELSE 0 END) > SUM(CASE WHEN SEX = 'F' AND CRE >= 1.5 THEN 1 ELSE 0 END) THEN 'True' ELSE 'False' END FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID;\t----- bird -----\tthrombosis_prediction",
    "1224": "SELECT T1.ID, T2.SEX, T2.Birthday FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.`T-BIL` = (SELECT MAX(`T-BIL`) FROM Laboratory)\t----- bird -----\tthrombosis_prediction",
    "1225": "SELECT P.SEX, COUNT(*) FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE L.`T-BIL` >= 2.0 GROUP BY P.SEX\t----- bird -----\tthrombosis_prediction",
    "1226": "SELECT T1.ID, T2.`T-CHO` FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Birthday = (SELECT MIN(Birthday) FROM Patient) ORDER BY T2.`T-CHO` DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1227": "SELECT SUM(YEAR(date('now')) - YEAR(P.birthday)) / COUNT(P.ID) AS average_age FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE P.SEX = 'Male' AND L.`T-CHO` >= 250;\t----- bird -----\tthrombosis_prediction",
    "1228": "SELECT P.ID, P.Diagnosis FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE L.TG > 300;\t----- bird -----\tthrombosis_prediction",
    "1229": "SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.TG >= 200 AND (strftime('%Y', 'now') - strftime('%Y', T1.Birthday)) > 50\t----- bird -----\tthrombosis_prediction",
    "1230": "SELECT DISTINCT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Admission = '-' AND T2.CPK < 250;\t----- bird -----\tthrombosis_prediction",
    "1231": "SELECT COUNT(Patient.ID) FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE year(Birthday) BETWEEN '1936' AND '1956' AND SEX = 'M' AND CPK >= 250\t----- bird -----\tthrombosis_prediction",
    "1232": "SELECT T1.ID, T1.SEX, (strftime('%Y', 'now') - strftime('%Y', T1.Birthday)) AS age FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.GLU >= 180 AND T2.`T-CHO` < 250\t----- bird -----\tthrombosis_prediction",
    "1233": "SELECT T1.ID, T2.GLU FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE year(T1.Description) >= 1991 AND T2.GLU < 180\t----- bird -----\tthrombosis_prediction",
    "1234": "SELECT T1.ID, T2.SEX, T2.Birthday FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.WBC <= 3.5 OR T1.WBC >= 9.0 GROUP BY T2.SEX, T2.Birthday ORDER BY T2.Birthday ASC;\t----- bird -----\tthrombosis_prediction",
    "1235": "SELECT Patient.ID, (strftime('%Y', 'now') - strftime('%Y', Patient.Birthday)) AS age, Patient.Diagnosis FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.RBC < 3.5;\t----- bird -----\tthrombosis_prediction",
    "1236": "SELECT T1.ID, T1.SEX, T1.Birthday, T1.Admission FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'F' AND (strftime('%Y', 'now') - strftime('%Y', T1.Birthday)) >= 50 AND (T2.RBC <= 3.5 OR T2.RBC >= 6.0) AND T1.Admission = '+'\t----- bird -----\tthrombosis_prediction",
    "1237": "SELECT T1.ID, T1.SEX FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Admission = '-' AND T2.HGB < 10\t----- bird -----\tthrombosis_prediction",
    "1238": "SELECT T1.ID, T2.SEX FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Diagnosis = 'SLE' AND T1.Birthday = (SELECT MIN(Birthday) FROM Patient WHERE Diagnosis = 'SLE') AND T2.HGB > 10 AND T2.HGB < 17\t----- bird -----\tthrombosis_prediction",
    "1239": "SELECT Patient.ID, year(current_timestamp) - year(Birthday) AS age FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE HCT >= 52 GROUP BY Patient.ID HAVING COUNT(Patient.ID) > 2;\t----- bird -----\tthrombosis_prediction",
    "1240": "SELECT AVG(HCT) FROM Laboratory WHERE Date LIKE '1991%' AND HCT < 29\t----- bird -----\tthrombosis_prediction",
    "1241": "SELECT COUNT(CASE WHEN T1.PLT < 100 THEN T1.ID END) AS Lower_than_normal, COUNT(CASE WHEN T1.PLT > 400 THEN T1.ID END) AS Higher_than_normal FROM Laboratory AS T1 WHERE T1.PLT < 100 OR T1.PLT > 400\t----- bird -----\tthrombosis_prediction",
    "1242": "SELECT T1.ID, T1.SEX, T1.Birthday FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.Date LIKE '1984%' AND (YEAR(CURRENT_TIMESTAMP) - YEAR(T1.Birthday)) < 50 AND T2.PLT BETWEEN 100 AND 400;\t----- bird -----\tthrombosis_prediction",
    "1243": "SELECT CAST(SUM(CASE WHEN T1.SEX = 'F' AND T2.PT >= 14 THEN 1 ELSE 0 END) AS REAL) * 100 / SUM(CASE WHEN T2.PT >= 14 THEN 1 ELSE 0 END) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE strftime('%Y', 'now') - strftime('%Y', T1.Birthday) > 55\t----- bird -----\tthrombosis_prediction",
    "1244": "SELECT T1.ID, T1.SEX, T1.Birthday, T1.`First Date`, T1.Admission, T1.Diagnosis FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE year(T1.`First Date`) > 1992 AND T2.PT < 14\t----- bird -----\tthrombosis_prediction",
    "1245": "SELECT COUNT(*) FROM Examination WHERE `Examination Date` > '1997-01-01' AND APTT < 45\t----- bird -----\tthrombosis_prediction",
    "1246": "SELECT COUNT(DISTINCT T1.ID) FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.APTT > 45 AND T1.Thrombosis = 3\t----- bird -----\tthrombosis_prediction",
    "1247": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Sex = 'M' AND T2.WBC BETWEEN 3.5 AND 9.0 AND (T2.FG <= 150 OR T2.FG >= 450)\t----- bird -----\tthrombosis_prediction",
    "1248": "SELECT COUNT(DISTINCT p.ID) FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE p.Birthday > '1980-01-01' AND l.FG NOT BETWEEN 150 AND 450;\t----- bird -----\tthrombosis_prediction",
    "1249": "SELECT T1.Diagnosis FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.`U-PRO` >= 30;\t----- bird -----\tthrombosis_prediction",
    "1250": "SELECT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.`U-PRO` > 0 AND T2.`U-PRO` < 30 AND T1.Diagnosis = 'SLE'\t----- bird -----\tthrombosis_prediction",
    "1251": "SELECT COUNT(DISTINCT T1.ID) FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.`aCL IgG` < 900 AND T1.Symptoms = 'abortion'\t----- bird -----\tthrombosis_prediction",
    "1252": "SELECT COUNT(Patient.ID) FROM Patient INNER JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.`aCL IgG` BETWEEN 900 AND 2000 AND Examination.Symptoms IS NOT NULL\t----- bird -----\tthrombosis_prediction",
    "1253": "SELECT T1.Diagnosis FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.IGA BETWEEN 80 AND 500 ORDER BY T2.IGA DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1254": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.IGA BETWEEN 80 AND 500 AND T1.`First Date` > '1990-01-01'\t----- bird -----\tthrombosis_prediction",
    "1255": "SELECT Diagnosis FROM Examination WHERE `aCL IgM` NOT BETWEEN 40 AND 400 GROUP BY Diagnosis ORDER BY COUNT(Diagnosis) DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1256": "SELECT COUNT(*) FROM Patient p LEFT JOIN Laboratory l ON p.ID = l.ID WHERE (CRP LIKE '+' OR CRP LIKE '-' OR CRP < 1.0) AND Description IS NULL\t----- bird -----\tthrombosis_prediction",
    "1257": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.CRP NOT IN('+-', '-') AND T2.CRP >= 1.0 AND (YEAR(CURDATE()) - YEAR(T1.Birthday)) < 18\t----- bird -----\tthrombosis_prediction",
    "1258": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.RA IN ('-', '+-') AND T2.KCT = '+'\t----- bird -----\tthrombosis_prediction",
    "1259": "SELECT Diagnosis FROM Patient WHERE Birthday > '1995-01-01' AND RA IN ('-', '+-')\t----- bird -----\tthrombosis_prediction",
    "1260": "SELECT ID FROM Patient WHERE ID IN ( SELECT ID FROM Laboratory WHERE RF < 20 ) AND (YEAR(CURDATE()) - YEAR(Birthday)) > 60\t----- bird -----\tthrombosis_prediction",
    "1261": "SELECT COUNT(*) FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE RF < 20 AND Thrombosis = '0'\t----- bird -----\tthrombosis_prediction",
    "1262": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID INNER JOIN Laboratory AS T3 ON T1.ID = T3.ID WHERE T3.C3 > 35 AND T2.`ANA Pattern` = 'P'\t----- bird -----\tthrombosis_prediction",
    "1263": "SELECT Patient.ID FROM Examination JOIN Patient ON Examination.ID = Patient.ID WHERE Examination.HCT < 29 OR Examination.HCT > 52 ORDER BY Examination.`aCL IgA` DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1264": "SELECT COUNT(DISTINCT T1.ID) FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID INNER JOIN Laboratory AS T3 ON T1.ID = T3.ID WHERE T1.Thrombosis = 1 AND T3.C4 > 10\t----- bird -----\tthrombosis_prediction",
    "1265": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE (T2.RNP = '-' OR T2.RNP = '+-') AND T1.Admission = '+'\t----- bird -----\tthrombosis_prediction",
    "1266": "SELECT P.Birthday FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE L.RNP NOT IN ('-', '+-') ORDER BY P.Birthday DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1267": "SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.SM = '0' AND T2.Thrombosis = '1'\t----- bird -----\tthrombosis_prediction",
    "1268": "SELECT ID FROM Patient WHERE ID IN (SELECT ID FROM Laboratory WHERE SM NOT IN ('-', '+-')) ORDER BY Birthday DESC LIMIT 3\t----- bird -----\tthrombosis_prediction",
    "1269": "SELECT ID FROM Examination WHERE `Examination Date` >= '1997-01-01' AND SC170 IN ('-', '+-');\t----- bird -----\tthrombosis_prediction",
    "1270": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.SC170 IN ('-', '+-') AND T1.Sex = 'M' AND T2.Symptoms = 'vertigo'\t----- bird -----\tthrombosis_prediction",
    "1271": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.SSA IN ('-', '+-') AND strftime('%Y', T1.`First Date`) < '1990'\t----- bird -----\tthrombosis_prediction",
    "1272": "SELECT MIN(`First Date`) AS ID FROM Patient WHERE ID IN (SELECT ID FROM Laboratory WHERE SSA NOT IN ('-', '+-'))\t----- bird -----\tthrombosis_prediction",
    "1273": "SELECT COUNT(DISTINCT T1.ID) FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.SSB IN ('-', '+-') AND T1.Diagnosis = 'SLE'\t----- bird -----\tthrombosis_prediction",
    "1274": "SELECT COUNT(DISTINCT T1.ID) FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.SSB IN ('-', '+-') AND T1.Symptoms IS NOT NULL\t----- bird -----\tthrombosis_prediction",
    "1275": "SELECT COUNT(Patient.ID) FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE CENTROMEA IN ('-', '+-') AND SSB IN ('-', '+-') AND SEX = 'M'\t----- bird -----\tthrombosis_prediction",
    "1276": "SELECT T2.Diagnosis FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.DNA >= 8;\t----- bird -----\tthrombosis_prediction",
    "1277": "SELECT COUNT(DISTINCT ID) FROM Patient WHERE ID IN (SELECT ID FROM Laboratory WHERE DNA < 8 AND Description IS NULL)\t----- bird -----\tthrombosis_prediction",
    "1278": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.`DNA-II` < 8 AND T1.Admission = '+'\t----- bird -----\tthrombosis_prediction",
    "1279": "SELECT CAST(COUNT(CASE WHEN T1.GOT >= 60 AND T1.Diagnosis = 'SLE' THEN T1.ID END) AS REAL) * 100 / COUNT(CASE WHEN T1.GOT >= 60 THEN T1.ID END) FROM Laboratory AS T1\t----- bird -----\tthrombosis_prediction",
    "1280": "SELECT COUNT(*) FROM Laboratory AS L INNER JOIN Patient AS P ON L.ID = P.ID WHERE P.Sex = 'M' AND L.GOT < 60\t----- bird -----\tthrombosis_prediction",
    "1281": "SELECT MIN(Birthday) FROM Patient WHERE ID IN (SELECT ID FROM Laboratory WHERE GOT >= 60)\t----- bird -----\tthrombosis_prediction",
    "1282": "SELECT Birthday FROM Patient WHERE ID IN ( SELECT ID FROM Laboratory WHERE GPT < 60 ORDER BY GPT DESC LIMIT 3 )\t----- bird -----\tthrombosis_prediction",
    "1283": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.GOT < 60 AND T1.SEX = 'M'\t----- bird -----\tthrombosis_prediction",
    "1284": "SELECT MIN(`First Date`) FROM Patient WHERE ID = (SELECT ID FROM Laboratory WHERE LDH < 500 ORDER BY LDH DESC LIMIT 1)\t----- bird -----\tthrombosis_prediction",
    "1285": "SELECT MAX(`First Date`) FROM Patient WHERE ID IN (SELECT ID FROM Laboratory WHERE LDH >= 500)\t----- bird -----\tthrombosis_prediction",
    "1286": "SELECT COUNT(Patient.ID) FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.ALP >= 300 AND Patient.Admission = '+'\t----- bird -----\tthrombosis_prediction",
    "1287": "SELECT COUNT(*) FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE P.Admission = '-' AND L.ALP < 300\t----- bird -----\tthrombosis_prediction",
    "1288": "SELECT T1.Diagnosis FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.TP < 6.0\t----- bird -----\tthrombosis_prediction",
    "1289": "SELECT COUNT(*) FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE P.Diagnosis = 'SJS' AND L.TP > 6.0 AND L.TP < 8.5\t----- bird -----\tthrombosis_prediction",
    "1290": "SELECT `Examination Date` FROM Examination WHERE ALB > 3.5 AND ALB < 5.5 ORDER BY ALB DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1291": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Sex = 'M' AND T2.ALB > 3.5 AND T2.ALB < 5.5 AND T2.TP > 6.0 AND T2.TP < 8.5\t----- bird -----\tthrombosis_prediction",
    "1292": "SELECT `aCL IgG`, `aCL IgM`, `aCL IgA` FROM Examination WHERE ID IN ( SELECT ID FROM Patient WHERE SEX = 'F' AND ID IN ( SELECT ID FROM Laboratory WHERE UA = ( SELECT MAX(UA) FROM Laboratory WHERE UA <= 6.50 ) ) )\t----- bird -----\tthrombosis_prediction",
    "1293": "SELECT MAX(ANA) FROM Examination WHERE ID IN (SELECT ID FROM Laboratory WHERE CRE < 1.5)\t----- bird -----\tthrombosis_prediction",
    "1294": "SELECT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.CRE < 1.5 AND T2.`aCL IgA` = (SELECT MAX(`aCL IgA`) FROM Laboratory)\t----- bird -----\tthrombosis_prediction",
    "1295": "SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID INNER JOIN Examination AS T3 ON T1.ID = T3.ID WHERE T2.`T-BIL` >= 2.0 AND T3.`ANA Pattern` LIKE '%P%'\t----- bird -----\tthrombosis_prediction",
    "1296": "SELECT ANA FROM Examination WHERE ID IN ( SELECT ID FROM Laboratory WHERE `T-BIL` < 2.0 ORDER BY `T-BIL` DESC LIMIT 1 )\t----- bird -----\tthrombosis_prediction",
    "1297": "SELECT COUNT(*) FROM Examination INNER JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE `T-CHO` >= 250 AND KCT = '-'\t----- bird -----\tthrombosis_prediction",
    "1298": "SELECT COUNT(T1.ID) FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.`T-CHO` < 250 AND T1.`ANA Pattern` = 'P'\t----- bird -----\tthrombosis_prediction",
    "1299": "SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.TG < 200 AND T1.Symptoms IS NOT NULL\t----- bird -----\tthrombosis_prediction",
    "1300": "SELECT Diagnosis FROM Patient WHERE ID = ( SELECT ID FROM Laboratory WHERE TG < 200 ORDER BY TG DESC LIMIT 1 )\t----- bird -----\tthrombosis_prediction",
    "1301": "SELECT T1.ID FROM Patient AS T1 LEFT JOIN Examination AS T2 ON T1.ID = T2.ID LEFT JOIN Laboratory AS T3 ON T1.ID = T3.ID WHERE T2.Thrombosis = 0 AND T3.CPK < 250\t----- bird -----\tthrombosis_prediction",
    "1302": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.CPK < 250 AND (T2.KCT = '+' OR T2.RVVT = '+' OR T2.LAC = '+')\t----- bird -----\tthrombosis_prediction",
    "1303": "SELECT MIN(Birthday) FROM Patient WHERE ID IN (SELECT ID FROM Laboratory WHERE GLU > 180)\t----- bird -----\tthrombosis_prediction",
    "1304": "SELECT COUNT(*) FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE GLU < 180 AND Thrombosis = 0\t----- bird -----\tthrombosis_prediction",
    "1305": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Admission = '+' AND T2.WBC >= 3.5 AND T2.WBC <= 9.0\t----- bird -----\tthrombosis_prediction",
    "1306": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID INNER JOIN Laboratory AS T3 ON T1.ID = T3.ID WHERE T1.Diagnosis = 'SLE' AND T3.WBC >= 3.5 AND T3.WBC <= 9.0\t----- bird -----\tthrombosis_prediction",
    "1307": "SELECT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE (T2.RBC <= 3.5 OR T2.RBC >= 6.0) AND T1.Admission = '-'\t----- bird -----\tthrombosis_prediction",
    "1308": "SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.PLT > 100 AND T2.PLT < 400 AND T1.Diagnosis IS NOT NULL\t----- bird -----\tthrombosis_prediction",
    "1309": "SELECT T2.PLT FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.PLT > 100 AND T2.PLT < 400 AND T1.Diagnosis = 'MCTD'\t----- bird -----\tthrombosis_prediction",
    "1310": "SELECT AVG(T2.PT) AS avg_prothrombin_time FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Sex = 'M' AND T2.PT < 14\t----- bird -----\tthrombosis_prediction",
    "1311": "SELECT COUNT(DISTINCT T1.ID) FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE (T1.Thrombosis = 2 OR T1.Thrombosis = 1) AND T2.PT < 14\t----- bird -----\tthrombosis_prediction",
    "1312": "SELECT major_name FROM member INNER JOIN major ON member.link_to_major = major.major_id WHERE first_name = 'Angela' AND last_name = 'Sanders'\t----- bird -----\tstudent_club",
    "1313": "SELECT COUNT(T1.member_id) FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.college = 'College of Engineering'\t----- bird -----\tstudent_club",
    "1314": "SELECT T1.first_name, T1.last_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.department = 'Art and Design'\t----- bird -----\tstudent_club",
    "1315": "SELECT COUNT(*) FROM attendance WHERE link_to_event = (SELECT event_id FROM event WHERE event_name = 'Women\\'s Soccer') AND link_to_member IN (SELECT member_id FROM member WHERE link_to_major = (SELECT major_id FROM major WHERE major_name = 'Student_Club'))\t----- bird -----\tstudent_club",
    "1316": "SELECT phone FROM member WHERE member_id IN ( SELECT link_to_member FROM attendance WHERE link_to_event = ( SELECT event_id FROM event WHERE event_name = 'Women\\'s Soccer' ) )\t----- bird -----\tstudent_club",
    "1317": "SELECT COUNT(T1.member_id) FROM member AS T1 INNER JOIN attendance AS T2 ON T1.member_id = T2.link_to_member INNER JOIN event AS T3 ON T2.link_to_event = T3.event_id WHERE T1.link_to_major = 'Student_Club' AND T3.event_name = 'Women''s Soccer' AND T1.t_shirt_size = 'Medium'\t----- bird -----\tstudent_club",
    "1318": "SELECT E.event_name FROM event E INNER JOIN attendance A ON E.event_id = A.link_to_event INNER JOIN member M ON A.link_to_member = M.member_id INNER JOIN major MA ON M.link_to_major = MA.major_id WHERE MA.major_name = 'Student_Club' GROUP BY E.event_name ORDER BY COUNT(A.link_to_event) DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1319": "SELECT major.college FROM member INNER JOIN major ON member.link_to_major = major.major_id WHERE member.position = 'Vice President' AND major.department = 'Student_Club'\t----- bird -----\tstudent_club",
    "1320": "SELECT T1.event_name FROM event AS T1 INNER JOIN attendance AS T2 ON T1.event_id = T2.link_to_event INNER JOIN member AS T3 ON T2.link_to_member = T3.member_id WHERE T3.first_name = 'Maya' AND T3.last_name = 'Mclean'\t----- bird -----\tstudent_club",
    "1321": "SELECT COUNT(*) FROM attendance AS A INNER JOIN event AS E ON A.link_to_event = E.event_id INNER JOIN member AS M ON A.link_to_member = M.member_id WHERE M.first_name = 'Sacha' AND M.last_name = 'Harrison' AND YEAR(E.event_date) = 2019\t----- bird -----\tstudent_club",
    "1322": "SELECT COUNT(*) FROM event WHERE event_id IN (SELECT link_to_event FROM attendance WHERE link_to_member IN (SELECT member_id FROM member WHERE link_to_major = 'Student_Club') GROUP BY link_to_event HAVING COUNT(link_to_member) > 10) AND type = 'Meeting'\t----- bird -----\tstudent_club",
    "1323": "SELECT event_name FROM event WHERE event_id IN (SELECT link_to_event FROM attendance GROUP BY link_to_event HAVING COUNT(link_to_member) > 20)\t----- bird -----\tstudent_club",
    "1324": "SELECT CAST(COUNT(event_id) AS REAL) / COUNT(DISTINCT event_name) FROM event WHERE type = 'Meeting' AND strftime('%Y', event_date) = '2020'\t----- bird -----\tstudent_club",
    "1325": "SELECT expense_description FROM expense WHERE cost = (SELECT MAX(cost) FROM expense)\t----- bird -----\tstudent_club",
    "1326": "SELECT COUNT(*) FROM member WHERE link_to_major IN (SELECT major_id FROM major WHERE major_name = 'Environmental Engineering')\t----- bird -----\tstudent_club",
    "1327": "SELECT T2.first_name, T2.last_name FROM attendance AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id INNER JOIN event AS T3 ON T1.link_to_event = T3.event_id WHERE T3.event_name = 'Laugh Out Loud'\t----- bird -----\tstudent_club",
    "1328": "SELECT last_name FROM member WHERE link_to_major = (SELECT major_id FROM major WHERE major_name = 'Law and Constitutional Studies')\t----- bird -----\tstudent_club",
    "1329": "SELECT T3.county FROM zip_code AS T1 INNER JOIN member AS T2 ON T1.zip_code = T2.zip INNER JOIN major AS T3 ON T2.link_to_major = T3.major_id WHERE T2.first_name = 'Sherri' AND T2.last_name = 'Ramsey'\t----- bird -----\tstudent_club",
    "1330": "SELECT m.college FROM major AS m INNER JOIN member AS mem ON m.major_id = mem.link_to_major WHERE mem.first_name = 'Tyler' AND mem.last_name = 'Hewitt';\t----- bird -----\tstudent_club",
    "1331": "SELECT SUM(amount) FROM income WHERE link_to_member IN (SELECT member_id FROM member WHERE position = 'Vice President')\t----- bird -----\tstudent_club",
    "1332": "SELECT SUM(e.spent) FROM budget b JOIN event e ON b.link_to_event = e.event_id WHERE b.category = 'Food' AND e.event_name = 'September Meeting'\t----- bird -----\tstudent_club",
    "1333": "SELECT T3.city, T3.state FROM member AS T1 INNER JOIN employees AS T2 ON T1.position = 'President' INNER JOIN zip_code AS T3 ON T1.zip = T3.zip_code WHERE T1.link_to_major = 'Student_Club'\t----- bird -----\tstudent_club",
    "1334": "SELECT T1.first_name, T1.last_name FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T2.state = 'Illinois'\t----- bird -----\tstudent_club",
    "1335": "SELECT SUM(spent) FROM budget WHERE category = 'Advertisement' AND link_to_event = (SELECT event_id FROM event WHERE event_name = 'September Meeting') AND link_to_event IN (SELECT link_to_event FROM attendance WHERE link_to_member IN (SELECT member_id FROM member WHERE link_to_major = (SELECT major_id FROM major WHERE major_name = 'Student_Club')))\t----- bird -----\tstudent_club",
    "1336": "SELECT T2.department FROM major AS T1 INNER JOIN member AS T2 ON T1.major_id = T2.link_to_major WHERE T2.first_name = 'Pierce' AND T2.last_name = 'Guidi'\t----- bird -----\tstudent_club",
    "1337": "SELECT SUM(amount) FROM budget WHERE link_to_event = (SELECT event_id FROM event WHERE event_name = 'October Speaker')\t----- bird -----\tstudent_club",
    "1338": "SELECT expense_id, expense_description, approved FROM expense WHERE link_to_event = (SELECT event_id FROM event WHERE event_name = 'October Meeting' AND event_date = '2019-10-08');\t----- bird -----\tstudent_club",
    "1339": "SELECT AVG(cost) FROM expense WHERE link_to_member = (SELECT member_id FROM member WHERE first_name = 'Elijah' AND last_name = 'Allen') AND (MONTH(expense_date) = 9 OR MONTH(expense_date) = 10)\t----- bird -----\tstudent_club",
    "1340": "SELECT SUM(CASE WHEN strftime('%Y', T1.event_date) = '2019' THEN T2.spent ELSE 0 END) - SUM(CASE WHEN strftime('%Y', T1.event_date) = '2020' THEN T2.spent ELSE 0 END) FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T1.type = 'Student_Club'\t----- bird -----\tstudent_club",
    "1341": "SELECT location FROM event WHERE event_name = 'Spring Budget Review'\t----- bird -----\tstudent_club",
    "1342": "SELECT T2.cost FROM expense AS T1 INNER JOIN budget AS T2 ON T1.link_to_budget = T2.budget_id INNER JOIN event AS T3 ON T2.link_to_event = T3.event_id WHERE T1.expense_description = 'Posters' AND T3.event_date = '2019-09-04'\t----- bird -----\tstudent_club",
    "1343": "SELECT remaining FROM budget WHERE category = 'Food' ORDER BY amount DESC LIMIT 1\t----- bird -----\tstudent_club",
    "1344": "SELECT T1.notes FROM income AS T1 WHERE T1.source = 'Fundraising' AND T1.date_received = '2019-09-14'\t----- bird -----\tstudent_club",
    "1345": "SELECT COUNT(major_id) FROM major WHERE college = 'College of Humanities and Social Sciences'\t----- bird -----\tstudent_club",
    "1346": "SELECT phone FROM member WHERE first_name = 'Carlo' AND last_name = 'Jacobs'\t----- bird -----\tstudent_club",
    "1347": "SELECT T2.county FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T1.first_name = 'Adela' AND T1.last_name = 'O\\'Gallagher'\t----- bird -----\tstudent_club",
    "1348": "SELECT COUNT(budget_id) FROM budget WHERE event_status = 'November Meeting' AND remaining < 0\t----- bird -----\tstudent_club",
    "1349": "SELECT SUM(amount) FROM budget WHERE link_to_event = (SELECT event_id FROM event WHERE event_name = 'September Speaker')\t----- bird -----\tstudent_club",
    "1350": "SELECT T1.status FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event INNER JOIN expense AS T3 ON T2.budget_id = T3.link_to_budget WHERE T3.expense_description = 'Post Cards, Posters' AND T3.expense_date = '2019-8-20'\t----- bird -----\tstudent_club",
    "1351": "SELECT major_name FROM major INNER JOIN member ON major.major_id = member.link_to_major WHERE member.first_name = 'Brent' AND member.last_name = 'Thomason'\t----- bird -----\tstudent_club",
    "1352": "SELECT COUNT(*) FROM member WHERE link_to_major = (SELECT major_id FROM major WHERE major_name = 'Human Development and Family Studies') AND t_shirt_size = 'Large'\t----- bird -----\tstudent_club",
    "1353": "SELECT T3.type FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T1.first_name = 'Christof' AND T1.last_name = 'Nielson'\t----- bird -----\tstudent_club",
    "1354": "SELECT major_name FROM member WHERE position = 'Vice President'\t----- bird -----\tstudent_club",
    "1355": "SELECT T3.state FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code INNER JOIN state AS T3 ON T2.state = T3.short_state WHERE T1.first_name = 'Sacha' AND T1.last_name = 'Harrison'\t----- bird -----\tstudent_club",
    "1356": "SELECT T2.department FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.position = 'President'\t----- bird -----\tstudent_club",
    "1357": "SELECT date_received FROM income WHERE link_to_member = (SELECT member_id FROM member WHERE first_name = 'Connor' AND last_name = 'Hilton') AND source = 'Dues'\t----- bird -----\tstudent_club",
    "1358": "SELECT first_name, last_name FROM member INNER JOIN income ON member.member_id = income.link_to_member WHERE source = 'Dues' ORDER BY date_received ASC LIMIT 1\t----- bird -----\tstudent_club",
    "1359": "SELECT SUM(CASE WHEN category = 'Advertisement' AND event_name = 'Yearly Kickoff' THEN amount ELSE 0 END) / SUM(CASE WHEN event_name = 'October Meeting' AND category = 'Advertisement' THEN amount ELSE 0 END) AS num FROM budget;\t----- bird -----\tstudent_club",
    "1360": "SELECT CAST(SUM(CASE WHEN T2.category = 'Parking' THEN T1.amount ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.event_name = 'November Speaker';\t----- bird -----\tstudent_club",
    "1361": "SELECT SUM(cost) AS total_cost_of_pizzas FROM expense WHERE expense_description = 'Pizza'\t----- bird -----\tstudent_club",
    "1362": "SELECT COUNT(DISTINCT city) FROM zip_code WHERE county = 'Orange County' AND state = 'Virginia'\t----- bird -----\tstudent_club",
    "1363": "SELECT department FROM major WHERE college = 'College of Humanities and Social Sciences'\t----- bird -----\tstudent_club",
    "1364": "SELECT T1.city, T1.county, T1.state FROM zip_code AS T1 INNER JOIN member AS T2 ON T1.zip_code = T2.zip WHERE T2.first_name = 'Amy' AND T2.last_name = 'Firth'\t----- bird -----\tstudent_club",
    "1365": "SELECT T1.expense_description FROM expense AS T1 INNER JOIN budget AS T2 ON T1.link_to_budget = T2.budget_id WHERE T2.remaining = (SELECT MIN(remaining) FROM budget)\t----- bird -----\tstudent_club",
    "1366": "SELECT m.first_name, m.last_name FROM member m JOIN attendance a ON m.member_id = a.link_to_member JOIN event e ON a.link_to_event = e.event_id WHERE e.event_name = 'October Meeting';\t----- bird -----\tstudent_club",
    "1367": "SELECT major.college FROM major INNER JOIN member ON major.major_id = member.link_to_major GROUP BY major.college ORDER BY COUNT(major.college) DESC LIMIT 1\t----- bird -----\tstudent_club",
    "1368": "SELECT T2.major_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.phone = '809-555-3360'\t----- bird -----\tstudent_club",
    "1369": "SELECT event_name FROM event WHERE event_id IN (SELECT link_to_event FROM budget WHERE amount = (SELECT MAX(amount) FROM budget))\t----- bird -----\tstudent_club",
    "1370": "SELECT T1.expense_description FROM expense AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.position = 'Vice President'\t----- bird -----\tstudent_club",
    "1371": "SELECT COUNT(T1.link_to_member) FROM attendance AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.event_name = 'Women''s Soccer'\t----- bird -----\tstudent_club",
    "1372": "SELECT T1.date_received FROM income AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.first_name = 'Casey' AND T2.last_name = 'Mason'\t----- bird -----\tstudent_club",
    "1373": "SELECT COUNT(T1.member_id) FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T2.state = 'Maryland'\t----- bird -----\tstudent_club",
    "1374": "SELECT COUNT(*) FROM attendance AS A INNER JOIN member AS M ON A.link_to_member = M.member_id INNER JOIN event AS E ON A.link_to_event = E.event_id WHERE M.phone = '954-555-6240';\t----- bird -----\tstudent_club",
    "1375": "SELECT T1.first_name, T1.last_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.department = 'School of Applied Sciences, Technology and Education'\t----- bird -----\tstudent_club",
    "1376": "SELECT T1.event_name FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T1.status = 'Closed' GROUP BY T1.event_name ORDER BY T2.spent / T2.amount DESC LIMIT 1\t----- bird -----\tstudent_club",
    "1377": "SELECT COUNT(*) FROM member WHERE position = 'President'\t----- bird -----\tstudent_club",
    "1378": "SELECT MAX(spent) FROM budget\t----- bird -----\tstudent_club",
    "1379": "SELECT COUNT(event_id) FROM event WHERE type = 'Meeting' AND STRFTIME('%Y', event_date) = '2020'\t----- bird -----\tstudent_club",
    "1380": "SELECT SUM(spent) FROM budget WHERE category = 'Food'\t----- bird -----\tstudent_club",
    "1381": "SELECT T2.first_name, T2.last_name FROM member AS T2 INNER JOIN attendance AS T1 ON T1.link_to_member = T2.member_id GROUP BY T2.first_name, T2.last_name HAVING COUNT(T1.link_to_event) > 7;\t----- bird -----\tstudent_club",
    "1382": "SELECT T2.first_name, T2.last_name FROM major AS T1 INNER JOIN member AS T2 ON T1.major_id = T2.link_to_major INNER JOIN attendance AS T3 ON T2.member_id = T3.link_to_member INNER JOIN event AS T4 ON T3.link_to_event = T4.event_id WHERE T1.major_name = 'Interior Design' AND T4.event_name = 'Community Theater';\t----- bird -----\tstudent_club",
    "1383": "SELECT first_name, last_name FROM member WHERE zip IN (SELECT zip_code FROM zip_code WHERE city = 'Georgetown' AND state = 'South Carolina')\t----- bird -----\tstudent_club",
    "1384": "SELECT COUNT(amount) FROM income WHERE link_to_member = (SELECT member_id FROM member WHERE first_name = 'Grant' AND last_name = 'Gilmour')\t----- bird -----\tstudent_club",
    "1385": "SELECT T2.first_name, T2.last_name FROM member AS T1 INNER JOIN income AS T2 ON T1.member_id = T2.link_to_member WHERE T2.amount > 40\t----- bird -----\tstudent_club",
    "1386": "SELECT SUM(cost) FROM expense WHERE link_to_event = (SELECT event_id FROM event WHERE event_name = 'Yearly Kickoff')\t----- bird -----\tstudent_club",
    "1387": "SELECT T2.first_name, T2.last_name FROM member AS T2 INNER JOIN budget AS T1 ON T1.link_to_event = (SELECT event_id FROM event WHERE event_name = 'Yearly Kickoff') WHERE T1.event_status = 'active' AND T1.category = 'budget_manager'\t----- bird -----\tstudent_club",
    "1388": "SELECT first_name, last_name, source FROM member JOIN income ON member.member_id = income.link_to_member WHERE income.amount = (SELECT MAX(amount) FROM income)\t----- bird -----\tstudent_club",
    "1389": "SELECT event_name FROM event INNER JOIN budget ON event.event_id = budget.link_to_event ORDER BY budget.spent LIMIT 1\t----- bird -----\tstudent_club",
    "1390": "SELECT CAST(SUM(CASE WHEN event_name = 'Yearly Kickoff' THEN cost ELSE 0 END) AS REAL) * 100 / SUM(cost) FROM budget WHERE event_status = 'completed'\t----- bird -----\tstudent_club",
    "1391": "SELECT SUM(CASE WHEN major_name = 'Finance' THEN 1 ELSE 0 END) / SUM(CASE WHEN major_name = 'Physics' THEN 1 ELSE 0 END) AS ratio FROM major\t----- bird -----\tstudent_club",
    "1392": "SELECT source, SUM(amount) AS total_amount FROM income WHERE date_received BETWEEN '2019-09-01' AND '2019-09-30' GROUP BY source ORDER BY total_amount DESC LIMIT 1\t----- bird -----\tstudent_club",
    "1393": "SELECT first_name, last_name, email FROM member WHERE position = 'Secretary'\t----- bird -----\tstudent_club",
    "1394": "SELECT COUNT(*) FROM member WHERE link_to_major = (SELECT major_id FROM major WHERE major_name = 'Physics Teaching')\t----- bird -----\tstudent_club",
    "1395": "SELECT COUNT(link_to_member) FROM attendance WHERE link_to_event = (SELECT event_id FROM event WHERE event_name = 'Community Theater' AND event_date LIKE '2019%')\t----- bird -----\tstudent_club",
    "1396": "SELECT COUNT(T1.link_to_event), T2.major_name FROM attendance AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.first_name = 'Luisa' AND T2.last_name = 'Guidi'\t----- bird -----\tstudent_club",
    "1397": "SELECT AVG(spent) FROM budget WHERE category = 'Food' AND event_status = 'Closed'\t----- bird -----\tstudent_club",
    "1398": "SELECT T1.event_name FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T2.category = 'Advertisement' ORDER BY T2.spent DESC LIMIT 1\t----- bird -----\tstudent_club",
    "1399": "SELECT CASE WHEN T1.first_name = 'Maya' AND T1.last_name = 'Mclean' THEN 'Yes' ELSE 'No' END AS attended_event FROM member AS T1 INNER JOIN attendance AS T2 ON T1.member_id = T2.link_to_member INNER JOIN event AS T3 ON T2.link_to_event = T3.event_id WHERE T3.event_name = 'Women''s Soccer'\t----- bird -----\tstudent_club",
    "1400": "SELECT CAST(SUM(CASE WHEN type = 'Community Service' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(event_id) FROM event WHERE event_date BETWEEN '2019-01-01' AND '2019-12-31';\t----- bird -----\tstudent_club",
    "1401": "SELECT T1.cost FROM expense AS T1 INNER JOIN budget AS T2 ON T1.link_to_budget = T2.budget_id INNER JOIN event AS T3 ON T2.link_to_event = T3.event_id WHERE T1.expense_description = 'Posters' AND T3.event_name = 'September Speaker'\t----- bird -----\tstudent_club",
    "1402": "SELECT t_shirt_size FROM member GROUP BY t_shirt_size ORDER BY COUNT(t_shirt_size) DESC LIMIT 1\t----- bird -----\tstudent_club",
    "1403": "SELECT event_name FROM event WHERE status = 'Closed' AND event_id IN (SELECT link_to_event FROM budget WHERE remaining < 0 ORDER BY remaining ASC LIMIT 1)\t----- bird -----\tstudent_club",
    "1404": "SELECT E.expense_description, SUM(E.cost) FROM expense E INNER JOIN event ON E.link_to_event = event.event_id WHERE event.event_name = 'October Meeting' AND E.approved = 'Yes' GROUP BY E.expense_description\t----- bird -----\tstudent_club",
    "1405": "SELECT category, amount FROM budget WHERE link_to_event = (SELECT event_id FROM event WHERE event_name = 'April Speaker') ORDER BY amount ASC;\t----- bird -----\tstudent_club",
    "1406": "SELECT budget_id FROM budget WHERE category = 'Food' ORDER BY amount DESC LIMIT 1\t----- bird -----\tstudent_club",
    "1407": "SELECT T1.budget_id, T1.category, T1.amount FROM budget AS T1 WHERE T1.category = 'Advertisement' ORDER BY T1.amount DESC LIMIT 3\t----- bird -----\tstudent_club",
    "1408": "SELECT SUM(cost) FROM expense WHERE expense_description = 'Parking'\t----- bird -----\tstudent_club",
    "1409": "SELECT SUM(cost) FROM expense WHERE expense_date = '2019-08-20'\t----- bird -----\tstudent_club",
    "1410": "SELECT T2.first_name, T2.last_name, SUM(T1.cost) AS total_cost FROM expense AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.member_id = 'rec4BLdZHS2Blfp4v' GROUP BY T2.first_name, T2.last_name\t----- bird -----\tstudent_club",
    "1411": "SELECT T1.expense_description FROM expense AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.first_name = 'Sacha' AND T2.last_name = 'Harrison'\t----- bird -----\tstudent_club",
    "1412": "SELECT T1.expense_description FROM expense AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.t_shirt_size = 'X-Large'\t----- bird -----\tstudent_club",
    "1413": "SELECT T2.zip_code FROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member WHERE T2.cost < 50\t----- bird -----\tstudent_club",
    "1414": "SELECT T2.major_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.first_name = 'Phillip' AND T1.last_name = 'Cullen'\t----- bird -----\tstudent_club",
    "1415": "SELECT T1.position FROM Member AS T1 INNER JOIN Major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Business'\t----- bird -----\tstudent_club",
    "1416": "SELECT COUNT(*) FROM member WHERE link_to_major = (SELECT major_id FROM major WHERE major_name = 'Business') AND t_shirt_size = 'Medium'\t----- bird -----\tstudent_club",
    "1417": "SELECT T1.type FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T2.remaining > 30\t----- bird -----\tstudent_club",
    "1418": "SELECT T1.category FROM event AS T1 WHERE T1.location = 'MU 215'\t----- bird -----\tstudent_club",
    "1419": "SELECT category FROM event WHERE event_date = '2020-03-24T12:00:00'\t----- bird -----\tstudent_club",
    "1420": "SELECT T2.major_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.position = 'Vice President'\t----- bird -----\tstudent_club",
    "1421": "SELECT CAST(SUM(CASE WHEN T1.position = 'Member' AND T2.major_name = 'Mathematics' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.member_id) FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id;\t----- bird -----\tstudent_club",
    "1422": "SELECT T1.category FROM event AS T1 WHERE T1.location = 'MU 215'\t----- bird -----\tstudent_club",
    "1423": "SELECT COUNT(*) FROM income WHERE amount = 50\t----- bird -----\tstudent_club",
    "1424": "SELECT COUNT(*) AS count_members FROM member WHERE position = 'Member' AND t_shirt_size = 'X-Large'\t----- bird -----\tstudent_club",
    "1425": "SELECT COUNT(major_id) FROM major WHERE college = 'College of Agriculture and Applied Sciences' AND department = 'School of Applied Sciences, Technology and Education'\t----- bird -----\tstudent_club",
    "1426": "SELECT T1.last_name, T2.department, T2.college FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Environmental Engineering'\t----- bird -----\tstudent_club",
    "1427": "SELECT T1.category FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.location = 'MU 215' AND T2.type = 'Guest Speaker' AND T1.spent = 0\t----- bird -----\tstudent_club",
    "1428": "SELECT zip_code.city, zip_code.state FROM member INNER JOIN major ON member.link_to_major = major.major_id INNER JOIN zip_code ON member.zip = zip_code.zip_code WHERE major.department = 'Electrical and Computer Engineering Department' AND member.position = 'Member'\t----- bird -----\tstudent_club",
    "1429": "SELECT T1.event_name FROM event AS T1 INNER JOIN attendance AS T2 ON T1.event_id = T2.link_to_event INNER JOIN member AS T3 ON T2.link_to_member = T3.member_id WHERE T1.type = 'Social' AND T3.position = 'Vice President' AND T1.location = '900 E. Washington St.'\t----- bird -----\tstudent_club",
    "1430": "SELECT T1.last_name, T1.position FROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member WHERE T2.expense_description = 'Pizza' AND T2.expense_date = '2019-09-10'\t----- bird -----\tstudent_club",
    "1431": "SELECT T2.last_name FROM member AS T1 INNER JOIN attendance AS T2 ON T1.member_id = T2.link_to_member INNER JOIN event AS T3 ON T2.link_to_event = T3.event_id WHERE T1.position = 'Member' AND T3.event_name = 'Women''s Soccer'\t----- bird -----\tstudent_club",
    "1432": "SELECT CAST(COUNT(CASE WHEN T1.t_shirt_size = 'Medium' AND T1.position = 'Member' THEN T2.amount = 50 END) AS REAL) * 100 / COUNT(T1.member_id) FROM member AS T1 INNER JOIN income AS T2 ON T1.member_id = T2.link_to_member WHERE T1.link_to_major = 'Student_Club'\t----- bird -----\tstudent_club",
    "1433": "SELECT DISTINCT county FROM zip_code WHERE type = 'PO Box'\t----- bird -----\tstudent_club",
    "1434": "SELECT T1.zip_code FROM zip_code AS T1 INNER JOIN country AS T2 ON T1.county = T2.county WHERE T1.type = 'PO Box' AND T2.county = 'San Juan Municipio' AND T1.state = 'Puerto Rico'\t----- bird -----\tstudent_club",
    "1435": "SELECT event_name FROM event WHERE type = 'Game' AND status = 'Closed' AND event_date BETWEEN '2019-03-15' AND '2020-03-20'\t----- bird -----\tstudent_club",
    "1436": "SELECT T1.link_to_event FROM expense AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T1.cost > 50\t----- bird -----\tstudent_club",
    "1437": "SELECT T1.first_name, T1.last_name, T2.link_to_event FROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member WHERE T2.approved = 'true' AND T2.expense_date BETWEEN '2019-01-10' AND '2019-11-19'\t----- bird -----\tstudent_club",
    "1438": "SELECT major.college FROM member INNER JOIN major ON member.link_to_major = major.major_id WHERE member.first_name = 'Katy' AND member.link_to_major = 'rec1N0upiVLy5esTO'\t----- bird -----\tstudent_club",
    "1439": "SELECT T1.phone FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Business' AND T2.college = 'College of Agriculture and Applied Sciences'\t----- bird -----\tstudent_club",
    "1440": "SELECT T2.email FROM expense AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T1.cost > 20 AND T1.expense_date BETWEEN '2019-09-10' AND '2019-11-19'\t----- bird -----\tstudent_club",
    "1441": "SELECT COUNT(member_id) FROM member WHERE link_to_major IN (SELECT major_id FROM major WHERE major_name = 'education') AND position = 'Member'\t----- bird -----\tstudent_club",
    "1442": "SELECT CAST(SUM(CASE WHEN remaining < 0 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(event_id) FROM budget;\t----- bird -----\tstudent_club",
    "1443": "SELECT event_id, location, status FROM event WHERE event_date BETWEEN '2019-11-01' AND '2020-03-31'\t----- bird -----\tstudent_club",
    "1444": "SELECT expense_description FROM expense GROUP BY expense_description HAVING SUM(cost) / COUNT(expense_id) > 50\t----- bird -----\tstudent_club",
    "1445": "SELECT first_name, last_name FROM member WHERE t_shirt_size = 'X-Large'\t----- bird -----\tstudent_club",
    "1446": "SELECT CAST(COUNT(CASE WHEN type = 'PO Box' THEN zip_code ELSE NULL END) AS REAL) * 100 / COUNT(zip_code) FROM zip_code;\t----- bird -----\tstudent_club",
    "1447": "SELECT event_name, location FROM event INNER JOIN budget ON event.event_id = budget.link_to_event WHERE budget.remaining > 0\t----- bird -----\tstudent_club",
    "1448": "SELECT T1.event_name, T1.event_date FROM event AS T1 INNER JOIN expense AS T2 ON T1.event_id = T2.link_to_event WHERE T2.expense_description = 'Pizza' AND T2.cost > 50 AND T2.cost < 100\t----- bird -----\tstudent_club",
    "1449": "SELECT T2.first_name, T2.last_name, T3.major_name FROM member AS T2 INNER JOIN major AS T3 ON T2.link_to_major = T3.major_id INNER JOIN expense AS T1 ON T1.link_to_member = T2.member_id WHERE T1.cost > 100\t----- bird -----\tstudent_club",
    "1450": "SELECT T3.city, T3.county FROM event AS T1 INNER JOIN income AS T2 ON T1.event_id = T2.link_to_event INNER JOIN zip_code AS T3 ON T1.location = T3.city GROUP BY T1.event_id HAVING COUNT(T2.income_id) > 40;\t----- bird -----\tstudent_club",
    "1451": "SELECT T1.first_name, T1.last_name, SUM(T2.cost) AS total_cost FROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member WHERE T1.member_id IN ( SELECT T1.member_id FROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member GROUP BY T1.member_id HAVING COUNT(DISTINCT T2.link_to_event) > 1 ) GROUP BY T1.member_id ORDER BY total_cost DESC LIMIT 1\t----- bird -----\tstudent_club",
    "1452": "SELECT AVG(cost) FROM expense WHERE link_to_member IN (SELECT member_id FROM member WHERE position != 'Member')\t----- bird -----\tstudent_club",
    "1453": "SELECT T1.event_name FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T2.category = 'Parking' AND T2.cost < (SELECT CAST(SUM(cost) AS REAL) / COUNT(event_id) FROM budget WHERE category = 'Parking')\t----- bird -----\tstudent_club",
    "1454": "SELECT SUM(cost) * 100 / COUNT(event_id) FROM expense WHERE link_to_event IN (SELECT event_id FROM event WHERE type = 'Game')\t----- bird -----\tstudent_club",
    "1455": "SELECT budget_id FROM expense WHERE expense_description = 'Water, chips, cookies' ORDER BY cost DESC LIMIT 1\t----- bird -----\tstudent_club",
    "1456": "SELECT first_name, last_name FROM member INNER JOIN expense ON member.member_id = expense.link_to_member ORDER BY expense.cost DESC LIMIT 5\t----- bird -----\tstudent_club",
    "1457": "SELECT T2.first_name, T2.last_name, T2.phone FROM expense AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T1.cost > (SELECT AVG(cost) FROM expense)\t----- bird -----\tstudent_club",
    "1458": "SELECT CAST((SUM(CASE WHEN T3.state = 'Maine' THEN 1 ELSE 0 END) AS REAL) / COUNT(CASE WHEN T2.position = 'Member' THEN 1 ELSE 0 END) - (SUM(CASE WHEN T3.state = 'Vermont' THEN 1 ELSE 0 END) AS REAL) / COUNT(CASE WHEN T2.position = 'Member' THEN 1 ELSE 0 END) AS REAL) * 100 FROM member AS T1 INNER JOIN zip_code AS T3 ON T1.zip = T3.zip_code\t----- bird -----\tstudent_club",
    "1459": "SELECT T2.major_name, T2.department FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.first_name = 'Garrett' AND T1.last_name = 'Gerke'\t----- bird -----\tstudent_club",
    "1460": "SELECT T2.first_name, T2.last_name, T1.cost FROM expense AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T1.expense_description = 'Water, Veggie tray, supplies'\t----- bird -----\tstudent_club",
    "1461": "SELECT T1.last_name, T1.phone FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Elementary Education'\t----- bird -----\tstudent_club",
    "1462": "SELECT T2.category, T1.amount FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.event_name = 'January Speaker'\t----- bird -----\tstudent_club",
    "1463": "SELECT event_name FROM event INNER JOIN budget ON event.event_id = budget.link_to_event WHERE budget.category = 'Food'\t----- bird -----\tstudent_club",
    "1464": "SELECT T2.first_name, T2.last_name, T1.amount FROM income AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T1.date_received = '9/9/2019'\t----- bird -----\tstudent_club",
    "1465": "SELECT T1.category FROM budget AS T1 INNER JOIN expense AS T2 ON T1.budget_id = T2.link_to_budget WHERE T2.expense_description = 'Posters'\t----- bird -----\tstudent_club",
    "1466": "SELECT m.first_name, m.last_name, ma.college FROM member m JOIN major ma ON m.link_to_major = ma.major_id WHERE m.position = 'Secretary'\t----- bird -----\tstudent_club",
    "1467": "SELECT SUM(spent), event_name FROM budget INNER JOIN event ON budget.link_to_event = event.event_id WHERE category = 'Speaker Gifts'\t----- bird -----\tstudent_club",
    "1468": "SELECT T2.city FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T1.first_name = 'Garrett' AND T1.last_name = 'Girke'\t----- bird -----\tstudent_club",
    "1469": "SELECT T1.first_name, T1.last_name, T1.position FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T2.city = 'Lincolnton' AND T2.state = 'North Carolina' AND T2.zip_code = 28092\t----- bird -----\tstudent_club",
    "1470": "SELECT COUNT(GasStationID) FROM gasstations WHERE Country = 'CZE' AND Segment = 'Premium gas'\t----- bird -----\tdebit_card_specializing",
    "1471": "SELECT CAST(SUM(IIF(Currency = 'EUR', 1, 0)) AS REAL) / CAST(SUM(IIF(Currency = 'CZK', 1, 0)) AS REAL) as ratio FROM customers\t----- bird -----\tdebit_card_specializing",
    "1472": "SELECT T1.CustomerID, MIN(T2.Consumption) FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Date BETWEEN '201201' AND '201212' AND T1.Segment = 'LAM' GROUP BY T1.CustomerID\t----- bird -----\tdebit_card_specializing",
    "1473": "SELECT AVG(Consumption) / 12 FROM yearmonth WHERE CustomerID IN (SELECT CustomerID FROM customers WHERE Segment = 'SME') AND Date BETWEEN '201301' AND '201312'\t----- bird -----\tdebit_card_specializing",
    "1474": "SELECT T1.CustomerID, T1.Segment FROM customers AS T1 INNER JOIN transactions_1k AS T2 ON T1.CustomerID = T2.CustomerID INNER JOIN gasstations AS T3 ON T2.GasStationID = T3.GasStationID WHERE T1.Currency = 'CZK' AND T2.Date BETWEEN '2011-01-01' AND '2011-12-31' GROUP BY T1.CustomerID ORDER BY SUM(T2.Amount) DESC LIMIT 10\t----- bird -----\tdebit_card_specializing",
    "1475": "SELECT COUNT(CustomerID) FROM yearmonth WHERE CustomerID IN (SELECT CustomerID FROM customers WHERE Segment = 'KAM') AND Date BETWEEN '201201' AND '201212' AND Consumption < 30000\t----- bird -----\tdebit_card_specializing",
    "1476": "SELECT SUM(CASE WHEN T1.Currency = 'CZK' THEN T2.Consumption ELSE 0 END) - SUM(CASE WHEN T1.Currency = 'EUR' THEN T2.Consumption ELSE 0 END) FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Date BETWEEN '201201' AND '201212'\t----- bird -----\tdebit_card_specializing",
    "1477": "SELECT STRFTIME('%Y', T1.Date) FROM transactions_1k AS T1 INNER JOIN products AS T2 ON T1.ProductID = T2.ProductID WHERE T2.Description = 'Gas' AND T1.Currency = 'EUR' GROUP BY STRFTIME('%Y', T1.Date) ORDER BY SUM(T1.Amount) DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1478": "SELECT Segment FROM customers INNER JOIN yearmonth ON customers.CustomerID = yearmonth.CustomerID GROUP BY Segment ORDER BY SUM(Consumption) ASC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1479": "SELECT SUBSTR(Date, 1, 4) AS Year, SUM(Consumption) AS TotalConsumption FROM yearmonth WHERE CustomerID IN (SELECT CustomerID FROM customers WHERE Currency = 'CZK') GROUP BY SUBSTR(Date, 1, 4) ORDER BY TotalConsumption DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1480": "SELECT MAX(Consumption) AS Peak_Consumption FROM yearmonth WHERE Date LIKE '2013__' AND CustomerID IN (SELECT CustomerID FROM customers WHERE Segment = 'SME')\t----- bird -----\tdebit_card_specializing",
    "1481": "SELECT (SUM(T1.Consumption) / COUNT(T1.CustomerID)) AS SME_avg_consumption, (SELECT (SUM(T1.Consumption) / COUNT(T1.CustomerID)) FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Segment = 'LAM' AND T1.Date BETWEEN '201301' AND '201312') AS LAM_avg_consumption, (SELECT (SUM(T1.Consumption) / COUNT(T1.CustomerID)) FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Segment = 'KAM' AND T1.Date BETWEEN '201301' AND '201312') AS KAM_avg_consumption FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Segment = 'SME' AND T1.Date BETWEEN '201\t----- bird -----\tdebit_card_specializing",
    "1482": "SELECT Segment, MAX(((SUM(CASE WHEN SUBSTR(Date,1,4) = '2013' THEN Consumption ELSE 0 END) - SUM(CASE WHEN SUBSTR(Date,1,4) = '2012' THEN Consumption ELSE 0 END)) / SUM(CASE WHEN SUBSTR(Date,1,4) = '2013' THEN Consumption ELSE 0 END)) * 100) AS Max_Percentage_Increase, MIN(((SUM(CASE WHEN SUBSTR(Date,1,4) = '2013' THEN Consumption ELSE 0 END) - SUM(CASE WHEN SUBSTR(Date,1,4) = '2012' THEN Consumption ELSE 0 END)) / SUM(CASE WHEN SUBSTR(Date,1,4) = '2013' THEN Consumption ELSE 0 END)) * 100) AS Min_Percentage_Increase FROM yearmonth WHERE Segment IN ('SME', 'LAM', 'KAM') AND Date\t----- bird -----\tdebit_card_specializing",
    "1483": "SELECT SUM(Consumption) FROM yearmonth WHERE CustomerID = 6 AND Date >= '201308' AND Date <= '201311';\t----- bird -----\tdebit_card_specializing",
    "1484": "SELECT COUNT(*) AS DiscountGasStationsCzech FROM gasstations WHERE Country = 'Czech Republic' AND Segment = 'discount'; SELECT COUNT(*) AS DiscountGasStationsSlovakia FROM gasstations WHERE Country = 'Slovakia' AND Segment = 'discount'; SELECT (DiscountGasStationsCzech - DiscountGasStationsSlovakia) AS MoreDiscountGasStations;\t----- bird -----\tdebit_card_specializing",
    "1485": "SELECT SUM(Y1.Consumption) - SUM(Y2.Consumption) AS Consumption_Difference FROM yearmonth AS Y1 JOIN yearmonth AS Y2 ON Y1.CustomerID = 7 AND Y2.CustomerID = 5 WHERE Y1.Date LIKE '201304%' AND Y2.Date LIKE '201304%'\t----- bird -----\tdebit_card_specializing",
    "1486": "SELECT COUNT(CASE WHEN c.Currency = 'CZK' THEN 1 ELSE 0 END) - COUNT(CASE WHEN c.Currency = 'EUR' THEN 1 ELSE 0 END) AS \"Amount of more SMEs\" FROM customers c WHERE c.Segment = 'SME'\t----- bird -----\tdebit_card_specializing",
    "1487": "SELECT T1.CustomerID, T1.Segment, T1.Currency, T2.Consumption FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Segment = 'LAM' AND T1.Currency = 'Euro' AND T2.Date = '201310' ORDER BY T2.Consumption DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1488": "SELECT T2.CustomerID, T2.Segment, MAX(T1.Consumption) AS Max_Consumption FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Segment = 'KAM' GROUP BY T2.CustomerID, T2.Segment ORDER BY Max_Consumption DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1489": "SELECT SUM(Consumption) FROM yearmonth WHERE Date LIKE '201305%' AND CustomerID IN (SELECT CustomerID FROM customers WHERE Segment = 'KAM')\t----- bird -----\tdebit_card_specializing",
    "1490": "SELECT (CAST(COUNT(*) AS REAL) / (SELECT COUNT(*) FROM customers WHERE Segment = 'LAM')) * 100 FROM yearmonth WHERE CustomerID IN (SELECT CustomerID FROM customers WHERE Segment = 'LAM') AND Consumption > 46.73;\t----- bird -----\tdebit_card_specializing",
    "1491": "SELECT Country, COUNT(*) AS TotalValueForMoneyGasStations FROM gasstations WHERE Segment = 'value for money' GROUP BY Country\t----- bird -----\tdebit_card_specializing",
    "1492": "SELECT CAST(SUM(IIF(T1.Segment = 'KAM' AND T1.Currency = 'Euro', 1, 0)) AS REAL) * 100 / COUNT(T1.CustomerID) FROM customers AS T1\t----- bird -----\tdebit_card_specializing",
    "1493": "SELECT (CAST(COUNT(CustomerID) AS REAL) * 100) / (SELECT COUNT(CustomerID) FROM yearmonth WHERE Date LIKE '201202' AND Consumption > 528.3) FROM yearmonth WHERE Date LIKE '201202' AND Consumption > 528.3\t----- bird -----\tdebit_card_specializing",
    "1494": "SELECT (CAST(COUNT(CASE WHEN Country = 'Slovakia' AND Segment = 'premium' THEN 1 ELSE NULL END) AS REAL) / COUNT(CASE WHEN Country = 'Slovakia' THEN 1 ELSE NULL END)) * 100 FROM gasstations WHERE Country = 'Slovakia'\t----- bird -----\tdebit_card_specializing",
    "1495": "SELECT CustomerID FROM yearmonth WHERE Date = '201309' ORDER BY Consumption DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1496": "SELECT Segment FROM customers WHERE CustomerID IN (SELECT CustomerID FROM yearmonth WHERE Date = '201309' ORDER BY Consumption LIMIT 1)\t----- bird -----\tdebit_card_specializing",
    "1497": "SELECT T1.CustomerID FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Date = '201206' ORDER BY T2.Consumption ASC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1498": "SELECT MAX(Consumption) FROM yearmonth WHERE SUBSTR(Date, 1, 4) = '2012'\t----- bird -----\tdebit_card_specializing",
    "1499": "SELECT MAX(total_consumption) FROM (SELECT SUM(Consumption) as total_consumption FROM yearmonth WHERE CustomerID IN (SELECT CustomerID FROM customers WHERE Currency = 'Euro') GROUP BY Date) as monthly_consumption\t----- bird -----\tdebit_card_specializing",
    "1500": "SELECT T2.Description FROM transactions_1k AS T1 INNER JOIN products AS T2 ON T1.ProductID = T2.ProductID WHERE T1.Date LIKE '201309%'\t----- bird -----\tdebit_card_specializing",
    "1501": "SELECT DISTINCT Country FROM gasstations WHERE GasStationID IN (SELECT GasStationID FROM transactions_1k WHERE Date LIKE '2013-06%')\t----- bird -----\tdebit_card_specializing",
    "1502": "SELECT ChainID FROM gasstations WHERE GasStationID IN (SELECT GasStationID FROM transactions_1k WHERE Currency = 'Euro')\t----- bird -----\tdebit_card_specializing",
    "1503": "SELECT T3.Description FROM transactions_1k AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID INNER JOIN products AS T3 ON T1.ProductID = T3.ProductID WHERE T2.Currency = 'Euro'\t----- bird -----\tdebit_card_specializing",
    "1504": "SELECT AVG(Price) FROM transactions_1k WHERE Date LIKE '2012-01%'\t----- bird -----\tdebit_card_specializing",
    "1505": "SELECT COUNT(T1.CustomerID) FROM customers AS T1 INNER JOIN transactions_1k AS T2 ON T1.CustomerID = T2.CustomerID INNER JOIN yearmonth AS T3 ON T1.CustomerID = T3.CustomerID WHERE T1.Currency = 'euro' AND T3.Consumption > 1000\t----- bird -----\tdebit_card_specializing",
    "1506": "SELECT T3.Description FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID INNER JOIN products AS T3 ON T1.ProductID = T3.ProductID WHERE T2.Country = 'CZE'\t----- bird -----\tdebit_card_specializing",
    "1507": "SELECT DISTINCT Time FROM transactions_1k WHERE GasStationID IN (SELECT GasStationID FROM gasstations WHERE ChainID = 11)\t----- bird -----\tdebit_card_specializing",
    "1508": "SELECT COUNT(TransactionID) FROM transactions_1k WHERE GasStationID IN (SELECT GasStationID FROM gasstations WHERE Country = 'CZE') AND Price > 1000\t----- bird -----\tdebit_card_specializing",
    "1509": "SELECT COUNT(*) FROM transactions_1k t JOIN gasstations g ON t.GasStationID = g.GasStationID WHERE g.Country = 'CZE' AND Date > '2012-01-01'\t----- bird -----\tdebit_card_specializing",
    "1510": "SELECT AVG(Price) FROM transactions_1k WHERE GasStationID IN (SELECT GasStationID FROM gasstations WHERE Country = 'CZE')\t----- bird -----\tdebit_card_specializing",
    "1511": "SELECT AVG(Price) FROM transactions_1k WHERE CustomerID IN (SELECT CustomerID FROM customers WHERE Currency = 'Euro')\t----- bird -----\tdebit_card_specializing",
    "1512": "SELECT T1.CustomerID, SUM(T2.Amount) AS TotalAmountPaid FROM transactions_1k AS T1 INNER JOIN payments AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Date = '2012-08-25' GROUP BY T1.CustomerID ORDER BY TotalAmountPaid DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1513": "SELECT Country FROM gasstations WHERE GasStationID = (SELECT GasStationID FROM transactions_1k WHERE Date = '2012-08-25' ORDER BY Time LIMIT 1)\t----- bird -----\tdebit_card_specializing",
    "1514": "SELECT T1.Currency FROM customers AS T1 INNER JOIN transactions_1k AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Date = '2012-08-24' AND T2.Time = '16:25:00'\t----- bird -----\tdebit_card_specializing",
    "1515": "SELECT T1.Segment FROM customers AS T1 INNER JOIN transactions_1k AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Date = '2012-08-23' AND T2.Time = '21:20:00';\t----- bird -----\tdebit_card_specializing",
    "1516": "SELECT COUNT(*) FROM transactions_1k WHERE Currency = 'EUR' AND Date = '2012-08-26' AND Time < '13:00:00'\t----- bird -----\tdebit_card_specializing",
    "1517": "SELECT Segment FROM customers WHERE CustomerID = (SELECT MIN(CustomerID) FROM customers)\t----- bird -----\tdebit_card_specializing",
    "1518": "SELECT T2.Country FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T1.Date = '2012-08-24' AND T1.Time = '12:42:00'\t----- bird -----\tdebit_card_specializing",
    "1519": "SELECT T1.ProductID FROM transactions_1k AS T1 WHERE T1.Date = '2012-08-23' AND T1.Time = '21:20:00'\t----- bird -----\tdebit_card_specializing",
    "1520": "SELECT T1.Consumption FROM yearmonth AS T1 INNER JOIN transactions_1k AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Date LIKE '2012-01%' AND T2.Amount = 124.05\t----- bird -----\tdebit_card_specializing",
    "1521": "SELECT COUNT(*) FROM transactions_1k AS T INNER JOIN gasstations AS G ON T.GasStationID = G.GasStationID WHERE T.Time BETWEEN '8:00' AND '9:00' AND T.Date = '2012-08-26' AND G.Country = 'CZE'\t----- bird -----\tdebit_card_specializing",
    "1522": "SELECT T1.Currency FROM customers AS T1 INNER JOIN transactions_1k AS T2 ON T1.CustomerID = T2.CustomerID INNER JOIN yearmonth AS T3 ON T1.CustomerID = T3.CustomerID WHERE T2.Amount = 214582.17 AND T3.Date LIKE '201306%'\t----- bird -----\tdebit_card_specializing",
    "1523": "SELECT Country FROM gasstations WHERE GasStationID = (SELECT GasStationID FROM \"transactions_1k\" WHERE CardID = 667467)\t----- bird -----\tdebit_card_specializing",
    "1524": "SELECT T1.Country FROM customers AS T1 INNER JOIN transactions_1k AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Date = '2012-08-24' AND T2.Amount = 548.4\t----- bird -----\tdebit_card_specializing",
    "1525": "SELECT COUNT(DISTINCT T1.CustomerID) * 100 / (SELECT COUNT(DISTINCT CustomerID) FROM transactions_1k WHERE Date = '2012-08-25' AND Currency = 'EUR') AS percentage FROM transactions_1k AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Date = '2012-08-25' AND T2.Currency = 'EUR'\t----- bird -----\tdebit_card_specializing",
    "1526": "SELECT ((T2.Consumption - T1.Consumption) / T2.Consumption) AS Consumption_Decrease_Rate FROM yearmonth AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Date = '2012-08-24' AND T2.Date = '2013-12-31' AND T1.Amount = 634.8\t----- bird -----\tdebit_card_specializing",
    "1527": "SELECT T2.GasStationID FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID GROUP BY T1.GasStationID ORDER BY SUM(T1.Amount * T1.Price) DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1528": "SELECT COUNT(*) * 100 / (SELECT COUNT(*) FROM customers WHERE Segment = 'premium' AND Country = 'SVK') FROM customers WHERE Segment = 'premium' AND Country = 'SVK'\t----- bird -----\tdebit_card_specializing",
    "1529": "SELECT SUM(Price) FROM transactions_1k WHERE CustomerID = 38508; SELECT SUM(Price) FROM transactions_1k WHERE CustomerID = 38508 AND Date LIKE '201201%';\t----- bird -----\tdebit_card_specializing",
    "1530": "SELECT Description FROM products INNER JOIN transactions_1k ON products.ProductID = transactions_1k.ProductID GROUP BY Description ORDER BY SUM(transactions_1k.Amount) DESC LIMIT 5\t----- bird -----\tdebit_card_specializing",
    "1531": "SELECT T1.CustomerID, T1.Segment, T1.Currency, SUM(T2.Price) AS TotalSpent, AVG(T2.Price / T2.Amount) AS AvgPricePerItem FROM customers AS T1 INNER JOIN transactions_1k AS T2 ON T1.CustomerID = T2.CustomerID GROUP BY T1.CustomerID ORDER BY TotalSpent DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1532": "SELECT Country FROM gasstations WHERE GasStationID = (SELECT GasStationID FROM transactions_1k WHERE ProductID = 2 ORDER BY Price DESC LIMIT 1)\t----- bird -----\tdebit_card_specializing",
    "1533": "SELECT T1.Consumption FROM yearmonth AS T1 INNER JOIN transactions_1k AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.ProductID = 5 AND T2.Price / T2.Amount > 29.00 AND T1.Date LIKE '201208%'\t----- bird -----\tdebit_card_specializing"
}