{
    "0": "SELECT MAX(`Percent (%) Eligible Free (K-12)`) AS HighestEligibleFreeRate FROM frpm WHERE `County Name` = 'Alameda County'\t----- bird -----\tcalifornia_schools",
    "1": "SELECT T1.`Percent (%) Eligible Free (Ages 5-17)` FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.SOCType = 'Continuation' ORDER BY T1.`Percent (%) Eligible Free (Ages 5-17)` ASC LIMIT 3\t----- bird -----\tcalifornia_schools",
    "2": "SELECT fprm.Zip FROM fprm INNER JOIN schools ON fprm.CDSCode = schools.CDSCode WHERE fprm.`Charter School (Y/N)` = 1 AND schools.County = 'Fresno County Office of Education'\t----- bird -----\tcalifornia_schools",
    "3": "SELECT MailStreet, MailCity, MailZip, MailState FROM schools WHERE CDSCode = (SELECT CDSCode FROM frpm ORDER BY `FRPM Count (K-12)` DESC LIMIT 1)\t----- bird -----\tcalifornia_schools",
    "4": "SELECT T2.Phone FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.Charter = 1 AND T1.OpenDate > '2000-01-01'\t----- bird -----\tcalifornia_schools",
    "5": "SELECT COUNT(*) FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T1.AvgScrMath < 400 AND T2.Virtual = 'F'\t----- bird -----\tcalifornia_schools",
    "6": "SELECT s.School, s.District, s.County FROM satscores AS ss INNER JOIN schools AS s ON ss.cds = s.CDSCode WHERE ss.NumTstTakr > 500 AND s.Magnet = 1;\t----- bird -----\tcalifornia_schools",
    "7": "SELECT schools.Phone FROM schools INNER JOIN satscores ON schools.CDSCode = satscores.cds WHERE satscores.NumGE1500 = (SELECT MAX(NumGE1500) FROM satscores)\t----- bird -----\tcalifornia_schools",
    "8": "SELECT satscores.NumTstTakr FROM frpm INNER JOIN schools ON frpm.CDSCode = schools.CDSCode INNER JOIN satscores ON schools.CDSCode = satscores.cds WHERE frpm.`FRPM Count (K-12)` = (SELECT MAX(`FRPM Count (K-12)`) FROM frpm)\t----- bird -----\tcalifornia_schools",
    "9": "SELECT COUNT(s.CDSCode) FROM satscores s JOIN schools sc ON s.cds = sc.CDSCode WHERE s.AvgScrMath > 560 AND sc.FundingType = 'Charter'\t----- bird -----\tcalifornia_schools",
    "10": "SELECT T1.`FRPM Count (Ages 5-17)` FROM frpm AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T2.AvgScrRead = (SELECT MAX(AvgScrRead) FROM satscores)\t----- bird -----\tcalifornia_schools",
    "11": "SELECT CDSCode FROM frpm WHERE `Enrollment (K-12)` + `Enrollment (Ages 5-17)` > 500;\t----- bird -----\tcalifornia_schools",
    "12": "SELECT MAX(`Percent (%) Eligible Free (Ages 5-17)`) AS Highest_Free_Rate FROM frpm INNER JOIN satscores ON frpm.CDSCode = satscores.cds WHERE satscores.NumGE1500 / satscores.NumTstTakr > 0.3;\t----- bird -----\tcalifornia_schools",
    "13": "SELECT T1.Phone FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds ORDER BY CAST(T2.NumGE1500 AS FLOAT) / T2.NumTstTakr DESC LIMIT 3;\t----- bird -----\tcalifornia_schools",
    "14": "SELECT s.NCESSchool, s.School FROM frpm f JOIN schools s ON f.CDSCode = s.CDSCode ORDER BY f.`Enrollment (Ages 5-17)` DESC LIMIT 5;\t----- bird -----\tcalifornia_schools",
    "15": "SELECT T2.dname FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T2.StatusType = 'Active' GROUP BY T2.dname ORDER BY AVG(T1.AvgScrRead) DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "16": "SELECT COUNT(*) FROM schools AS s INNER JOIN satscores AS ss ON s.CDSCode = ss.cds WHERE s.County = 'Alameda' AND ss.NumTstTakr < 100\t----- bird -----\tcalifornia_schools",
    "17": "SELECT T1.`Charter School Number` FROM frpm AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T2.AvgScrWrite = 499;\t----- bird -----\tcalifornia_schools",
    "18": "SELECT COUNT(*) FROM schools AS s INNER JOIN satscores AS ss ON s.CDSCode = ss.cds WHERE s.County = 'Contra Costa' AND s.FundingType = 'Directly Funded' AND ss.NumTstTakr <= 250;\t----- bird -----\tcalifornia_schools",
    "19": "SELECT Phone FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T2.AvgScrMath = (SELECT MAX(AvgScrMath) FROM satscores)\t----- bird -----\tcalifornia_schools",
    "20": "SELECT COUNT(*) FROM frpm WHERE `County Name` = 'Amador' AND `Low Grade` = '9' AND `High Grade` = '12'\t----- bird -----\tcalifornia_schools",
    "21": "SELECT COUNT(*) FROM frpm WHERE `County Name` = 'Los Angeles' AND `Free Meal Count (K-12)` > 500 AND `FRPM Count (K-12)` < 700\t----- bird -----\tcalifornia_schools",
    "22": "SELECT s.School, s.County, s.NumTstTakr FROM satscores AS ss INNER JOIN schools AS s ON ss.cds = s.CDSCode WHERE s.County = 'Contra Costa' ORDER BY ss.NumTstTakr DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "23": "SELECT s.School, s.Street FROM frpm AS f INNER JOIN schools AS s ON f.CDSCode = s.CDSCode WHERE ABS(f.`Enrollment (K-12)` - f.`Enrollment (Ages 5-17)`) > 30;\t----- bird -----\tcalifornia_schools",
    "24": "SELECT s.School FROM frpm AS f INNER JOIN satscores AS s ON f.CDSCode = s.cds WHERE f.`Percent (%) Eligible Free (K-12)` > 0.1 AND s.NumGE1500 > 0;\t----- bird -----\tcalifornia_schools",
    "25": "SELECT s.School, s.FundingType FROM schools s JOIN satscores ss ON s.CDSCode = ss.cds WHERE s.County = 'Riverside' GROUP BY s.School, s.FundingType HAVING AVG(ss.AvgScrMath) > 400;\t----- bird -----\tcalifornia_schools",
    "26": "SELECT schools.School, schools.Street || ', ' || schools.City || ', ' || schools.State || ', ' || schools.Zip AS Full_Address FROM schools INNER JOIN frpm ON schools.CDSCode = frpm.CDSCode WHERE frpm.`County Name` = 'Monterey' AND frpm.`School Type` = 'High School' AND frpm.`Percent (%) Eligible FRPM (Ages 5-17)` > 800\t----- bird -----\tcalifornia_schools",
    "27": "SELECT T2.sname, T1.AvgScrWrite, T1.Phone FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE (T2.OpenDate > '1991-01-01' OR T2.ClosedDate < '2000-01-01') AND T1.AvgScrWrite IS NOT NULL;\t----- bird -----\tcalifornia_schools",
    "28": "SELECT T1.`School Name`, T1.DOCType FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.`Enrollment (K-12)` - T1.`Enrollment (Ages 5-17)` > (SELECT AVG(T1.`Enrollment (K-12)` - T1.`Enrollment (Ages 5-17)`) FROM frpm AS T1 WHERE T1.`Charter Funding Type` = 'Locally Funded');\t----- bird -----\tcalifornia_schools",
    "29": "SELECT MIN(OpenDate) FROM schools WHERE CDSCode IN (SELECT cds FROM satscores WHERE enroll12 = (SELECT MAX(enroll12) FROM satscores WHERE rtype = 'K-12'))\t----- bird -----\tcalifornia_schools",
    "30": "SELECT T1.City FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.`Enrollment (K-12)` IS NOT NULL ORDER BY T2.`Enrollment (K-12)` ASC LIMIT 5\t----- bird -----\tcalifornia_schools",
    "31": "SELECT TOP 11 `School Name`, `Free Meal Count (K-12)` / `Enrollment (K-12)` AS `Eligible Free Rate` FROM frpm ORDER BY `Enrollment (K-12)` DESC LIMIT 11\t----- bird -----\tcalifornia_schools",
    "32": "SELECT TOP 5 schools with the highest free or reduced price meal count in grades 1-12 with ownership code 66 and calculate the eligible free or reduced price meal rate for each school: SELECT s.School, (f.`FRPM Count (K-12)` / f.`Enrollment (K-12)`) AS Eligible_Free_Reduced_Price_Meal_Rate FROM schools AS s INNER JOIN frpm AS f ON s.CDSCode = f.CDSCode WHERE s.CharterNum = 66 ORDER BY f.`FRPM Count (K-12)` DESC LIMIT 5;\t----- bird -----\tcalifornia_schools",
    "33": "SELECT s.School, s.Website FROM frpm f INNER JOIN schools s ON f.CDSCode = s.CDSCode WHERE f.`Free Meal Count (Ages 5-17)` >= 1900 AND f.`Free Meal Count (Ages 5-17)` <= 2000;\t----- bird -----\tcalifornia_schools",
    "34": "SELECT (`Free Meal Count (Ages 5-17)` / `Enrollment (Ages 5-17)`) AS Free_Rate FROM frpm WHERE `School Name` = 'Kacey Gibson'\t----- bird -----\tcalifornia_schools",
    "35": "SELECT T1.AdmEmail1 FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.`Charter School (Y/N)` = 1 ORDER BY T2.`Enrollment (K-12)` ASC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "36": "SELECT T1.AdmFName1, T1.AdmLName1 FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T2.NumGE1500 = (SELECT MAX(NumGE1500) FROM satscores)\t----- bird -----\tcalifornia_schools",
    "37": "SELECT Street, City, Zip, State FROM schools WHERE CDSCode = (SELECT cds FROM satscores WHERE NumGE1500 / NumTstTakr = (SELECT MIN(NumGE1500 / NumTstTakr) FROM satscores))\t----- bird -----\tcalifornia_schools",
    "38": "SELECT Website FROM schools WHERE County = 'Los Angeles' AND CDSCode IN (SELECT cds FROM satscores WHERE NumTstTakr BETWEEN 2000 AND 3000)\t----- bird -----\tcalifornia_schools",
    "39": "SELECT AVG(NumTstTakr) FROM satscores INNER JOIN schools ON satscores.cds = schools.CDSCode WHERE schools.City = 'Fresno' AND schools.OpenDate BETWEEN '1980-01-01' AND '1980-12-31'\t----- bird -----\tcalifornia_schools",
    "40": "SELECT T2.Phone FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T1.District = 'Fresno Unified' ORDER BY T2.AvgScrRead ASC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "41": "SELECT s.School, s.AvgScrRead FROM satscores s INNER JOIN schools sc ON s.cds = sc.CDSCode WHERE sc.Virtual = 'F' ORDER BY s.AvgScrRead DESC LIMIT 5\t----- bird -----\tcalifornia_schools",
    "42": "SELECT s.`Educational Option Type` FROM frpm AS f INNER JOIN satscores AS s ON f.CDSCode = s.cds WHERE s.AvgScrMath = (SELECT MAX(AvgScrMath) FROM satscores)\t----- bird -----\tcalifornia_schools",
    "43": "SELECT AVG(T1.AvgScrMath) AS average_math_score, T2.County FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T1.AvgScrMath + T1.AvgScrRead + T1.AvgScrWrite = ( SELECT MIN(T3.AvgScrMath + T3.AvgScrRead + T3.AvgScrWrite) FROM satscores AS T3 )\t----- bird -----\tcalifornia_schools",
    "44": "SELECT AVG(AvgScrWrite), City FROM satscores JOIN schools ON satscores.cds = schools.CDSCode WHERE NumTstTakr = (SELECT MAX(NumTstTakr) FROM satscores WHERE NumGE1500 >= 1500)\t----- bird -----\tcalifornia_schools",
    "45": "SELECT s.`School Name`, AVG(ss.`AvgScrWrite`) AS AverageWritingScore FROM schools AS s INNER JOIN satscores AS ss ON s.`CDSCode` = ss.`cds` WHERE s.`AdmFName1` = 'Ricci' AND s.`AdmLName1` = 'Ulrich' GROUP BY s.`School Name`\t----- bird -----\tcalifornia_schools",
    "46": "SELECT s.State, SUM(s.Enrollment) AS TotalEnrollment FROM frpm f JOIN schools s ON f.CDSCode = s.CDSCode WHERE f.`District Type` = 'State Special' AND s.GSserved = 'K-12' GROUP BY s.State ORDER BY TotalEnrollment DESC;\t----- bird -----\tcalifornia_schools",
    "47": "SELECT COUNT(*) / 12 AS MonthlyAvgSchoolsOpened FROM schools WHERE County = 'Alameda' AND DOC = '52' AND OpenDate LIKE '1980%'\t----- bird -----\tcalifornia_schools",
    "48": "SELECT CAST(COUNT(CASE WHEN s1.DOC = '54' THEN s1.CDSCode ELSE NULL END) AS REAL) / COUNT(CASE WHEN s1.DOC = '52' THEN s1.CDSCode ELSE NULL END) FROM schools AS s1 WHERE s1.County = 'Orange County'\t----- bird -----\tcalifornia_schools",
    "49": "SELECT County, School, ClosedDate FROM schools WHERE StatusType = 'Closed' GROUP BY County ORDER BY COUNT(School) DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "50": "SELECT s.Street, s.School FROM satscores ss JOIN schools s ON ss.cds = s.CDSCode ORDER BY ss.AvgScrMath DESC LIMIT 1 OFFSET 5;\t----- bird -----\tcalifornia_schools",
    "51": "SELECT schools.MailStreet, satscores.sname FROM satscores JOIN schools ON satscores.cds = schools.CDSCode WHERE satscores.AvgScrRead = (SELECT MIN(AvgScrRead) FROM satscores)\t----- bird -----\tcalifornia_schools",
    "52": "SELECT COUNT(*) FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE (T1.AvgScrRead + T1.AvgScrMath + T1.AvgScrWrite) >= 1500 AND T2.MailCity = 'Lakeport'\t----- bird -----\tcalifornia_schools",
    "53": "SELECT SUM(NumTstTakr) FROM satscores INNER JOIN schools ON satscores.cds = schools.CDSCode WHERE schools.MailCity = 'Fresno'\t----- bird -----\tcalifornia_schools",
    "54": "SELECT T2.School, T2.MailZip FROM schools AS T2 WHERE T2.AdmFName1 = 'Avetik' AND T2.AdmLName1 = 'Atoian' OR T2.AdmFName2 = 'Avetik' AND T2.AdmLName2 = 'Atoian' OR T2.AdmFName3 = 'Avetik' AND T2.AdmLName3 = 'Atoian';\t----- bird -----\tcalifornia_schools",
    "55": "SELECT COUNT(CASE WHEN County = 'Colusa' THEN 1 END) / COUNT(CASE WHEN County = 'Humboldt' THEN 1 END) AS Ratio FROM schools WHERE MailState = 'CA';\t----- bird -----\tcalifornia_schools",
    "56": "SELECT COUNT(*) FROM schools WHERE MailState = 'CA' AND StatusType = 'Active' AND City = 'San Joaquin'\t----- bird -----\tcalifornia_schools",
    "57": "SELECT Phone, Ext FROM schools JOIN satscores ON schools.CDSCode = satscores.cds ORDER BY AvgScrWrite DESC LIMIT 1 OFFSET 332;\t----- bird -----\tcalifornia_schools",
    "58": "SELECT Phone, Ext, School FROM schools WHERE Zip = '95203-3704'\t----- bird -----\tcalifornia_schools",
    "59": "SELECT T2.Website FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T1.AdmFName1 = 'Mike' AND T1.AdmLName1 = 'Larson' OR T1.AdmFName1 = 'Dante' AND T1.AdmLName1 = 'Alvarez'\t----- bird -----\tcalifornia_schools",
    "60": "SELECT Website FROM schools WHERE Charter = 1 AND Virtual = 'P' AND County = 'San Joaquin'\t----- bird -----\tcalifornia_schools",
    "61": "SELECT COUNT(*) FROM schools WHERE Charter = 1 AND City = 'Hickman' AND DOC = 52\t----- bird -----\tcalifornia_schools",
    "62": "SELECT COUNT(*) FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.County = 'Los Angeles' AND T1.Charter = 0 AND (T2.`Free Meal Count (K-12)` * 100 / T2.`Enrollment (K-12)`) < 0.18;\t----- bird -----\tcalifornia_schools",
    "63": "SELECT T1.AdmFName1 || ' ' || T1.AdmLName1 AS Administrator1, T1.AdmFName2 || ' ' || T1.AdmLName2 AS Administrator2, T1.AdmFName3 || ' ' || T1.AdmLName3 AS Administrator3, T2.School AS SchoolName, T2.City FROM schools AS T2 INNER JOIN satscores AS T3 ON T2.CDSCode = T3.cds WHERE T2.Charter = 1 AND T2.CharterNum = '00D2'\t----- bird -----\tcalifornia_schools",
    "64": "SELECT COUNT(*) FROM schools WHERE MailCity = 'Hickman' AND CharterNum = '00D4'\t----- bird -----\tcalifornia_schools",
    "65": "SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM schools WHERE County = 'Santa Clara' AND FundingType = 'Locally Funded') AS Ratio FROM schools WHERE County = 'Santa Clara' AND FundingType != 'Locally Funded'\t----- bird -----\tcalifornia_schools",
    "66": "SELECT COUNT(*) FROM schools WHERE FundingType = 'Directly Funded' AND OpenDate BETWEEN '2000-01-01' AND '2005-12-31' AND County = 'Stanislaus'\t----- bird -----\tcalifornia_schools",
    "67": "SELECT SUM(satscores.NumTstTakr) FROM satscores INNER JOIN schools ON satscores.cds = schools.CDSCode WHERE schools.City = 'San Francisco' AND schools.ClosedDate = '1989'\t----- bird -----\tcalifornia_schools",
    "68": "SELECT T1.County FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.ClosedDate BETWEEN '1980-01-01' AND '1989-12-31' AND T1.SOC = '11' GROUP BY T1.County ORDER BY COUNT(T1.CDSCode) DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "69": "SELECT schools.NCESDist FROM schools WHERE schools.SOC = '31'\t----- bird -----\tcalifornia_schools",
    "70": "SELECT COUNT(*) FROM schools WHERE County = 'Alpine' AND StatusType IN ('Active', 'Closed') AND EdOpsName = 'District Community Day School'\t----- bird -----\tcalifornia_schools",
    "71": "SELECT DISTINCT District Code FROM frpm WHERE `School Type` = 'School' AND `City` = 'Fresno' AND CDSCode NOT IN (SELECT cds FROM satscores WHERE Magnet = 1)\t----- bird -----\tcalifornia_schools",
    "72": "SELECT SUM(Enrollment (Ages 5-17)) FROM frpm WHERE `School Name` = 'State Special School' AND `District Name` = 'Fremont' AND `Academic Year` = '2014-2015' AND EdOpsCode = 'SSS'\t----- bird -----\tcalifornia_schools",
    "73": "SELECT FRPM Count (Ages 5-17) FROM frpm INNER JOIN schools ON frpm.CDSCode = schools.CDSCode WHERE schools.School = 'Youth Authority School' AND schools.MailStreet = 'PO Box 1040'\t----- bird -----\tcalifornia_schools",
    "74": "SELECT MIN(`Low Grade`) FROM frpm WHERE `District Type` = 'SPECON' AND NCESDist = '613360'\t----- bird -----\tcalifornia_schools",
    "75": "SELECT `Educational Option Type`, `School Name` FROM frpm WHERE `County Code` = '37' AND `NSLP Provision Status` = 'Breakfast Provision 2'\t----- bird -----\tcalifornia_schools",
    "76": "SELECT T3.City FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode INNER JOIN satscores AS T3 ON T1.CDSCode = T3.cds WHERE T2.`NSLP Provision Status` = '2' AND T2.`Low Grade` = '9' AND T2.`High Grade` = '12' AND T1.County = 'Merced' AND T1.EILCode = 'HS'\t----- bird -----\tcalifornia_schools",
    "77": "SELECT T1.`School Name`, T1.`Percent (%) Eligible FRPM (Ages 5-17)` FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.`Low Grade` = 'K' AND T1.`High Grade` = '9' AND T2.County = 'Los Angeles'\t----- bird -----\tcalifornia_schools",
    "78": "SELECT `District Type`, COUNT(*) FROM frpm WHERE `City` = 'Adelanto' GROUP BY `District Type` ORDER BY COUNT(*) DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "79": "SELECT County, COUNT(*) AS Num_Schools FROM schools WHERE County IN ('San Diego', 'Santa Barbara') AND Virtual = 'F' GROUP BY County ORDER BY Num_Schools DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "80": "SELECT T2.`School Type`, T2.`School Name`, T2.Latitude FROM schools AS T2 WHERE T2.Latitude = (SELECT MAX(Latitude) FROM schools)\t----- bird -----\tcalifornia_schools",
    "81": "SELECT schools.City, schools.School, schools.`Low Grade` FROM schools WHERE schools.State = 'CA' ORDER BY schools.Latitude ASC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "82": "SELECT `Low Grade`, `High Grade` FROM schools WHERE Longitude = (SELECT MAX(Longitude) FROM schools)\t----- bird -----\tcalifornia_schools",
    "83": "SELECT COUNT(DISTINCT CDSCode) FROM schools WHERE GSoffered LIKE '%K-8%' AND Magnet = 1 AND EdOpsCode = 'Multiple Provision Types' SELECT City, COUNT(CDSCode) FROM schools WHERE GSoffered LIKE '%K-8%' GROUP BY City\t----- bird -----\tcalifornia_schools",
    "84": "SELECT AdmFName1, District FROM schools GROUP BY AdmFName1, District ORDER BY COUNT(*) DESC LIMIT 2;\t----- bird -----\tcalifornia_schools",
    "85": "SELECT T1.`District Code` FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.AdmFName1 = 'Alusine' AND T1.`Enrollment (K-12)` <> 0 AND T1.`Free Meal Count (K-12)` IS NOT NULL AND T1.`Enrollment (K-12)` IS NOT NULL AND T1.`District Code` IS NOT NULL AND T1.`District Code` <> ''\t----- bird -----\tcalifornia_schools",
    "86": "SELECT T1.AdmLName1, T2.District, T2.County, T2.School FROM schools AS T2 INNER JOIN satscores AS T3 ON T2.CDSCode = T3.cds WHERE T2.CharterNum = '40'\t----- bird -----\tcalifornia_schools",
    "87": "SELECT AdmEmail1 FROM schools WHERE County = 'San Bernardino' AND District = 'San Bernardino City Unified' AND OpenDate BETWEEN '2009-01-01' AND '2010-12-31' AND (SOC = '62' OR DOC = '54')\t----- bird -----\tcalifornia_schools",
    "88": "SELECT satscores.AdmEmail1, schools.School FROM satscores INNER JOIN schools ON satscores.cds = schools.CDSCode WHERE NumGE1500 = (SELECT MAX(NumGE1500) FROM satscores)\t----- bird -----\tcalifornia_schools",
    "89": "SELECT COUNT(*) FROM account AS a INNER JOIN disp AS d ON a.account_id = d.account_id INNER JOIN client AS c ON d.client_id = c.client_id INNER JOIN district AS dis ON c.district_id = dis.district_id WHERE a.frequency = 'POPLATEK PO OBRATU' AND dis.A3 = 'East Bohemia'\t----- bird -----\tfinancial",
    "90": "SELECT COUNT(*) FROM account AS A INNER JOIN district AS D ON A.district_id = D.district_id WHERE D.A3 = 'Prague'\t----- bird -----\tfinancial",
    "91": "SELECT AVG(A12) AS avg_unemployment_1995, AVG(A13) AS avg_unemployment_1996, CASE WHEN AVG(A12) > AVG(A13) THEN '1995' ELSE '1996' END AS higher_percentage_year FROM district\t----- bird -----\tfinancial",
    "92": "SELECT COUNT(DISTINCT district_id) FROM client WHERE gender = 'F' AND district_id IN (SELECT district_id FROM district WHERE A11 > 6000 AND A11 < 10000)\t----- bird -----\tfinancial",
    "93": "SELECT COUNT(DISTINCT C.client_id) FROM client AS C INNER JOIN district AS D ON C.district_id = D.district_id WHERE C.gender = 'M' AND D.A3 = 'North Bohemia' AND D.A11 > 8000\t----- bird -----\tfinancial",
    "94": "SELECT T1.account_id FROM client AS T1 INNER JOIN account AS T2 ON T1.client_id = T2.client_id WHERE T1.gender = 'F' AND T1.birth_date = (SELECT MIN(birth_date) FROM client WHERE gender = 'F' AND A11 = (SELECT MIN(A11) FROM client WHERE gender = 'F')) AND A11 = (SELECT MIN(A11) FROM client WHERE gender = 'F') UNION SELECT T1.account_id FROM client AS T1 INNER JOIN account AS T2 ON T1.client_id = T2.client_id WHERE T1.gender = 'F' AND T1.birth_date = (SELECT MIN(birth_date) FROM client WHERE gender = 'F' AND A11 = (SELECT MAX(A11) FROM client WHERE gender = 'F')) AND A11 = (SELECT MAX(A11) FROM client WHERE gender = 'F')\t----- bird -----\tfinancial",
    "95": "SELECT T1.account_id FROM client AS T1 INNER JOIN account AS T2 ON T1.client_id = T2.client_id GROUP BY T1.client_id HAVING T1.birth_date = (SELECT MIN(birth_date) FROM client) AND A11 = (SELECT MAX(A11) FROM district)\t----- bird -----\tfinancial",
    "96": "SELECT COUNT(DISTINCT T3.client_id) FROM disp AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN client AS T3 ON T1.client_id = T3.client_id WHERE T2.frequency = 'POPLATEK TYDNE' AND T1.type = 'Owner'\t----- bird -----\tfinancial",
    "97": "SELECT c.client_id, c.gender, c.birth_date FROM client c JOIN disp d ON c.client_id = d.client_id WHERE d.type = 'DISPONENT' AND d.type = 'POPLATEK PO OBRATU'\t----- bird -----\tfinancial",
    "98": "SELECT account_id FROM loan WHERE date LIKE '1997%' AND amount = (SELECT MIN(amount) FROM loan WHERE date LIKE '1997%') AND account_id IN (SELECT account_id FROM account WHERE frequency = 'POPLATEK TYDNE')\t----- bird -----\tfinancial",
    "99": "SELECT account_id, amount FROM loan WHERE duration > 12 AND date >= '1993-01-01' AND date <= '1993-12-31' ORDER BY amount DESC LIMIT 1;\t----- bird -----\tfinancial",
    "100": "SELECT COUNT(DISTINCT c.client_id) FROM client c JOIN district d ON c.district_id = d.district_id WHERE c.gender = 'F' AND c.birth_date < '1950-01-01' AND d.A2 = 'Slokolov';\t----- bird -----\tfinancial",
    "101": "SELECT account_id FROM account WHERE date = (SELECT MIN(date) FROM account WHERE date LIKE '1995%')\t----- bird -----\tfinancial",
    "102": "SELECT account_id FROM account WHERE date < '1997-01-01' AND account_id IN ( SELECT account_id FROM trans WHERE amount > 3000 )\t----- bird -----\tfinancial",
    "103": "SELECT client_id FROM client WHERE client_id IN ( SELECT client_id FROM disp WHERE disp_id IN ( SELECT disp_id FROM card WHERE issued = '1994-03-03' ) )\t----- bird -----\tfinancial",
    "104": "SELECT MIN(T1.date) FROM account AS T1 INNER JOIN trans AS T2 ON T1.account_id = T2.account_id WHERE T2.amount = 840 AND T2.date = '1998-10-14'\t----- bird -----\tfinancial",
    "105": "SELECT d.district_id FROM loan l JOIN account a ON l.account_id = a.account_id JOIN district d ON a.district_id = d.district_id WHERE l.date = '1994-08-25'\t----- bird -----\tfinancial",
    "106": "SELECT MAX(amount) FROM trans WHERE account_id IN (SELECT account_id FROM disp WHERE card_id IN (SELECT card_id FROM card WHERE issued = '1996-10-21'));\t----- bird -----\tfinancial",
    "107": "SELECT T2.gender FROM client AS T1 INNER JOIN account AS T2 ON T1.client_id = T2.account_id INNER JOIN district AS T3 ON T1.district_id = T3.district_id WHERE T3.A11 = (SELECT MAX(A11) FROM district) ORDER BY T1.birth_date ASC LIMIT 1\t----- bird -----\tfinancial",
    "108": "SELECT MAX(T4.amount) FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN disp AS T3 ON T2.account_id = T3.account_id INNER JOIN trans AS T4 ON T2.account_id = T4.account_id WHERE T1.amount = (SELECT MAX(amount) FROM loan) AND T4.date = (SELECT MIN(date) FROM trans WHERE account_id = T2.account_id)\t----- bird -----\tfinancial",
    "109": "SELECT COUNT(*) FROM client WHERE district_id = (SELECT district_id FROM district WHERE A2 = 'Jesenik') AND gender = 'F';\t----- bird -----\tfinancial",
    "110": "SELECT T2.disp_id FROM trans AS T1 INNER JOIN disp AS T2 ON T1.account_id = T2.account_id WHERE T1.amount = 5100 AND T1.date = '1998-09-02'\t----- bird -----\tfinancial",
    "111": "SELECT COUNT(account_id) FROM account WHERE district_id = (SELECT district_id FROM district WHERE A2 = 'Litomerice') AND date >= '1996-01-01' AND date <= '1996-12-31'\t----- bird -----\tfinancial",
    "112": "SELECT d.A2 FROM client c JOIN disp d ON c.client_id = d.client_id JOIN account a ON d.account_id = a.account_id JOIN district dis ON c.district_id = dis.district_id WHERE c.gender = 'F' AND c.birth_date = '1976-01-29'\t----- bird -----\tfinancial",
    "113": "SELECT birth_date FROM client WHERE client_id = ( SELECT client_id FROM disp WHERE account_id = ( SELECT account_id FROM loan WHERE amount = 98832 AND date = '1996-01-03' ) )\t----- bird -----\tfinancial",
    "114": "SELECT account_id FROM disp JOIN client ON disp.client_id = client.client_id JOIN district ON client.district_id = district.district_id WHERE district.A3 = 'Prague' ORDER BY disp_id LIMIT 1;\t----- bird -----\tfinancial",
    "115": "SELECT COUNT(CASE WHEN C.gender = 'M' THEN 1 END) / COUNT(C.client_id) * 100 AS percentage_male_clients FROM client AS C INNER JOIN district AS D ON C.district_id = D.district_id WHERE D.A2 = 'south Bohemia' AND D.A4 = (SELECT MAX(A4) FROM district WHERE A2 = 'south Bohemia')\t----- bird -----\tfinancial",
    "116": "SELECT ((T2.balance - T1.balance) / T1.balance) * 100 AS increase_rate FROM trans AS T1 INNER JOIN trans AS T2 ON T1.account_id = T2.account_id WHERE T1.date = '1993-03-22' AND T2.date = '1998-12-27' AND T1.trans_id = (SELECT MIN(trans_id) FROM trans WHERE account_id = T1.account_id AND type = 'Loan' AND date = '1993-07-05')\t----- bird -----\tfinancial",
    "117": "SELECT ((SELECT SUM(amount) FROM loan WHERE status = 'A') / (SELECT SUM(amount) FROM loan)) * 100 as percentage_loan_paid_without_issue\t----- bird -----\tfinancial",
    "118": "SELECT ((SELECT COUNT(*) FROM loan WHERE amount < 100000 AND status = 'C') / (SELECT COUNT(*) FROM loan WHERE amount < 100000)) * 100 as percentage_accounts_running\t----- bird -----\tfinancial",
    "119": "SELECT A.account_id, D.A2 AS district_name, D.A3 AS district_region FROM account A INNER JOIN district D ON A.district_id = D.district_id INNER JOIN card C ON A.account_id = C.account_id INNER JOIN trans T ON A.account_id = T.account_id WHERE YEAR(A.date) = 1993 AND C.issued > T.date AND C.type = 'POPLATEK PO OBRATU'\t----- bird -----\tfinancial",
    "120": "SELECT disp.client_id, account.account_id, account.frequency FROM disp JOIN account ON disp.account_id = account.account_id JOIN client ON disp.client_id = client.client_id JOIN district ON client.district_id = district.district_id WHERE district.A2 = 'east Bohemia' AND account.date BETWEEN '1995-01-01' AND '2000-12-31'\t----- bird -----\tfinancial",
    "121": "SELECT account_id, date FROM account WHERE district_id IN (SELECT district_id FROM district WHERE A2 = 'Prachatice')\t----- bird -----\tfinancial",
    "122": "SELECT d.A2 AS district, d.A3 AS region FROM loan l JOIN account a ON l.account_id = a.account_id JOIN district d ON a.district_id = d.district_id WHERE l.loan_id = 4990;\t----- bird -----\tfinancial",
    "123": "SELECT account.account_id, district.A2 AS district, district.A3 AS region FROM account JOIN district ON account.district_id = district.district_id JOIN loan ON account.account_id = loan.account_id WHERE loan.amount > 300000\t----- bird -----\tfinancial",
    "124": "SELECT T1.loan_id, T2.A3, T2.A11 FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T1.duration = 60;\t----- bird -----\tfinancial",
    "125": "SELECT d.A4 AS district, ((d.A13 - d.A12) / d.A12) * 100 AS unemployment_increment_rate FROM district d JOIN account a ON d.district_id = a.district_id JOIN loan l ON a.account_id = l.account_id JOIN client c ON a.district_id = c.district_id WHERE l.status = 'D' AND l.date < '1996-01-01'\t----- bird -----\tfinancial",
    "126": "SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM account WHERE date >= '1993-01-01' AND date <= '1993-12-31') FROM account WHERE district_id IN (SELECT district_id FROM district WHERE A2 = 'Decin') AND date >= '1993-01-01' AND date <= '1993-12-31'\t----- bird -----\tfinancial",
    "127": "SELECT account_id FROM account WHERE frequency = 'POPLATEK MESICNE'\t----- bird -----\tfinancial",
    "128": "SELECT A2 AS District, COUNT(DISTINCT client_id) AS Female_Account_Holders FROM client WHERE gender = 'F' GROUP BY district_id ORDER BY Female_Account_Holders DESC LIMIT 10;\t----- bird -----\tfinancial",
    "129": "SELECT D.A2, SUM(T.amount) AS total_withdrawals FROM trans AS T INNER JOIN account AS A ON T.account_id = A.account_id INNER JOIN district AS D ON A.district_id = D.district_id WHERE T.type = 'VYDAJ' AND T.date LIKE '1996-01%' GROUP BY D.A2 ORDER BY total_withdrawals DESC LIMIT 10\t----- bird -----\tfinancial",
    "130": "SELECT COUNT(T1.account_id) FROM account AS T1 INNER JOIN client AS T2 ON T1.client_id = T2.client_id INNER JOIN district AS T3 ON T2.district_id = T3.district_id LEFT JOIN disp AS T4 ON T1.account_id = T4.account_id LEFT JOIN card AS T5 ON T4.disp_id = T5.disp_id WHERE T3.A3 = 'South Bohemia' AND T5.card_id IS NULL\t----- bird -----\tfinancial",
    "131": "SELECT A3, COUNT(*) AS active_loans FROM district AS d INNER JOIN account AS a ON d.district_id = a.district_id INNER JOIN loan AS l ON a.account_id = l.account_id WHERE l.status = 'C' OR l.status = 'D' GROUP BY A3 ORDER BY active_loans DESC LIMIT 1;\t----- bird -----\tfinancial",
    "132": "SELECT AVG(amount) AS average_loan_amount FROM loan AS L INNER JOIN account AS A ON L.account_id = A.account_id INNER JOIN disp AS D ON A.account_id = D.account_id INNER JOIN client AS C ON D.client_id = C.client_id WHERE C.gender = 'M'\t----- bird -----\tfinancial",
    "133": "SELECT T1.A2, T1.A8 FROM district AS T1 WHERE T1.A13 = (SELECT MAX(T2.A13) FROM district AS T2 WHERE T2.A13 IS NOT NULL)\t----- bird -----\tfinancial",
    "134": "SELECT COUNT(account_id) FROM account WHERE district_id = ( SELECT district_id FROM district WHERE A16 = ( SELECT MAX(A16) FROM district ) )\t----- bird -----\tfinancial",
    "135": "SELECT COUNT(DISTINCT A.account_id) FROM account AS A INNER JOIN disp AS D ON A.account_id = D.account_id INNER JOIN card AS C ON D.disp_id = C.disp_id INNER JOIN trans AS T ON A.account_id = T.account_id WHERE T.balance < 0 AND C.type = 'credit' AND T.operation = 'VYBER KARTOU' AND A.frequency = 'POPLATEK MESICNE'\t----- bird -----\tfinancial",
    "136": "SELECT COUNT(*) FROM loan JOIN account ON loan.account_id = account.account_id WHERE date BETWEEN '1995-01-01' AND '1997-12-31' AND amount >= 250000 AND frequency = 'POPLATEK MESICNE' AND status = 'approved';\t----- bird -----\tfinancial",
    "137": "SELECT COUNT(*) FROM account WHERE account_id IN (SELECT account_id FROM loan WHERE status = 'C' OR status = 'D') AND district_id = 1;\t----- bird -----\tfinancial",
    "138": "SELECT COUNT(client_id) FROM client WHERE district_id = ( SELECT district_id FROM district ORDER BY A15 DESC LIMIT 1 OFFSET 1 ) AND gender = 'M'\t----- bird -----\tfinancial",
    "139": "SELECT COUNT(*) FROM card WHERE type = 'gold' AND card_id IN (SELECT card_id FROM disp WHERE type = 'disponent')\t----- bird -----\tfinancial",
    "140": "SELECT COUNT(account_id) FROM account WHERE district_id = (SELECT district_id FROM district WHERE A2 = 'Pisek')\t----- bird -----\tfinancial",
    "141": "SELECT DISTINCT district_id FROM account WHERE account_id IN ( SELECT account_id FROM trans WHERE amount > 10000 AND date BETWEEN '1997-01-01' AND '1997-12-31' )\t----- bird -----\tfinancial",
    "142": "SELECT account_id FROM `order` WHERE bank_to = 'Pisek' AND k_symbol = 'SIPO';\t----- bird -----\tfinancial",
    "143": "SELECT A.account_id FROM account A INNER JOIN disp D ON A.account_id = D.account_id INNER JOIN card C ON D.disp_id = C.disp_id WHERE C.type = 'gold' AND A.account_id IN ( SELECT A.account_id FROM account A INNER JOIN disp D ON A.account_id = D.account_id INNER JOIN card C ON D.disp_id = C.disp_id WHERE C.type = 'junior' )\t----- bird -----\tfinancial",
    "144": "SELECT AVG(amount) FROM trans WHERE type = 'credit card' AND operation = 'VYBER KARTOU' AND date >= '2021-01-01' AND date <= '2021-12-31'\t----- bird -----\tfinancial",
    "145": "SELECT DISTINCT D.client_id FROM disp AS D INNER JOIN account AS A ON D.account_id = A.account_id INNER JOIN card AS C ON D.disp_id = C.disp_id INNER JOIN trans AS T ON A.account_id = T.account_id WHERE T.type = 'VYBER KARTOU' AND T.date >= '1998-01-01' AND T.date <= '1998-12-31' GROUP BY D.client_id HAVING SUM(T.amount) / 12 < (SELECT AVG(amount) FROM trans WHERE type = 'VYBER KARTOU' AND date >= '1998-01-01' AND date <= '1998-12-31')\t----- bird -----\tfinancial",
    "146": "SELECT T3.client_id, T3.gender FROM disp AS T1 INNER JOIN client AS T2 ON T1.client_id = T2.client_id INNER JOIN account AS T3 ON T1.account_id = T3.account_id INNER JOIN card AS T4 ON T1.disp_id = T4.disp_id INNER JOIN loan AS T5 ON T3.account_id = T5.account_id WHERE T2.gender = 'F' AND T4.type = 'credit'\t----- bird -----\tfinancial",
    "147": "SELECT COUNT(DISTINCT T1.account_id) FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN account AS T3 ON T2.account_id = T3.account_id INNER JOIN district AS T4 ON T1.district_id = T4.district_id WHERE T1.gender = 'F' AND T4.A3 = 'South Bohemia'\t----- bird -----\tfinancial",
    "148": "SELECT T1.account_id FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id INNER JOIN disp AS T3 ON T1.account_id = T3.account_id WHERE T2.A2 = 'Tabor' AND T3.type = 'OWNER'\t----- bird -----\tfinancial",
    "149": "SELECT DISTINCT type FROM disp WHERE type NOT IN ('OWNER') AND account_id IN ( SELECT account_id FROM account WHERE district_id IN ( SELECT district_id FROM district WHERE A11 > 8000 AND A11 <= 9000 ) )\t----- bird -----\tfinancial",
    "150": "SELECT COUNT(DISTINCT account_id) FROM account JOIN trans ON account.account_id = trans.account_id JOIN district ON account.district_id = district.district_id WHERE district.A3 = 'North Bohemia' AND trans.bank = 'AB'\t----- bird -----\tfinancial",
    "151": "SELECT DISTINCT d.A2 FROM district d JOIN account a ON d.district_id = a.district_id JOIN trans t ON a.account_id = t.account_id WHERE t.type = 'VYDAJ';\t----- bird -----\tfinancial",
    "152": "SELECT AVG(A15) FROM district WHERE A15 > 4000 AND district_id IN (SELECT district_id FROM account WHERE date >= '1997-01-01')\t----- bird -----\tfinancial",
    "153": "SELECT COUNT(*) FROM card AS C INNER JOIN disp AS D ON C.disp_id = D.disp_id WHERE C.type = 'classic' AND D.type = 'OWNER'\t----- bird -----\tfinancial",
    "154": "SELECT COUNT(*) FROM client WHERE district_id = (SELECT district_id FROM district WHERE A2 = 'Hl.m. Praha') AND gender = 'M'\t----- bird -----\tfinancial",
    "155": "SELECT (CAST(COUNT(CASE WHEN type = 'gold' AND issued < '1998-01-01' THEN 1 END) AS FLOAT) / COUNT(*)) * 100 AS Percentage FROM card;\t----- bird -----\tfinancial",
    "156": "SELECT C.client_id, C.gender, C.birth_date FROM client AS C INNER JOIN disp AS D ON C.client_id = D.client_id INNER JOIN account AS A ON D.account_id = A.account_id INNER JOIN loan AS L ON A.account_id = L.account_id WHERE L.amount = (SELECT MAX(amount) FROM loan)\t----- bird -----\tfinancial",
    "157": "SELECT A15 FROM district WHERE district_id = (SELECT district_id FROM account WHERE account_id = 532)\t----- bird -----\tfinancial",
    "158": "SELECT T1.district_id FROM account AS T1 INNER JOIN `order` AS T2 ON T1.account_id = T2.account_id WHERE T2.order_id = 33333\t----- bird -----\tfinancial",
    "159": "SELECT T.amount FROM trans AS T INNER JOIN disp AS D ON T.account_id = D.account_id WHERE D.client_id = 3356 AND T.type = 'VYBER'\t----- bird -----\tfinancial",
    "160": "SELECT COUNT(*) FROM account WHERE frequency = 'POPLATEK TYDNE' AND account_id IN (SELECT account_id FROM loan WHERE amount < 200000)\t----- bird -----\tfinancial",
    "161": "SELECT T2.type FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id WHERE T1.client_id = 13539\t----- bird -----\tfinancial",
    "162": "SELECT A3 FROM client INNER JOIN district ON client.district_id = district.district_id WHERE client.client_id = 3541\t----- bird -----\tfinancial",
    "163": "SELECT d.A2 AS district_name, COUNT(l.account_id) AS num_accounts FROM district d JOIN account a ON d.district_id = a.district_id JOIN loan l ON a.account_id = l.account_id WHERE l.status = 'A' GROUP BY d.A2 ORDER BY num_accounts DESC LIMIT 1;\t----- bird -----\tfinancial",
    "164": "SELECT client.client_id, client.gender FROM client JOIN disp ON client.client_id = disp.client_id JOIN account ON disp.account_id = account.account_id JOIN `order` ON account.account_id = `order`.account_id WHERE `order`.order_id = 32423;\t----- bird -----\tfinancial",
    "165": "SELECT T1.trans_id, T1.date, T1.type, T1.operation, T1.amount, T1.balance, T1.k_symbol, T1.bank, T1.account FROM trans AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T3.district_id = 5;\t----- bird -----\tfinancial",
    "166": "SELECT COUNT(*) FROM account WHERE district_id = (SELECT district_id FROM district WHERE A2 = 'Jesenik')\t----- bird -----\tfinancial",
    "167": "SELECT T1.client_id FROM disp AS T1 INNER JOIN card AS T2 ON T1.disp_id = T2.card_id WHERE T2.type = 'junior' AND T2.issued >= '1997-01-01'\t----- bird -----\tfinancial",
    "168": "SELECT COUNT(C.client_id) / (SELECT COUNT(*) FROM client WHERE district_id IN (SELECT district_id FROM district WHERE A11 > 10000)) * 100 FROM client AS C WHERE C.gender = 'F' AND C.district_id IN (SELECT district_id FROM district WHERE A11 > 10000)\t----- bird -----\tfinancial",
    "169": "SELECT ((SUM(CASE WHEN strftime('%Y', date) = '1997' THEN amount ELSE 0 END) - SUM(CASE WHEN strftime('%Y', date) = '1996' THEN amount ELSE 0 END)) / SUM(CASE WHEN strftime('%Y', date) = '1996' THEN amount ELSE 0 END) * 100) AS growth_rate FROM loan INNER JOIN account ON loan.account_id = account.account_id INNER JOIN disp ON account.account_id = disp.account_id INNER JOIN client ON disp.client_id = client.client_id WHERE client.gender = 'M' AND strftime('%Y', loan.date) BETWEEN '1996' AND '1997'\t----- bird -----\tfinancial",
    "170": "SELECT COUNT(*) FROM trans WHERE type = 'VYBER' AND operation = 'VYBER KARTOU' AND date > '1995-01-01'\t----- bird -----\tfinancial",
    "171": "SELECT SUM(CASE WHEN A3 = 'North Bohemia' THEN A16 ELSE 0 END) - SUM(CASE WHEN A3 = 'East Bohemia' THEN A16 ELSE 0 END) AS Difference FROM district WHERE A16 IS NOT NULL AND A16 <> 0 AND A9 = 1996;\t----- bird -----\tfinancial",
    "172": "SELECT COUNT(*) FROM disp WHERE account_id IN (1, 10)\t----- bird -----\tfinancial",
    "173": "SELECT COUNT(*) FROM trans WHERE account_id = 3 AND operation = 'account statement' SELECT SUM(amount) FROM trans WHERE account_id = 3 AND operation = 'debit' AND k_symbol = '3539'\t----- bird -----\tfinancial",
    "174": "SELECT birth_date FROM client WHERE client_id = 130\t----- bird -----\tfinancial",
    "175": "SELECT COUNT(*) FROM disp WHERE type = 'owner' AND account_id IN (SELECT account_id FROM account WHERE frequency = 'POPLATEK PO OBRATU')\t----- bird -----\tfinancial",
    "176": "SELECT SUM(amount) AS total_debt, status FROM loan WHERE account_id IN (SELECT account_id FROM disp WHERE client_id = 992) GROUP BY status\t----- bird -----\tfinancial",
    "177": "SELECT SUM(T1.amount) AS total_amount, T3.gender AS account_owner_gender FROM trans AS T1 INNER JOIN disp AS T2 ON T1.account_id = T2.account_id INNER JOIN client AS T3 ON T2.client_id = T3.client_id WHERE T1.trans_id = 851 AND T2.client_id = 4;\t----- bird -----\tfinancial",
    "178": "SELECT T2.type FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id WHERE T1.client_id = 9\t----- bird -----\tfinancial",
    "179": "SELECT SUM(amount) AS TotalPayment FROM trans WHERE account_id IN (SELECT account_id FROM disp WHERE client_id = 617) AND date >= '1998-01-01' AND date <= '1998-12-31'\t----- bird -----\tfinancial",
    "180": "SELECT client_id FROM client WHERE birth_date BETWEEN '1983-01-01' AND '1987-12-31' AND district_id IN (SELECT district_id FROM district WHERE A2 = 'East Bohemia')\t----- bird -----\tfinancial",
    "181": "SELECT client_id FROM client WHERE gender = 'F' ORDER BY ( SELECT SUM(amount) FROM loan WHERE account_id IN ( SELECT account_id FROM disp WHERE client_id = client.client_id ) ) DESC LIMIT 3;\t----- bird -----\tfinancial",
    "182": "SELECT COUNT(T1.client_id) FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN account AS T3 ON T2.account_id = T3.account_id INNER JOIN trans AS T4 ON T3.account_id = T4.account_id WHERE T1.gender = 'M' AND T1.birth_date BETWEEN '1974-01-01' AND '1976-12-31' AND T4.amount > 4000 AND T4.k_symbol = 'SIPO'\t----- bird -----\tfinancial",
    "183": "SELECT COUNT(*) FROM account INNER JOIN district ON account.district_id = district.district_id WHERE district.A2 = 'Beroun' AND account.date > '1996-01-01'\t----- bird -----\tfinancial",
    "184": "SELECT COUNT(*) FROM client AS C INNER JOIN disp AS D ON C.client_id = D.client_id INNER JOIN card AS CA ON D.disp_id = CA.disp_id WHERE C.gender = 'F' AND CA.type = 'junior credit card'\t----- bird -----\tfinancial",
    "185": "SELECT COUNT(DISTINCT CASE WHEN c.gender = 'F' THEN c.client_id END) / COUNT(DISTINCT c.client_id) * 100 AS female_proportion FROM client c JOIN disp d ON c.client_id = d.client_id JOIN account a ON d.account_id = a.account_id JOIN district dist ON c.district_id = dist.district_id WHERE dist.A3 = 'Prague';\t----- bird -----\tfinancial",
    "186": "SELECT ((COUNT(CASE WHEN C.gender = 'M' THEN 1 END) / COUNT(*)) * 100) AS percentage FROM client AS C INNER JOIN disp AS D ON C.client_id = D.client_id INNER JOIN card AS CA ON D.disp_id = CA.disp_id WHERE CA.type = 'POPLATEK TYDNE'\t----- bird -----\tfinancial",
    "187": "SELECT COUNT(DISTINCT T1.client_id) FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN account AS T3 ON T2.account_id = T3.account_id WHERE T3.frequency = 'POPLATEK TYDNE'\t----- bird -----\tfinancial",
    "188": "SELECT account_id FROM loan WHERE duration > 24 AND amount = (SELECT MIN(amount) FROM loan WHERE duration > 24) AND account_id IN (SELECT account_id FROM account WHERE date < '1997-01-01')\t----- bird -----\tfinancial",
    "189": "SELECT account_id FROM client WHERE gender = 'F' ORDER BY birth_date ASC, A11 ASC LIMIT 1;\t----- bird -----\tfinancial",
    "190": "SELECT COUNT(*) FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.birth_date LIKE '1920%' AND T2.A3 = 'east Bohemia'\t----- bird -----\tfinancial",
    "191": "SELECT COUNT(*) FROM loan JOIN account ON loan.account_id = account.account_id WHERE duration = 24 AND frequency = 'POPLATEK TYDNE'\t----- bird -----\tfinancial",
    "192": "SELECT AVG(amount) FROM loan WHERE status = 'C' AND account_id IN (SELECT account_id FROM trans WHERE k_symbol = 'POPLATEK PO OBRATU')\t----- bird -----\tfinancial",
    "193": "SELECT T1.client_id, T2.A2 FROM disp AS T1 INNER JOIN client AS T2 ON T1.client_id = T2.client_id WHERE T1.type = 'OWNER' AND T1.account_id IN (SELECT account_id FROM loan) OR T1.account_id IN (SELECT account_id FROM `order` WHERE k_symbol = 'POJISTNE')\t----- bird -----\tfinancial",
    "194": "SELECT T1.client_id, (strftime('%Y', 'now') - strftime('%Y', T2.birth_date)) - (strftime('%m-%d', 'now') < strftime('%m-%d', T2.birth_date)) AS age FROM client AS T2 INNER JOIN disp AS T3 ON T2.client_id = T3.client_id INNER JOIN card AS T4 ON T3.disp_id = T4.disp_id WHERE T4.type = 'gold' AND T3.type = 'owner' AND T3.account_id IN (SELECT account_id FROM loan WHERE status = 'eligible')\t----- bird -----\tfinancial",
    "195": "SELECT bond_type, COUNT(bond_type) AS bond_count FROM bond GROUP BY bond_type ORDER BY bond_count DESC LIMIT 1\t----- bird -----\ttoxicology",
    "196": "SELECT COUNT(DISTINCT T1.molecule_id) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'cl' AND T2.label = '-'\t----- bird -----\ttoxicology",
    "197": "SELECT AVG(CASE WHEN B.bond_type = '-' AND A.element = 'o' THEN 1 ELSE 0 END) AS avg_oxygen_atoms FROM atom A JOIN bond B ON A.molecule_id = B.molecule_id WHERE A.element = 'o'\t----- bird -----\ttoxicology",
    "198": "SELECT SUM(CASE WHEN m.label = '+' AND b.bond_type = '-' THEN 1 ELSE 0 END) / COUNT(DISTINCT c.atom_id) FROM molecule m JOIN bond b ON m.molecule_id = b.molecule_id JOIN connected c ON b.bond_id = c.bond_id;\t----- bird -----\ttoxicology",
    "199": "SELECT COUNT(T1.atom_id) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'na' AND T2.label = '-'\t----- bird -----\ttoxicology",
    "200": "SELECT m.molecule_id FROM molecule m JOIN bond b ON m.molecule_id = b.molecule_id WHERE b.bond_type = '#' AND m.label = '+'\t----- bird -----\ttoxicology",
    "201": "SELECT DIVIDE(SUM(CASE WHEN T1.element = 'c' THEN 1 ELSE 0 END), COUNT(T1.atom_id)) * 100 AS percentage_of_carbon FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'c' AND T2.bond_type = ' = '\t----- bird -----\ttoxicology",
    "202": "SELECT COUNT(*) FROM bond WHERE bond_type = '#'\t----- bird -----\ttoxicology",
    "203": "SELECT COUNT(*) FROM atom WHERE element != 'br'\t----- bird -----\ttoxicology",
    "204": "SELECT COUNT(*) FROM molecule WHERE molecule_id BETWEEN 'TR000' AND 'TR099' AND label = '+'\t----- bird -----\ttoxicology",
    "205": "SELECT molecule.molecule_id FROM atom JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE atom.element = 'si'\t----- bird -----\ttoxicology",
    "206": "SELECT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_id = 'TR004_8_9'\t----- bird -----\ttoxicology",
    "207": "SELECT DISTINCT element FROM atom INNER JOIN bond ON atom.molecule_id = bond.molecule_id INNER JOIN connected ON atom.atom_id = connected.atom_id OR atom.atom_id = connected.atom_id2 WHERE bond.bond_type = ' = '\t----- bird -----\ttoxicology",
    "208": "SELECT label FROM atom JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE element = 'h' GROUP BY label ORDER BY COUNT(label) DESC LIMIT 1\t----- bird -----\ttoxicology",
    "209": "SELECT T2.bond_type FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T1.element = 'te'\t----- bird -----\ttoxicology",
    "210": "SELECT T1.atom_id, T2.atom_id FROM connected AS T1 INNER JOIN bond AS T2 ON T1.bond_id = T2.bond_id WHERE T2.bond_type = '-'\t----- bird -----\ttoxicology",
    "211": "SELECT a.atom_id, c.atom_id2 FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN molecule m ON a.molecule_id = m.molecule_id JOIN bond b ON c.bond_id = b.bond_id WHERE m.label = '-'\t----- bird -----\ttoxicology",
    "212": "SELECT element, COUNT(element) AS element_count FROM atom JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE label = '-' GROUP BY element ORDER BY element_count LIMIT 1;\t----- bird -----\ttoxicology",
    "213": "SELECT b.bond_type FROM bond b JOIN connected c ON b.bond_id = c.bond_id JOIN atom a1 ON c.atom_id = a1.atom_id JOIN atom a2 ON c.atom_id2 = a2.atom_id WHERE (a1.atom_id = 'TR004_8' AND a2.atom_id = 'TR004_20') OR (a1.atom_id = 'TR004_20' AND a2.atom_id = 'TR004_8')\t----- bird -----\ttoxicology",
    "214": "SELECT DISTINCT label FROM molecule WHERE molecule_id IN ( SELECT molecule_id FROM atom WHERE element != 'sn' )\t----- bird -----\ttoxicology",
    "215": "SELECT COUNT(DISTINCT A.atom_id) FROM atom AS A JOIN molecule AS M ON A.molecule_id = M.molecule_id JOIN bond AS B ON M.molecule_id = B.molecule_id JOIN connected AS C ON A.atom_id = C.atom_id JOIN atom AS A2 ON C.atom_id2 = A2.atom_id JOIN bond AS B2 ON A2.molecule_id = B2.molecule_id WHERE (A.element = 'i' OR A.element = 's') AND (A2.element = 'i' OR A2.element = 's') AND B.bond_type = '-' AND B2.bond_type = '-'\t----- bird -----\ttoxicology",
    "216": "SELECT T1.atom_id, T2.atom_id FROM connected AS T1 INNER JOIN bond AS T2 ON T1.bond_id = T2.bond_id WHERE T2.bond_type = '#'\t----- bird -----\ttoxicology",
    "217": "SELECT T1.atom_id FROM connected AS T1 INNER JOIN atom AS T2 ON T1.atom_id2 = T2.atom_id INNER JOIN molecule AS T3 ON T2.molecule_id = T3.molecule_id WHERE T3.molecule_id = 'TR181'\t----- bird -----\ttoxicology",
    "218": "SELECT DIVIDE(SUM(CASE WHEN element = 'f' THEN 1 ELSE 0 END), COUNT(molecule_id)) as percent FROM atom WHERE molecule_id IN (SELECT molecule_id FROM molecule WHERE label = '+')\t----- bird -----\ttoxicology",
    "219": "SELECT DIVIDE(SUM(CASE WHEN B.bond_type = '#' THEN 1 ELSE 0 END), COUNT(B.bond_id)) as percent FROM bond AS B INNER JOIN molecule AS M ON B.molecule_id = M.molecule_id WHERE M.label = '+';\t----- bird -----\ttoxicology",
    "220": "SELECT element FROM atom WHERE molecule_id = 'TR000' ORDER BY element LIMIT 3;\t----- bird -----\ttoxicology",
    "221": "SELECT a.atom_id, c.atom_id2 FROM connected c JOIN bond b ON c.bond_id = b.bond_id JOIN atom a ON c.atom_id = a.atom_id WHERE b.bond_id = 'TR001_2_6' AND a.molecule_id = 'TR001'\t----- bird -----\ttoxicology",
    "222": "SELECT SUM(CASE WHEN label = '+' THEN 1 ELSE 0 END) - SUM(CASE WHEN label = '-' THEN 1 ELSE 0 END) AS difference FROM molecule;\t----- bird -----\ttoxicology",
    "223": "SELECT T1.atom_id, T2.atom_id FROM connected AS T1 INNER JOIN bond AS T2 ON T1.bond_id = T2.bond_id WHERE T2.bond_id = 'TR_000_2_5'\t----- bird -----\ttoxicology",
    "224": "SELECT bond_id FROM connected WHERE atom_id2 = 'TR000_2'\t----- bird -----\ttoxicology",
    "225": "SELECT T2.label FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.bond_type = ' = ' ORDER BY T1.label LIMIT 5\t----- bird -----\ttoxicology",
    "226": "SELECT DIVIDE(SUM(bond_type = ' = '), COUNT(bond_id)) as percent FROM bond WHERE molecule_id = 'TR008'\t----- bird -----\ttoxicology",
    "227": "SELECT DIVIDE(SUM(label = '+'), COUNT(molecule_id)) as percent FROM molecule\t----- bird -----\ttoxicology",
    "228": "SELECT DIVIDE(SUM(CASE WHEN element = 'h' THEN 1 ELSE 0 END), COUNT(atom_id)) as percent FROM atom WHERE molecule_id = 'TR206'\t----- bird -----\ttoxicology",
    "229": "SELECT B.bond_type FROM bond AS B INNER JOIN molecule AS M ON B.molecule_id = M.molecule_id WHERE M.molecule_id = 'TR000';\t----- bird -----\ttoxicology",
    "230": "SELECT T1.element, T2.label FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.molecule_id = 'TR060'\t----- bird -----\ttoxicology",
    "231": "SELECT B.bond_type, M.label FROM bond AS B INNER JOIN molecule AS M ON B.molecule_id = M.molecule_id WHERE B.molecule_id = 'TR018' GROUP BY B.bond_type ORDER BY COUNT(B.bond_type) DESC LIMIT 1\t----- bird -----\ttoxicology",
    "232": "SELECT T1.label FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN connected AS T3 ON T2.molecule_id = T3.bond_id WHERE T2.bond_type = '-' AND T1.label = '-' GROUP BY T1.label ORDER BY T1.label ASC LIMIT 3;\t----- bird -----\ttoxicology",
    "233": "SELECT T2.bond_type FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.molecule_id = 'TR006' ORDER BY T2.bond_type LIMIT 2\t----- bird -----\ttoxicology",
    "234": "SELECT COUNT(*) FROM connected AS T1 INNER JOIN bond AS T2 ON T1.bond_id = T2.bond_id WHERE T1.atom_id = 'TR009_12' OR T1.atom_id2 = 'TR009_12' AND T2.molecule_id = 'TR009'\t----- bird -----\ttoxicology",
    "235": "SELECT COUNT(*) FROM molecule WHERE label = '+' AND molecule_id IN (SELECT molecule_id FROM atom WHERE element = 'br')\t----- bird -----\ttoxicology",
    "236": "SELECT T1.bond_type, T2.atom_id, T3.atom_id FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id INNER JOIN connected AS T3 ON T1.bond_id = T3.bond_id WHERE T1.bond_id = 'TR001_6_9'\t----- bird -----\ttoxicology",
    "237": "SELECT T2.label, CASE WHEN T2.label = '+' THEN 'Carcinogenic' ELSE 'Not Carcinogenic' END AS Carcinogenicity FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.atom_id = 'TR001_10'\t----- bird -----\ttoxicology",
    "238": "SELECT COUNT(DISTINCT T1.molecule_id) FROM bond AS T1 WHERE T1.bond_type = '#'\t----- bird -----\ttoxicology",
    "239": "SELECT COUNT(*) FROM connected WHERE atom_id = 'TR%_19' OR atom_id2 = 'TR%_19';\t----- bird -----\ttoxicology",
    "240": "SELECT a.element FROM atom a JOIN molecule m ON a.molecule_id = m.molecule_id WHERE m.molecule_id = 'TR004' AND a.element IN ('cl', 'c', 'h', 'o', 's', 'n', 'p', 'na', 'br', 'f', 'i', 'sn', 'pb', 'te', 'ca')\t----- bird -----\ttoxicology",
    "241": "SELECT COUNT(*) FROM molecule WHERE label = '-'\t----- bird -----\ttoxicology",
    "242": "SELECT m.label FROM atom a JOIN molecule m ON a.molecule_id = m.molecule_id WHERE SUBSTRING(a.atom_id, 7, 2) BETWEEN '21' AND '25' AND m.label = '+';\t----- bird -----\ttoxicology",
    "243": "SELECT T3.bond_type FROM connected AS T1 INNER JOIN atom AS T2 ON T1.atom_id = T2.atom_id INNER JOIN atom AS T3 ON T1.atom_id2 = T3.atom_id INNER JOIN bond AS T4 ON T1.bond_id = T4.bond_id WHERE (T2.element = 'p' AND T3.element = 'n') OR (T2.element = 'n' AND T3.element = 'p')\t----- bird -----\ttoxicology",
    "244": "SELECT m.label FROM molecule m JOIN bond b ON m.molecule_id = b.molecule_id WHERE b.bond_type = ' = ' GROUP BY m.molecule_id ORDER BY COUNT(*) DESC LIMIT 1;\t----- bird -----\ttoxicology",
    "245": "SELECT AVG(bond_count) FROM ( SELECT COUNT(b.bond_id) AS bond_count FROM atom a JOIN bond b ON a.molecule_id = b.molecule_id WHERE a.element = 'i' GROUP BY a.atom_id ) subquery;\t----- bird -----\ttoxicology",
    "246": "SELECT B.bond_type, B.bond_id FROM bond AS B INNER JOIN connected AS C ON B.molecule_id = C.bond_id INNER JOIN atom AS A ON C.atom_id = A.atom_id WHERE A.atom_id = 'atom_45'\t----- bird -----\ttoxicology",
    "247": "SELECT element FROM atom WHERE atom_id NOT IN (SELECT atom_id FROM connected)\t----- bird -----\ttoxicology",
    "248": "SELECT T1.atom_id FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.molecule_id = 'TR447' AND T2.bond_type = '#'\t----- bird -----\ttoxicology",
    "249": "SELECT element FROM atom WHERE molecule_id = (SELECT molecule_id FROM bond WHERE bond_id = 'TR144_8_19')\t----- bird -----\ttoxicology",
    "250": "SELECT T1.label, COUNT(T2.bond_id) AS num_double_bonds FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '+' AND T2.bond_type = ' = ' GROUP BY T1.label ORDER BY num_double_bonds DESC LIMIT 1;\t----- bird -----\ttoxicology",
    "251": "SELECT element FROM atom WHERE molecule_id IN (SELECT molecule_id FROM molecule WHERE label = '+') GROUP BY element ORDER BY COUNT(*) ASC LIMIT 1;\t----- bird -----\ttoxicology",
    "252": "SELECT T2.atom_id FROM connected AS T1 INNER JOIN atom AS T2 ON T1.atom_id2 = T2.atom_id WHERE T1.atom_id IN (SELECT atom_id FROM atom WHERE element = 'pb')\t----- bird -----\ttoxicology",
    "253": "SELECT T1.element FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.bond_type = '#';\t----- bird -----\ttoxicology",
    "254": "SELECT (COUNT(bond_id) / (SELECT COUNT(atom_id) FROM atom WHERE element = (SELECT element FROM atom GROUP BY element ORDER BY COUNT(*) DESC LIMIT 1))) * 100 FROM bond INNER JOIN connected ON bond.molecule_id = connected.bond_id INNER JOIN atom ON connected.atom_id = atom.atom_id GROUP BY atom.element;\t----- bird -----\ttoxicology",
    "255": "SELECT DIVIDE(SUM(m.label = '+'), COUNT(b.bond_id)) FROM bond b JOIN molecule m ON b.molecule_id = m.molecule_id WHERE b.bond_type = '-'\t----- bird -----\ttoxicology",
    "256": "SELECT COUNT(*) AS total_atoms FROM atom WHERE element IN ('c', 'h')\t----- bird -----\ttoxicology",
    "257": "SELECT atom_id2 FROM connected WHERE atom_id IN (SELECT atom_id FROM atom WHERE element = 's')\t----- bird -----\ttoxicology",
    "258": "SELECT bond_type FROM atom JOIN bond ON atom.molecule_id = bond.molecule_id WHERE element = 'sn'\t----- bird -----\ttoxicology",
    "259": "SELECT COUNT(DISTINCT a.element) FROM atom a JOIN bond b ON a.molecule_id = b.molecule_id JOIN connected c ON a.atom_id = c.atom_id WHERE b.bond_type = '-'\t----- bird -----\ttoxicology",
    "260": "SELECT COUNT(DISTINCT a.atom_id) FROM atom a JOIN bond b ON a.molecule_id = b.molecule_id JOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2 JOIN molecule m ON a.molecule_id = m.molecule_id WHERE b.bond_type = '#' AND (a.element = 'p' OR a.element = 'br')\t----- bird -----\ttoxicology",
    "261": "SELECT bond_id FROM bond INNER JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE molecule.label = '+'\t----- bird -----\ttoxicology",
    "262": "SELECT T1.molecule_id FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '-' AND T2.label = '-'\t----- bird -----\ttoxicology",
    "263": "SELECT DIVIDE(SUM(CASE WHEN T1.element = 'cl' THEN 1 ELSE 0 END), COUNT(T1.atom_id)) as percent FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.bond_type = '-'\t----- bird -----\ttoxicology",
    "264": "SELECT m.label FROM molecule m WHERE m.molecule_id IN ('TR000', 'TR001', 'TR002')\t----- bird -----\ttoxicology",
    "265": "SELECT molecule_id FROM molecule WHERE label = '-'\t----- bird -----\ttoxicology",
    "266": "SELECT COUNT(*) AS total_carcinogenic_molecules FROM molecule WHERE molecule_id BETWEEN 'TR000' AND 'TR030' AND label = '+';\t----- bird -----\ttoxicology",
    "267": "SELECT B.bond_type FROM bond AS B INNER JOIN molecule AS M ON B.molecule_id = M.molecule_id WHERE M.molecule_id BETWEEN 'TR000' AND 'TR050'\t----- bird -----\ttoxicology",
    "268": "SELECT T1.element FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id WHERE T1.bond_id = 'TR001_10_11'\t----- bird -----\ttoxicology",
    "269": "SELECT COUNT(bond_id) FROM atom WHERE element = 'i'\t----- bird -----\ttoxicology",
    "270": "SELECT T1.label FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.element = 'Ca' GROUP BY T1.label ORDER BY COUNT(*) DESC LIMIT 1\t----- bird -----\ttoxicology",
    "271": "SELECT COUNT(*) FROM connected AS T1 INNER JOIN atom AS T2 ON T1.atom_id = T2.atom_id INNER JOIN atom AS T3 ON T1.atom_id2 = T3.atom_id INNER JOIN bond AS T4 ON T1.bond_id = T4.bond_id WHERE T4.bond_id = 'TR001_1_8' AND (T2.element = 'cl' OR T2.element = 'c') AND (T3.element = 'cl' OR T3.element = 'c')\t----- bird -----\ttoxicology",
    "272": "SELECT T1.molecule_id FROM bond AS T2 INNER JOIN molecule AS T1 ON T2.molecule_id = T1.molecule_id WHERE T2.bond_type = '#' AND T1.label = '-' AND T1.molecule_id IN ( SELECT T3.molecule_id FROM atom AS T3 WHERE T3.element = 'c' GROUP BY T3.molecule_id HAVING COUNT(*) = 3 )\t----- bird -----\ttoxicology",
    "273": "SELECT DIVIDE(SUM(element = 'cl'), COUNT(molecule_id)) as percentage FROM atom INNER JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.label = '+'\t----- bird -----\ttoxicology",
    "274": "SELECT T1.element FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.molecule_id = 'TR001'\t----- bird -----\ttoxicology",
    "275": "SELECT molecule_id FROM bond WHERE bond_type = ' = ';\t----- bird -----\ttoxicology",
    "276": "SELECT connected.atom_id, connected.atom_id2 FROM connected JOIN bond ON connected.bond_id = bond.bond_id WHERE bond.bond_type = '#'\t----- bird -----\ttoxicology",
    "277": "SELECT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_id = 'TR005_16_26' AND T1.element IN ('cl', 'br', 'pb', 'te')\t----- bird -----\ttoxicology",
    "278": "SELECT COUNT(*) FROM molecule JOIN bond ON molecule.molecule_id = bond.molecule_id WHERE bond.bond_type = '-' AND molecule.label = '-'\t----- bird -----\ttoxicology",
    "279": "SELECT T2.label FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_id = 'TR001_10_11'\t----- bird -----\ttoxicology",
    "280": "SELECT T2.bond_id, T3.label FROM connected AS T1 INNER JOIN bond AS T2 ON T1.bond_id = T2.bond_id INNER JOIN molecule AS T3 ON T2.molecule_id = T3.molecule_id WHERE T2.bond_type = '#' AND (T3.label = '+' OR T3.label = '-')\t----- bird -----\ttoxicology",
    "281": "SELECT T2.element FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '+' AND SUBSTR(T2.atom_id, 7, 1) = '4' AND T2.element = 'cl'\t----- bird -----\ttoxicology",
    "282": "SELECT SUM(CASE WHEN element = 'h' THEN 1 ELSE 0 END) / COUNT(*) AS ratio, label FROM atom WHERE molecule_id = 'TR006'\t----- bird -----\ttoxicology",
    "283": "SELECT m.label FROM molecule AS m INNER JOIN atom AS a ON m.molecule_id = a.molecule_id WHERE a.element = 'ca' AND (m.label = '+' OR m.label = '-')\t----- bird -----\ttoxicology",
    "284": "SELECT T2.bond_type FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'te' GROUP BY T2.bond_type;\t----- bird -----\ttoxicology",
    "285": "SELECT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_id = 'TR001_10_11'\t----- bird -----\ttoxicology",
    "286": "SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM bond WHERE bond_type = '#') AS PercentTripleBonds FROM bond WHERE bond_type = '#'\t----- bird -----\ttoxicology",
    "287": "SELECT DIVIDE(SUM(CASE WHEN bond_type = ' = ' THEN 1 ELSE 0 END), COUNT(bond_id)) * 100 AS percent FROM bond WHERE molecule_id = 'TR047'\t----- bird -----\ttoxicology",
    "288": "SELECT T1.label FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.atom_id = 'TR001_1' AND T1.label = '+'\t----- bird -----\ttoxicology",
    "289": "SELECT label FROM molecule WHERE molecule_id = 'TR151' AND label = '+'\t----- bird -----\ttoxicology",
    "290": "SELECT element FROM atom WHERE molecule_id = 'TR151' AND element = 'cl'\t----- bird -----\ttoxicology",
    "291": "SELECT COUNT(*) FROM molecule WHERE label = '+'\t----- bird -----\ttoxicology",
    "292": "SELECT atom_id FROM atom WHERE molecule_id BETWEEN 'TR010' AND 'TR050' AND element = 'c'\t----- bird -----\ttoxicology",
    "293": "SELECT COUNT(*) FROM atom WHERE molecule_id IN (SELECT molecule_id FROM molecule WHERE label = '+')\t----- bird -----\ttoxicology",
    "294": "SELECT T2.bond_id FROM bond AS T2 INNER JOIN molecule AS T1 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '+' AND T2.bond_type = ' = '\t----- bird -----\ttoxicology",
    "295": "SELECT COUNT(*) FROM atom WHERE molecule_id IN (SELECT molecule_id FROM molecule WHERE label = '+' AND element = 'h')\t----- bird -----\ttoxicology",
    "296": "SELECT molecule_id FROM bond b JOIN connected c ON b.bond_id = c.bond_id JOIN atom a ON c.atom_id = a.atom_id WHERE a.element = 'TR00_1' AND b.bond_type = 'TR00_1_2'\t----- bird -----\ttoxicology",
    "297": "SELECT T1.atom_id FROM atom AS T1 LEFT JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'c' AND (T2.label IS NULL OR T2.label = '-')\t----- bird -----\ttoxicology",
    "298": "SELECT (DIVIDE(SUM(CASE WHEN label = '+' AND element = 'h' THEN 1 ELSE 0 END), COUNT(molecule_id)) * 100.0) AS percentage FROM atom INNER JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE element = 'h' AND molecule_id IN (SELECT molecule_id FROM molecule WHERE label = '+')\t----- bird -----\ttoxicology",
    "299": "SELECT label FROM molecule WHERE molecule_id = 'TR124'\t----- bird -----\ttoxicology",
    "300": "SELECT atom_id FROM atom WHERE molecule_id = 'TR186'\t----- bird -----\ttoxicology",
    "301": "SELECT B.bond_type FROM bond AS B INNER JOIN molecule AS M ON B.molecule_id = M.molecule_id WHERE M.label = 'TR007_4_19'\t----- bird -----\ttoxicology",
    "302": "SELECT A.element FROM atom AS A INNER JOIN connected AS C ON A.atom_id = C.atom_id INNER JOIN bond AS B ON C.bond_id = B.bond_id WHERE B.bond_id = 'TR001_2_4'\t----- bird -----\ttoxicology",
    "303": "SELECT COUNT(*) AS double_bonds, CASE WHEN M.label = '+' THEN 'Carcinogenic' WHEN M.label = '-' THEN 'Non-carcinogenic' ELSE 'Unknown' END AS carcinogenic FROM bond AS B INNER JOIN molecule AS M ON B.molecule_id = M.molecule_id WHERE B.bond_type = ' = ' AND M.molecule_id = 'TR006'\t----- bird -----\ttoxicology",
    "304": "SELECT T1.label, T2.element FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '+' AND (T2.element = 'cl' OR T2.element = 'c' OR T2.element = 'h' OR T2.element = 'o' OR T2.element = 's' OR T2.element = 'n' OR T2.element = 'p' OR T2.element = 'na' OR T2.element = 'br' OR T2.element = 'f' OR T2.element = 'i' OR T2.element = 'sn' OR T2.element = 'pb' OR T2.element = 'te' OR T2.element = 'ca')\t----- bird -----\ttoxicology",
    "305": "SELECT B.bond_id, A.atom_id, A2.atom_id FROM bond AS B INNER JOIN connected AS C ON B.bond_id = C.bond_id INNER JOIN atom AS A ON C.atom_id = A.atom_id INNER JOIN atom AS A2 ON C.atom_id2 = A2.atom_id WHERE B.bond_type = '-'\t----- bird -----\ttoxicology",
    "306": "SELECT m.label, a.element FROM molecule m JOIN bond b ON m.molecule_id = b.molecule_id JOIN atom a ON m.molecule_id = a.molecule_id WHERE b.bond_type = '#' AND (a.element = 'cl' OR a.element = 'c' OR a.element = 'h' OR a.element = 'o' OR a.element = 's' OR a.element = 'n' OR a.element = 'p' OR a.element = 'na' OR a.element = 'br' OR a.element = 'f' OR a.element = 'i' OR a.element = 'sn' OR a.element = 'pb' OR a.element = 'te' OR a.element = 'ca')\t----- bird -----\ttoxicology",
    "307": "SELECT A.element FROM `atom` AS A INNER JOIN `connected` AS C ON A.atom_id = C.atom_id INNER JOIN `bond` AS B ON C.bond_id = B.bond_id WHERE B.bond_id = 'TR000_2_3'\t----- bird -----\ttoxicology",
    "308": "SELECT COUNT(*) FROM atom AS A1 INNER JOIN connected AS C ON A1.atom_id = C.atom_id INNER JOIN atom AS A2 ON C.atom_id2 = A2.atom_id INNER JOIN bond AS B ON C.bond_id = B.bond_id WHERE A1.element = 'cl' OR A2.element = 'cl'\t----- bird -----\ttoxicology",
    "309": "SELECT atom_id FROM atom WHERE molecule_id = 'TR346'; SELECT COUNT(DISTINCT bond_type) AS num_bond_types FROM bond WHERE molecule_id = 'TR346';\t----- bird -----\ttoxicology",
    "310": "SELECT COUNT(*) FROM bond JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE bond_type = ' = ' AND label = '+'\t----- bird -----\ttoxicology",
    "311": "SELECT COUNT(DISTINCT M.molecule_id) FROM molecule M LEFT JOIN atom A ON M.molecule_id = A.molecule_id LEFT JOIN bond B ON M.molecule_id = B.molecule_id LEFT JOIN connected C ON A.atom_id = C.atom_id WHERE A.element != 's' AND (B.bond_type != ' = ' OR B.bond_type IS NULL)\t----- bird -----\ttoxicology",
    "312": "SELECT m.label FROM molecule m JOIN bond b ON m.molecule_id = b.molecule_id WHERE b.bond_id = 'TR001_2_4' AND m.label = '+';\t----- bird -----\ttoxicology",
    "313": "SELECT COUNT(*) FROM atom WHERE molecule_id = 'TR005'\t----- bird -----\ttoxicology",
    "314": "SELECT COUNT(*) FROM bond WHERE bond_type = '-'\t----- bird -----\ttoxicology",
    "315": "SELECT m.label FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id WHERE a.element LIKE '%cl%' AND m.label = '+'\t----- bird -----\ttoxicology",
    "316": "SELECT molecule_id FROM molecule WHERE molecule_id IN ( SELECT molecule_id FROM atom WHERE element = 'c' ) AND label = '-'\t----- bird -----\ttoxicology",
    "317": "SELECT DIVIDE(SUM(label = '+') AND element = 'Cl', COUNT(molecule_id)) AS percentage FROM atom JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE element = 'Cl'\t----- bird -----\ttoxicology",
    "318": "SELECT molecule_id FROM bond WHERE bond_id = 'TR001_1_7'\t----- bird -----\ttoxicology",
    "319": "SELECT COUNT(element) FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE bond.bond_id = 'TR001_3_4' AND element IN ('cl', 'c', 'h', 'o', 's', 'n', 'p', 'na', 'br', 'f', 'i', 'sn', 'pb', 'te', 'ca')\t----- bird -----\ttoxicology",
    "320": "SELECT b.bond_type FROM connected c JOIN bond b ON c.bond_id = b.bond_id WHERE c.atom_id = 'TR000_1' AND c.atom_id2 = 'TR000_2'\t----- bird -----\ttoxicology",
    "321": "SELECT m.label FROM atom AS a1 JOIN connected AS c ON a1.atom_id = c.atom_id JOIN atom AS a2 ON c.atom_id2 = a2.atom_id JOIN molecule AS m ON a2.molecule_id = m.molecule_id WHERE a1.atom_id = 'TR000_2' AND a2.atom_id = 'TR000_4';\t----- bird -----\ttoxicology",
    "322": "SELECT element FROM atom WHERE atom_id = 'TR000_1' AND molecule_id IN (SELECT molecule_id FROM molecule WHERE label = 'toxicology')\t----- bird -----\ttoxicology",
    "323": "SELECT label FROM molecule WHERE molecule_id = 'TR000'\t----- bird -----\ttoxicology",
    "324": "SELECT DIVIDE(SUM(CASE WHEN B.bond_type = '-' THEN 1 ELSE 0 END), COUNT(B.bond_id)) as percentage FROM bond AS B\t----- bird -----\ttoxicology",
    "325": "SELECT COUNT(DISTINCT M1.molecule_id) FROM molecule AS M1 INNER JOIN atom AS A1 ON M1.molecule_id = A1.molecule_id WHERE A1.element = 'n' AND M1.label = '+'\t----- bird -----\ttoxicology",
    "326": "SELECT m.label FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id JOIN bond b ON m.molecule_id = b.molecule_id WHERE a.element = 'S' AND b.bond_type = ' = '\t----- bird -----\ttoxicology",
    "327": "SELECT molecule_id FROM molecule WHERE label = '-' GROUP BY molecule_id HAVING COUNT(atom_id) > 5;\t----- bird -----\ttoxicology",
    "328": "SELECT T1.element FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.molecule_id = 'TR024' AND T2.bond_type = '='\t----- bird -----\ttoxicology",
    "329": "SELECT molecule_id FROM molecule WHERE label = '+' GROUP BY molecule_id ORDER BY COUNT(atom.molecule_id) DESC LIMIT 1;\t----- bird -----\ttoxicology",
    "330": "SELECT (DIVIDE(SUM(m.label = '+'), COUNT(DISTINCT m.molecule_id)) * 100.0) AS percentage FROM molecule AS m INNER JOIN atom AS a ON m.molecule_id = a.molecule_id INNER JOIN bond AS b ON m.molecule_id = b.molecule_id INNER JOIN connected AS c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2 WHERE a.element = 'h' AND b.bond_type = '#'\t----- bird -----\ttoxicology",
    "331": "SELECT COUNT(*) FROM molecule WHERE label = '+'\t----- bird -----\ttoxicology",
    "332": "SELECT COUNT(*) FROM bond WHERE bond_type = '-' AND molecule_id BETWEEN 'TR004' AND 'TR010'\t----- bird -----\ttoxicology",
    "333": "SELECT COUNT(*) AS carbon_count FROM atom WHERE molecule_id = 'TR008' AND element = 'c'\t----- bird -----\ttoxicology",
    "334": "SELECT T1.element FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.atom_id = 'TR004_7' AND T2.label = '-' AND T1.element NOT IN ('cl', 'c', 'h', 'o', 's', 'n', 'p', 'na', 'br', 'f', 'i', 'sn', 'pb', 'te', 'ca')\t----- bird -----\ttoxicology",
    "335": "SELECT COUNT(DISTINCT molecule_id) FROM atom AS a INNER JOIN bond AS b ON a.molecule_id = b.molecule_id WHERE a.element = 'o' AND b.bond_type = ' = '\t----- bird -----\ttoxicology",
    "336": "SELECT COUNT(*) FROM bond JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE bond_type = '#' AND label = '-'\t----- bird -----\ttoxicology",
    "337": "SELECT T1.element, T2.bond_type FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.molecule_id = 'TR016'\t----- bird -----\ttoxicology",
    "338": "SELECT atom_id FROM atom WHERE element = 'c' AND molecule_id = 'TR012' AND atom_id IN ( SELECT atom_id FROM bond JOIN connected ON bond.molecule_id = connected.bond_id WHERE bond_type = ' = ' )\t----- bird -----\ttoxicology",
    "339": "SELECT T1.atom_id FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+' AND T1.element = 'o'\t----- bird -----\ttoxicology",
    "340": "SELECT * FROM cards WHERE cardKingdomFoilId = cardKingdomId AND cardKingdomId IS NOT NULL\t----- bird -----\tcard_games",
    "341": "SELECT name FROM cards WHERE borderColor = 'borderless' AND cardKingdomFoilId IS NULL AND cardKingdomId IS NOT NULL\t----- bird -----\tcard_games",
    "342": "SELECT name FROM cards WHERE convertedManaCost > (SELECT MAX(faceConvertedManaCost) FROM cards)\t----- bird -----\tcard_games",
    "343": "SELECT name FROM cards WHERE frameVersion = '2015' AND edhrecRank < 100;\t----- bird -----\tcard_games",
    "344": "SELECT c.name FROM cards c INNER JOIN legalities l ON c.uuid = l.uuid WHERE c.rarity = 'mythic' AND l.status = 'Banned' AND l.format = 'gladiator';\t----- bird -----\tcard_games",
    "345": "SELECT cards.name, legalities.status FROM cards JOIN legalities ON cards.uuid = legalities.uuid WHERE cards.types = 'Artifact' AND cards.side IS NULL AND legalities.format = 'vintage'\t----- bird -----\tcard_games",
    "346": "SELECT cards.id, cards.artist FROM cards JOIN legalities ON cards.uuid = legalities.uuid WHERE (cards.power = '*' OR cards.power IS NULL) AND legalities.format = 'commander' AND legalities.status = 'Legal'\t----- bird -----\tcard_games",
    "347": "SELECT cards.asciiName, rulings.text, cards.hasContentWarning FROM cards JOIN rulings ON cards.uuid = rulings.uuid WHERE cards.artist = 'Stephen Daniele' AND cards.hasContentWarning = 1;\t----- bird -----\tcard_games",
    "348": "SELECT R.text FROM rulings AS R INNER JOIN cards AS C ON R.uuid = C.uuid WHERE C.name = 'Sublime Epiphany' AND C.number = '74s'\t----- bird -----\tcard_games",
    "349": "SELECT T1.name, T1.artist FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.uuid = T2.uuid WHERE T1.isPromo = 1 GROUP BY T1.name, T1.artist ORDER BY COUNT(T2.uuid) DESC LIMIT 1;\t----- bird -----\tcard_games",
    "350": "SELECT T2.language FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.name = 'Annul' AND T1.number = '29'\t----- bird -----\tcard_games",
    "351": "SELECT cards.name FROM cards INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE foreign_data.language = 'Japanese'\t----- bird -----\tcard_games",
    "352": "SELECT (SUM(CASE WHEN language = 'Chinese Simplified' THEN 1 ELSE 0 END) / COUNT(id)) * 100 AS percentage FROM foreign_data;\t----- bird -----\tcard_games",
    "353": "SELECT T1.name AS set_name, T2.totalSetSize AS total_cards_per_set FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.language = 'Italian';\t----- bird -----\tcard_games",
    "354": "SELECT COUNT(DISTINCT type) FROM cards WHERE artist = 'Aaron Boyd'\t----- bird -----\tcard_games",
    "355": "SELECT keywords FROM cards WHERE name = 'Angel of Mercy'\t----- bird -----\tcard_games",
    "356": "SELECT COUNT(*) FROM cards WHERE power = '*'\t----- bird -----\tcard_games",
    "357": "SELECT promoTypes FROM cards WHERE name = 'Duress'\t----- bird -----\tcard_games",
    "358": "SELECT borderColor FROM cards WHERE name = 'Ancestor\\'s Chosen'\t----- bird -----\tcard_games",
    "359": "SELECT originalType FROM cards WHERE name = \"Ancestor's Chosen\"\t----- bird -----\tcard_games",
    "360": "SELECT S.language FROM cards AS C INNER JOIN sets AS S ON C.setCode = S.code WHERE C.name = 'Angel of Mercy'\t----- bird -----\tcard_games",
    "361": "SELECT COUNT(c.uuid) FROM legalities l JOIN cards c ON l.uuid = c.uuid WHERE l.status = 'restricted' AND c.isTextless = 0;\t----- bird -----\tcard_games",
    "362": "SELECT T1.text FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.uuid = T2.uuid WHERE T1.name = 'Condemn'\t----- bird -----\tcard_games",
    "363": "SELECT COUNT(*) FROM cards INNER JOIN legalities ON cards.uuid = legalities.uuid WHERE legalities.status = 'restricted' AND cards.isStarter = 1;\t----- bird -----\tcard_games",
    "364": "SELECT T2.status FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.name = 'Cloudchaser Eagle';\t----- bird -----\tcard_games",
    "365": "SELECT type FROM cards WHERE name = 'Benalish Knight';\t----- bird -----\tcard_games",
    "366": "SELECT legalities.format FROM cards JOIN legalities ON cards.uuid = legalities.uuid WHERE cards.name = 'Benalish Knight';\t----- bird -----\tcard_games",
    "367": "SELECT artist FROM cards WHERE flavorText LIKE '%Phyrexian%'\t----- bird -----\tcard_games",
    "368": "SELECT (COUNT(id) * 100) / (SELECT COUNT(id) FROM cards) AS percentage_borderless_cards FROM cards WHERE borderColor = 'borderless'\t----- bird -----\tcard_games",
    "369": "SELECT COUNT(*) FROM cards INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE foreign_data.language = 'German' AND cards.isReprint = 1;\t----- bird -----\tcard_games",
    "370": "SELECT COUNT(*) FROM cards INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE cards.borderColor = 'borderless' AND foreign_data.language = 'Russian'\t----- bird -----\tcard_games",
    "371": "SELECT CAST(SUM(CASE WHEN T1.language = 'French' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) FROM cards AS T1 WHERE T1.isStorySpotlight = 1;\t----- bird -----\tcard_games",
    "372": "SELECT COUNT(*) FROM cards WHERE toughness = '99'\t----- bird -----\tcard_games",
    "373": "SELECT asciiName FROM cards WHERE artist = 'Aaron Boyd'\t----- bird -----\tcard_games",
    "374": "SELECT COUNT(*) FROM cards WHERE borderColor = 'black' AND availability = 'mtgo'\t----- bird -----\tcard_games",
    "375": "SELECT id FROM cards WHERE convertedManaCost = 0;\t----- bird -----\tcard_games",
    "376": "SELECT layout FROM cards WHERE keywords LIKE '%flying%'\t----- bird -----\tcard_games",
    "377": "SELECT COUNT(*) FROM cards WHERE originalType = 'Summon - Angel' AND subtypes != 'Angel'\t----- bird -----\tcard_games",
    "378": "SELECT id FROM cards WHERE cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL\t----- bird -----\tcard_games",
    "379": "SELECT T1.id FROM cards AS T1 WHERE T1.duelDeck = 'a'\t----- bird -----\tcard_games",
    "380": "SELECT edhrecRank FROM cards WHERE frameVersion = '2015'\t----- bird -----\tcard_games",
    "381": "SELECT cards.artist FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE foreign_data.language = 'Chinese Simplified'\t----- bird -----\tcard_games",
    "382": "SELECT c.name FROM cards c INNER JOIN foreign_data fd ON c.uuid = fd.uuid WHERE c.availability = 'paper' AND fd.language = 'Japanese'\t----- bird -----\tcard_games",
    "383": "SELECT COUNT(*) FROM cards INNER JOIN legalities ON cards.uuid = legalities.uuid WHERE legalities.status = 'Banned' AND cards.borderColor = 'white'\t----- bird -----\tcard_games",
    "384": "SELECT cards.uuid, foreign_data.language FROM cards JOIN legalities ON cards.uuid = legalities.uuid JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE legalities.format = 'legacy'\t----- bird -----\tcard_games",
    "385": "SELECT text FROM rulings WHERE uuid = (SELECT uuid FROM cards WHERE name = 'Beacon of Immortality')\t----- bird -----\tcard_games",
    "386": "SELECT COUNT(*) AS num_cards, L.status FROM cards AS C INNER JOIN legalities AS L ON C.uuid = L.uuid WHERE C.frameVersion = 'future' AND L.status = 'legal'\t----- bird -----\tcard_games",
    "387": "SELECT T1.name, T1.colors FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.code = 'OGW'\t----- bird -----\tcard_games",
    "388": "SELECT cards.name, set_translations.language FROM cards JOIN set_translations ON cards.setCode = set_translations.setCode WHERE cards.setCode = '10E' AND cards.convertedManaCost = 5;\t----- bird -----\tcard_games",
    "389": "SELECT T1.name, T2.date FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.uuid = T2.uuid WHERE T1.originalType = 'Creature - Elf'\t----- bird -----\tcard_games",
    "390": "SELECT cards.colors, legalities.format FROM cards INNER JOIN legalities ON cards.uuid = legalities.uuid WHERE cards.id BETWEEN 1 AND 20;\t----- bird -----\tcard_games",
    "391": "SELECT cards.name FROM cards INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE cards.originalType = 'Artifact' AND cards.colors LIKE '%B%' AND foreign_data.language <> 'English'\t----- bird -----\tcard_games",
    "392": "SELECT T1.name FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.rarity = 'uncommon' ORDER BY T1.name, T2.format;\t----- bird -----\tcard_games",
    "393": "SELECT COUNT(*) FROM cards WHERE artist = 'John Avon' AND cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NULL;\t----- bird -----\tcard_games",
    "394": "SELECT COUNT(*) FROM cards WHERE borderColor = 'white' AND cardKingdomFoilId = cardKingdomId AND cardKingdomId IS NOT NULL\t----- bird -----\tcard_games",
    "395": "SELECT COUNT(*) AS num_cards FROM cards WHERE artist = 'UDON' AND availability = 'mtgo' AND hand = -1\t----- bird -----\tcard_games",
    "396": "SELECT COUNT(*) FROM cards WHERE frameVersion = '1993' AND availability = 'paper' AND hasContentWarning = 1\t----- bird -----\tcard_games",
    "397": "SELECT manaCost FROM cards WHERE layout = 'normal' AND frameVersion = '2003' AND borderColor = 'black' AND availability IN ('paper', 'mtgo')\t----- bird -----\tcard_games",
    "398": "SELECT SUM(convertedManaCost) FROM cards WHERE artist = 'Rob Alexander'\t----- bird -----\tcard_games",
    "399": "SELECT DISTINCT T1.subtypes, T1.supertypes FROM cards AS T1 WHERE T1.availability = 'arena'\t----- bird -----\tcard_games",
    "400": "SELECT T2.setCode FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.language = 'Spanish'\t----- bird -----\tcard_games",
    "401": "SELECT (COUNT(hand = '+3') * 100) / COUNT(id) FROM cards WHERE frameEffects = 'legendary'\t----- bird -----\tcard_games",
    "402": "SELECT T1.id FROM cards AS T1 WHERE T1.isStorySpotlight = 1 AND T1.isTextless = 0 SELECT (COUNT(T2.id) / COUNT(T1.id)) * 100 AS percentage FROM cards AS T1 LEFT JOIN cards AS T2 ON T1.id = T2.id WHERE T1.isStorySpotlight = 1\t----- bird -----\tcard_games",
    "403": "SELECT cards.name, (COUNT(CASE WHEN foreign_data.language = 'Spanish' THEN foreign_data.id END) / COUNT(foreign_data.id)) * 100 AS percentage FROM cards INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid GROUP BY cards.name ORDER BY percentage DESC;\t----- bird -----\tcard_games",
    "404": "SELECT T2.language FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.baseSetSize = 309\t----- bird -----\tcard_games",
    "405": "SELECT COUNT(*) FROM set_translations WHERE language = 'Portuguese (Brasil)' AND setCode IN (SELECT code FROM sets WHERE block = 'Commander')\t----- bird -----\tcard_games",
    "406": "SELECT cards.id FROM cards JOIN legalities ON cards.uuid = legalities.uuid WHERE cards.types LIKE '%Creature%' AND cards.types LIKE '%Goblin%' AND legalities.status = 'legal'\t----- bird -----\tcard_games",
    "407": "SELECT DISTINCT types FROM cards WHERE uuid IN (SELECT uuid FROM foreign_data WHERE language = 'German') AND subtypes IS NOT NULL AND supertypes IS NOT NULL;\t----- bird -----\tcard_games",
    "408": "SELECT COUNT(*) FROM cards WHERE power IS NULL AND text LIKE '%triggered ability%'\t----- bird -----\tcard_games",
    "409": "SELECT COUNT(*) FROM cards AS c INNER JOIN legalities AS l ON c.uuid = l.uuid INNER JOIN rulings AS r ON c.uuid = r.uuid WHERE l.format = 'pre-modern' AND r.text = 'This is a triggered mana ability' AND c.side IS NULL\t----- bird -----\tcard_games",
    "410": "SELECT T1.id FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.artist = 'Erica Yang' AND T2.format = 'pauper' AND T1.availability = 'paper'\t----- bird -----\tcard_games",
    "411": "SELECT T1.artist FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.text = 'Das perfekte Gegenmittel zu einer dichten Formation'\t----- bird -----\tcard_games",
    "412": "SELECT T2.name FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.language = 'French' AND T1.type = 'Creature' AND T1.layout = 'normal' AND T1.borderColor = 'black' AND T1.artist = 'Matthew D. Wilson'\t----- bird -----\tcard_games",
    "413": "SELECT COUNT(*) FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.uuid = T2.uuid WHERE T1.rarity = 'rare' AND T2.date = '2009-01-10'\t----- bird -----\tcard_games",
    "414": "SELECT language FROM sets WHERE baseSetSize = 180 AND block = 'Ravnica'\t----- bird -----\tcard_games",
    "415": "SELECT (COUNT(*) * 100) / (SELECT COUNT(*) FROM cards WHERE format = 'commander' AND status = 'legal') FROM cards WHERE format = 'commander' AND status = 'legal' AND hasContentWarning = 0;\t----- bird -----\tcard_games",
    "416": "SELECT (COUNT(CASE WHEN language = 'French' AND (power IS NULL OR power = '*') THEN 1 END) * 100) / COUNT(CASE WHEN power IS NULL OR power = '*' THEN 1 END) AS percentage FROM cards;\t----- bird -----\tcard_games",
    "417": "SELECT (COUNT(CASE WHEN T1.language = 'Japanese' THEN 1 END) / COUNT(T1.language)) * 100 FROM set_translations AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.type = 'expansion';\t----- bird -----\tcard_games",
    "418": "SELECT T1.availability FROM cards AS T1 WHERE T1.artist = 'Daren Bader'\t----- bird -----\tcard_games",
    "419": "SELECT COUNT(*) FROM cards WHERE borderColor = 'borderless' AND edhrecRank > 12000;\t----- bird -----\tcard_games",
    "420": "SELECT COUNT(*) FROM cards WHERE isOversized = 1 OR isReprint = 1 OR isPromo = 1;\t----- bird -----\tcard_games",
    "421": "SELECT name FROM cards WHERE (power IS NULL OR power = '*') AND promoTypes = 'arenaleague' ORDER BY name LIMIT 3\t----- bird -----\tcard_games",
    "422": "SELECT language FROM foreign_data WHERE multiverseid = 149934;\t----- bird -----\tcard_games",
    "423": "SELECT cardKingdomFoilId, cardKingdomId FROM cards WHERE cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL ORDER BY cardKingdomFoilId, cardKingdomId LIMIT 3\t----- bird -----\tcard_games",
    "424": "SELECT (COUNT(CASE WHEN isTextless = 1 AND layout = 'normal' THEN 1 END) / COUNT(CASE WHEN isTextless = 1 THEN 1 END)) * 100 as proportion FROM cards;\t----- bird -----\tcard_games",
    "425": "SELECT number FROM cards WHERE side IS NULL AND subtypes LIKE '%Angel%' AND subtypes LIKE '%Wizard%' AND id NOT IN (SELECT id FROM cards WHERE side IS NOT NULL)\t----- bird -----\tcard_games",
    "426": "SELECT sets.name FROM sets WHERE sets.mtgoCode IS NULL OR sets.mtgoCode = '' ORDER BY sets.name LIMIT 3;\t----- bird -----\tcard_games",
    "427": "SELECT language FROM set_translations WHERE setCode = 'ARC' AND mcmName = 'Archenemy'\t----- bird -----\tcard_games",
    "428": "SELECT T1.name, T2.translation FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.id = 5;\t----- bird -----\tcard_games",
    "429": "SELECT S.language, S.type FROM sets AS S WHERE S.id = 206;\t----- bird -----\tcard_games",
    "430": "SELECT T1.name AS set_name, T1.id AS set_id FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.language = 'Italian' AND T1.block = 'Shadowmoor' ORDER BY T1.name LIMIT 2\t----- bird -----\tcard_games",
    "431": "SELECT S.id FROM sets AS S WHERE S.isForeignOnly = 1 AND S.isFoilOnly = 1 AND S.keyruneCode = 'Japanese'\t----- bird -----\tcard_games",
    "432": "SELECT T2.name FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode INNER JOIN cards AS T3 ON T1.code = T3.setCode WHERE T2.language = 'Russian' GROUP BY T1.code ORDER BY MAX(T3.baseSetSize) DESC LIMIT 1;\t----- bird -----\tcard_games",
    "433": "SELECT (DIVIDE(COUNT(*), (SELECT COUNT(*) FROM cards))) * 100 FROM cards INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE foreign_data.language = 'Chinese Simplified' AND cards.isOnlineOnly = 1;\t----- bird -----\tcard_games",
    "434": "SELECT COUNT(DISTINCT setCode) FROM set_translations WHERE language = 'Japanese' AND setCode NOT IN (SELECT code FROM sets WHERE mtgoCode IS NULL OR mtgoCode = '')\t----- bird -----\tcard_games",
    "435": "SELECT COUNT(id) AS num_black_border_cards, id FROM cards WHERE borderColor = 'black'\t----- bird -----\tcard_games",
    "436": "SELECT COUNT(id) FROM cards WHERE frameEffects = 'extendedart' SELECT id FROM cards WHERE frameEffects = 'extendedart'\t----- bird -----\tcard_games",
    "437": "SELECT name FROM cards WHERE borderColor = 'black' AND isFullArt = 1;\t----- bird -----\tcard_games",
    "438": "SELECT language FROM set_translations WHERE setCode = '174'\t----- bird -----\tcard_games",
    "439": "SELECT name FROM sets WHERE code = 'ALL'\t----- bird -----\tcard_games",
    "440": "SELECT T2.language FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.name = 'A Pedra Fellwar'\t----- bird -----\tcard_games",
    "441": "SELECT code FROM sets WHERE releaseDate = '2007-07-13'\t----- bird -----\tcard_games",
    "442": "SELECT T1.baseSetSize, T1.code FROM sets AS T1 WHERE T1.block = 'Masques' OR T1.block = 'Mirage'\t----- bird -----\tcard_games",
    "443": "SELECT code FROM sets WHERE type = 'expansion'\t----- bird -----\tcard_games",
    "444": "SELECT F.name AS foreign_name, C.type FROM cards AS C INNER JOIN foreign_data AS F ON C.uuid = F.uuid WHERE C.watermark = 'Boros'\t----- bird -----\tcard_games",
    "445": "SELECT T2.language, T2.flavorText, T1.type FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.watermark = 'colorpie'\t----- bird -----\tcard_games",
    "446": "SELECT (COUNT(CASE WHEN c.convertedManaCost = 10 THEN 1 ELSE NULL END) / COUNT(c.convertedManaCost)) * 100 AS Percentage FROM cards c INNER JOIN sets s ON c.setCode = s.code WHERE s.name = 'Abyssal Horror';\t----- bird -----\tcard_games",
    "447": "SELECT sets.code FROM sets WHERE sets.type = 'expansion commander'\t----- bird -----\tcard_games",
    "448": "SELECT T2.name, T1.type FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.watermark = 'abzan'\t----- bird -----\tcard_games",
    "449": "SELECT foreign_data.language, cards.type FROM foreign_data INNER JOIN cards ON foreign_data.uuid = cards.uuid WHERE cards.watermark = 'Azorius'\t----- bird -----\tcard_games",
    "450": "SELECT COUNT(*) FROM cards WHERE artist = 'Aaron Miller' AND cardKingdomFoilId = cardKingdomId AND cardKingdomId IS NOT NULL;\t----- bird -----\tcard_games",
    "451": "SELECT COUNT(*) FROM cards WHERE availability LIKE '%paper%' AND hand LIKE '+%'\t----- bird -----\tcard_games",
    "452": "SELECT name FROM cards WHERE isTextless = 0;\t----- bird -----\tcard_games",
    "453": "SELECT convertedManaCost FROM cards WHERE name = 'Ancestor`s Chosen';\t----- bird -----\tcard_games",
    "454": "SELECT COUNT(*) FROM cards WHERE borderColor = 'White' AND (power = '*' OR power IS NULL)\t----- bird -----\tcard_games",
    "455": "SELECT name FROM cards WHERE isPromo = 1 AND side IS NOT NULL;\t----- bird -----\tcard_games",
    "456": "SELECT T1.subtypes, T1.supertypes FROM cards AS T1 WHERE T1.name = 'Molimo, Maro-Sorcerer'\t----- bird -----\tcard_games",
    "457": "SELECT purchaseUrls FROM cards WHERE promoTypes = 'bundle'\t----- bird -----\tcard_games",
    "458": "SELECT COUNT(DISTINCT artist) FROM cards WHERE borderColor = 'black' AND availability LIKE '%arena%' AND availability LIKE '%mtgo%'\t----- bird -----\tcard_games",
    "459": "SELECT CASE WHEN (SELECT convertedManaCost FROM cards WHERE name = 'Serra Angel') > (SELECT convertedManaCost FROM cards WHERE name = 'Shrine Keeper') THEN 'Serra Angel' ELSE 'Shrine Keeper' END as card_with_higher_converted_mana_cost;\t----- bird -----\tcard_games",
    "460": "SELECT artist FROM cards WHERE flavorName = 'Battra, Dark Destroyer'\t----- bird -----\tcard_games",
    "461": "SELECT name FROM cards WHERE frameVersion = '2003' ORDER BY convertedManaCost DESC LIMIT 3\t----- bird -----\tcard_games",
    "462": "SELECT translation FROM set_translations WHERE setCode = (SELECT code FROM sets WHERE id = (SELECT id FROM cards WHERE name = 'Ancestor's Chosen')) AND language = 'Italian'\t----- bird -----\tcard_games",
    "463": "SELECT COUNT(*) FROM set_translations WHERE setCode IN (SELECT code FROM sets WHERE code IN (SELECT uuid FROM cards WHERE name = 'Angel of Mercy'))\t----- bird -----\tcard_games",
    "464": "SELECT T1.name FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code INNER JOIN set_translations AS T3 ON T2.code = T3.setCode WHERE T3.translation = 'Hauptset Zehnte Edition'\t----- bird -----\tcard_games",
    "465": "SELECT COUNT(*) FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE cards.name = 'Ancestor\\'s Chosen' AND foreign_data.language = 'Korean'\t----- bird -----\tcard_games",
    "466": "SELECT COUNT(*) FROM cards WHERE setCode = (SELECT code FROM set_translations WHERE translation = 'Hauptset Zehnte Edition') AND artist = 'Adam Rex'\t----- bird -----\tcard_games",
    "467": "SELECT S1.baseSetSize FROM sets AS S1 INNER JOIN set_translations AS S2 ON S1.code = S2.setCode WHERE S2.translation = 'Hauptset Zehnte Edition'\t----- bird -----\tcard_games",
    "468": "SELECT T2.translation FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.name = 'Eighth Edition' AND T2.language = 'Simplified Chinese';\t----- bird -----\tcard_games",
    "469": "SELECT CASE WHEN T1.mtgoCode IS NOT NULL THEN 'Yes' ELSE 'No' END AS appeared_on_mtgo FROM cards AS T1 WHERE T1.name = 'Angel of Mercy';\t----- bird -----\tcard_games",
    "470": "SELECT releaseDate FROM cards INNER JOIN sets ON cards.setCode = sets.code WHERE cards.name = 'Ancestor''s Chosen'\t----- bird -----\tcard_games",
    "471": "SELECT type FROM sets WHERE name = 'Hauptset Zehnte Edition'\t----- bird -----\tcard_games",
    "472": "SELECT COUNT(*) FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.block = 'Ice Age' AND T2.language = 'Italian'\t----- bird -----\tcard_games",
    "473": "SELECT s.name FROM cards AS c JOIN sets AS s ON c.setCode = s.code WHERE c.name = 'Adarkar Valkyrie' AND s.isForeignOnly = 1;\t----- bird -----\tcard_games",
    "474": "SELECT COUNT(DISTINCT S.code) FROM sets AS S INNER JOIN set_translations AS ST ON S.code = ST.setCode WHERE ST.language = 'Italian' AND S.baseSetSize < 10;\t----- bird -----\tcard_games",
    "475": "SELECT COUNT(id) FROM cards WHERE borderColor = 'black' AND id IN (SELECT id FROM sets WHERE name = 'Coldsnap')\t----- bird -----\tcard_games",
    "476": "SELECT cards.name FROM cards WHERE cards.convertedManaCost = (SELECT MAX(convertedManaCost) FROM cards WHERE cards.name = 'Coldsnap') AND cards.name = 'Coldsnap'\t----- bird -----\tcard_games",
    "477": "SELECT DISTINCT artist FROM cards WHERE name = 'Coldsnap' AND artist IN ('Jeremy Jarvis', 'Aaron Miller', 'Chippy')\t----- bird -----\tcard_games",
    "478": "SELECT name FROM cards WHERE setCode = (SELECT code FROM sets WHERE name = 'Coldsnap') AND number = '4'\t----- bird -----\tcard_games",
    "479": "SELECT COUNT(*) FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T1.convertedManaCost > 5 AND T2.name = 'Coldsnap' AND (T1.power = '*' OR T1.power IS NULL)\t----- bird -----\tcard_games",
    "480": "SELECT T2.flavorText FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.name = 'Ancestor''s Chosen' AND T2.language = 'Italian';\t----- bird -----\tcard_games",
    "481": "SELECT F.language FROM foreign_data AS F INNER JOIN cards AS C ON F.uuid = C.uuid WHERE C.name = 'Ancestor''s Chosen' AND F.flavorText IS NOT NULL;\t----- bird -----\tcard_games",
    "482": "SELECT T2.type FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.name = 'Ancestor''s Chosen' AND T2.language = 'German';\t----- bird -----\tcard_games",
    "483": "SELECT T2.text FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.uuid = T2.uuid INNER JOIN sets AS T3 ON T1.setCode = T3.code INNER JOIN set_translations AS T4 ON T3.code = T4.setCode WHERE T3.name = 'Coldsnap' AND T4.language = 'Italian'\t----- bird -----\tcard_games",
    "484": "SELECT T2.name FROM cards AS T1 INNER JOIN set_translations AS T2 ON T1.setCode = T2.setCode WHERE T1.setCode = 'Coldsnap' AND T2.language = 'Italian' ORDER BY T1.convertedManaCost DESC LIMIT 1;\t----- bird -----\tcard_games",
    "485": "SELECT T1.date FROM rulings AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T2.name = 'Reminisce'\t----- bird -----\tcard_games",
    "486": "SELECT (SUM(CASE WHEN convertedManaCost = 7 THEN 1 ELSE 0 END) / SUM(CASE WHEN convertedManaCost IS NOT NULL THEN 1 ELSE 0 END)) * 100 FROM cards INNER JOIN sets ON cards.setCode = sets.code WHERE sets.name = 'Coldsnap'\t----- bird -----\tcard_games",
    "487": "SELECT (SUM(cardKingdomFoilId = cardKingdomId AND cardKingdomId IS NOT NULL) / SUM(name = 'Coldsnap')) * 100 AS percentage_of_incredibly_powerful_cards FROM cards WHERE name = 'Coldsnap'\t----- bird -----\tcard_games",
    "488": "SELECT code FROM sets WHERE releaseDate = '2017-07-14'\t----- bird -----\tcard_games",
    "489": "SELECT keyruneCode FROM sets WHERE code = 'PKHC';\t----- bird -----\tcard_games",
    "490": "SELECT mcmId FROM sets WHERE code = 'SS2'\t----- bird -----\tcard_games",
    "491": "SELECT s.name FROM sets s WHERE s.releaseDate = '2017-06-09'\t----- bird -----\tcard_games",
    "492": "SELECT T1.type FROM sets AS T1 WHERE T1.name LIKE '%From the Vault: Lore%';\t----- bird -----\tcard_games",
    "493": "SELECT parentCode FROM sets WHERE name = 'Commander 2014 Oversized';\t----- bird -----\tcard_games",
    "494": "SELECT c.name, r.text, CASE WHEN c.hasContentWarning = 1 THEN 'Cards have missing or degraded properties and values' ELSE 'Cards do not have missing or degraded properties and values' END AS Property_Status FROM cards c JOIN rulings r ON c.uuid = r.uuid WHERE c.artist = 'Jim Pavelec'\t----- bird -----\tcard_games",
    "495": "SELECT T2.releaseDate FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T1.name = 'Evacuation'\t----- bird -----\tcard_games",
    "496": "SELECT baseSetSize FROM sets INNER JOIN set_translations ON sets.code = set_translations.setCode WHERE translation = 'Rinascita di Alara'\t----- bird -----\tcard_games",
    "497": "SELECT T2.type FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.translation = 'Huiti\u00c3\u00a8me \u00c3\u00a9dition'\t----- bird -----\tcard_games",
    "498": "SELECT sets.name FROM sets INNER JOIN set_translations ON sets.code = set_translations.setCode INNER JOIN cards ON sets.code = cards.setCode WHERE set_translations.language = 'French' AND cards.name = 'Tendo Ice Bridge'\t----- bird -----\tcard_games",
    "499": "SELECT COUNT(translation) FROM set_translations WHERE setCode = (SELECT code FROM sets WHERE name = 'Salvat 2011') AND translation IS NOT NULL;\t----- bird -----\tcard_games",
    "500": "SELECT st.translation FROM sets s JOIN set_translations st ON s.code = st.setCode JOIN cards c ON s.code = c.setCode WHERE c.name = 'Fellwar Stone' AND st.language = 'Japanese'\t----- bird -----\tcard_games",
    "501": "SELECT name FROM cards WHERE setCode = 'JOU' ORDER BY convertedManaCost DESC LIMIT 1;\t----- bird -----\tcard_games",
    "502": "SELECT releaseDate FROM sets WHERE code = (SELECT setCode FROM set_translations WHERE translation = 'Ola de fr\u00edo')\t----- bird -----\tcard_games",
    "503": "SELECT T2.type FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T1.name = 'Samite Pilgrim'\t----- bird -----\tcard_games",
    "504": "SELECT COUNT(*) FROM cards WHERE setCode = (SELECT code FROM sets WHERE name = 'World Championship Decks 2004') AND convertedManaCost = 3;\t----- bird -----\tcard_games",
    "505": "SELECT T2.translation FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.language = 'Chinese Simplified' AND T1.name = 'Mirrodin'\t----- bird -----\tcard_games",
    "506": "SELECT (SUM(isNonFoilOnly = 1) / SUM(language = 'Japanese')) * 100 FROM sets INNER JOIN set_translations ON sets.code = set_translations.setCode WHERE set_translations.language = 'Japanese'\t----- bird -----\tcard_games",
    "507": "SELECT (SUM(CASE WHEN language = 'Portuguese (Brazil)' THEN 1 ELSE 0 END) / SUM(CASE WHEN language = 'Portuguese (Brazil)' THEN 1 ELSE 0 END) * 100) FROM cards WHERE language = 'Portuguese (Brazil)' AND isOnlineOnly = 1;\t----- bird -----\tcard_games",
    "508": "SELECT T1.availability FROM cards AS T1 WHERE T1.artist = 'Aleksi Briclot' AND T1.isTextless = 1;\t----- bird -----\tcard_games",
    "509": "SELECT id FROM sets WHERE baseSetSize = (SELECT MAX(baseSetSize) FROM sets)\t----- bird -----\tcard_games",
    "510": "SELECT T1.artist FROM cards AS T1 WHERE T1.side IS NULL ORDER BY T1.convertedManaCost DESC LIMIT 1;\t----- bird -----\tcard_games",
    "511": "SELECT MAX(frameEffects) FROM cards WHERE cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL\t----- bird -----\tcard_games",
    "512": "SELECT COUNT(*) FROM cards WHERE (power IS NULL OR power = '*') AND hasFoil = 0 AND duelDeck = 'A'\t----- bird -----\tcard_games",
    "513": "SELECT s.id FROM sets s WHERE s.type = 'commander' AND s.totalSetSize = (SELECT MAX(totalSetSize) FROM sets WHERE type = 'commander' AND name NOT LIKE '%Alchemy%')\t----- bird -----\tcard_games",
    "514": "SELECT cards.name, MAX(cards.convertedManaCost) AS highest_converted_mana_cost FROM cards INNER JOIN legalities ON cards.uuid = legalities.uuid WHERE legalities.format = 'duel' GROUP BY cards.name ORDER BY highest_converted_mana_cost DESC LIMIT 10;\t----- bird -----\tcard_games",
    "515": "SELECT MIN(c.originalReleaseDate) AS Oldest_Release_Date, l.format AS Legal_Play_Format FROM cards c JOIN legalities l ON c.uuid = l.uuid WHERE c.rarity = 'mythic' AND l.status = 'legal' ORDER BY c.originalReleaseDate ASC LIMIT 1;\t----- bird -----\tcard_games",
    "516": "SELECT COUNT(*) FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE artist = 'Volkan Baga' AND language = 'French'\t----- bird -----\tcard_games",
    "517": "SELECT COUNT(*) FROM cards JOIN legalities ON cards.uuid = legalities.uuid WHERE rarity = 'rare' AND types = 'Enchantment' AND name = 'Abundance' AND format IN (SELECT format FROM legalities WHERE status = 'Legal')\t----- bird -----\tcard_games",
    "518": "SELECT legalities.format, cards.name FROM legalities JOIN cards ON legalities.uuid = cards.uuid WHERE legalities.status = 'banned' GROUP BY legalities.format ORDER BY COUNT(*) DESC LIMIT 1;\t----- bird -----\tcard_games",
    "519": "SELECT sets.language FROM sets WHERE sets.name = 'Battlebond'\t----- bird -----\tcard_games",
    "520": "SELECT T1.artist AS Illustrator, T2.format AS Format FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.artist = (SELECT artist FROM cards GROUP BY artist ORDER BY COUNT(*) ASC LIMIT 1)\t----- bird -----\tcard_games",
    "521": "SELECT T1.status FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.frameVersion = '1997' AND T1.artist = 'D. Alexander Gregory' AND (T1.hasContentWarning = 1 OR T1.keywords LIKE '%Wizards of the Coast%') AND T2.format = 'legacy'\t----- bird -----\tcard_games",
    "522": "SELECT c.name, l.format FROM cards c JOIN legalities l ON c.uuid = l.uuid WHERE c.edhrecRank = 1 AND l.status = 'banned'\t----- bird -----\tcard_games",
    "523": "SELECT AVG(totalSetSize) AS annual_avg_sets_released, MAX(COUNT(language)) AS common_language FROM sets JOIN set_translations ON sets.code = set_translations.setCode WHERE releaseDate BETWEEN '2012-01-01' AND '2015-12-31'\t----- bird -----\tcard_games",
    "524": "SELECT artist FROM cards WHERE borderColor = 'black' AND availability = 'arena'\t----- bird -----\tcard_games",
    "525": "SELECT cards.uuid FROM cards INNER JOIN legalities ON cards.uuid = legalities.uuid WHERE legalities.format = 'oldschool' AND (legalities.status = 'banned' OR legalities.status = 'restricted')\t----- bird -----\tcard_games",
    "526": "SELECT COUNT(*) FROM cards WHERE artist = 'Matthew D. Wilson' AND availability = 'paper'\t----- bird -----\tcard_games",
    "527": "SELECT text FROM rulings WHERE uuid IN (SELECT uuid FROM cards WHERE artist = 'Kev Walker') ORDER BY date DESC;\t----- bird -----\tcard_games",
    "528": "SELECT T1.name, T2.format FROM cards AS T1 INNER JOIN sets AS T3 ON T1.setCode = T3.code INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T3.name = 'Hour of Devastation' AND T2.status = 'legal'\t----- bird -----\tcard_games",
    "529": "SELECT s.name FROM sets s LEFT JOIN set_translations st ON s.code = st.setCode WHERE st.language NOT LIKE '%Japanese%' AND st.language = 'Korean'\t----- bird -----\tcard_games",
    "530": "SELECT T1.frameVersion, T1.name FROM cards AS T1 WHERE T1.artist = 'Allen Williams' UNION SELECT T2.frameVersion, T2.name FROM cards AS T2 INNER JOIN legalities AS T3 ON T2.uuid = T3.uuid WHERE T2.artist = 'Allen Williams' AND T3.status = 'banned';\t----- bird -----\tcard_games",
    "531": "SELECT CASE WHEN T1.DisplayName = 'Harlan' THEN 'Harlan' WHEN T1.DisplayName = 'Jarrod Dixon' THEN 'Jarrod Dixon' END AS UserWithHighestReputation FROM users AS T1 WHERE T1.DisplayName = 'Harlan' OR T1.DisplayName = 'Jarrod Dixon' ORDER BY T1.Reputation DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "532": "SELECT DisplayName FROM users WHERE strftime('%Y', CreationDate) = '2014'\t----- bird -----\tcodebase_community",
    "533": "SELECT COUNT(*) FROM users WHERE LastAccessDate > '2014-09-01 00:00:00'\t----- bird -----\tcodebase_community",
    "534": "SELECT DisplayName FROM users WHERE Views = (SELECT MAX(Views) FROM users)\t----- bird -----\tcodebase_community",
    "535": "SELECT COUNT(*) FROM users WHERE UpVotes > 100 AND DownVotes > 1\t----- bird -----\tcodebase_community",
    "536": "SELECT COUNT(*) FROM users WHERE Views > 10 AND strftime('%Y', CreationDate) > '2013'\t----- bird -----\tcodebase_community",
    "537": "SELECT COUNT(*) FROM posts WHERE OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'csgillespie')\t----- bird -----\tcodebase_community",
    "538": "SELECT Title FROM posts WHERE OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'csgillespie')\t----- bird -----\tcodebase_community",
    "539": "SELECT T1.DisplayName FROM posts AS T1 WHERE T1.Title = 'Eliciting priors from experts'\t----- bird -----\tcodebase_community",
    "540": "SELECT MAX(ViewCount) AS HighestPopularity, Title FROM posts INNER JOIN users ON posts.OwnerUserId = users.Id WHERE users.DisplayName = 'csgillespie'\t----- bird -----\tcodebase_community",
    "541": "SELECT T1.OwnerDisplayName FROM posts AS T1 WHERE T1.FavoriteCount = (SELECT MAX(FavoriteCount) FROM posts)\t----- bird -----\tcodebase_community",
    "542": "SELECT SUM(CommentCount) FROM posts WHERE OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'csgillespie')\t----- bird -----\tcodebase_community",
    "543": "SELECT MAX(T1.AnswerCount) AS MaxAnswerCount FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'csgillespie'\t----- bird -----\tcodebase_community",
    "544": "SELECT T1.DisplayName FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.LastEditorUserId WHERE T2.Title = 'Examples for teaching: Correlation does not mean causation'\t----- bird -----\tcodebase_community",
    "545": "SELECT COUNT(*) FROM posts WHERE OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'csgillespie') AND ParentId IS NULL;\t----- bird -----\tcodebase_community",
    "546": "SELECT DISTINCT U.DisplayName FROM users AS U INNER JOIN posts AS P ON U.Id = P.OwnerUserId WHERE P.ClosedDate IS NOT NULL;\t----- bird -----\tcodebase_community",
    "547": "SELECT COUNT(*) FROM posts WHERE OwnerUserId IN (SELECT Id FROM users WHERE Age > 65) AND Score >= 20\t----- bird -----\tcodebase_community",
    "548": "SELECT U.Location FROM posts AS P INNER JOIN users AS U ON P.OwnerUserId = U.Id WHERE P.Title = 'Eliciting priors from experts'\t----- bird -----\tcodebase_community",
    "549": "SELECT T2.Body FROM Tags AS T1 INNER JOIN Posts AS T2 ON T1.ExcerptPostId = T2.Id WHERE T1.TagName = 'bayesian'\t----- bird -----\tcodebase_community",
    "550": "SELECT T2.Body FROM tags AS T1 INNER JOIN posts AS T2 ON T1.ExcerptPostId = T2.Id WHERE T1.Count = (SELECT MAX(Count) FROM tags)\t----- bird -----\tcodebase_community",
    "551": "SELECT COUNT(*) FROM badges WHERE UserId = (SELECT Id FROM users WHERE DisplayName = 'csgillespie')\t----- bird -----\tcodebase_community",
    "552": "SELECT T1.Name FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.DisplayName = 'csgillespie';\t----- bird -----\tcodebase_community",
    "553": "SELECT COUNT(*) FROM badges WHERE UserId = (SELECT Id FROM users WHERE DisplayName = 'csgillespie') AND strftime('%Y', Date) = '2011'\t----- bird -----\tcodebase_community",
    "554": "SELECT T1.DisplayName FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId GROUP BY T2.UserId ORDER BY COUNT(T2.Id) DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "555": "SELECT AVG(P.Score) FROM posts AS P INNER JOIN users AS U ON P.OwnerUserId = U.Id WHERE U.DisplayName = 'csgillespie'\t----- bird -----\tcodebase_community",
    "556": "SELECT COUNT(Id) / COUNT(DisplayName) AS AverageBadges FROM badges INNER JOIN users ON badges.UserId = users.Id WHERE users.Views > 200;\t----- bird -----\tcodebase_community",
    "557": "SELECT (COUNT(CASE WHEN T1.Score > 20 THEN T1.Id END) / COUNT(T1.Id)) * 100 AS Percentage FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.Age > 65;\t----- bird -----\tcodebase_community",
    "558": "SELECT COUNT(*) FROM votes WHERE UserId = 58 AND CreationDate = '2010-07-19'\t----- bird -----\tcodebase_community",
    "559": "SELECT CreationDate FROM votes GROUP BY CreationDate ORDER BY COUNT(Id) DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "560": "SELECT COUNT(*) FROM badges WHERE Name = 'Revival'\t----- bird -----\tcodebase_community",
    "561": "SELECT T1.Title FROM posts AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.PostId GROUP BY T2.PostId ORDER BY MAX(T2.Score) DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "562": "SELECT COUNT(*) FROM posts INNER JOIN comments ON posts.Id = comments.PostId WHERE posts.ViewCount = 1910\t----- bird -----\tcodebase_community",
    "563": "SELECT P.FavoriteCount FROM posts P INNER JOIN comments C ON P.Id = C.PostId WHERE C.UserId = '3025' AND C.CreationDate = '2014/4/23 20:29:39.0'\t----- bird -----\tcodebase_community",
    "564": "SELECT Text FROM comments WHERE PostId = 107829 AND CommentCount = 1;\t----- bird -----\tcodebase_community",
    "565": "SELECT CASE WHEN T1.ClosedDate IS NULL THEN 'Not well-finished' ELSE 'Well-finished' END FROM comments AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T1.UserId = 23853 AND T1.CreationDate = '2013-07-12 09:08:18.0'\t----- bird -----\tcodebase_community",
    "566": "SELECT Reputation FROM users WHERE Id = (SELECT OwnerUserId FROM posts WHERE Id = 65041)\t----- bird -----\tcodebase_community",
    "567": "SELECT COUNT(*) FROM posts WHERE OwnerUserId = (SELECT Id FROM users WHERE DisplayName = \"Tiago Pasqualini\")\t----- bird -----\tcodebase_community",
    "568": "SELECT DisplayName FROM users WHERE Id = (SELECT UserId FROM votes WHERE Id = 6347)\t----- bird -----\tcodebase_community",
    "569": "SELECT COUNT(Id) FROM votes WHERE PostId IN (SELECT Id FROM posts WHERE Title LIKE '%data visualization%')\t----- bird -----\tcodebase_community",
    "570": "SELECT b.Name FROM users u JOIN badges b ON u.Id = b.UserId WHERE u.DisplayName = 'DatEpicCoderGuyWhoPrograms';\t----- bird -----\tcodebase_community",
    "571": "SELECT COUNT(DISTINCT posts.Id) / COUNT(DISTINCT votes.Id) AS post_to_vote_ratio FROM posts LEFT JOIN votes ON posts.Id = votes.PostId WHERE posts.OwnerUserId = 24;\t----- bird -----\tcodebase_community",
    "572": "SELECT ViewCount FROM posts WHERE Title = 'Integration of Weka and/or RapidMiner into Informatica PowerCenter/Developer'\t----- bird -----\tcodebase_community",
    "573": "SELECT Text FROM comments WHERE Score = 17;\t----- bird -----\tcodebase_community",
    "574": "SELECT DisplayName FROM users WHERE WebsiteUrl = 'http://stackoverflow.com'\t----- bird -----\tcodebase_community",
    "575": "SELECT b.Name FROM badges b INNER JOIN users u ON b.UserId = u.Id WHERE u.DisplayName = 'SilentGhost'\t----- bird -----\tcodebase_community",
    "576": "SELECT T2.DisplayName FROM comments AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Text = 'thank you user93!'\t----- bird -----\tcodebase_community",
    "577": "SELECT Text FROM comments WHERE UserId = (SELECT Id FROM users WHERE DisplayName = 'A Lion')\t----- bird -----\tcodebase_community",
    "578": "SELECT users.DisplayName, users.Reputation FROM posts JOIN users ON posts.OwnerUserId = users.Id WHERE posts.Title = 'Understanding what Dassault iSight is doing?';\t----- bird -----\tcodebase_community",
    "579": "SELECT T2.Text FROM posts AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.PostId WHERE T1.Title = 'How does gentle boosting differ from AdaBoost?'\t----- bird -----\tcodebase_community",
    "580": "SELECT T2.DisplayName FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Name = 'Necromancer' LIMIT 10;\t----- bird -----\tcodebase_community",
    "581": "SELECT U.DisplayName FROM posts AS P INNER JOIN users AS U ON P.LastEditorUserId = U.Id WHERE P.Title = 'Open source tools for visualizing multi-dimensional data';\t----- bird -----\tcodebase_community",
    "582": "SELECT Title FROM posts WHERE LastEditorUserId = (SELECT Id FROM users WHERE DisplayName = 'Vebjorn Ljosa')\t----- bird -----\tcodebase_community",
    "583": "SELECT SUM(p.Score), u.WebsiteUrl FROM posts p JOIN users u ON p.LastEditorUserId = u.Id WHERE u.DisplayName = 'Yevgeny'\t----- bird -----\tcodebase_community",
    "584": "SELECT T2.Text FROM posts AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.PostId WHERE T1.Title = 'Why square the difference instead of taking the absolute value in standard deviation?'\t----- bird -----\tcodebase_community",
    "585": "SELECT SUM(BountyAmount) FROM posts JOIN votes ON posts.Id = votes.PostId WHERE Title LIKE '%data%'\t----- bird -----\tcodebase_community",
    "586": "SELECT T1.DisplayName FROM users AS T1 INNER JOIN votes AS T2 ON T1.Id = T2.UserId INNER JOIN posts AS T3 ON T2.PostId = T3.Id WHERE T3.Title LIKE '%variance%' AND T2.BountyAmount = 50\t----- bird -----\tcodebase_community",
    "587": "SELECT AVG(P.ViewCount) AS AverageViewCount, P.Title, C.Text, P.Score FROM posts AS P INNER JOIN postLinks AS PL ON P.Id = PL.PostId INNER JOIN tags AS T ON T.TagName = 'humor' AND T.ExcerptPostId = P.Id LEFT JOIN comments AS C ON P.Id = C.PostId GROUP BY P.Title, C.Text, P.Score;\t----- bird -----\tcodebase_community",
    "588": "SELECT COUNT(*) FROM comments WHERE UserId = 13;\t----- bird -----\tcodebase_community",
    "589": "SELECT Id FROM users WHERE Reputation = (SELECT MAX(Reputation) FROM users)\t----- bird -----\tcodebase_community",
    "590": "SELECT Id FROM users WHERE Views = (SELECT MIN(Views) FROM users)\t----- bird -----\tcodebase_community",
    "591": "SELECT COUNT(*) FROM badges WHERE Name = 'Supporter' AND STRFTIME('%Y', Date) = 2011\t----- bird -----\tcodebase_community",
    "592": "SELECT COUNT(UserId) FROM badges GROUP BY UserId HAVING COUNT(Name) > 5;\t----- bird -----\tcodebase_community",
    "593": "SELECT COUNT(*) FROM users JOIN badges ON users.Id = badges.UserId WHERE users.Location = 'New York' AND badges.Name IN ('Supporter', 'Teacher')\t----- bird -----\tcodebase_community",
    "594": "SELECT U.DisplayName, U.Reputation FROM users U JOIN posts P ON U.Id = P.OwnerUserId WHERE P.Id = 1;\t----- bird -----\tcodebase_community",
    "595": "SELECT T1.UserId FROM postHistory AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T2.ViewCount >= 1000 GROUP BY T1.UserId HAVING COUNT(DISTINCT T1.PostId) = 1;\t----- bird -----\tcodebase_community",
    "596": "SELECT T2.DisplayName, T2.Badge FROM comments AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id GROUP BY T1.UserId ORDER BY COUNT(T1.Id) DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "597": "SELECT COUNT(*) FROM users WHERE Location = 'India' AND Id IN (SELECT UserId FROM badges WHERE Name = 'Teacher')\t----- bird -----\tcodebase_community",
    "598": "SELECT ((COUNT(CASE WHEN Year(Date) = 2010 AND Name = 'Students' THEN 1 END) / COUNT(Name) * 100) - (COUNT(CASE WHEN Year(Date) = 2011 AND Name = 'Students' THEN 1 END) / COUNT(Name) * 100)) AS Percentage_Difference FROM badges WHERE Year(Date) = 2010 OR Year(Date) = 2011;\t----- bird -----\tcodebase_community",
    "599": "SELECT DISTINCT PostHistoryTypeId, COUNT(DISTINCT UserId) FROM postHistory WHERE PostId = 3720;\t----- bird -----\tcodebase_community",
    "600": "SELECT posts.Id, posts.Title, posts.ViewCount FROM posts INNER JOIN postLinks ON posts.Id = postLinks.PostId WHERE postLinks.RelatedPostId = 61217;\t----- bird -----\tcodebase_community",
    "601": "SELECT T1.Score, T2.LinkTypeId FROM posts AS T1 INNER JOIN postLinks AS T2 ON T1.Id = T2.PostId WHERE T1.Id = 395;\t----- bird -----\tcodebase_community",
    "602": "SELECT P.Id AS PostID, P.OwnerUserId AS UserID FROM posts AS P WHERE P.Score > 60;\t----- bird -----\tcodebase_community",
    "603": "SELECT SUM(FavoriteCount) FROM posts WHERE OwnerUserId = 686 AND strftime('%Y', CreationDate) = '2011'\t----- bird -----\tcodebase_community",
    "604": "SELECT AVG(UpVotes) AS AvgUpVotes, AVG(Age) AS AvgAge FROM users WHERE Id IN (SELECT UserId FROM posts GROUP BY UserId HAVING COUNT(UserId) > 10);\t----- bird -----\tcodebase_community",
    "605": "SELECT COUNT(UserId) FROM badges WHERE Name = 'Announcer';\t----- bird -----\tcodebase_community",
    "606": "SELECT b.Name FROM badges b WHERE b.Date = '2010-07-19 19:39:08'\t----- bird -----\tcodebase_community",
    "607": "SELECT COUNT(*) FROM comments WHERE Score > 60;\t----- bird -----\tcodebase_community",
    "608": "SELECT Text FROM comments WHERE CreationDate = '2010-07-19 19:25:47.0'\t----- bird -----\tcodebase_community",
    "609": "SELECT COUNT(Id) FROM posts WHERE Score = 10;\t----- bird -----\tcodebase_community",
    "610": "SELECT b.Name FROM badges b JOIN users u ON b.UserId = u.Id WHERE u.Reputation = (SELECT MAX(Reputation) FROM users)\t----- bird -----\tcodebase_community",
    "611": "SELECT u.Reputation FROM users u JOIN badges b ON u.Id = b.UserId WHERE b.Date = '2010-07-19 19:39:08.0'\t----- bird -----\tcodebase_community",
    "612": "SELECT T1.Name FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.DisplayName = 'Pierre';\t----- bird -----\tcodebase_community",
    "613": "SELECT b.Date FROM badges b JOIN users u ON b.UserId = u.Id WHERE u.Location = 'Rochester, NY'\t----- bird -----\tcodebase_community",
    "614": "SELECT (COUNT(UserId) * 100) / (SELECT COUNT(Id) FROM users) FROM badges WHERE Name = 'Teacher'\t----- bird -----\tcodebase_community",
    "615": "SELECT (CAST(COUNT(CASE WHEN U.Age BETWEEN 13 AND 18 THEN B.UserId END) AS FLOAT) / COUNT(B.UserId)) * 100 FROM badges AS B INNER JOIN users AS U ON B.UserId = U.Id WHERE B.Name = 'Organizer';\t----- bird -----\tcodebase_community",
    "616": "SELECT SUM(Score) AS CommentRatingScore FROM comments WHERE PostId = (SELECT Id FROM posts WHERE CreaionDate = '2010-07-19 19:19:56.0')\t----- bird -----\tcodebase_community",
    "617": "SELECT T2.Text FROM comments AS T2 INNER JOIN posts AS T1 ON T1.Id = T2.PostId WHERE T1.CreationDate = '2010-07-19 19:37:33.0'\t----- bird -----\tcodebase_community",
    "618": "SELECT Age FROM users WHERE Location = 'Vienna, Austria'\t----- bird -----\tcodebase_community",
    "619": "SELECT COUNT(*) FROM users JOIN badges ON users.Id = badges.UserId WHERE badges.Name = 'Supporter' AND users.Age BETWEEN 19 AND 65\t----- bird -----\tcodebase_community",
    "620": "SELECT SUM(u.Views) FROM users u INNER JOIN badges b ON u.Id = b.UserId WHERE b.Date = '2010-07-19 19:39:08.0'\t----- bird -----\tcodebase_community",
    "621": "SELECT B.Name FROM badges AS B INNER JOIN users AS U ON B.UserId = U.Id WHERE U.Reputation = (SELECT MIN(Reputation) FROM users)\t----- bird -----\tcodebase_community",
    "622": "SELECT badges.Name FROM badges INNER JOIN users ON badges.UserId = users.Id WHERE users.DisplayName = \"Sharpie\"\t----- bird -----\tcodebase_community",
    "623": "SELECT COUNT(*) FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.Age > 65 AND T1.Name = 'Supporter'\t----- bird -----\tcodebase_community",
    "624": "SELECT DisplayName FROM users WHERE Id = 30;\t----- bird -----\tcodebase_community",
    "625": "SELECT COUNT(*) FROM users WHERE Location = 'New York'\t----- bird -----\tcodebase_community",
    "626": "SELECT COUNT(*) FROM votes WHERE YEAR(CreationDate) = 2010\t----- bird -----\tcodebase_community",
    "627": "SELECT COUNT(*) FROM users WHERE Age BETWEEN 19 AND 65\t----- bird -----\tcodebase_community",
    "628": "SELECT DisplayName FROM users WHERE Views = (SELECT MAX(Views) FROM users)\t----- bird -----\tcodebase_community",
    "629": "SELECT DIVIDE(COUNT(CASE WHEN YEAR(CreationDate) = 2010 THEN Id END), COUNT(CASE WHEN YEAR(CreationDate) = 2011 THEN Id END)) FROM votes;\t----- bird -----\tcodebase_community",
    "630": "SELECT T2.TagName FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId INNER JOIN postLinks AS T3 ON T2.Id = T3.PostId INNER JOIN tags AS T4 ON T3.RelatedPostId = T4.Id WHERE T1.DisplayName = 'John Stauffer'\t----- bird -----\tcodebase_community",
    "631": "SELECT COUNT(*) FROM posts WHERE OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'Daniel Vassallo')\t----- bird -----\tcodebase_community",
    "632": "SELECT COUNT(*) FROM votes INNER JOIN users ON votes.UserId = users.Id WHERE users.DisplayName = 'Harlan'\t----- bird -----\tcodebase_community",
    "633": "SELECT MAX(AnswerCount) AS Most_Answers_Count FROM posts WHERE OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'slashnick')\t----- bird -----\tcodebase_community",
    "634": "SELECT MAX(SUM(ViewCount)) AS HigherPopularity FROM posts INNER JOIN users ON posts.OwnerUserId = users.Id WHERE users.DisplayName = 'Harvey Motulsky' OR users.DisplayName = 'Noah Snyder' GROUP BY users.DisplayName;\t----- bird -----\tcodebase_community",
    "635": "SELECT COUNT(*) FROM posts WHERE OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'Matt Parker') AND Id IN (SELECT PostId FROM votes WHERE VoteTypeId > 4);\t----- bird -----\tcodebase_community",
    "636": "SELECT COUNT(*) FROM comments WHERE Score < 60 AND UserId = (SELECT Id FROM users WHERE DisplayName = 'Neil McGuigan')\t----- bird -----\tcodebase_community",
    "637": "SELECT T2.TagName FROM posts AS T1 INNER JOIN tags AS T2 ON T1.Tags LIKE '%' || T2.TagName || '%' LEFT JOIN comments AS T3 ON T1.Id = T3.PostId INNER JOIN users AS T4 ON T1.OwnerUserId = T4.Id WHERE T4.DisplayName = 'Mark Meckes' AND T3.Id IS NULL;\t----- bird -----\tcodebase_community",
    "638": "SELECT T2.DisplayName FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Name = 'Organizer';\t----- bird -----\tcodebase_community",
    "639": "SELECT (COUNT(p.Id) * 100.0) / (SELECT COUNT(p2.Id) FROM posts p2 WHERE p2.OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'Community')) as percentage FROM posts p JOIN tags t ON p.Tags LIKE '%' || t.TagName || '%' WHERE t.TagName = 'r' AND p.OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'Community');\t----- bird -----\tcodebase_community",
    "640": "SELECT SUM(CASE WHEN U.DisplayName = 'Mornington' THEN P.ViewCount ELSE 0 END) - SUM(CASE WHEN U.DisplayName = 'Amos' THEN P.ViewCount ELSE 0 END) AS ViewCountDifference FROM posts AS P INNER JOIN users AS U ON P.OwnerUserId = U.Id;\t----- bird -----\tcodebase_community",
    "641": "SELECT COUNT(DISTINCT UserId) FROM badges WHERE Name = 'commentator' AND strftime('%Y', Date) = '2014'\t----- bird -----\tcodebase_community",
    "642": "SELECT COUNT(*) FROM posts WHERE CreationDate BETWEEN '2010-07-21 00:00:00' AND '2010-07-21 23:59:59'\t----- bird -----\tcodebase_community",
    "643": "SELECT T1.DisplayName, T1.Age FROM users AS T1 WHERE T1.Views = (SELECT MAX(Views) FROM users)\t----- bird -----\tcodebase_community",
    "644": "SELECT T1.LastEditDate, T1.LastEditorUserId FROM posts AS T1 WHERE T1.Title = 'Detecting a given face in a database of facial images'\t----- bird -----\tcodebase_community",
    "645": "SELECT COUNT(*) FROM comments WHERE UserId = 13 AND Score < 60\t----- bird -----\tcodebase_community",
    "646": "SELECT posts.Title, comments.UserDisplayName FROM posts JOIN comments ON posts.Id = comments.PostId WHERE comments.Score > 60;\t----- bird -----\tcodebase_community",
    "647": "SELECT T1.Name FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.Location = 'North Pole' AND strftime('%Y', T1.Date) = '2011'\t----- bird -----\tcodebase_community",
    "648": "SELECT U.DisplayName, U.WebsiteUrl FROM posts AS P INNER JOIN users AS U ON P.OwnerUserId = U.Id WHERE P.FavoriteCount > 150;\t----- bird -----\tcodebase_community",
    "649": "SELECT COUNT(*) AS PostHistoryCounts, MAX(CreationDate) AS LastEditDate FROM postHistory WHERE PostId = (SELECT Id FROM posts WHERE Title = \"What is the best introductory Bayesian statistics textbook?\")\t----- bird -----\tcodebase_community",
    "650": "SELECT T1.LastAccessDate, T1.Location FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T2.Name = 'Outliers'\t----- bird -----\tcodebase_community",
    "651": "SELECT T2.Title FROM postLinks AS T1 INNER JOIN posts AS T2 ON T1.RelatedPostId = T2.Id WHERE T1.PostId = (SELECT Id FROM posts WHERE Title = \"How to tell if something happened in a data set which monitors a value over time\")\t----- bird -----\tcodebase_community",
    "652": "SELECT posts.Id, badges.Name FROM posts JOIN users ON posts.OwnerUserId = users.Id JOIN badges ON badges.UserId = users.Id WHERE users.DisplayName = 'Samuel' AND YEAR(users.CreationDate) = 2013;\t----- bird -----\tcodebase_community",
    "653": "SELECT OwnerDisplayName FROM posts WHERE ViewCount = (SELECT MAX(ViewCount) FROM posts)\t----- bird -----\tcodebase_community",
    "654": "SELECT T1.DisplayName, T1.Location FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId INNER JOIN tags AS T3 ON T3.ExcerptPostId = T2.Id WHERE T3.TagName = 'hypothesis-testing'\t----- bird -----\tcodebase_community",
    "655": "SELECT T2.Title, T1.LinkTypeId FROM postLinks AS T1 INNER JOIN posts AS T2 ON T1.RelatedPostId = T2.Id WHERE T2.Title = 'What are principal component scores?'\t----- bird -----\tcodebase_community",
    "656": "SELECT P.OwnerDisplayName FROM posts AS P WHERE P.Id = (SELECT ParentId FROM posts WHERE Score = (SELECT MAX(Score) FROM posts WHERE ParentId IS NOT NULL))\t----- bird -----\tcodebase_community",
    "657": "SELECT U.DisplayName, U.WebsiteUrl FROM votes V INNER JOIN users U ON V.UserId = U.Id WHERE V.VoteTypeId = 8 AND V.BountyAmount = (SELECT MAX(BountyAmount) FROM votes WHERE VoteTypeId = 8)\t----- bird -----\tcodebase_community",
    "658": "SELECT Title FROM posts ORDER BY ViewCount DESC LIMIT 5\t----- bird -----\tcodebase_community",
    "659": "SELECT COUNT(*) FROM tags WHERE Count BETWEEN 5000 AND 7000;\t----- bird -----\tcodebase_community",
    "660": "SELECT OwnerUserId FROM posts WHERE FavoriteCount = (SELECT MAX(FavoriteCount) FROM posts)\t----- bird -----\tcodebase_community",
    "661": "SELECT MAX(Age) FROM users WHERE Reputation = (SELECT MAX(Reputation) FROM users)\t----- bird -----\tcodebase_community",
    "662": "SELECT COUNT(*) FROM posts WHERE Id IN (SELECT PostId FROM votes WHERE YEAR(CreationDate) = 2011 AND BountyAmount = 50)\t----- bird -----\tcodebase_community",
    "663": "SELECT MIN(Id) FROM users WHERE Age = (SELECT MIN(Age) FROM users);\t----- bird -----\tcodebase_community",
    "664": "SELECT MAX(p.Score) FROM posts p JOIN tags t ON p.Tags LIKE '%' || t.TagName || '%' WHERE t.Count = (SELECT MAX(Count) FROM tags)\t----- bird -----\tcodebase_community",
    "665": "SELECT AVG(links_per_month) AS average_links_per_month FROM ( SELECT COUNT(Id) AS links_per_month FROM postLinks WHERE YEAR(CreationDate) = 2010 AND PostId IN (SELECT Id FROM posts WHERE AnswerCount <= 2) GROUP BY MONTH(CreationDate) ) AS subquery;\t----- bird -----\tcodebase_community",
    "666": "SELECT MAX(FavoriteCount) FROM posts WHERE Id IN (SELECT PostId FROM votes WHERE UserId = 1465)\t----- bird -----\tcodebase_community",
    "667": "SELECT T2.Title FROM postLinks AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id ORDER BY T1.CreationDate ASC LIMIT 1;\t----- bird -----\tcodebase_community",
    "668": "SELECT T1.UserDisplayName FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id GROUP BY T1.UserId ORDER BY COUNT(T1.Name) DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "669": "SELECT MIN(v.CreationDate) FROM votes v JOIN users u ON v.UserId = u.Id WHERE u.DisplayName = 'chl'\t----- bird -----\tcodebase_community",
    "670": "SELECT MIN(posts.CreaionDate) FROM posts JOIN users ON posts.OwnerUserId = users.Id WHERE users.Age = (SELECT MIN(Age) FROM users)\t----- bird -----\tcodebase_community",
    "671": "SELECT T2.DisplayName FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Name = 'Autobiographer' ORDER BY T1.Date ASC LIMIT 1\t----- bird -----\tcodebase_community",
    "672": "SELECT COUNT(DISTINCT U.Id) FROM users AS U INNER JOIN posts AS P ON U.Id = P.OwnerUserId WHERE U.Location = 'United Kingdom' AND P.FavoriteCount >= 4;\t----- bird -----\tcodebase_community",
    "673": "SELECT AVG(PostId) FROM votes WHERE UserId IN (SELECT Id FROM users WHERE Age = (SELECT MAX(Age) FROM users))\t----- bird -----\tcodebase_community",
    "674": "SELECT DisplayName FROM users WHERE Reputation = (SELECT MAX(Reputation) FROM users)\t----- bird -----\tcodebase_community",
    "675": "SELECT COUNT(*) FROM users WHERE Reputation > 2000 AND Views > 1000;\t----- bird -----\tcodebase_community",
    "676": "SELECT DisplayName FROM users WHERE Age BETWEEN 19 AND 65;\t----- bird -----\tcodebase_community",
    "677": "SELECT COUNT(*) AS num_posts FROM posts WHERE OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'Jay Stevens') AND YEAR(CreationDate) = 2010;\t----- bird -----\tcodebase_community",
    "678": "SELECT T1.Id, T1.Title FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'Harvey Motulsky' ORDER BY T1.ViewCount DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "679": "SELECT p.Id, p.Title FROM posts p WHERE p.Score = (SELECT MAX(Score) FROM posts)\t----- bird -----\tcodebase_community",
    "680": "SELECT AVG(Score) FROM posts WHERE OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'Stephen Turner');\t----- bird -----\tcodebase_community",
    "681": "SELECT T1.DisplayName FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T2.ViewCount > 20000 AND YEAR(T2.CreationDate) = 2011;\t----- bird -----\tcodebase_community",
    "682": "SELECT T1.Id, T1.OwnerDisplayName FROM posts AS T1 WHERE T1.FavoriteCount = (SELECT MAX(FavoriteCount) FROM posts WHERE strftime('%Y', CreationDate) = '2010')\t----- bird -----\tcodebase_community",
    "683": "SELECT (CAST(COUNT(p.Id) AS FLOAT) / (SELECT COUNT(Id) FROM posts WHERE strftime('%Y', CreationDate) = '2011')) * 100 AS percentage FROM posts p INNER JOIN users u ON p.OwnerUserId = u.Id WHERE u.Reputation > 1000 AND strftime('%Y', p.CreationDate) = '2011';\t----- bird -----\tcodebase_community",
    "684": "SELECT DIVIDE(COUNT(Id where Age BETWEEN 13 and 18), COUNT(Id)) as percentage FROM users;\t----- bird -----\tcodebase_community",
    "685": "SELECT p.ViewCount AS total_views, u.DisplayName AS last_posted_user FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE p.Title = 'Computer Game Datasets'\t----- bird -----\tcodebase_community",
    "686": "SELECT COUNT(*) FROM posts WHERE ViewCount > (SELECT AVG(ViewCount) FROM posts)\t----- bird -----\tcodebase_community",
    "687": "SELECT COUNT(*) FROM comments WHERE PostId = (SELECT Id FROM posts WHERE Score = (SELECT MAX(Score) FROM posts))\t----- bird -----\tcodebase_community",
    "688": "SELECT COUNT(*) FROM posts WHERE ViewCount > 35000 AND CommentCount = 0\t----- bird -----\tcodebase_community",
    "689": "SELECT U.DisplayName, U.Location FROM users AS U JOIN posts AS P ON U.Id = P.LastEditorUserId WHERE P.Id = 183\t----- bird -----\tcodebase_community",
    "690": "SELECT T1.Name FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.DisplayName = 'Emmett' ORDER BY T1.Date DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "691": "SELECT COUNT(T1.Id) FROM users AS T1 WHERE T1.Age BETWEEN 19 AND 65 AND T1.UpVotes > 5000\t----- bird -----\tcodebase_community",
    "692": "SELECT DATEDIFF(stats_badges.Date, users.CreationDate) AS TimeToGetBadge FROM stats_badges JOIN users ON stats_badges.UserId = users.Id WHERE users.DisplayName = 'Zolomon'\t----- bird -----\tcodebase_community",
    "693": "SELECT COUNT(posts.Id) AS num_posts, COUNT(comments.Id) AS num_comments FROM users LEFT JOIN posts ON users.Id = posts.OwnerUserId LEFT JOIN comments ON users.Id = comments.UserId WHERE CreationDate = (SELECT MAX(CreationDate) FROM users)\t----- bird -----\tcodebase_community",
    "694": "SELECT C.Text, C.UserDisplayName FROM comments AS C JOIN posts AS P ON C.PostId = P.Id WHERE P.Title = 'Analysing wind data with R' AND C.CreationDate = (SELECT MAX(CreationDate) FROM comments WHERE PostId = P.Id)\t----- bird -----\tcodebase_community",
    "695": "SELECT COUNT(*) FROM badges WHERE Name = 'Citizen Patrol';\t----- bird -----\tcodebase_community",
    "696": "SELECT COUNT(*) FROM posts JOIN tags ON posts.Id = tags.ExcerptPostId WHERE tags.TagName = 'careers'\t----- bird -----\tcodebase_community",
    "697": "SELECT T1.Reputation, T1.Views FROM users AS T1 WHERE T1.DisplayName = 'Jarrod Dixon'\t----- bird -----\tcodebase_community",
    "698": "SELECT COUNT(*) AS total_comments_and_answers FROM comments WHERE PostId = (SELECT Id FROM posts WHERE Title = 'Clustering 1D data' AND PostTypeId = 1) OR PostId IN (SELECT Id FROM posts WHERE Title = 'Clustering 1D data' AND PostTypeId = 2)\t----- bird -----\tcodebase_community",
    "699": "SELECT CreationDate FROM users WHERE DisplayName = 'IrishStat'\t----- bird -----\tcodebase_community",
    "700": "SELECT COUNT(*) FROM votes WHERE BountyAmount >= 30\t----- bird -----\tcodebase_community",
    "701": "SELECT COUNT(p.Id) AS total_posts, COUNT(CASE WHEN p.Score > 50 THEN 1 END) AS high_score_posts, (COUNT(CASE WHEN p.Score > 50 THEN 1 END) / COUNT(p.Id)) * 100 AS percentage FROM posts p WHERE p.OwnerUserId = (SELECT u.Id FROM users u ORDER BY u.Reputation DESC LIMIT 1)\t----- bird -----\tcodebase_community",
    "702": "SELECT COUNT(*) FROM posts WHERE Score < 20\t----- bird -----\tcodebase_community",
    "703": "SELECT COUNT(*) FROM tags WHERE Id < 15 AND Count <= 20;\t----- bird -----\tcodebase_community",
    "704": "SELECT T1.ExcerptPostId, T1.WikiPostId FROM tags AS T1 WHERE T1.TagName = 'sample'\t----- bird -----\tcodebase_community",
    "705": "SELECT T1.Reputation, T1.UpVotes FROM users AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.UserId WHERE T2.Text = 'fine, you win :)'\t----- bird -----\tcodebase_community",
    "706": "SELECT C.Text FROM comments AS C INNER JOIN posts AS P ON C.PostId = P.Id WHERE P.Title = 'How can I adapt ANOVA for binary data?';\t----- bird -----\tcodebase_community",
    "707": "SELECT Text FROM comments WHERE PostId IN (SELECT Id FROM posts WHERE ViewCount BETWEEN 100 AND 150) ORDER BY Score DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "708": "SELECT U.CreationDate, U.Age FROM users U JOIN comments C ON U.Id = C.UserId WHERE C.Text LIKE '%http://%'\t----- bird -----\tcodebase_community",
    "709": "SELECT COUNT(DISTINCT T1.PostId) FROM comments AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T1.Score = 0 AND T2.ViewCount < 5\t----- bird -----\tcodebase_community",
    "710": "SELECT COUNT(*) FROM comments WHERE Score = 0 AND PostId IN (SELECT Id FROM posts WHERE CommentCount = 1)\t----- bird -----\tcodebase_community",
    "711": "SELECT COUNT(DISTINCT u.Id) FROM comments c JOIN users u ON c.UserId = u.Id WHERE c.Score = 0 AND u.Age = 40;\t----- bird -----\tcodebase_community",
    "712": "SELECT T1.Id AS PostID, T2.Text AS Comment FROM posts AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.PostId WHERE T1.Title = 'Group differences on a five point Likert item'\t----- bird -----\tcodebase_community",
    "713": "SELECT U.UpVotes FROM users U INNER JOIN comments C ON U.Id = C.UserId WHERE C.Text = 'R is also lazy evaluated.';\t----- bird -----\tcodebase_community",
    "714": "SELECT T1.Text FROM comments AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.DisplayName = 'Harvey Motulsky'\t----- bird -----\tcodebase_community",
    "715": "SELECT UserDisplayName FROM comments WHERE Score BETWEEN 1 AND 5 AND UserId IN (SELECT Id FROM users WHERE DownVotes = 0)\t----- bird -----\tcodebase_community",
    "716": "SELECT (COUNT(DISTINCT T1.UserId) * 100.0 / COUNT(T2.UserId)) as percentage FROM comments AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Score BETWEEN 5 AND 10 AND T2.UpVotes = 0;\t----- bird -----\tcodebase_community",
    "717": "SELECT power_name FROM superhero JOIN hero_power ON superhero.id = hero_power.hero_id JOIN superpower ON hero_power.power_id = superpower.id WHERE superhero.superhero_name = '3-D Man'\t----- bird -----\tsuperhero",
    "718": "SELECT COUNT(*) FROM superhero JOIN hero_power ON superhero.id = hero_power.hero_id JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'Super Strength'\t----- bird -----\tsuperhero",
    "719": "SELECT COUNT(*) FROM superhero AS s INNER JOIN hero_power AS hp ON s.id = hp.hero_id WHERE hp.power_id = (SELECT id FROM superpower WHERE power_name = 'Super Strength') AND s.height_cm > 200;\t----- bird -----\tsuperhero",
    "720": "SELECT T1.full_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id GROUP BY T1.full_name HAVING COUNT(T2.power_id) > 15\t----- bird -----\tsuperhero",
    "721": "SELECT COUNT(*) FROM superhero WHERE eye_colour_id = (SELECT id FROM colour WHERE colour = 'Blue')\t----- bird -----\tsuperhero",
    "722": "SELECT C.colour FROM superhero AS S INNER JOIN colour AS C ON S.skin_colour_id = C.id WHERE S.superhero_name = 'Apocalypse';\t----- bird -----\tsuperhero",
    "723": "SELECT COUNT(DISTINCT T1.id) FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id INNER JOIN hero_power AS T3 ON T1.id = T3.hero_id INNER JOIN superpower AS T4 ON T3.power_id = T4.id WHERE T2.colour = 'Blue' AND T4.power_name = 'Agility'\t----- bird -----\tsuperhero",
    "724": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id INNER JOIN colour AS T3 ON T1.hair_colour_id = T3.id INNER JOIN hero_power AS T4 ON T1.id = T4.hero_id INNER JOIN superpower AS T5 ON T4.power_id = T5.id WHERE T2.colour = 'Blue' AND T3.colour = 'Blond' AND T5.power_name = 'Agility'\t----- bird -----\tsuperhero",
    "725": "SELECT COUNT(*) FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')\t----- bird -----\tsuperhero",
    "726": "SELECT T1.full_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.height_cm = (SELECT MAX(height_cm) FROM superhero) AND T2.publisher_name = 'Marvel Comics'\t----- bird -----\tsuperhero",
    "727": "SELECT T1.publisher_name FROM publisher AS T1 INNER JOIN superhero AS T2 ON T1.id = T2.publisher_id WHERE T2.superhero_name = 'Sauron'\t----- bird -----\tsuperhero",
    "728": "SELECT COUNT(*) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id INNER JOIN colour AS T3 ON T1.eye_colour_id = T3.id WHERE T2.publisher_name = 'Marvel Comics' AND T3.colour = 'Blue'\t----- bird -----\tsuperhero",
    "729": "SELECT AVG(height_cm) FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')\t----- bird -----\tsuperhero",
    "730": "SELECT ((COUNT(DISTINCT superhero.id) * 100) / (SELECT COUNT(DISTINCT superhero.id) FROM superhero INNER JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher.publisher_name = 'Marvel Comics')) AS percentage FROM superhero INNER JOIN publisher ON superhero.publisher_id = publisher.id INNER JOIN hero_power ON superhero.id = hero_power.hero_id INNER JOIN superpower ON hero_power.power_id = superpower.id WHERE publisher.publisher_name = 'Marvel Comics' AND superpower.power_name = 'Super Strength';\t----- bird -----\tsuperhero",
    "731": "SELECT COUNT(*) FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'DC Comics')\t----- bird -----\tsuperhero",
    "732": "SELECT p.publisher_name FROM superhero s JOIN hero_attribute ha ON s.id = ha.hero_id JOIN attribute a ON ha.attribute_id = a.id JOIN publisher p ON s.publisher_id = p.id WHERE a.attribute_name = 'Speed' ORDER BY ha.attribute_value LIMIT 1;\t----- bird -----\tsuperhero",
    "733": "SELECT COUNT(*) FROM superhero AS s INNER JOIN colour AS c ON s.eye_colour_id = c.id INNER JOIN publisher AS p ON s.publisher_id = p.id WHERE c.colour = 'Gold' AND p.publisher_name = 'Marvel Comics'\t----- bird -----\tsuperhero",
    "734": "SELECT publisher.publisher_name FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id WHERE superhero.superhero_name = 'Blue Beetle II'\t----- bird -----\tsuperhero",
    "735": "SELECT COUNT(*) FROM superhero JOIN colour ON superhero.hair_colour_id = colour.id WHERE colour.colour = 'Blond'\t----- bird -----\tsuperhero",
    "736": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN attribute AS T3 ON T2.attribute_id = T3.id WHERE T3.attribute_name = 'Intelligence' ORDER BY T2.attribute_value LIMIT 1;\t----- bird -----\tsuperhero",
    "737": "SELECT race.race FROM superhero JOIN race ON superhero.race_id = race.id WHERE superhero.superhero_name = 'Copycat'\t----- bird -----\tsuperhero",
    "738": "SELECT COUNT(*) FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN attribute AS T3 ON T2.attribute_id = T3.id WHERE T3.attribute_name = 'Durability' AND T2.attribute_value < 50\t----- bird -----\tsuperhero",
    "739": "SELECT superhero.superhero_name FROM superhero INNER JOIN hero_power ON superhero.id = hero_power.hero_id INNER JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'Death Touch'\t----- bird -----\tsuperhero",
    "740": "SELECT COUNT(DISTINCT T1.hero_id) FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id INNER JOIN hero_attribute AS T3 ON T1.id = T3.hero_id INNER JOIN attribute AS T4 ON T3.attribute_id = T4.id WHERE T2.gender = 'Female' AND T4.attribute_name = 'Strength' AND T3.attribute_value = 100;\t----- bird -----\tsuperhero",
    "741": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id GROUP BY T1.superhero_name ORDER BY COUNT(T2.power_id) DESC LIMIT 1;\t----- bird -----\tsuperhero",
    "742": "SELECT COUNT(*) FROM superhero WHERE race_id = (SELECT id FROM race WHERE race = 'Vampire')\t----- bird -----\tsuperhero",
    "743": "SELECT COUNT(DISTINCT superhero.id) * 100 / (SELECT COUNT(DISTINCT superhero.id) FROM superhero) AS percentage FROM superhero INNER JOIN alignment ON superhero.alignment_id = alignment.id INNER JOIN publisher ON superhero.publisher_id = publisher.id WHERE alignment.alignment = 'Bad' AND publisher.publisher_name = 'Marvel Comics';\t----- bird -----\tsuperhero",
    "744": "SELECT ABS(SUM(CASE WHEN publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) - SUM(CASE WHEN publisher_name = 'DC Comics' THEN 1 ELSE 0 END)) AS difference FROM superhero INNER JOIN publisher ON superhero.publisher_id = publisher.id;\t----- bird -----\tsuperhero",
    "745": "SELECT id FROM publisher WHERE publisher_name = 'Star Trek'\t----- bird -----\tsuperhero",
    "746": "SELECT AVG(attribute_value) FROM hero_attribute;\t----- bird -----\tsuperhero",
    "747": "SELECT COUNT(*) FROM superhero WHERE full_name IS NULL\t----- bird -----\tsuperhero",
    "748": "SELECT C.colour FROM superhero AS S INNER JOIN colour AS C ON S.eye_colour_id = C.id WHERE S.id = 75;\t----- bird -----\tsuperhero",
    "749": "SELECT T2.power_name FROM superhero AS T1 INNER JOIN hero_power AS T3 ON T1.id = T3.hero_id INNER JOIN superpower AS T2 ON T3.power_id = T2.id WHERE T1.superhero_name = 'Deathlok'\t----- bird -----\tsuperhero",
    "750": "SELECT AVG(weight_kg) FROM superhero WHERE gender_id = 2\t----- bird -----\tsuperhero",
    "751": "SELECT T2.power_name FROM superhero AS T1 INNER JOIN hero_power AS T3 ON T1.id = T3.hero_id INNER JOIN superpower AS T2 ON T2.id = T3.power_id WHERE T1.gender_id = (SELECT id FROM gender WHERE gender = 'Male') LIMIT 5;\t----- bird -----\tsuperhero",
    "752": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T2.race = 'Alien'\t----- bird -----\tsuperhero",
    "753": "SELECT S.superhero_name FROM superhero AS S WHERE S.height_cm BETWEEN 170 AND 190 AND S.eye_colour_id = 1;\t----- bird -----\tsuperhero",
    "754": "SELECT T2.power_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T1.id = 56;\t----- bird -----\tsuperhero",
    "755": "SELECT T1.full_name FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T2.race = 'Demi-God';\t----- bird -----\tsuperhero",
    "756": "SELECT COUNT(*) FROM superhero WHERE alignment_id = (SELECT id FROM alignment WHERE alignment = 'Bad')\t----- bird -----\tsuperhero",
    "757": "SELECT Race.race FROM superhero INNER JOIN race ON superhero.race_id = race.id WHERE superhero.weight_kg = 169;\t----- bird -----\tsuperhero",
    "758": "SELECT c.colour FROM superhero s JOIN colour c ON s.hair_colour_id = c.id WHERE s.height_cm = 185 AND s.race_id = (SELECT id FROM race WHERE race = 'human')\t----- bird -----\tsuperhero",
    "759": "SELECT C.colour FROM superhero AS S JOIN colour AS C ON S.eye_colour_id = C.id WHERE S.weight_kg = (SELECT MAX(weight_kg) FROM superhero)\t----- bird -----\tsuperhero",
    "760": "SELECT ((COUNT(DISTINCT T1.id) * 100) / (SELECT COUNT(*) FROM superhero)) AS percentage FROM superhero AS T1 WHERE T1.height_cm BETWEEN 150 AND 180 AND T1.publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')\t----- bird -----\tsuperhero",
    "761": "SELECT T1.full_name FROM superhero AS T1 WHERE T1.gender_id = (SELECT id FROM gender WHERE gender = 'Male') AND T1.weight_kg > (SELECT 0.79 * AVG(weight_kg) FROM superhero)\t----- bird -----\tsuperhero",
    "762": "SELECT T2.power_name FROM superhero AS T1 INNER JOIN hero_power AS T3 ON T1.id = T3.hero_id INNER JOIN superpower AS T2 ON T3.power_id = T2.id GROUP BY T2.power_name ORDER BY COUNT(T2.power_name) DESC LIMIT 1;\t----- bird -----\tsuperhero",
    "763": "SELECT HA.attribute_value FROM superhero AS HS INNER JOIN hero_attribute AS HA ON HS.id = HA.hero_id WHERE HS.superhero_name = 'Abomination'\t----- bird -----\tsuperhero",
    "764": "SELECT T2.power_name FROM hero_power AS T1 INNER JOIN superpower AS T2 ON T1.power_id = T2.id WHERE T1.hero_id = 1;\t----- bird -----\tsuperhero",
    "765": "SELECT COUNT(DISTINCT hero_id) FROM hero_power WHERE power_id = (SELECT id FROM superpower WHERE power_name = 'stealth')\t----- bird -----\tsuperhero",
    "766": "SELECT s.superhero_name, s.full_name FROM superhero s JOIN hero_attribute ha ON s.id = ha.hero_id JOIN attribute a ON ha.attribute_id = a.id WHERE a.attribute_name = 'strength' ORDER BY ha.attribute_value DESC LIMIT 1;\t----- bird -----\tsuperhero",
    "767": "SELECT COUNT(superhero.id) / SUM(CASE WHEN skin_colour_id = 1 THEN 1 ELSE 0 END) as average FROM superhero\t----- bird -----\tsuperhero",
    "768": "SELECT COUNT(*) FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Dark Horse Comics')\t----- bird -----\tsuperhero",
    "769": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id INNER JOIN hero_attribute AS T3 ON T1.id = T3.hero_id INNER JOIN attribute AS T4 ON T3.attribute_id = T4.id WHERE T4.attribute_name = 'durability' AND T2.publisher_name = 'Dark Horse Comics' ORDER BY T3.attribute_value DESC LIMIT 1;\t----- bird -----\tsuperhero",
    "770": "SELECT colour.colour FROM superhero JOIN colour ON superhero.eye_colour_id = colour.id WHERE superhero.full_name = 'Abraham Sapien'\t----- bird -----\tsuperhero",
    "771": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T3.power_name = 'Flight'\t----- bird -----\tsuperhero",
    "772": "SELECT T1.colour AS eyes, T2.colour AS hair, T3.colour AS skin_colour FROM superhero AS T4 INNER JOIN colour AS T1 ON T4.eye_colour_id = T1.id INNER JOIN colour AS T2 ON T4.hair_colour_id = T2.id INNER JOIN colour AS T3 ON T4.skin_colour_id = T3.id INNER JOIN gender AS T5 ON T4.gender_id = T5.id INNER JOIN publisher AS T6 ON T4.publisher_id = T6.id WHERE T5.gender = 'Female' AND T6.publisher_name = 'Dark Horse Comics'\t----- bird -----\tsuperhero",
    "773": "SELECT T1.superhero_name, T2.publisher_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.hair_colour_id = T1.skin_colour_id AND T1.hair_colour_id = T1.eye_colour_id;\t----- bird -----\tsuperhero",
    "774": "SELECT race.race FROM superhero JOIN race ON superhero.race_id = race.id WHERE superhero.superhero_name = 'A-Bomb'\t----- bird -----\tsuperhero",
    "775": "SELECT ((COUNT(CASE WHEN s.gender_id = (SELECT id FROM gender WHERE gender = 'Female') AND c.colour = 'Blue' THEN 1 END) / COUNT(CASE WHEN s.gender_id = (SELECT id FROM gender WHERE gender = 'Female') THEN 1 END)) * 100) AS percentage FROM superhero AS s INNER JOIN colour AS c ON s.eye_colour_id = c.id OR s.hair_colour_id = c.id OR s.skin_colour_id = c.id;\t----- bird -----\tsuperhero",
    "776": "SELECT T1.superhero_name, T2.race FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T1.full_name = 'Charles Chandler'\t----- bird -----\tsuperhero",
    "777": "SELECT T2.gender FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id WHERE T1.superhero_name = 'Agent 13'\t----- bird -----\tsuperhero",
    "778": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T3.power_name = 'Adaptation'\t----- bird -----\tsuperhero",
    "779": "SELECT COUNT(power_id) FROM hero_power WHERE hero_id = (SELECT id FROM superhero WHERE superhero_name = 'Amazo')\t----- bird -----\tsuperhero",
    "780": "SELECT T2.power_name FROM superhero AS T1 INNER JOIN hero_power AS T3 ON T1.id = T3.hero_id INNER JOIN superpower AS T2 ON T3.power_id = T2.id WHERE T1.full_name = 'Hunter Zolomon'\t----- bird -----\tsuperhero",
    "781": "SELECT height_cm FROM superhero INNER JOIN colour ON superhero.eye_colour_id = colour.id WHERE colour.colour = 'Amber';\t----- bird -----\tsuperhero",
    "782": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id INNER JOIN colour AS T3 ON T1.hair_colour_id = T3.id WHERE T2.colour = 'Black' AND T3.colour = 'Black'\t----- bird -----\tsuperhero",
    "783": "SELECT colour.colour AS eye_colour FROM superhero INNER JOIN colour ON superhero.eye_colour_id = colour.id WHERE superhero.skin_colour_id = (SELECT id FROM colour WHERE colour = 'Gold')\t----- bird -----\tsuperhero",
    "784": "SELECT superhero.full_name FROM superhero INNER JOIN race ON superhero.race_id = race.id WHERE race.race = 'Vampire'\t----- bird -----\tsuperhero",
    "785": "SELECT superhero.superhero_name FROM superhero INNER JOIN alignment ON superhero.alignment_id = alignment.id WHERE alignment.alignment = 'Neutral'\t----- bird -----\tsuperhero",
    "786": "SELECT COUNT(T1.hero_id) FROM hero_attribute AS T1 INNER JOIN attribute AS T2 ON T1.attribute_id = T2.id WHERE T2.attribute_name = 'Strength' AND T1.attribute_value = (SELECT MAX(attribute_value) FROM hero_attribute WHERE attribute_id = (SELECT id FROM attribute WHERE attribute_name = 'Strength'))\t----- bird -----\tsuperhero",
    "787": "SELECT R.race, A.alignment FROM superhero AS S INNER JOIN race AS R ON S.race_id = R.id INNER JOIN alignment AS A ON S.alignment_id = A.id WHERE S.superhero_name = 'Cameron Hicks'\t----- bird -----\tsuperhero",
    "788": "SELECT ((COUNT(CASE WHEN gender.gender = 'Female' THEN 1 END) * 1.0 / COUNT(*)) * 100) AS percentage_female_heroes_published_by_marvel FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id JOIN gender ON superhero.gender_id = gender.id WHERE publisher.publisher_name = 'Marvel Comics';\t----- bird -----\tsuperhero",
    "789": "SELECT AVG(weight_kg) FROM superhero WHERE race_id = (SELECT id FROM race WHERE race = 'Alien')\t----- bird -----\tsuperhero",
    "790": "SELECT (SUM(CASE WHEN full_name = 'Emil Blonsky' THEN weight_kg ELSE 0 END) - SUM(CASE WHEN full_name = 'Charles Chandler' THEN weight_kg ELSE 0 END)) AS weight_difference FROM superhero;\t----- bird -----\tsuperhero",
    "791": "SELECT superhero.superhero_name, AVG(superhero.height_cm) AS average_height FROM superhero GROUP BY superhero.superhero_name;\t----- bird -----\tsuperhero",
    "792": "SELECT T2.power_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id WHERE T1.superhero_name = 'Abomination'\t----- bird -----\tsuperhero",
    "793": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id INNER JOIN race AS T3 ON T1.race_id = T3.id WHERE T2.id = 1 AND T3.id = 21;\t----- bird -----\tsuperhero",
    "794": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN attribute AS T3 ON T2.attribute_id = T3.id WHERE T3.attribute_name = 'Speed' ORDER BY T2.attribute_value DESC LIMIT 1;\t----- bird -----\tsuperhero",
    "795": "SELECT COUNT(*) FROM superhero WHERE alignment_id = 3;\t----- bird -----\tsuperhero",
    "796": "SELECT T2.attribute_name, T1.attribute_value FROM superhero AS T3 INNER JOIN hero_attribute AS T1 ON T3.id = T1.hero_id INNER JOIN attribute AS T2 ON T1.attribute_id = T2.id WHERE T3.superhero_name = '3-D Man'\t----- bird -----\tsuperhero",
    "797": "SELECT superhero_name FROM superhero WHERE eye_colour_id = 7 AND hair_colour_id = 9;\t----- bird -----\tsuperhero",
    "798": "SELECT P.publisher_name FROM superhero AS S JOIN publisher AS P ON S.publisher_id = P.id WHERE S.superhero_name IN ('Hawkman', 'Karate Kid', 'Speedy')\t----- bird -----\tsuperhero",
    "799": "SELECT COUNT(*) FROM superhero WHERE publisher_id IS NULL OR publisher_id = 1;\t----- bird -----\tsuperhero",
    "800": "SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM superhero) AS percentage FROM superhero WHERE eye_colour_id = 7;\t----- bird -----\tsuperhero",
    "801": "SELECT SUM(CASE WHEN gender_id = 1 THEN 1 ELSE 0 END) / SUM(CASE WHEN gender_id = 2 THEN 1 ELSE 0 END) AS gender_ratio FROM superhero;\t----- bird -----\tsuperhero",
    "802": "SELECT superhero_name FROM superhero WHERE height_cm = (SELECT MAX(height_cm) FROM superhero)\t----- bird -----\tsuperhero",
    "803": "SELECT id FROM superpower WHERE power_name = 'cryokinesis'\t----- bird -----\tsuperhero",
    "804": "SELECT superhero_name FROM superhero WHERE id = 294;\t----- bird -----\tsuperhero",
    "805": "SELECT full_name FROM superhero WHERE weight_kg = 0 OR weight_kg IS NULL;\t----- bird -----\tsuperhero",
    "806": "SELECT C.colour FROM superhero AS S INNER JOIN colour AS C ON S.eye_colour_id = C.id WHERE S.full_name = 'Karen Beecher-Duncan'\t----- bird -----\tsuperhero",
    "807": "SELECT T2.power_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id WHERE T1.full_name = 'Helen Parr'\t----- bird -----\tsuperhero",
    "808": "SELECT T1.race FROM superhero AS T1 WHERE T1.weight_kg = 108 AND T1.height_cm = 188;\t----- bird -----\tsuperhero",
    "809": "SELECT P.publisher_name FROM superhero AS S INNER JOIN publisher AS P ON S.publisher_id = P.id WHERE S.id = 38;\t----- bird -----\tsuperhero",
    "810": "SELECT T1.race FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id WHERE T2.attribute_value = (SELECT MAX(attribute_value) FROM hero_attribute)\t----- bird -----\tsuperhero",
    "811": "SELECT T1.alignment, T3.power_name FROM superhero AS T1 INNER JOIN alignment AS T2 ON T1.alignment_id = T2.id INNER JOIN hero_power AS T3 ON T1.id = T3.hero_id WHERE T1.superhero_name = 'Atom IV'\t----- bird -----\tsuperhero",
    "812": "SELECT T1.full_name FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T2.colour = 'Blue'\t----- bird -----\tsuperhero",
    "813": "SELECT AVG(attribute_value) FROM hero_attribute WHERE hero_id IN (SELECT id FROM superhero WHERE alignment_id = 3)\t----- bird -----\tsuperhero",
    "814": "SELECT c.colour FROM superhero s JOIN colour c ON s.skin_colour_id = c.id JOIN hero_attribute ha ON s.id = ha.hero_id WHERE ha.attribute_value = 100;\t----- bird -----\tsuperhero",
    "815": "SELECT COUNT(*) FROM superhero WHERE alignment_id = 1 AND gender_id = 2;\t----- bird -----\tsuperhero",
    "816": "SELECT superhero.superhero_name FROM superhero INNER JOIN hero_attribute ON superhero.id = hero_attribute.hero_id WHERE hero_attribute.attribute_value BETWEEN 75 AND 80;\t----- bird -----\tsuperhero",
    "817": "SELECT T1.race FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.hair_colour_id = T2.id INNER JOIN gender AS T3 ON T1.gender_id = T3.id WHERE T2.colour = 'blue' AND T3.gender = 'male'\t----- bird -----\tsuperhero",
    "818": "SELECT (MULTIPLY(DIVIDE(SUM(CASE WHEN T6.alignment_id = 2 AND T5.gender_id = 2 THEN 1 ELSE 0 END), COUNT(CASE WHEN T6.alignment_id = 2 THEN 1 ELSE 0 END)), 100.0)) AS Percentage FROM superhero T5 INNER JOIN alignment T6 ON T5.alignment_id = T6.id;\t----- bird -----\tsuperhero",
    "819": "SELECT (SUM(CASE WHEN T1.eye_colour_id = 7 THEN 1 ELSE 0 END) - SUM(CASE WHEN T1.eye_colour_id = 1 THEN 1 ELSE 0 END)) AS difference FROM superhero AS T1 WHERE T1.weight_kg = 0 OR T1.weight_kg IS NULL;\t----- bird -----\tsuperhero",
    "820": "SELECT HA.attribute_value FROM superhero AS HS INNER JOIN hero_attribute AS HA ON HS.id = HA.hero_id INNER JOIN attribute AS A ON HA.attribute_id = A.id WHERE HS.superhero_name = 'Hulk' AND A.attribute_name = 'Strength'\t----- bird -----\tsuperhero",
    "821": "SELECT T2.power_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T1.superhero_name = 'Ajax'\t----- bird -----\tsuperhero",
    "822": "SELECT COUNT(*) FROM superhero INNER JOIN colour ON superhero.skin_colour_id = colour.id INNER JOIN alignment ON superhero.alignment_id = alignment.id WHERE colour.colour = 'Green' AND alignment.alignment = 'Bad'\t----- bird -----\tsuperhero",
    "823": "SELECT COUNT(*) FROM superhero WHERE gender_id = (SELECT id FROM gender WHERE gender = 'Female') AND publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')\t----- bird -----\tsuperhero",
    "824": "SELECT superhero.superhero_name FROM superhero INNER JOIN hero_power ON superhero.id = hero_power.hero_id INNER JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'Wind Control' ORDER BY superhero.superhero_name ASC;\t----- bird -----\tsuperhero",
    "825": "SELECT gender.gender FROM superhero JOIN hero_power ON superhero.id = hero_power.hero_id JOIN superpower ON hero_power.power_id = superpower.id JOIN gender ON superhero.gender_id = gender.id WHERE superpower.power_name = 'Phoenix Force';\t----- bird -----\tsuperhero",
    "826": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'DC Comics' ORDER BY T1.weight_kg DESC LIMIT 1\t----- bird -----\tsuperhero",
    "827": "SELECT AVG(height_cm) FROM superhero WHERE race_id <> (SELECT id FROM race WHERE race = 'Human') AND publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Dark Horse Comics')\t----- bird -----\tsuperhero",
    "828": "SELECT COUNT(hero_id) FROM hero_attribute WHERE attribute_id = (SELECT id FROM attribute WHERE attribute_name = 'Speed') AND attribute_value = 100\t----- bird -----\tsuperhero",
    "829": "SELECT ABS(SUM(CASE WHEN publisher_name = 'DC Comics' THEN 1 ELSE 0 END) - SUM(CASE WHEN publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END)) AS difference FROM publisher JOIN superhero ON publisher.id = superhero.publisher_id;\t----- bird -----\tsuperhero",
    "830": "SELECT T2.attribute_name FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id WHERE T1.superhero_name = 'Black Panther' GROUP BY T2.attribute_name HAVING MIN(T2.attribute_value) = T2.attribute_value;\t----- bird -----\tsuperhero",
    "831": "SELECT C.colour FROM superhero AS S INNER JOIN colour AS C ON S.eye_colour_id = C.id WHERE S.superhero_name = 'Abomination'\t----- bird -----\tsuperhero",
    "832": "SELECT superhero_name FROM superhero WHERE height_cm = (SELECT MAX(height_cm) FROM superhero)\t----- bird -----\tsuperhero",
    "833": "SELECT superhero_name FROM superhero WHERE full_name = 'Charles Chandler'\t----- bird -----\tsuperhero",
    "834": "SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'George Lucas')) AS percentage_female FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'George Lucas') AND gender_id = (SELECT id FROM gender WHERE gender = 'Female')\t----- bird -----\tsuperhero",
    "835": "SELECT (MULTIPLY(DIVIDE(SUM(T1.alignment = 'Good'), COUNT(*)), 100.0)) AS percentage_good_superheroes FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'Marvel Comics'\t----- bird -----\tsuperhero",
    "836": "SELECT COUNT(*) FROM superhero WHERE full_name LIKE 'John%';\t----- bird -----\tsuperhero",
    "837": "SELECT MIN(attribute_value) AS lowest_attribute_value, hero_id FROM hero_attribute GROUP BY hero_id ORDER BY lowest_attribute_value LIMIT 1;\t----- bird -----\tsuperhero",
    "838": "SELECT T1.full_name FROM superhero AS T1 WHERE T1.superhero_name = 'Alien'\t----- bird -----\tsuperhero",
    "839": "SELECT s.full_name FROM superhero AS s INNER JOIN colour AS c ON s.eye_colour_id = c.id WHERE s.weight_kg < 100 AND c.colour = 'brown'\t----- bird -----\tsuperhero",
    "840": "SELECT attribute.attribute_name, hero_attribute.attribute_value FROM superhero JOIN hero_attribute ON superhero.id = hero_attribute.hero_id JOIN attribute ON hero_attribute.attribute_id = attribute.id WHERE superhero.superhero_name = 'Aquababy'\t----- bird -----\tsuperhero",
    "841": "SELECT weight_kg, race FROM superhero WHERE id = 40\t----- bird -----\tsuperhero",
    "842": "SELECT AVG(height_cm) FROM superhero WHERE alignment_id = (SELECT id FROM alignment WHERE alignment = 'Neutral')\t----- bird -----\tsuperhero",
    "843": "SELECT T1.id FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T3.power_name = 'Intelligence'\t----- bird -----\tsuperhero",
    "844": "SELECT T2.colour FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.superhero_name = 'Blackwulf'\t----- bird -----\tsuperhero",
    "845": "SELECT power_name FROM superhero JOIN hero_power ON superhero.id = hero_power.hero_id WHERE height_cm > (SELECT AVG(height_cm) * 0.8 FROM superhero)\t----- bird -----\tsuperhero",
    "846": "SELECT T1.driverRef FROM qualifying AS T1 WHERE T1.raceId = 18 AND T1.q1 IN ( SELECT MAX(T2.q1) FROM qualifying AS T2 WHERE T2.raceId = 18 LIMIT 5 )\t----- bird -----\tformula_1",
    "847": "SELECT D.surname FROM drivers AS D INNER JOIN qualifying AS Q ON D.driverId = Q.driverId WHERE Q.raceId = 19 AND Q.q2 = (SELECT MIN(q2) FROM qualifying WHERE raceId = 19)\t----- bird -----\tformula_1",
    "848": "SELECT DISTINCT races.year FROM races INNER JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.location = 'Shanghai'\t----- bird -----\tformula_1",
    "849": "SELECT races.url FROM races INNER JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.name = 'Circuit de Barcelona-Catalunya'\t----- bird -----\tformula_1",
    "850": "SELECT R.name FROM races AS R INNER JOIN circuits AS C ON R.circuitId = C.circuitId WHERE C.country = 'Germany'\t----- bird -----\tformula_1",
    "851": "SELECT T1.position FROM circuits AS T1 INNER JOIN races AS T2 ON T1.circuitId = T2.circuitId INNER JOIN results AS T3 ON T2.raceId = T3.raceId INNER JOIN constructors AS T4 ON T3.constructorId = T4.constructorId WHERE T4.name = 'Renault'\t----- bird -----\tformula_1",
    "852": "SELECT COUNT(*) FROM races WHERE year = 2010 AND circuitId NOT IN (SELECT circuitId FROM circuits WHERE country IN ('Asia', 'Europe'))\t----- bird -----\tformula_1",
    "853": "SELECT T2.name FROM circuits AS T1 INNER JOIN races AS T2 ON T1.circuitId = T2.circuitId WHERE T1.country = 'Spain'\t----- bird -----\tformula_1",
    "854": "SELECT c.lat, c.lng FROM circuits c INNER JOIN races r ON c.circuitId = r.circuitId WHERE r.name = 'Australian Grand Prix';\t----- bird -----\tformula_1",
    "855": "SELECT r.url FROM races AS r INNER JOIN circuits AS c ON r.circuitId = c.circuitId WHERE c.name = 'Sepang International Circuit'\t----- bird -----\tformula_1",
    "856": "SELECT T1.time FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T2.name = 'Sepang International Circuit'\t----- bird -----\tformula_1",
    "857": "SELECT lat, lng FROM circuits WHERE name = 'Abu Dhabi Grand Prix'\t----- bird -----\tformula_1",
    "858": "SELECT c.country FROM constructors AS c INNER JOIN constructorResults AS cr ON c.constructorId = cr.constructorId WHERE cr.raceId = 24 AND cr.points = 1;\t----- bird -----\tformula_1",
    "859": "SELECT q1 FROM qualifying WHERE raceId = 354 AND driverId = (SELECT driverId FROM drivers WHERE forename = 'Bruno' AND surname = 'Senna')\t----- bird -----\tformula_1",
    "860": "SELECT T2.nationality FROM drivers AS T2 INNER JOIN qualifying AS T1 ON T1.driverId = T2.driverId WHERE T1.raceId = 355 AND T1.q2 = '0:01:40'\t----- bird -----\tformula_1",
    "861": "SELECT number FROM qualifying WHERE raceId = 903 AND q3 = '0:01:54'\t----- bird -----\tformula_1",
    "862": "SELECT COUNT(*) FROM results WHERE raceId = (SELECT raceId FROM races WHERE name = 'Bahrain Grand Prix' AND year = 2007) AND time IS NULL\t----- bird -----\tformula_1",
    "863": "SELECT T2.year FROM races AS T1 INNER JOIN seasons AS T2 ON T1.year = T2.year WHERE T1.raceId = 901;\t----- bird -----\tformula_1",
    "864": "SELECT COUNT(*) FROM results WHERE raceId = (SELECT raceId FROM races WHERE date = '2015-11-29') AND time IS NOT NULL;\t----- bird -----\tformula_1",
    "865": "SELECT drivers.forename, drivers.surname FROM results INNER JOIN drivers ON results.driverId = drivers.driverId WHERE results.raceId = 592 AND results.time IS NOT NULL ORDER BY drivers.dob ASC LIMIT 1;\t----- bird -----\tformula_1",
    "866": "SELECT T2.forename, T2.surname, T2.url FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.raceId = 161 AND T1.fastestLapTime = '0:01:27'\t----- bird -----\tformula_1",
    "867": "SELECT t2.nationality FROM results AS t1 INNER JOIN drivers AS t2 ON t1.driverId = t2.driverId WHERE t1.raceId = 933 AND t1.fastestLapSpeed = (SELECT MAX(fastestLapSpeed) FROM results WHERE raceId = 933)\t----- bird -----\tformula_1",
    "868": "SELECT location, lat, lng FROM circuits WHERE name = 'Malaysian Grand Prix';\t----- bird -----\tformula_1",
    "869": "SELECT T2.url FROM constructorResults AS T1 INNER JOIN constructors AS T2 ON T1.constructorId = T2.constructorId WHERE T1.raceId = 9 ORDER BY T1.points DESC LIMIT 1;\t----- bird -----\tformula_1",
    "870": "SELECT T1.q1 FROM qualifying AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T1.raceId = T3.raceId WHERE T2.forename = 'Lucas' AND T2.surname = 'di Grassi' AND T3.raceId = 345;\t----- bird -----\tformula_1",
    "871": "SELECT D.nationality FROM drivers AS D INNER JOIN qualifying AS Q ON D.driverId = Q.driverId WHERE Q.q2 = '0:01:15' AND Q.raceId = 347;\t----- bird -----\tformula_1",
    "872": "SELECT T2.code FROM qualifying AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.raceId = 45 AND T1.q3 = '0:01:33'\t----- bird -----\tformula_1",
    "873": "SELECT results.time FROM results WHERE results.raceId = 743 AND results.driverId = (SELECT driverId FROM drivers WHERE forename = 'Bruce' AND surname = 'McLaren');\t----- bird -----\tformula_1",
    "874": "SELECT T2.forename, T2.surname FROM races AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId WHERE T1.name = 'San Marino Grand Prix' AND T1.year = 2006 AND T2.position = 2\t----- bird -----\tformula_1",
    "875": "SELECT * FROM seasons JOIN races ON seasons.year = races.year WHERE races.raceId = 901;\t----- bird -----\tformula_1",
    "876": "SELECT COUNT(T1.driverId) FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.date = '2015-11-29' AND T1.statusId = 1\t----- bird -----\tformula_1",
    "877": "SELECT drivers.forename, drivers.surname FROM results INNER JOIN drivers ON results.driverId = drivers.driverId WHERE results.raceId = 872 AND results.time IS NOT NULL ORDER BY drivers.dob DESC LIMIT 1;\t----- bird -----\tformula_1",
    "878": "SELECT drivers.forename || ' ' || drivers.surname AS driver_name FROM results JOIN drivers ON results.driverId = drivers.driverId WHERE raceId = 348 AND time = (SELECT MIN(time) FROM results WHERE raceId = 348);\t----- bird -----\tformula_1",
    "879": "SELECT D.nationality FROM results AS R INNER JOIN drivers AS D ON R.driverId = D.driverId WHERE R.fastestLapSpeed = (SELECT MAX(fastestLapSpeed) FROM results)\t----- bird -----\tformula_1",
    "880": "SELECT ((r1.fastestLapSpeed - r2.fastestLapSpeed) / r1.fastestLapSpeed) * 100 AS percentage FROM results AS r1 INNER JOIN results AS r2 ON r1.raceId = 853 AND r2.raceId = 854 WHERE r1.driverId = (SELECT driverId FROM drivers WHERE forename = 'Paul' AND surname = 'di Resta')\t----- bird -----\tformula_1",
    "881": "SELECT (driverId, COUNT(CASE WHEN time IS NOT NULL THEN 1 END) / COUNT(driverId) * 100) AS completion_rate FROM results WHERE raceId IN (SELECT raceId FROM races WHERE date = '1983-07-16') GROUP BY driverId;\t----- bird -----\tformula_1",
    "882": "SELECT MIN(year) FROM races WHERE name = 'Singapore Grand Prix'\t----- bird -----\tformula_1",
    "883": "SELECT COUNT(*) FROM races WHERE year = 2005; SELECT name FROM races WHERE year = 2005 ORDER BY raceId DESC;\t----- bird -----\tformula_1",
    "884": "SELECT r1.name AS first_race, r2.name AS other_races FROM races AS r1 INNER JOIN races AS r2 ON r1.year = r2.year AND r1.month = r2.month WHERE r1.date = (SELECT MIN(date) FROM races) AND r2.raceId <> r1.raceId;\t----- bird -----\tformula_1",
    "885": "SELECT races.name, races.date FROM races WHERE races.year = 1999 AND races.round = (SELECT MAX(round) FROM races WHERE year = 1999)\t----- bird -----\tformula_1",
    "886": "SELECT year FROM races GROUP BY year ORDER BY COUNT(round) DESC LIMIT 1;\t----- bird -----\tformula_1",
    "887": "SELECT name FROM races WHERE year = 2017 AND raceId NOT IN (SELECT raceId FROM races WHERE year = 2000)\t----- bird -----\tformula_1",
    "888": "SELECT c.country, ci.name, ci.location FROM circuits ci JOIN races r ON ci.circuitId = r.circuitId WHERE r.year = (SELECT MIN(year) FROM seasons) AND ci.country = 'Europe';\t----- bird -----\tformula_1",
    "889": "SELECT MAX(year) FROM races INNER JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.name = 'Brands Hatch' AND circuits.country = 'UK' AND races.name = 'British Grand Prix'\t----- bird -----\tformula_1",
    "890": "SELECT COUNT(t1.year) FROM races AS t1 INNER JOIN circuits AS t2 ON t1.circuitId = t2.circuitId WHERE t2.name = 'Silverstone Circuit' AND t1.name = 'British Grand Prix'\t----- bird -----\tformula_1",
    "891": "SELECT T1.forename, T1.surname FROM drivers AS T1 INNER JOIN driverStandings AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T2.raceId = T3.raceId WHERE T3.year = 2010 AND T3.name = 'Singapore Grand Prix' ORDER BY T2.position;\t----- bird -----\tformula_1",
    "892": "SELECT T1.forename || ' ' || T1.surname AS Full_Name FROM drivers AS T1 INNER JOIN ( SELECT driverId, MAX(points) AS Max_Points FROM driverStandings GROUP BY driverId ) AS T2 ON T1.driverId = T2.driverId INNER JOIN driverStandings AS T3 ON T1.driverId = T3.driverId AND T3.points = T2.Max_Points;\t----- bird -----\tformula_1",
    "893": "SELECT D.forename || ' ' || D.surname AS Driver_Name, R.points FROM drivers AS D INNER JOIN results AS R ON D.driverId = R.driverId INNER JOIN races AS RA ON R.raceId = RA.raceId INNER JOIN seasons AS S ON RA.year = S.year WHERE RA.name = 'Chinese Grand Prix' AND S.year = 2017 ORDER BY R.points DESC LIMIT 3;\t----- bird -----\tformula_1",
    "894": "SELECT MIN(time) AS best_lap_time, drivers.forename, drivers.surname, races.name FROM lapTimes INNER JOIN drivers ON lapTimes.driverId = drivers.driverId INNER JOIN races ON lapTimes.raceId = races.raceId WHERE time = (SELECT MIN(time) FROM lapTimes)\t----- bird -----\tformula_1",
    "895": "SELECT AVG(milliseconds) AS average_lap_time FROM lapTimes INNER JOIN drivers ON lapTimes.driverId = drivers.driverId INNER JOIN races ON lapTimes.raceId = races.raceId WHERE drivers.forename = 'Sebastian' AND drivers.surname = 'Vettel' AND races.year = 2009 AND races.name = 'Chinese Grand Prix'\t----- bird -----\tformula_1",
    "896": "SELECT (COUNT(CASE WHEN surname = 'Hamilton' AND year >= 2010 AND position > 1 THEN raceId END) * 100.0 / COUNT(CASE WHEN surname = 'Hamilton' AND year >= 2010 THEN raceId END)) as percentage FROM results;\t----- bird -----\tformula_1",
    "897": "SELECT drivers.forename, drivers.surname, drivers.nationality, AVG(driverStandings.points) FROM drivers INNER JOIN driverStandings ON drivers.driverId = driverStandings.driverId GROUP BY drivers.driverId ORDER BY COUNT(driverStandings.wins) DESC LIMIT 1\t----- bird -----\tformula_1",
    "898": "SELECT 2022 - year(dob) + 1 AS age, forename, surname FROM drivers WHERE nationality = 'Japanese' ORDER BY dob DESC LIMIT 1;\t----- bird -----\tformula_1",
    "899": "SELECT C.name FROM circuits AS C INNER JOIN races AS R ON C.circuitId = R.circuitId INNER JOIN seasons AS S ON R.year = S.year WHERE S.year BETWEEN 1990 AND 2000 GROUP BY C.name HAVING COUNT(DISTINCT R.raceId) = 4;\t----- bird -----\tformula_1",
    "900": "SELECT T1.name AS circuit_name, T1.location AS circuit_location, T2.name AS race_name FROM circuits AS T1 INNER JOIN races AS T2 ON T1.circuitId = T2.circuitId INNER JOIN seasons AS T3 ON T2.year = T3.year WHERE T1.country = 'USA' AND T3.year = 2006;\t----- bird -----\tformula_1",
    "901": "SELECT T1.name AS race_name, T2.name AS circuit_name, T2.location FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE strftime('%m', T1.date) = '09' AND strftime('%Y', T1.date) = '2005'\t----- bird -----\tformula_1",
    "902": "SELECT races.name FROM races JOIN results ON races.raceId = results.raceId JOIN drivers ON results.driverId = drivers.driverId WHERE drivers.forename = 'Alex' AND drivers.surname = 'Yoong' AND results.position < 10;\t----- bird -----\tformula_1",
    "903": "SELECT COUNT(*) FROM results WHERE driverId = (SELECT driverId FROM drivers WHERE forename = 'Michael' AND surname = 'Schumacher') AND raceId IN (SELECT raceId FROM races WHERE circuitId = (SELECT circuitId FROM circuits WHERE name = 'Sepang International Circuit')) AND position = 1;\t----- bird -----\tformula_1",
    "904": "SELECT races.name, races.year FROM results INNER JOIN races ON results.raceId = races.raceId INNER JOIN drivers ON results.driverId = drivers.driverId WHERE drivers.forename = 'Michael' AND drivers.surname = 'Schumacher' ORDER BY results.milliseconds LIMIT 1;\t----- bird -----\tformula_1",
    "905": "SELECT AVG(points) AS Average_Points FROM results INNER JOIN drivers ON results.driverId = drivers.driverId WHERE drivers.forename = 'Eddie' AND drivers.surname = 'Irvine' AND results.raceId IN (SELECT raceId FROM races WHERE year = 2000)\t----- bird -----\tformula_1",
    "906": "SELECT races.name, results.points FROM drivers JOIN results ON drivers.driverId = results.driverId JOIN races ON results.raceId = races.raceId WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton' AND races.year = (SELECT MIN(year) FROM races)\t----- bird -----\tformula_1",
    "907": "SELECT races.name, circuits.country FROM races JOIN circuits ON races.circuitId = circuits.circuitId WHERE races.year = 2017 ORDER BY races.date;\t----- bird -----\tformula_1",
    "908": "SELECT T2.name AS race_name, T1.year, T3.location AS circuit_location FROM races AS T1 INNER JOIN ( SELECT raceId, MAX(laps) AS max_laps FROM results GROUP BY raceId ) AS T2 ON T1.raceId = T2.raceId INNER JOIN circuits AS T3 ON T1.circuitId = T3.circuitId;\t----- bird -----\tformula_1",
    "909": "SELECT (COUNT(CASE WHEN country = 'Germany' AND name = 'European Grand Prix' THEN 1 END) * 100) / COUNT(CASE WHEN name = 'European Grand Prix' THEN 1 END) as percentage FROM races;\t----- bird -----\tformula_1",
    "910": "SELECT lat, lng FROM circuits WHERE name = 'Silverstone Circuit'\t----- bird -----\tformula_1",
    "911": "SELECT name FROM circuits WHERE name IN ('Silverstone Circuit', 'Hockenheimring', 'Hungaroring') ORDER BY lat DESC LIMIT 1\t----- bird -----\tformula_1",
    "912": "SELECT circuitRef FROM circuits WHERE name = 'Marina Bay Street Circuit';\t----- bird -----\tformula_1",
    "913": "SELECT country FROM circuits WHERE alt = (SELECT MAX(alt) FROM circuits)\t----- bird -----\tformula_1",
    "914": "SELECT COUNT(*) FROM drivers WHERE code IS NULL;\t----- bird -----\tformula_1",
    "915": "SELECT D.country FROM drivers AS D WHERE D.dob = (SELECT MIN(dob) FROM drivers)\t----- bird -----\tformula_1",
    "916": "SELECT surname FROM drivers WHERE nationality = 'Italian'\t----- bird -----\tformula_1",
    "917": "SELECT drivers.url FROM drivers WHERE forename = 'Anthony' AND surname = 'Davidson'\t----- bird -----\tformula_1",
    "918": "SELECT driverRef FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton'\t----- bird -----\tformula_1",
    "919": "SELECT circuits.name FROM races INNER JOIN circuits ON races.circuitId = circuits.circuitId WHERE races.year = 2009 AND races.name = 'Spanish Grand Prix'\t----- bird -----\tformula_1",
    "920": "SELECT races.year FROM races INNER JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.name = 'Silverstone Circuit'\t----- bird -----\tformula_1",
    "921": "SELECT races.name, races.date, races.url FROM races INNER JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.name = 'Silverstone Circuit';\t----- bird -----\tformula_1",
    "922": "SELECT races.time FROM races JOIN circuits ON races.circuitId = circuits.circuitId WHERE races.year BETWEEN 2010 AND 2019 AND circuits.name = 'Abu Dhabi Circuit' AND races.name LIKE '%Formula_1%'\t----- bird -----\tformula_1",
    "923": "SELECT COUNT(*) FROM races INNER JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.country = 'Italy'\t----- bird -----\tformula_1",
    "924": "SELECT races.date FROM races INNER JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.name = 'Barcelona-Catalunya';\t----- bird -----\tformula_1",
    "925": "SELECT C.url FROM races AS R INNER JOIN circuits AS C ON R.circuitId = C.circuitId WHERE R.year = 2009 AND R.name = 'Spanish Grand Prix'\t----- bird -----\tformula_1",
    "926": "SELECT MIN(fastestLapTime) FROM results INNER JOIN drivers ON results.driverId = drivers.driverId WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton'\t----- bird -----\tformula_1",
    "927": "SELECT T1.forename, T1.surname FROM drivers AS T1 INNER JOIN results AS T2 ON T2.driverId = T1.driverId WHERE T2.fastestLapSpeed = (SELECT MAX(fastestLapSpeed) FROM results)\t----- bird -----\tformula_1",
    "928": "SELECT T2.driverRef FROM races AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId WHERE T1.name = 'Australian Grand Prix' AND T1.year = 2008 AND T2.position = 1;\t----- bird -----\tformula_1",
    "929": "SELECT races.name FROM races INNER JOIN results ON races.raceId = results.raceId INNER JOIN drivers ON results.driverId = drivers.driverId WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton'\t----- bird -----\tformula_1",
    "930": "SELECT Races.name FROM Races INNER JOIN Results ON Races.raceId = Results.raceId INNER JOIN Drivers ON Results.driverId = Drivers.driverId WHERE Drivers.forename = 'Lewis' AND Drivers.surname = 'Hamilton' ORDER BY Results.rank ASC LIMIT 1\t----- bird -----\tformula_1",
    "931": "SELECT MAX(fastestLapSpeed) FROM results WHERE raceId = (SELECT raceId FROM races WHERE year = 2009 AND name = 'Spanish Grand Prix')\t----- bird -----\tformula_1",
    "932": "SELECT DISTINCT year FROM races WHERE raceId IN (SELECT raceId FROM results WHERE driverId = (SELECT driverId FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton'))\t----- bird -----\tformula_1",
    "933": "SELECT T1.positionOrder FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T1.raceId = T3.raceId WHERE T2.forename = 'Lewis' AND T2.surname = 'Hamilton' AND T3.year = 2008 AND T3.name = 'Australian Grand Prix'\t----- bird -----\tformula_1",
    "934": "SELECT T1.forename, T1.surname FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T2.raceId = T3.raceId WHERE T3.year = 2008 AND T3.name = 'Australian Grand Prix' AND T2.grid = 4\t----- bird -----\tformula_1",
    "935": "SELECT COUNT(*) FROM results WHERE raceId = (SELECT raceId FROM races WHERE name = 'Australian Grand Prix' AND year = 2008) AND time IS NOT NULL;\t----- bird -----\tformula_1",
    "936": "SELECT fastestLapTime FROM results WHERE raceId = (SELECT raceId FROM races WHERE name = 'Australian Grand Prix' AND year = 2008) AND driverId = (SELECT driverId FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton')\t----- bird -----\tformula_1",
    "937": "SELECT time FROM results WHERE raceId = (SELECT raceId FROM races WHERE year = 2008 AND name = 'Australian Grand Prix') AND positionOrder = 2\t----- bird -----\tformula_1",
    "938": "SELECT D.forename, D.surname, D.url FROM drivers AS D INNER JOIN results AS R ON D.driverId = R.driverId INNER JOIN races AS RA ON R.raceId = RA.raceId INNER JOIN seasons AS S ON RA.year = S.year WHERE RA.name = 'Australian Grand Prix' AND RA.year = 2008 AND R.position = 1 AND R.time LIKE '__:__:__.___'\t----- bird -----\tformula_1",
    "939": "SELECT COUNT(driverId) FROM drivers JOIN results ON drivers.driverId = results.driverId JOIN races ON results.raceId = races.raceId WHERE races.year = 2008 AND races.name = 'Australian Grand Prix' AND drivers.nationality = 'American'\t----- bird -----\tformula_1",
    "940": "SELECT COUNT(DISTINCT T1.driverID) FROM results AS T1 INNER JOIN races AS T2 ON T1.raceID = T2.raceID WHERE T2.year = 2008 AND T2.name = 'Australian Grand Prix' AND T1.time IS NOT NULL;\t----- bird -----\tformula_1",
    "941": "SELECT SUM(T1.points) FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T1.raceId = T3.raceId WHERE T2.forename = 'Lewis' AND T2.surname = 'Hamilton' AND T3.name = 'Formula_1'\t----- bird -----\tformula_1",
    "942": "SELECT AVG(SUBSTR(fastestLapTime, 1, 2) * 60 + SUBSTR(fastestLapTime, 4, 2) + SUBSTR(fastestLapTime, 7) / 1000) AS Average_Fastest_Lap_Time FROM results INNER JOIN drivers ON results.driverId = drivers.driverId WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton'\t----- bird -----\tformula_1",
    "943": "SELECT COUNT(raceId) / (SELECT COUNT(raceId) FROM results WHERE raceId = (SELECT raceId FROM races WHERE year = 2008 AND name = 'Australian Grand Prix')) FROM results WHERE raceId = (SELECT raceId FROM races WHERE year = 2008 AND name = 'Australian Grand Prix') AND time IS NOT NULL;\t----- bird -----\tformula_1",
    "944": "SELECT ((results.time - (SELECT MIN(results.time) FROM results WHERE raceId = (SELECT raceId FROM races WHERE year = 2008 AND name = 'Australian Grand Prix'))) / (results.time + (SELECT MIN(results.time) FROM results WHERE raceId = (SELECT raceId FROM races WHERE year = 2008 AND name = 'Australian Grand Prix')))) * 100 AS percentage_faster FROM results WHERE raceId = (SELECT raceId FROM races WHERE year = 2008 AND name = 'Australian Grand Prix') AND results.time IS NOT NULL\t----- bird -----\tformula_1",
    "945": "SELECT COUNT(*) FROM circuits WHERE country = 'Australia' AND location = 'Melbourne'\t----- bird -----\tformula_1",
    "946": "SELECT lat, lng FROM circuits WHERE country = 'USA'\t----- bird -----\tformula_1",
    "947": "SELECT COUNT(*) FROM drivers WHERE nationality = 'British' AND strftime('%Y', dob) > '1980'\t----- bird -----\tformula_1",
    "948": "SELECT AVG(points) FROM constructorResults AS CR INNER JOIN constructors AS C ON CR.constructorId = C.constructorId WHERE C.nationality = 'British'\t----- bird -----\tformula_1",
    "949": "SELECT T2.name AS constructor_name FROM constructorStandings AS T1 INNER JOIN constructors AS T2 ON T1.constructorId = T2.constructorId WHERE T1.points = (SELECT MAX(points) FROM constructorStandings)\t----- bird -----\tformula_1",
    "950": "SELECT constructors.name FROM constructorStandings JOIN constructors ON constructorStandings.constructorId = constructors.constructorId WHERE constructorStandings.points = 0 AND constructorStandings.raceId = 291;\t----- bird -----\tformula_1",
    "951": "SELECT COUNT(T1.constructorId) FROM constructorStandings AS T1 INNER JOIN constructors AS T2 ON T1.constructorId = T2.constructorId WHERE T2.nationality = 'Japanese' GROUP BY T1.constructorId HAVING COUNT(T1.raceId) = 2 AND SUM(T1.points) = 0;\t----- bird -----\tformula_1",
    "952": "SELECT C.name FROM constructors AS C INNER JOIN results AS R ON C.constructorId = R.constructorId WHERE R.position = 1;\t----- bird -----\tformula_1",
    "953": "SELECT COUNT(DISTINCT T2.constructorId) FROM results AS T1 INNER JOIN constructors AS T2 ON T1.constructorId = T2.constructorId WHERE T2.nationality = 'French' AND T1.laps > 50\t----- bird -----\tformula_1",
    "954": "SELECT (COUNT(DISTINCT driverId) * 100) / (SELECT COUNT(DISTINCT driverId) FROM results WHERE raceId IN (SELECT raceId FROM races WHERE year BETWEEN 2007 AND 2009)) AS race_completion_percentage FROM results WHERE raceId IN (SELECT raceId FROM races WHERE year BETWEEN 2007 AND 2009) AND driverId IN (SELECT driverId FROM drivers WHERE nationality = 'Japanese') AND time IS NOT NULL;\t----- bird -----\tformula_1",
    "955": "SELECT T1.year, AVG(strftime('%s', T2.time) - strftime('%s', '00:00:00.000')) AS average_time FROM seasons AS T1 INNER JOIN races AS T2 ON T1.year = T2.year INNER JOIN results AS T3 ON T2.raceId = T3.raceId WHERE T3.position = 1 AND T3.time IS NOT NULL GROUP BY T1.year\t----- bird -----\tformula_1",
    "956": "SELECT forename, surname FROM drivers WHERE dob > '1975-01-01' AND driverId IN ( SELECT driverId FROM results WHERE position = 2 )\t----- bird -----\tformula_1",
    "957": "SELECT COUNT(*) FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T1.nationality = 'Italian' AND T2.time IS NULL\t----- bird -----\tformula_1",
    "958": "SELECT T1.forename, T1.surname FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T2.fastestLapTime = (SELECT MIN(fastestLapTime) FROM results)\t----- bird -----\tformula_1",
    "959": "SELECT T2.fastestLap FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T1.raceId = T3.raceId WHERE T3.year = 2009 AND T1.position = 1;\t----- bird -----\tformula_1",
    "960": "SELECT AVG(fastestLapSpeed) FROM results AS R INNER JOIN races AS RA ON R.raceId = RA.raceId WHERE RA.name = 'Spanish Grand Prix' AND RA.year = 2009\t----- bird -----\tformula_1",
    "961": "SELECT T1.name, T2.year FROM races AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId WHERE T2.milliseconds IS NOT NULL ORDER BY T2.milliseconds LIMIT 1;\t----- bird -----\tformula_1",
    "962": "SELECT (COUNT(CASE WHEN year(dob) < 1985 AND laps > 50 THEN driverId END) * 100.0) / COUNT(CASE WHEN year BETWEEN 2000 AND 2005 THEN driverId END) AS percentage FROM drivers;\t----- bird -----\tformula_1",
    "963": "SELECT COUNT(*) FROM drivers d JOIN lapTimes lt ON d.driverId = lt.driverId WHERE d.nationality = 'French' AND lt.time < '02:00.00'\t----- bird -----\tformula_1",
    "964": "SELECT driverRef, forename, surname FROM drivers WHERE nationality = 'American'\t----- bird -----\tformula_1",
    "965": "SELECT raceId FROM races WHERE year = 2009;\t----- bird -----\tformula_1",
    "966": "SELECT COUNT(driverId) FROM results WHERE raceId = 18;\t----- bird -----\tformula_1",
    "967": "SELECT code FROM drivers ORDER BY year(dob) DESC LIMIT 3 SELECT COUNT(*) FROM drivers WHERE nationality = 'Dutch' AND driverId IN (SELECT driverId FROM drivers ORDER BY year(dob) DESC LIMIT 3)\t----- bird -----\tformula_1",
    "968": "SELECT driverRef FROM drivers WHERE forename = 'Robert' AND surname = 'Kubica';\t----- bird -----\tformula_1",
    "969": "SELECT COUNT(*) FROM drivers WHERE nationality = 'Australian' AND strftime('%Y', dob) = '1980'\t----- bird -----\tformula_1",
    "970": "SELECT T1.forename, T1.surname FROM drivers AS T1 INNER JOIN lapTimes AS T2 ON T1.driverId = T2.driverId WHERE T1.nationality = 'German' AND T1.dob BETWEEN '1980-01-01' AND '1990-12-31' GROUP BY T1.driverId ORDER BY MIN(T2.time) LIMIT 3;\t----- bird -----\tformula_1",
    "971": "SELECT T1.driverRef FROM drivers AS T1 WHERE T1.nationality = 'German' ORDER BY T1.dob ASC LIMIT 1\t----- bird -----\tformula_1",
    "972": "SELECT D.driverId, D.code FROM drivers AS D INNER JOIN results AS R ON D.driverId = R.driverId WHERE YEAR(D.dob) = 1971 AND R.fastestLapTime IS NOT NULL;\t----- bird -----\tformula_1",
    "973": "SELECT forename, surname FROM drivers WHERE nationality = 'Spanish' AND dob < 1982 ORDER BY time DESC LIMIT 10;\t----- bird -----\tformula_1",
    "974": "SELECT Races.year FROM races INNER JOIN results ON races.raceId = results.raceId WHERE results.fastestLapTime IS NOT NULL ORDER BY results.fastestLapTime LIMIT 1;\t----- bird -----\tformula_1",
    "975": "SELECT year FROM races WHERE time = (SELECT MAX(time) FROM races)\t----- bird -----\tformula_1",
    "976": "SELECT driverId FROM lapTimes WHERE lap = 1 ORDER BY time LIMIT 5;\t----- bird -----\tformula_1",
    "977": "SELECT COUNT(*) FROM results WHERE raceId > 50 AND raceId < 100 AND statusId = 2 AND time IS NOT NULL\t----- bird -----\tformula_1",
    "978": "SELECT COUNT(circuitId), location, lat, lng FROM circuits WHERE country = 'Austria' GROUP BY location, lat, lng\t----- bird -----\tformula_1",
    "979": "SELECT raceId, COUNT(*) AS Finishers FROM results WHERE time IS NOT NULL GROUP BY raceId ORDER BY Finishers DESC LIMIT 1;\t----- bird -----\tformula_1",
    "980": "SELECT T1.driverRef, T1.nationality, T1.dob FROM drivers AS T1 INNER JOIN qualifying AS T2 ON T1.driverId = T2.driverId WHERE T2.raceId = 23 AND T2.q2 IS NOT NULL\t----- bird -----\tformula_1",
    "981": "SELECT MIN(Q1.year) AS \"First Qualifying Year\", R.name AS \"Race Name\", R.date AS \"Race Date\", R.time AS \"Race Time\" FROM qualifying AS Q1 INNER JOIN races AS R ON Q1.raceId = R.raceId INNER JOIN drivers AS D ON Q1.driverId = D.driverId WHERE D.dob = (SELECT MAX(year(dob)) FROM drivers)\t----- bird -----\tformula_1",
    "982": "SELECT COUNT(*) FROM results WHERE statusId = 2 AND driverId IN (SELECT driverId FROM drivers WHERE nationality = 'American')\t----- bird -----\tformula_1",
    "983": "SELECT constructors.name, constructors.url FROM constructors JOIN constructorStandings ON constructors.constructorId = constructorStandings.constructorId WHERE constructors.nationality = 'Italian' ORDER BY constructorStandings.points DESC LIMIT 1;\t----- bird -----\tformula_1",
    "984": "SELECT T2.url FROM constructors AS T1 INNER JOIN ( SELECT constructorId, COUNT(*) AS totalWins FROM constructorStandings WHERE position = 1 GROUP BY constructorId ORDER BY totalWins DESC LIMIT 1 ) AS T2 ON T1.constructorId = T2.constructorId;\t----- bird -----\tformula_1",
    "985": "SELECT T2.forename, T2.surname FROM races AS T1 INNER JOIN lapTimes AS T3 ON T1.raceId = T3.raceId INNER JOIN drivers AS T2 ON T3.driverId = T2.driverId WHERE T1.name = 'French Grand Prix' AND T3.lap = 3 ORDER BY T3.time DESC LIMIT 1;\t----- bird -----\tformula_1",
    "986": "SELECT races.name, results.fastestLapTime, results.milliseconds FROM races INNER JOIN results ON races.raceId = results.raceId WHERE results.fastestLap = 1 ORDER BY results.milliseconds ASC LIMIT 1;\t----- bird -----\tformula_1",
    "987": "SELECT AVG(fastestLapTime) FROM results WHERE raceId = (SELECT raceId FROM races WHERE year = 2006 AND name = 'United States Grand Prix') AND rank < 11;\t----- bird -----\tformula_1",
    "988": "SELECT D.forename, D.surname FROM drivers AS D INNER JOIN pitStops AS P ON D.driverId = P.driverId WHERE D.nationality = 'German' AND D.dob BETWEEN '1980-01-01' AND '1985-12-31' GROUP BY D.driverId ORDER BY MIN(SUM(P.duration) / COUNT(P.duration)) LIMIT 5;\t----- bird -----\tformula_1",
    "989": "SELECT drivers.forename || ' ' || drivers.surname AS champion, results.time FROM results JOIN drivers ON results.driverId = drivers.driverId JOIN races ON results.raceId = races.raceId WHERE races.name = 'Canadian Grand Prix' AND races.year = 2008 ORDER BY results.position ASC LIMIT 1;\t----- bird -----\tformula_1",
    "990": "SELECT T2.constructorRef, T2.url, MAX(T1.time) FROM results AS T1 INNER JOIN constructors AS T2 ON T1.constructorId = T2.constructorId INNER JOIN races AS T3 ON T1.raceId = T3.raceId WHERE T3.name = 'Singapore Grand Prix' AND T3.year = 2009 GROUP BY T2.constructorRef, T2.url\t----- bird -----\tformula_1",
    "991": "SELECT forename || ' ' || surname AS full_name, dob FROM drivers WHERE nationality = 'Austrian' AND strftime('%Y', dob) BETWEEN '1981' AND '1991'\t----- bird -----\tformula_1",
    "992": "SELECT forename || ' ' || surname AS full_name, url AS wikipedia_link, dob AS date_of_birth FROM drivers WHERE nationality = 'German' AND strftime('%Y', dob) BETWEEN '1971' AND '1985' ORDER BY dob DESC;\t----- bird -----\tformula_1",
    "993": "SELECT location, country, lat, lng FROM circuits WHERE name = 'Hungaroring'\t----- bird -----\tformula_1",
    "994": "SELECT constructors.name, constructors.nationality, SUM(results.points) AS total_points FROM constructors JOIN results ON constructors.constructorId = results.constructorId JOIN races ON results.raceId = races.raceId WHERE races.name = 'Monaco Grand Prix' AND races.year BETWEEN 1980 AND 2010 GROUP BY constructors.name, constructors.nationality ORDER BY total_points DESC LIMIT 1;\t----- bird -----\tformula_1",
    "995": "SELECT AVG(R.points) AS average_score FROM results AS R INNER JOIN drivers AS D ON R.driverId = D.driverId INNER JOIN races AS RA ON R.raceId = RA.raceId WHERE RA.name = 'Turkish Grand Prix' AND D.forename = 'Lewis' AND D.surname = 'Hamilton'\t----- bird -----\tformula_1",
    "996": "SELECT AVG(COUNT(*)) FROM races WHERE date BETWEEN '2000-01-01' AND '2010-12-31' GROUP BY year LIMIT 10;\t----- bird -----\tformula_1",
    "997": "SELECT nationality FROM drivers GROUP BY nationality ORDER BY COUNT(*) DESC LIMIT 1\t----- bird -----\tformula_1",
    "998": "SELECT COUNT(*) FROM results WHERE position = 1 AND driverId = (SELECT driverId FROM driverStandings WHERE position = 91)\t----- bird -----\tformula_1",
    "999": "SELECT races.name FROM results INNER JOIN races ON results.raceId = races.raceId WHERE results.fastestLapTime = (SELECT MIN(fastestLapTime) FROM results)\t----- bird -----\tformula_1",
    "1000": "SELECT C.name || ', ' || C.country AS full_location FROM circuits AS C INNER JOIN races AS R ON C.circuitId = R.circuitId WHERE R.date = (SELECT MAX(date) FROM races)\t----- bird -----\tformula_1",
    "1001": "SELECT T2.forename || ' ' || T2.surname AS full_name FROM qualifying AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.position = 1 AND T1.number = 3 AND T1.raceId IN (SELECT raceId FROM races WHERE year = 2008 AND circuitId = (SELECT circuitId FROM circuits WHERE name = 'Marina Bay Street Circuit'))\t----- bird -----\tformula_1",
    "1002": "SELECT T1.forename || ' ' || T1.surname AS full_name, T1.nationality, T3.name FROM drivers AS T1 INNER JOIN ( SELECT driverId, MAX(dob) AS youngest_dob FROM drivers ) AS T2 ON T1.driverId = T2.driverId AND T1.dob = T2.youngest_dob INNER JOIN results AS T3 ON T1.driverId = T3.driverId ORDER BY T1.dob DESC LIMIT 1\t----- bird -----\tformula_1",
    "1003": "SELECT COUNT(*) FROM results WHERE raceId = (SELECT raceId FROM races WHERE name = 'Canadian Grand Prix') AND driverId = (SELECT driverId FROM (SELECT driverId, COUNT(*) as num_accidents FROM results WHERE statusId = 3 GROUP BY driverId ORDER BY num_accidents DESC LIMIT 1) )\t----- bird -----\tformula_1",
    "1004": "SELECT MIN(drivers.dob) AS oldest_dob, drivers.forename || ' ' || drivers.surname AS oldest_racer_name, SUM(driverStandings.wins) AS total_wins FROM drivers INNER JOIN driverStandings ON drivers.driverId = driverStandings.driverId WHERE drivers.dob = (SELECT MIN(dob) FROM drivers)\t----- bird -----\tformula_1",
    "1005": "SELECT MAX(duration) FROM pitStops\t----- bird -----\tformula_1",
    "1006": "SELECT MIN(milliseconds) AS fastest_lap_time FROM lapTimes\t----- bird -----\tformula_1",
    "1007": "SELECT MAX(duration) FROM pitStops INNER JOIN drivers ON pitStops.driverId = drivers.driverId WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton'\t----- bird -----\tformula_1",
    "1008": "SELECT lap FROM pitStops AS P INNER JOIN races AS R ON P.raceId = R.raceId INNER JOIN drivers AS D ON P.driverId = D.driverId WHERE D.forename = 'Lewis' AND D.surname = 'Hamilton' AND R.year = 2011 AND R.name = 'Australian Grand Prix'\t----- bird -----\tformula_1",
    "1009": "SELECT drivers.forename, drivers.surname, pitStops.duration FROM drivers INNER JOIN pitStops ON drivers.driverId = pitStops.driverId INNER JOIN races ON pitStops.raceId = races.raceId WHERE races.year = 2011 AND races.name = 'Australian Grand Prix'\t----- bird -----\tformula_1",
    "1010": "SELECT MIN(milliseconds) as lap_record FROM lapTimes INNER JOIN drivers ON lapTimes.driverId = drivers.driverId WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton'\t----- bird -----\tformula_1",
    "1011": "SELECT D.forename || ' ' || D.surname AS shortest_lap_time_driver FROM drivers AS D INNER JOIN lapTimes AS L ON D.driverId = L.driverId WHERE L.time = (SELECT MIN(time) FROM lapTimes);\t----- bird -----\tformula_1",
    "1012": "SELECT C.name, R.position FROM drivers D JOIN results R ON D.driverId = R.driverId JOIN races RA ON R.raceId = RA.raceId JOIN circuits C ON RA.circuitId = C.circuitId WHERE D.forename = 'Lewis' AND D.surname = 'Hamilton' AND R.fastestLap = 1;\t----- bird -----\tformula_1",
    "1013": "SELECT T1.time FROM lapTimes AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId INNER JOIN circuits AS T3 ON T2.circuitId = T3.circuitId WHERE T3.name = 'Austrian Grand Prix Circuit' ORDER BY T1.milliseconds LIMIT 1;\t----- bird -----\tformula_1",
    "1014": "SELECT T1.name, T2.time FROM circuits AS T1 INNER JOIN races AS T2 ON T1.circuitId = T2.circuitId INNER JOIN lapTimes AS T3 ON T2.raceId = T3.raceId WHERE T1.country = 'Italy' ORDER BY T3.time ASC;\t----- bird -----\tformula_1",
    "1015": "SELECT T1.name, T2.time FROM races AS T1 INNER JOIN lapTimes AS T2 ON T1.raceId = T2.raceId WHERE T2.time = (SELECT MIN(time) FROM lapTimes) AND T1.name = 'Austrian Grand Prix Circuit'\t----- bird -----\tformula_1",
    "1016": "SELECT PitStops.duration FROM PitStops INNER JOIN Races ON PitStops.raceId = Races.raceId INNER JOIN Circuits ON Races.circuitId = Circuits.circuitId INNER JOIN Results ON PitStops.driverId = Results.driverId WHERE Circuits.name = 'Austrian Grand Prix Circuit' AND Results.fastestLapTime = (SELECT MIN(Results.fastestLapTime) FROM Results WHERE Results.fastestLapTime IS NOT NULL)\t----- bird -----\tformula_1",
    "1017": "SELECT circuits.lat, circuits.lng FROM circuits INNER JOIN races ON circuits.circuitId = races.circuitId INNER JOIN results ON races.raceId = results.raceId WHERE results.time = '1:29.488'\t----- bird -----\tformula_1",
    "1018": "SELECT AVG(milliseconds) FROM pitStops INNER JOIN drivers ON pitStops.driverId = drivers.driverId WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton'\t----- bird -----\tformula_1",
    "1019": "SELECT AVG(milliseconds) FROM lapTimes AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId INNER JOIN circuits AS T3 ON T2.circuitId = T3.circuitId WHERE T3.country = 'Italy'\t----- bird -----\tformula_1",
    "1020": "SELECT T1.player_api_id, T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.overall_rating = (SELECT MAX(overall_rating) FROM Player_Attributes)\t----- bird -----\teuropean_football_2",
    "1021": "SELECT MAX(height) AS tallest_player_height, player_name FROM Player ORDER BY height DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1022": "SELECT preferred_foot FROM Player_Attributes WHERE potential = (SELECT MIN(potential) FROM Player_Attributes)\t----- bird -----\teuropean_football_2",
    "1023": "SELECT COUNT(*) FROM Player_Attributes WHERE overall_rating >= 60 AND overall_rating < 65 AND defensive_work_rate = 'low'\t----- bird -----\teuropean_football_2",
    "1024": "SELECT id FROM Player_Attributes ORDER BY crossing DESC LIMIT 5;\t----- bird -----\teuropean_football_2",
    "1025": "SELECT L.name AS league_name, SUM(M.home_team_goal + M.away_team_goal) AS total_goals FROM Match AS M INNER JOIN League AS L ON M.league_id = L.id WHERE M.season = '2015/2016' GROUP BY L.name ORDER BY total_goals DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1026": "SELECT Team.team_long_name FROM Match JOIN Team ON Match.home_team_api_id = Team.team_api_id WHERE season = '2015/2016' AND (home_team_goal - away_team_goal) < 0 GROUP BY home_team_api_id ORDER BY COUNT(*) ASC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1027": "SELECT player_name FROM Player JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id ORDER BY penalties DESC LIMIT 10;\t----- bird -----\teuropean_football_2",
    "1028": "SELECT T2.team_long_name, COUNT(*) AS num_wins FROM Match AS T1 INNER JOIN Team AS T2 ON T1.away_team_api_id = T2.team_api_id INNER JOIN League AS T3 ON T1.league_id = T3.id WHERE T3.name = 'Scotland Premier League' AND T1.season = '2009/2010' AND (T1.away_team_goal - T1.home_team_goal) > 0 GROUP BY T2.team_long_name ORDER BY num_wins DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1029": "SELECT Team.team_long_name, Team_Attributes.buildUpPlaySpeed FROM Team JOIN Team_Attributes ON Team.team_api_id = Team_Attributes.team_api_id WHERE Team_Attributes.buildUpPlaySpeed = (SELECT MAX(buildUpPlaySpeed) FROM Team_Attributes LIMIT 4) ORDER BY Team_Attributes.buildUpPlaySpeed DESC;\t----- bird -----\teuropean_football_2",
    "1030": "SELECT L.name AS League_Name FROM League AS L INNER JOIN Match AS M ON L.id = M.league_id WHERE M.season = '2015/2016' GROUP BY L.name ORDER BY SUM(CASE WHEN M.home_team_goal = M.away_team_goal THEN 1 ELSE 0 END) DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1031": "SELECT (DATETIME('now') - DATETIME(Player.birthday)) AS player_age FROM Player_Attributes INNER JOIN Player ON Player_Attributes.player_api_id = Player.player_api_id WHERE Player_Attributes.sprint_speed >= 97 AND Player_Attributes.date >= '2013-01-01 00:00:00' AND Player_Attributes.date <= '2015-12-31 00:00:00'\t----- bird -----\teuropean_football_2",
    "1032": "SELECT L.name AS LeagueName, COUNT(M.id) AS MatchCount FROM League AS L INNER JOIN Match AS M ON L.id = M.league_id GROUP BY L.name ORDER BY MatchCount DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1033": "SELECT DIVIDE(SUM(height), COUNT(id)) AS average_height FROM Player WHERE birthday >= '1990-01-01 00:00:00' AND birthday < '1996-01-01 00:00:00'\t----- bird -----\teuropean_football_2",
    "1034": "SELECT T1.player_api_id FROM Player_Attributes AS T1 WHERE T1.overall_rating = (SELECT MAX(overall_rating) FROM Player_Attributes WHERE substr(date,1,4) = '2010')\t----- bird -----\teuropean_football_2",
    "1035": "SELECT team_fifa_api_id FROM Team_Attributes WHERE buildUpPlaySpeed BETWEEN 51 AND 59;\t----- bird -----\teuropean_football_2",
    "1036": "SELECT T1.team_long_name FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id INNER JOIN Match AS T3 ON T1.team_api_id = T3.home_team_api_id OR T1.team_api_id = T3.away_team_api_id WHERE T2.buildUpPlayPassing > (SELECT AVG(T4.buildUpPlayPassing) FROM Team_Attributes AS T4 WHERE T4.buildUpPlayPassing IS NOT NULL) AND strftime('%Y', T3.date) = '2012'\t----- bird -----\teuropean_football_2",
    "1037": "SELECT DIVIDE(MULTIPLY((SUM(preferred_foot = 'left'), 1.0)), COUNT(player_fifa_api_id)) AS percentage_left_foot_players FROM Player_Attributes INNER JOIN Player ON Player_Attributes.player_api_id = Player.player_api_id WHERE preferred_foot = 'left' AND birthday BETWEEN '1987-01-01 00:00:00' AND '1992-12-31 00:00:00'\t----- bird -----\teuropean_football_2",
    "1038": "SELECT T1.name AS league_name, SUM(T2.home_team_goal + T2.away_team_goal) AS total_goals FROM League AS T1 INNER JOIN Match AS T2 ON T1.id = T2.league_id GROUP BY T1.name ORDER BY total_goals ASC LIMIT 5;\t----- bird -----\teuropean_football_2",
    "1039": "SELECT AVG(T1.long_shots) FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Ahmed Samir Farag'\t----- bird -----\teuropean_football_2",
    "1040": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_fifa_api_id = T2.player_fifa_api_id WHERE T1.height > 180 GROUP BY T1.player_fifa_api_id ORDER BY AVG(T2.heading_accuracy) DESC LIMIT 10;\t----- bird -----\teuropean_football_2",
    "1041": "SELECT T1.team_long_name FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.buildUpPlayDribblingClass = 'Normal' AND T2.date >= '2014-01-01 00:00:00' AND T2.date <= '2014-01-31 00:00:00' GROUP BY T1.team_long_name HAVING AVG(T2.chanceCreationPassing) > (SELECT AVG(chanceCreationPassing) FROM Team_Attributes) ORDER BY AVG(T2.chanceCreationPassing) DESC;\t----- bird -----\teuropean_football_2",
    "1042": "SELECT L.name FROM League AS L INNER JOIN Match AS M ON L.id = M.league_id WHERE M.season = '2009/2010' GROUP BY L.name HAVING AVG(M.home_team_goal) > AVG(M.away_team_goal)\t----- bird -----\teuropean_football_2",
    "1043": "SELECT team_short_name FROM Team WHERE team_long_name = 'Queens Park Rangers'\t----- bird -----\teuropean_football_2",
    "1044": "SELECT player_name FROM Player WHERE substr(birthday,1,4) = '1970' AND substr(birthday,6,2) = '10'\t----- bird -----\teuropean_football_2",
    "1045": "SELECT attacking_work_rate FROM Player_Attributes INNER JOIN Player ON Player_Attributes.player_api_id = Player.player_api_id WHERE player_name = 'Franco Zennaro';\t----- bird -----\teuropean_football_2",
    "1046": "SELECT T1.buildUpPlayPositioningClass FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.team_long_name = 'ADO Den Haag' AND T2.date = (SELECT MAX(date) FROM Team_Attributes WHERE team_api_id = T1.team_api_id) AND T2.buildUpPlayPositioningClass = 'Free Form'\t----- bird -----\teuropean_football_2",
    "1047": "SELECT PA.heading_accuracy FROM Player_Attributes AS PA INNER JOIN Player AS P ON PA.player_api_id = P.player_api_id WHERE P.player_name = 'Francois Affolter' AND PA.date = '2014-09-18 00:00:00'\t----- bird -----\teuropean_football_2",
    "1048": "SELECT Player_Attributes.overall_rating FROM Player_Attributes INNER JOIN Player ON Player_Attributes.player_api_id = Player.player_api_id WHERE Player.player_name = 'Gabriel Tamas' AND strftime('%Y', Player_Attributes.date) = '2011'\t----- bird -----\teuropean_football_2",
    "1049": "SELECT COUNT(*) FROM Match WHERE season = '2015/2016' AND league_id = (SELECT id FROM League WHERE name = 'Scotland Premier League')\t----- bird -----\teuropean_football_2",
    "1050": "SELECT T1.preferred_foot FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.birthday = (SELECT MAX(birthday) FROM Player)\t----- bird -----\teuropean_football_2",
    "1051": "SELECT player_name, potential FROM Player_Attributes WHERE potential = (SELECT MAX(potential) FROM Player_Attributes)\t----- bird -----\teuropean_football_2",
    "1052": "SELECT COUNT(*) FROM Player_Attributes WHERE weight < 130 AND attacking_work_rate = 'left'\t----- bird -----\teuropean_football_2",
    "1053": "SELECT T1.team_short_name FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.chanceCreationPassingClass = 'Risky'\t----- bird -----\teuropean_football_2",
    "1054": "SELECT defensive_work_rate FROM Player_Attributes JOIN Player ON Player.player_api_id = Player_Attributes.player_api_id WHERE Player.player_name = 'David Wilson'\t----- bird -----\teuropean_football_2",
    "1055": "SELECT birthday FROM Player WHERE player_api_id = (SELECT player_api_id FROM Player_Attributes WHERE overall_rating = (SELECT MAX(overall_rating) FROM Player_Attributes))\t----- bird -----\teuropean_football_2",
    "1056": "SELECT L.name FROM League AS L INNER JOIN Country AS C ON L.country_id = C.id WHERE C.name = 'Netherlands'\t----- bird -----\teuropean_football_2",
    "1057": "SELECT AVG(home_team_goal) FROM Match INNER JOIN Country ON Match.country_id = Country.id WHERE Country.name = 'Poland' AND Match.season = '2010/2011'\t----- bird -----\teuropean_football_2",
    "1058": "SELECT Player.player_name, AVG(Player_Attributes.finishing) AS avg_finishing FROM Player JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE Player.height = (SELECT MAX(height) FROM Player) OR Player.height = (SELECT MIN(height) FROM Player) GROUP BY Player.player_name ORDER BY avg_finishing DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1059": "SELECT player_name FROM Player WHERE height > 180;\t----- bird -----\teuropean_football_2",
    "1060": "SELECT COUNT(*) FROM Player WHERE strftime('%Y', birthday) > '1990'\t----- bird -----\teuropean_football_2",
    "1061": "SELECT COUNT(*) FROM Player JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id JOIN Team ON Player_Attributes.team_api_id = Team.team_api_id JOIN Team_Attributes ON Team.team_api_id = Team_Attributes.team_api_id WHERE Player.player_name LIKE 'Adam%' AND Player.weight > 170 AND Team.team_long_name = 'Fast'\t----- bird -----\teuropean_football_2",
    "1062": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.overall_rating > 80 AND strftime('%Y', T2.date) BETWEEN '2008' AND '2010'\t----- bird -----\teuropean_football_2",
    "1063": "SELECT potential FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Aaron Doran')\t----- bird -----\teuropean_football_2",
    "1064": "SELECT * FROM Player_Attributes WHERE preferred_foot = 'left'\t----- bird -----\teuropean_football_2",
    "1065": "SELECT T1.team_long_name FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.buildUpPlaySpeedClass = 'Fast'\t----- bird -----\teuropean_football_2",
    "1066": "SELECT T2.buildUpPlayPassingClass FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.team_short_name = 'CLB'\t----- bird -----\teuropean_football_2",
    "1067": "SELECT T1.team_short_name FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.buildUpPlayPassing > 70\t----- bird -----\teuropean_football_2",
    "1068": "SELECT AVG(overall_rating) FROM Player_Attributes WHERE height > 170 AND strftime('%Y', date) BETWEEN '2010' AND '2015'\t----- bird -----\teuropean_football_2",
    "1069": "SELECT Player.player_name FROM Player WHERE height = (SELECT MIN(height) FROM Player)\t----- bird -----\teuropean_football_2",
    "1070": "SELECT T2.name FROM League AS T1 INNER JOIN Country AS T2 ON T1.country_id = T2.id WHERE T1.name = 'Italy Serie A'\t----- bird -----\teuropean_football_2",
    "1071": "SELECT T2.team_short_name FROM Team_Attributes AS T1 INNER JOIN Team AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.buildUpPlaySpeed = 31 AND T1.buildUpPlayDribbling = 53 AND T1.buildUpPlayPassing = 32\t----- bird -----\teuropean_football_2",
    "1072": "SELECT AVG(overall_rating) FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Aaron Doran')\t----- bird -----\teuropean_football_2",
    "1073": "SELECT COUNT(*) FROM Match WHERE league_id = (SELECT id FROM League WHERE name = 'Germany 1. Bundesliga') AND STRFTIME('%Y-%m', date) BETWEEN '2008-08' AND '2008-10'\t----- bird -----\teuropean_football_2",
    "1074": "SELECT team_short_name FROM Team WHERE team_api_id IN (SELECT home_team_api_id FROM Match WHERE home_team_goal = 10)\t----- bird -----\teuropean_football_2",
    "1075": "SELECT Player.player_name FROM Player_Attributes INNER JOIN Player ON Player_Attributes.player_api_id = Player.player_api_id WHERE Player_Attributes.balance = (SELECT MAX(balance) FROM Player_Attributes WHERE potential = 61) AND Player_Attributes.potential = 61;\t----- bird -----\teuropean_football_2",
    "1076": "SELECT AVG(PA.ball_control) - AVG(PB.ball_control) AS difference_of_average_ball_control FROM Player_Attributes AS PA JOIN Player AS A ON PA.player_api_id = A.player_api_id JOIN Player_Attributes AS PB ON PB.player_api_id = A.player_api_id JOIN Player AS B ON PB.player_api_id = B.player_api_id WHERE A.player_name = 'Abdou Diallo' AND B.player_name = 'Aaron Appindangoye';\t----- bird -----\teuropean_football_2",
    "1077": "SELECT team_long_name FROM Team WHERE team_short_name = 'GEN'\t----- bird -----\teuropean_football_2",
    "1078": "SELECT CASE WHEN (SELECT birthday FROM Player WHERE player_name = 'Aaron Lennon') < (SELECT birthday FROM Player WHERE player_name = 'Abdelaziz Barrada') THEN 'Aaron Lennon' ELSE 'Abdelaziz Barrada' END as older_player;\t----- bird -----\teuropean_football_2",
    "1079": "SELECT player_name FROM Player ORDER BY height DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1080": "SELECT COUNT(*) FROM Player_Attributes WHERE preferred_foot = 'left' AND attacking_work_rate = 'low'\t----- bird -----\teuropean_football_2",
    "1081": "SELECT C.name FROM Country AS C INNER JOIN League AS L ON C.id = L.country_id WHERE L.name = 'Belgium Jupiler League'\t----- bird -----\teuropean_football_2",
    "1082": "SELECT L.name FROM League AS L INNER JOIN Country AS C ON L.country_id = C.id WHERE C.name = 'Germany'\t----- bird -----\teuropean_football_2",
    "1083": "SELECT Player.player_name FROM Player INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE Player_Attributes.overall_rating = (SELECT MAX(overall_rating) FROM Player_Attributes)\t----- bird -----\teuropean_football_2",
    "1084": "SELECT COUNT(*) FROM Player_Attributes INNER JOIN Player ON Player_Attributes.player_api_id = Player.player_api_id WHERE strftime('%Y', Player.birthday)<'1986' AND Player_Attributes.defensive_work_rate = 'high'\t----- bird -----\teuropean_football_2",
    "1085": "SELECT player_name FROM Player_Attributes WHERE player_name IN ('Alexis', 'Ariel Borysiuk', 'Arouna Kone') ORDER BY crossing DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1086": "SELECT heading_accuracy FROM Player_Attributes JOIN Player ON Player_Attributes.player_api_id = Player.player_api_id WHERE Player.player_name = 'Ariel Borysiuk';\t----- bird -----\teuropean_football_2",
    "1087": "SELECT COUNT(*) FROM Player_Attributes WHERE height > 180 AND volleys > 70\t----- bird -----\teuropean_football_2",
    "1088": "SELECT Player.player_name FROM Player_Attributes INNER JOIN Player ON Player_Attributes.player_api_id = Player.player_api_id WHERE Player_Attributes.volleys > 70 AND Player_Attributes.dribbling > 70;\t----- bird -----\teuropean_football_2",
    "1089": "SELECT COUNT(*) FROM Match WHERE season = '2008/2009' AND country_id = (SELECT id FROM Country WHERE name = 'Belgium')\t----- bird -----\teuropean_football_2",
    "1090": "SELECT MAX(long_passing) FROM Player_Attributes WHERE birthday = (SELECT MAX(birthday) FROM Player)\t----- bird -----\teuropean_football_2",
    "1091": "SELECT COUNT(*) FROM Match INNER JOIN League ON Match.league_id = League.id WHERE League.name = 'Belgium Jupiler League' AND strftime('%Y', Match.date) = '2009' AND strftime('%m', Match.date) = '04'\t----- bird -----\teuropean_football_2",
    "1092": "SELECT MAX(league_id) FROM Match WHERE season = '2008/2009'\t----- bird -----\teuropean_football_2",
    "1093": "SELECT AVG(overall_rating) AS average_overall_rating FROM Player_Attributes WHERE strftime('%Y', birthday) < '1986'\t----- bird -----\teuropean_football_2",
    "1094": "SELECT ((T1.overall_rating - T2.overall_rating) / T2.overall_rating) * 100 AS percentage_higher FROM Player_Attributes AS T1 INNER JOIN Player AS P1 ON T1.player_api_id = P1.player_api_id INNER JOIN Player AS P2 ON T1.player_api_id = P2.player_api_id WHERE P1.player_name = 'Ariel Borysiuk' AND P2.player_name = 'Paulin Puel'\t----- bird -----\teuropean_football_2",
    "1095": "SELECT AVG(T2.buildUpPlaySpeed) FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.team_long_name = 'Heart of Midlothian'\t----- bird -----\teuropean_football_2",
    "1096": "SELECT AVG(T1.overall_rating) FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Pietro Marino'\t----- bird -----\teuropean_football_2",
    "1097": "SELECT SUM(T1.crossing) AS total_crossing_score FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Aaron Lennox'\t----- bird -----\teuropean_football_2",
    "1098": "SELECT MAX(T2.chanceCreationPassing) AS Highest_Chance_Creation_Passing_Score, T2.chanceCreationPassingClass AS Classification FROM `Match` AS T1 INNER JOIN Team AS T2 ON T1.home_team_api_id = T2.team_api_id WHERE T2.team_long_name = 'Ajax' GROUP BY T2.team_long_name;\t----- bird -----\teuropean_football_2",
    "1099": "SELECT T1.preferred_foot FROM Player AS T1 WHERE T1.player_name = 'Abdou Diallo'\t----- bird -----\teuropean_football_2",
    "1100": "SELECT MAX(T1.overall_rating) FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Dorlan Pabon'\t----- bird -----\teuropean_football_2",
    "1101": "SELECT AVG(away_team_goal) FROM Match INNER JOIN Team ON Match.away_team_api_id = Team.team_api_id WHERE Team.team_long_name = 'Parma' AND Match.country_id = (SELECT id FROM Country WHERE name = 'Italy')\t----- bird -----\teuropean_football_2",
    "1102": "SELECT MIN(P.player_name) FROM Player_Attributes AS PA INNER JOIN Player AS P ON PA.player_api_id = P.player_api_id WHERE PA.overall_rating = 77 AND PA.date = '2016-06-23' ORDER BY P.birthday ASC;\t----- bird -----\teuropean_football_2",
    "1103": "SELECT overall_rating FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Aaron Mooy') AND date = '2016-02-04 00:00:00'\t----- bird -----\teuropean_football_2",
    "1104": "SELECT potential FROM Player_Attributes INNER JOIN Player ON Player.player_api_id = Player_Attributes.player_api_id WHERE Player.player_name = 'Francesco Parravicini' AND Player_Attributes.date = '2010-08-30 00:00:00'\t----- bird -----\teuropean_football_2",
    "1105": "SELECT T1.attacking_work_rate FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Francesco Migliore' AND T1.date = '2015-05-01 00:00:00'\t----- bird -----\teuropean_football_2",
    "1106": "SELECT T2.defensive_work_rate FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Kevin Berigaud' AND T1.date = '2013-02-22 00:00:00'\t----- bird -----\teuropean_football_2",
    "1107": "SELECT MAX(date) AS date FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Kevin Constant') AND crossing = (SELECT MAX(crossing) FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Kevin Constant'))\t----- bird -----\teuropean_football_2",
    "1108": "SELECT buildUpPlaySpeedClass FROM Team_Attributes JOIN Team ON Team_Attributes.team_api_id = Team.team_api_id WHERE Team.team_long_name = 'Willem II' AND Team_Attributes.date = '2012-02-22 00:00:00'\t----- bird -----\teuropean_football_2",
    "1109": "SELECT T2.buildUpPlayDribblingClass FROM Team_Attributes AS T1 INNER JOIN Team AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.team_short_name = 'LEI' AND T1.date = '2015-09-10 00:00:00'\t----- bird -----\teuropean_football_2",
    "1110": "SELECT T2.buildUpPlayPassingClass FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.team_long_name = 'FC Lorient' AND T2.date = '2010-02-22'\t----- bird -----\teuropean_football_2",
    "1111": "SELECT ta.chanceCreationPassingClass FROM Team_Attributes ta JOIN Team t ON ta.team_api_id = t.team_api_id WHERE t.team_long_name = 'PEC Zwolle' AND ta.date = '2013-09-20 00:00:00'\t----- bird -----\teuropean_football_2",
    "1112": "SELECT T1.buildUpPlaySpeedClass FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.team_long_name = 'Hull City' AND T2.date = '2010-02-22 00:00:00'\t----- bird -----\teuropean_football_2",
    "1113": "SELECT T2.defenceAggressionClass FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.team_long_name = 'Hannover 96' AND T2.date = '2015-09-10 00:00:00'\t----- bird -----\teuropean_football_2",
    "1114": "SELECT AVG(overall_rating) FROM Player_Attributes JOIN Player ON Player_Attributes.player_api_id = Player.player_api_id WHERE Player.player_name = 'Marko Arnautovic' AND date BETWEEN '2007-02-22 00:00:00' AND '2016-04-21 00:00:00'\t----- bird -----\teuropean_football_2",
    "1115": "SELECT ((T1.overall_rating - T2.overall_rating) / T2.overall_rating) * 100 AS Percentage_Higher FROM Player_Attributes AS T1 INNER JOIN Player AS P1 ON T1.player_api_id = P1.player_api_id INNER JOIN Player_Attributes AS T2 ON P1.player_name = 'Landon Donovan' INNER JOIN Player AS P2 ON T2.player_api_id = P2.player_api_id WHERE T1.date = '2013-07-12' AND P2.player_name = 'Jordan Bowery'\t----- bird -----\teuropean_football_2",
    "1116": "SELECT Player.player_name FROM Player ORDER BY Player.height DESC LIMIT 5;\t----- bird -----\teuropean_football_2",
    "1117": "SELECT player_api_id FROM Player ORDER BY weight DESC LIMIT 10;\t----- bird -----\teuropean_football_2",
    "1118": "SELECT player_name FROM Player WHERE (strftime('%Y', 'now') - strftime('%Y', birthday)) > 34;\t----- bird -----\teuropean_football_2",
    "1119": "SELECT SUM(home_team_goal) FROM Match WHERE home_player_1 IN (SELECT player_api_id FROM Player WHERE player_name = 'Aaron Lennon') OR home_player_2 IN (SELECT player_api_id FROM Player WHERE player_name = 'Aaron Lennon') OR home_player_3 IN (SELECT player_api_id FROM Player WHERE player_name = 'Aaron Lennon') OR home_player_4 IN (SELECT player_api_id FROM Player WHERE player_name = 'Aaron Lennon') OR home_player_5 IN (SELECT player_api_id FROM Player WHERE player_name = 'Aaron Lennon') OR home_player_6 IN (SELECT player_api_id FROM Player WHERE player_name = 'Aaron Lennon') OR home_player_7 IN (SELECT player_api_id FROM Player WHERE player_name = 'Aaron Lennon') OR home_player_8 IN (SELECT player_api_id FROM Player WHERE player_name = 'Aaron Lennon') OR home_player_9 IN (SELECT player_api_id FROM Player WHERE player_name = 'Aaron Lennon') OR home\t----- bird -----\teuropean_football_2",
    "1120": "SELECT SUM(M.away_team_goal) FROM Match AS M INNER JOIN Player AS P ON M.away_player_1 = P.player_api_id OR M.away_player_2 = P.player_api_id OR M.away_player_3 = P.player_api_id OR M.away_player_4 = P.player_api_id OR M.away_player_5 = P.player_api_id OR M.away_player_6 = P.player_api_id OR M.away_player_7 = P.player_api_id OR M.away_player_8 = P.player_api_id OR M.away_player_9 = P.player_api_id OR M.away_player_10 = P.player_api_id OR M.away_player_11 = P.player_api_id WHERE P.player_name = 'Daan Smith' OR P.player_name = 'Filipe Ferreira'\t----- bird -----\teuropean_football_2",
    "1121": "SELECT SUM(M.home_player_1 + M.home_player_2 + M.home_player_3 + M.home_player_4 + M.home_player_5 + M.home_player_6 + M.home_player_7 + M.home_player_8 + M.home_player_9 + M.home_player_10 + M.home_player_11) FROM Match AS M INNER JOIN Player AS P ON M.home_player_1 = P.player_api_id OR M.home_player_2 = P.player_api_id OR M.home_player_3 = P.player_api_id OR M.home_player_4 = P.player_api_id OR M.home_player_5 = P.player_api_id OR M.home_player_6 = P.player_api_id OR M.home_player_7 = P.player_api_id OR M.home_player_8 = P.player_api_id OR M.home_player_9 = P.player_api_id OR M.home_player_10 = P.player_api_id OR M.home_player_11 = P.player_api_id WHERE\t----- bird -----\teuropean_football_2",
    "1122": "SELECT Player.player_name FROM Player INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE Player_Attributes.overall_rating = (SELECT MAX(overall_rating) FROM Player_Attributes) LIMIT 10\t----- bird -----\teuropean_football_2",
    "1123": "SELECT Player.player_name FROM Player_Attributes INNER JOIN Player ON Player_Attributes.player_api_id = Player.player_api_id WHERE Player_Attributes.potential = (SELECT MAX(potential) FROM Player_Attributes)\t----- bird -----\teuropean_football_2",
    "1124": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.attacking_work_rate = 'high'\t----- bird -----\teuropean_football_2",
    "1125": "SELECT Player.player_name FROM Player INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE Player_Attributes.finishing = 1 ORDER BY strftime('%Y-%m-%d', 'now') - strftime('%Y-%m-%d', Player.birthday) DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1126": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Country AS T2 ON T1.country_id = T2.id WHERE T2.name = 'Belgium'\t----- bird -----\teuropean_football_2",
    "1127": "SELECT T2.name FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.vision > 89;\t----- bird -----\teuropean_football_2",
    "1128": "SELECT Country.name FROM Player INNER JOIN Country ON Player.country_id = Country.id GROUP BY Country.name ORDER BY AVG(Player.weight) DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1129": "SELECT T2.team_long_name FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.buildUpPlaySpeedClass = 'Slow'\t----- bird -----\teuropean_football_2",
    "1130": "SELECT T2.team_short_name FROM Team AS T2 INNER JOIN Team_Attributes AS T1 ON T1.team_api_id = T2.team_api_id WHERE T1.chanceCreationPassingClass = 'Safe'\t----- bird -----\teuropean_football_2",
    "1131": "SELECT AVG(P.height) FROM Player AS P INNER JOIN Country AS C ON P.country_id = C.id WHERE C.name = 'Italy'\t----- bird -----\teuropean_football_2",
    "1132": "SELECT player_name FROM Player WHERE height > 180 ORDER BY player_name LIMIT 3;\t----- bird -----\teuropean_football_2",
    "1133": "SELECT COUNT(*) FROM `Player` WHERE `player_name` LIKE 'Aaron%' AND `birthday` > '1990'\t----- bird -----\teuropean_football_2",
    "1134": "SELECT (T1.jumping - T2.jumping) AS JumpingDifference FROM Player_Attributes AS T1 INNER JOIN Player_Attributes AS T2 ON T1.id = 6 AND T2.id = 23\t----- bird -----\teuropean_football_2",
    "1135": "SELECT TOP 3 `player_api_id` FROM `Player_Attributes` WHERE `potential` = (SELECT MIN(`potential`) FROM `Player_Attributes`) AND `preferred_foot` = 'right'\t----- bird -----\teuropean_football_2",
    "1136": "SELECT COUNT(*) FROM Player_Attributes WHERE crossing = (SELECT MAX(crossing) FROM Player_Attributes) AND preferred_foot = 'left'\t----- bird -----\teuropean_football_2",
    "1137": "SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM Player_Attributes WHERE stamina > 80 AND strength > 80) FROM Player_Attributes WHERE stamina > 80 AND strength > 80\t----- bird -----\teuropean_football_2",
    "1138": "SELECT name FROM League WHERE id = (SELECT country_id FROM League WHERE name = 'Poland Ekstraklasa')\t----- bird -----\teuropean_football_2",
    "1139": "SELECT home_team_goal, away_team_goal FROM Match WHERE date LIKE '2008-09-24%' AND league_id = (SELECT id FROM League WHERE name = 'Belgian Jupiler League')\t----- bird -----\teuropean_football_2",
    "1140": "SELECT T1.sprint_speed, T1.agility, T1.acceleration FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Alexis Blin'\t----- bird -----\teuropean_football_2",
    "1141": "SELECT T2.buildUpPlaySpeedClass FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.team_long_name = 'KSV Cercle Brugge'\t----- bird -----\teuropean_football_2",
    "1142": "SELECT COUNT(*) FROM Match WHERE league_id = (SELECT id FROM League WHERE name = 'Italian Serie A') AND season = '2015/2016'\t----- bird -----\teuropean_football_2",
    "1143": "SELECT MAX(home_team_goal) FROM Match WHERE league_id = (SELECT id FROM League WHERE name = 'Netherlands Eredivisie')\t----- bird -----\teuropean_football_2",
    "1144": "SELECT finishing, curve FROM Player_Attributes WHERE weight = (SELECT MAX(weight) FROM Player)\t----- bird -----\teuropean_football_2",
    "1145": "SELECT T2.team_long_name FROM Match AS T1 INNER JOIN Team AS T2 ON T1.home_team_api_id = T2.team_api_id WHERE T1.season = '2015/2016' GROUP BY T1.league_id ORDER BY COUNT(T1.id) DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1146": "SELECT Team.team_long_name FROM Match JOIN Team ON Match.away_team_api_id = Team.team_api_id WHERE away_team_goal = (SELECT MAX(away_team_goal) FROM Match);\t----- bird -----\teuropean_football_2",
    "1147": "SELECT player_name FROM Player INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE overall_rating = (SELECT MAX(overall_rating) FROM Player_Attributes)\t----- bird -----\teuropean_football_2",
    "1148": "SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM Player_Attributes WHERE height < 180 AND strength > 70) AS percentage FROM Player_Attributes WHERE height < 180 AND strength > 70;\t----- bird -----\teuropean_football_2",
    "1149": "SELECT (COUNT(T1.ID) - COUNT(T2.ID)) / COUNT(T1.ID) * 100 AS Deviation_Percentage FROM Patient AS T1 LEFT JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND T1.Admission = '+' AND T2.SEX = 'M' AND T2.Admission = '-'\t----- bird -----\tthrombosis_prediction",
    "1150": "SELECT DIVIDE(COUNT(ID) WHERE year(Birthday) > '1930' AND SEX = 'F', COUNT(ID) WHERE SEX = 'F') * 100 AS Percentage_female_born_after_1930 FROM Patient WHERE SEX = 'F'\t----- bird -----\tthrombosis_prediction",
    "1151": "SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM Patient WHERE year(Birthday) BETWEEN '1930-01-01' AND '1940-12-31') AS Percentage FROM Patient WHERE year(Birthday) BETWEEN '1930-01-01' AND '1940-12-31' AND Admission = '+'\t----- bird -----\tthrombosis_prediction",
    "1152": "SELECT (COUNT(CASE WHEN Diagnosis = 'SLE' AND Admission = '+' THEN ID END) / COUNT(CASE WHEN Diagnosis = 'SLE' AND Admission = '-' THEN ID END)) AS Ratio FROM Patient;\t----- bird -----\tthrombosis_prediction",
    "1153": "SELECT Diagnosis, Date FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.ID = '30609'\t----- bird -----\tthrombosis_prediction",
    "1154": "SELECT Patient.SEX, Patient.Birthday, Examination.`Examination Date`, Examination.Symptoms FROM Patient INNER JOIN Examination ON Patient.ID = Examination.ID WHERE Patient.ID = 163109;\t----- bird -----\tthrombosis_prediction",
    "1155": "SELECT Patient.ID, Patient.SEX, Patient.Birthday FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.LDH > 500;\t----- bird -----\tthrombosis_prediction",
    "1156": "SELECT P.ID, SUBTRACT(year(current_timestamp), year(P.Birthday)) AS age FROM Patient AS P INNER JOIN Examination AS E ON P.ID = E.ID WHERE E.RVVT = '+'\t----- bird -----\tthrombosis_prediction",
    "1157": "SELECT Patient.ID, Patient.SEX, Patient.Diagnosis FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.Thrombosis = 2;\t----- bird -----\tthrombosis_prediction",
    "1158": "SELECT T1.* FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE YEAR(T1.Birthday) = '1937' AND T2.`T-CHO` >= 250;\t----- bird -----\tthrombosis_prediction",
    "1159": "SELECT Patient.ID, Patient.SEX, Patient.Diagnosis FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.ALB < 3.5;\t----- bird -----\tthrombosis_prediction",
    "1160": "SELECT COUNT(ID) * 100 / (SELECT COUNT(ID) FROM Patient WHERE SEX = 'F') AS percentage_female_abnormal_TP FROM Laboratory WHERE ID IN (SELECT ID FROM Patient WHERE SEX = 'F') AND (TP < 6.0 OR TP > 8.5)\t----- bird -----\tthrombosis_prediction",
    "1161": "SELECT AVG(aCL IgG) FROM Examination WHERE ID IN (SELECT ID FROM Patient WHERE Admission = '+' AND (YEAR(CURRENT_TIMESTAMP) - YEAR(Birthday) >= 50))\t----- bird -----\tthrombosis_prediction",
    "1162": "SELECT COUNT(*) FROM Patient WHERE SEX = 'F' AND YEAR(Description) = '1997' AND Admission = '-'\t----- bird -----\tthrombosis_prediction",
    "1163": "SELECT MIN(SUBTRACT(YEAR(Birthday), YEAR(`First Date`))) AS Age FROM Patient\t----- bird -----\tthrombosis_prediction",
    "1164": "SELECT COUNT(T1.ID) FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.Thrombosis = 1 AND T2.SEX = 'F' AND YEAR(T1.`Examination Date`) = 1997\t----- bird -----\tthrombosis_prediction",
    "1165": "SELECT MAX(year(Birthday)) - MIN(year(Birthday)) AS AgeGap FROM Patient WHERE ID IN (SELECT ID FROM Laboratory WHERE TG >= 200)\t----- bird -----\tthrombosis_prediction",
    "1166": "SELECT Symptoms, Diagnosis FROM Examination WHERE ID = (SELECT ID FROM Patient WHERE Birthday = (SELECT MIN(Birthday) FROM Patient))\t----- bird -----\tthrombosis_prediction",
    "1167": "SELECT AVG(COUNT(Patient.ID)/12) AS average_male_patients_per_month FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.SEX = 'M' AND Laboratory.Date BETWEEN '1998-01-01' AND '1998-12-31'\t----- bird -----\tthrombosis_prediction",
    "1168": "SELECT MAX(P.Birthday) AS Oldest_Patient_Birthday, L.Date AS Lab_Work_Completion_Date, (year(L.Date) - year(P.Birthday)) AS Age_At_Hospital_Arrival FROM Patient AS P INNER JOIN Examination AS E ON P.ID = E.ID INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE E.Diagnosis = 'SJS' ORDER BY P.Birthday DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1169": "SELECT SUM(CASE WHEN SEX = 'M' AND UA <= 8.0 THEN 1 ELSE 0 END) / SUM(CASE WHEN SEX = 'F' AND UA <= 6.5 THEN 1 ELSE 0 END) as male_to_female_ratio FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID;\t----- bird -----\tthrombosis_prediction",
    "1170": "SELECT COUNT(*) FROM Patient AS P LEFT JOIN Examination AS E ON P.ID = E.ID WHERE E.`Examination Date` IS NULL OR (E.`Examination Date` IS NOT NULL AND (YEAR(E.`Examination Date`) - YEAR(P.`First Date`)) >= 1)\t----- bird -----\tthrombosis_prediction",
    "1171": "SELECT COUNT(*) FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE year(T2.Birthday) < 18 AND `Examination Date` BETWEEN '1990-01-01' AND '1993-12-31'\t----- bird -----\tthrombosis_prediction",
    "1172": "SELECT COUNT(ID) FROM Laboratory JOIN Patient ON Laboratory.ID = Patient.ID WHERE SEX = 'M' AND `T-BIL` > 2.0\t----- bird -----\tthrombosis_prediction",
    "1173": "SELECT Diagnosis FROM Examination WHERE `Examination Date` BETWEEN '1985-01-01' AND '1995-12-31' GROUP BY Diagnosis ORDER BY COUNT(Diagnosis) DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1174": "SELECT AVG(YEAR('1991') - YEAR(Birthday)) AS average_age FROM Patient WHERE ID IN (SELECT ID FROM Laboratory WHERE Date BETWEEN '1991-10-01' AND '1991-10-30')\t----- bird -----\tthrombosis_prediction",
    "1175": "SELECT SUBTRACT(year(`Examination Date`), year(Birthday)) AS Age, Diagnosis FROM Examination WHERE HGB = (SELECT MAX(HGB) FROM Laboratory)\t----- bird -----\tthrombosis_prediction",
    "1176": "SELECT T1.ANA FROM Examination AS T1 WHERE T1.ID = 3605340 AND T1.`Examination Date` = '1996-12-02'\t----- bird -----\tthrombosis_prediction",
    "1177": "SELECT CASE WHEN `T-CHO` < 250 THEN 'Normal' ELSE 'Not Normal' END AS Total_Cholesterol_Status FROM Laboratory WHERE ID = 2927464 AND Date = '1995-09-04'\t----- bird -----\tthrombosis_prediction",
    "1178": "SELECT SEX FROM Patient WHERE ID = ( SELECT ID FROM Examination WHERE Diagnosis = 'AORTITIS' ORDER BY `Examination Date` LIMIT 1 )\t----- bird -----\tthrombosis_prediction",
    "1179": "SELECT `aCL IgM` FROM Examination WHERE ID IN (SELECT ID FROM Patient WHERE Diagnosis = 'SLE' AND Description = '1994-02-19') AND `Examination Date` = '1993-11-12'\t----- bird -----\tthrombosis_prediction",
    "1180": "SELECT P.SEX FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE P.SEX = 'M' AND L.GPT = 9 AND L.Date = '1992-06-12'\t----- bird -----\tthrombosis_prediction",
    "1181": "SELECT SUBTRACT('1992', year(Birthday)) AS Age FROM Patient WHERE ID IN ( SELECT ID FROM Laboratory WHERE UA = '8.4' AND Date = '1991-10-21' )\t----- bird -----\tthrombosis_prediction",
    "1182": "SELECT COUNT(ID) FROM Laboratory WHERE ID = (SELECT ID FROM Patient WHERE `First Date` = '1991-06-13' AND Diagnosis = 'SJS') AND Date LIKE '1995%'\t----- bird -----\tthrombosis_prediction",
    "1183": "SELECT Patient.Diagnosis FROM Patient INNER JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.`Examination Date` = '1997-01-27' AND Patient.`First Date` = '1997-01-27' AND Examination.Diagnosis = 'SLE'\t----- bird -----\tthrombosis_prediction",
    "1184": "SELECT Symptoms FROM Examination WHERE ID = (SELECT ID FROM Patient WHERE Birthday = '1959-03-01') AND `Examination Date` = '1993-09-27'\t----- bird -----\tthrombosis_prediction",
    "1185": "SELECT ((SELECT SUM(`T-CHO`) FROM Laboratory WHERE ID IN (SELECT ID FROM Patient WHERE Birthday = '1959-02-18') AND Date LIKE '1981-11-%') - (SELECT SUM(`T-CHO`) FROM Laboratory WHERE ID IN (SELECT ID FROM Patient WHERE Birthday = '1959-02-18') AND Date LIKE '1981-12-%')) / (SELECT SUM(`T-CHO`) FROM Laboratory WHERE ID IN (SELECT ID FROM Patient WHERE Birthday = '1959-02-18') AND Date LIKE '1981-11-%') * 100 AS Decrease_Rate;\t----- bird -----\tthrombosis_prediction",
    "1186": "SELECT Patient.ID FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Patient.Diagnosis = 'Behcet' AND YEAR(Examination.`Examination Date`) >= 1997 AND YEAR(Examination.`Examination Date`) < 1998;\t----- bird -----\tthrombosis_prediction",
    "1187": "SELECT COUNT(DISTINCT E.ID) AS NumPatients FROM Examination AS E INNER JOIN Laboratory AS L ON E.ID = L.ID WHERE E.`Examination Date` BETWEEN '1987-07-06' AND '1996-01-31' AND L.GPT > 30 AND L.ALB < 4 GROUP BY E.ID\t----- bird -----\tthrombosis_prediction",
    "1188": "SELECT ID FROM Patient WHERE SEX = 'F' AND YEAR(Birthday) = 1964 AND Admission = '+'\t----- bird -----\tthrombosis_prediction",
    "1189": "SELECT COUNT(*) FROM Examination WHERE Thrombosis = 2 AND `ANA Pattern` = 'S' AND `aCL IgM` > (SELECT AVG(`aCL IgM`) * 1.2 FROM Examination)\t----- bird -----\tthrombosis_prediction",
    "1190": "SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM Laboratory WHERE `U-PRO` > 0 AND `U-PRO` < 30) FROM Laboratory WHERE UA <= 6.5 AND `U-PRO` > 0 AND `U-PRO` < 30;\t----- bird -----\tthrombosis_prediction",
    "1191": "SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM Patient WHERE YEAR(`First Date`) = '1981') AS percentage FROM Patient WHERE SEX = 'M' AND YEAR(`First Date`) = '1981' AND Diagnosis = 'BEHCET'\t----- bird -----\tthrombosis_prediction",
    "1192": "SELECT Patient.ID, Patient.SEX, Patient.Birthday, Patient.Description, Patient.`First Date`, Patient.Admission, Patient.Diagnosis FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.Admission = '-' AND Laboratory.Date LIKE '1991-10%' AND Laboratory.`T-BIL` < 2.0;\t----- bird -----\tthrombosis_prediction",
    "1193": "SELECT COUNT(*) FROM Patient AS P INNER JOIN Examination AS E ON P.ID = E.ID WHERE E.`ANA Pattern` != 'P' AND P.SEX = 'F' AND YEAR(P.Birthday) BETWEEN 1980 AND 1989\t----- bird -----\tthrombosis_prediction",
    "1194": "SELECT P.SEX FROM Patient AS P INNER JOIN Examination AS E ON P.ID = E.ID INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE E.Diagnosis = 'PSS' AND L.CRP = '2+' AND L.CRE = 1 AND L.LDH = 123\t----- bird -----\tthrombosis_prediction",
    "1195": "SELECT AVG(ALB) FROM Laboratory AS L INNER JOIN Patient AS P ON L.ID = P.ID WHERE P.SEX = 'F' AND L.PLT > 400 AND P.Diagnosis = 'SLE'\t----- bird -----\tthrombosis_prediction",
    "1196": "SELECT MAX(Symptoms) FROM Examination WHERE Diagnosis = 'SLE'\t----- bird -----\tthrombosis_prediction",
    "1197": "SELECT Patient.`First Date`, Patient.Diagnosis FROM Patient WHERE Patient.ID = 48473\t----- bird -----\tthrombosis_prediction",
    "1198": "SELECT COUNT(*) FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE p.SEX = 'F' AND e.Diagnosis = 'APS'\t----- bird -----\tthrombosis_prediction",
    "1199": "SELECT COUNT(DISTINCT ID) FROM Laboratory WHERE YEAR(Date) = '1997' AND (TP < 6 OR TP > 8.5)\t----- bird -----\tthrombosis_prediction",
    "1200": "SELECT (DIVIDE(SUM(CASE WHEN Symptoms LIKE '%thrombocytopenia%' THEN 1 ELSE 0 END), SUM(CASE WHEN Diagnosis LIKE '%SLE%' THEN 1 ELSE 0 END)) * 100) AS Proportion_of_Patients FROM Examination;\t----- bird -----\tthrombosis_prediction",
    "1201": "SELECT COUNT(CASE WHEN SEX = 'F' THEN 1 END) / COUNT(*) * 100 AS percentage FROM Patient WHERE YEAR(Birthday) = 1980 AND Diagnosis = 'RA'\t----- bird -----\tthrombosis_prediction",
    "1202": "SELECT COUNT(DISTINCT P.ID) FROM Patient AS P INNER JOIN Examination AS E ON P.ID = E.ID WHERE P.SEX = 'M' AND E.`Examination Date` BETWEEN '1995-01-01' AND '1997-12-31' AND E.Diagnosis = 'BEHCET' AND P.Admission = '-'\t----- bird -----\tthrombosis_prediction",
    "1203": "SELECT COUNT(*) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'F' AND T2.WBC < 3.5\t----- bird -----\tthrombosis_prediction",
    "1204": "SELECT DATEDIFF(`Examination Date`, `First Date`) AS Evaluation_Start_Days FROM Examination WHERE ID = 821298\t----- bird -----\tthrombosis_prediction",
    "1205": "SELECT CASE WHEN L.UA > 8.0 AND P.SEX = 'M' THEN 'High Uric Acid' WHEN L.UA > 6.5 AND P.SEX = 'F' THEN 'High Uric Acid' ELSE 'Normal Uric Acid' END AS Uric_Acid_Status FROM Laboratory AS L INNER JOIN Patient AS P ON L.ID = P.ID WHERE L.ID = 57266\t----- bird -----\tthrombosis_prediction",
    "1206": "SELECT Date FROM Laboratory WHERE ID = 48473 AND GOT >= 60\t----- bird -----\tthrombosis_prediction",
    "1207": "SELECT P.ID, P.SEX, P.Birthday FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE L.GOT < 60 AND year(L.Date) = 1994\t----- bird -----\tthrombosis_prediction",
    "1208": "SELECT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND T2.GPT >= 60;\t----- bird -----\tthrombosis_prediction",
    "1209": "SELECT Patient.Diagnosis FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.GPT > 60 ORDER BY Patient.Birthday ASC;\t----- bird -----\tthrombosis_prediction",
    "1210": "SELECT AVG(LDH) AS average_ldh_index FROM Laboratory WHERE LDH < 500\t----- bird -----\tthrombosis_prediction",
    "1211": "SELECT P.ID, (YEAR(CURRENT_TIMESTAMP) - YEAR(P.Birthday)) AS Age FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE L.LDH BETWEEN 600 AND 800\t----- bird -----\tthrombosis_prediction",
    "1212": "SELECT Patient.Admission FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.ALP < 300 AND Patient.Admission = '-'\t----- bird -----\tthrombosis_prediction",
    "1213": "SELECT Patient.ID FROM Patient WHERE Birthday = '1982-04-01' SELECT ID, ALP FROM Laboratory WHERE ID = (SELECT ID FROM Patient WHERE Birthday = '1982-04-01') AND ALP < 300\t----- bird -----\tthrombosis_prediction",
    "1214": "SELECT ID, SEX, Birthday FROM Patient WHERE ID IN (SELECT ID FROM Laboratory WHERE TP < 6.0)\t----- bird -----\tthrombosis_prediction",
    "1215": "SELECT ID, TP, (TP - 8.5) AS Deviation FROM Laboratory WHERE ID IN (SELECT ID FROM Patient WHERE SEX = 'F') AND TP > 8.5;\t----- bird -----\tthrombosis_prediction",
    "1216": "SELECT * FROM Patient WHERE SEX = 'M' AND (ALB <= 3.5 OR ALB >= 5.5) ORDER BY Birthday DESC;\t----- bird -----\tthrombosis_prediction",
    "1217": "SELECT Patient.ID, Patient.Birthday, Laboratory.ALB FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE YEAR(Patient.Birthday) = '1982' AND Laboratory.ALB BETWEEN 3.5 AND 5.5\t----- bird -----\tthrombosis_prediction",
    "1218": "SELECT COUNT(ID) * 100.0 / (SELECT COUNT(ID) FROM Patient WHERE SEX = 'F') AS Percentage FROM Laboratory WHERE (UA > 6.5 AND SEX = 'F') OR (UA > 8.0 AND SEX = 'M')\t----- bird -----\tthrombosis_prediction",
    "1219": "SELECT AVG(UA) FROM Laboratory WHERE Date = (SELECT MAX(Date) FROM Laboratory) AND (UA < 8.0 AND SEX = 'M' OR UA < 6.5 AND SEX = 'F')\t----- bird -----\tthrombosis_prediction",
    "1220": "SELECT ID, SEX, Birthday FROM Patient WHERE ID IN (SELECT ID FROM Laboratory WHERE UN = 29)\t----- bird -----\tthrombosis_prediction",
    "1221": "SELECT Patient.ID, Patient.SEX, Patient.Birthday FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.UN < 30 AND Patient.Diagnosis = 'RA'\t----- bird -----\tthrombosis_prediction",
    "1222": "SELECT COUNT(*) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Sex = 'M' AND T2.CRE >= 1.5\t----- bird -----\tthrombosis_prediction",
    "1223": "SELECT CASE WHEN SUM(CASE WHEN SEX = 'M' AND CRE >= 1.5 THEN 1 ELSE 0 END) > SUM(CASE WHEN SEX = 'F' AND CRE >= 1.5 THEN 1 ELSE 0 END) THEN 'True' ELSE 'False' END AS Result FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID;\t----- bird -----\tthrombosis_prediction",
    "1224": "SELECT MAX(`T-BIL`) AS Highest_Total_Bilirubin, P.ID, P.SEX, P.Birthday FROM Laboratory AS L INNER JOIN Patient AS P ON L.ID = P.ID GROUP BY P.ID, P.SEX, P.Birthday ORDER BY Highest_Total_Bilirubin DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1225": "SELECT Patient.SEX, COUNT(*) FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.`T-BIL` >= 2.0 GROUP BY Patient.SEX\t----- bird -----\tthrombosis_prediction",
    "1226": "SELECT Patient.ID, MAX(Laboratory.`T-CHO`) AS T_CHO FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID GROUP BY Patient.ID ORDER BY Patient.Birthday ASC, T_CHO DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1227": "SELECT DIVIDE(SUM(SUBTRACT(YEAR(NOW()), YEAR(Birthday))), COUNT(ID)) AS Average_Age FROM Patient WHERE SEX = 'M' AND ID IN (SELECT ID FROM Laboratory WHERE `T-CHO` >= 250)\t----- bird -----\tthrombosis_prediction",
    "1228": "SELECT T1.ID, T1.Diagnosis FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.TG > 300;\t----- bird -----\tthrombosis_prediction",
    "1229": "SELECT COUNT(*) FROM Patient WHERE ID IN ( SELECT ID FROM Laboratory WHERE TG >= 200 ) AND (YEAR(CURRENT_TIMESTAMP) - YEAR(Birthday)) > 50;\t----- bird -----\tthrombosis_prediction",
    "1230": "SELECT DISTINCT ID FROM Patient WHERE Admission = '-' AND ID IN ( SELECT ID FROM Laboratory WHERE CPK < 250 )\t----- bird -----\tthrombosis_prediction",
    "1231": "SELECT COUNT(*) FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE YEAR(P.Birthday) BETWEEN 1936 AND 1956 AND P.SEX = 'M' AND L.CPK >= 250\t----- bird -----\tthrombosis_prediction",
    "1232": "SELECT P.ID, P.SEX, (YEAR(CURRENT_TIMESTAMP) - YEAR(P.Birthday)) AS Age FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE L.GLU >= 180 AND L.`T-CHO` < 250\t----- bird -----\tthrombosis_prediction",
    "1233": "SELECT Patient.ID, Laboratory.GLU FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE year(Patient.Description) >= 1991 AND Laboratory.GLU < 180;\t----- bird -----\tthrombosis_prediction",
    "1234": "SELECT Patient.ID, Patient.SEX, Patient.Birthday FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.WBC <= 3.5 OR Laboratory.WBC >= 9.0 GROUP BY Patient.SEX, Patient.Birthday ORDER BY Patient.Birthday ASC;\t----- bird -----\tthrombosis_prediction",
    "1235": "SELECT Patient.ID, (YEAR(CURRENT_TIMESTAMP) - YEAR(Birthday)) AS age, Diagnosis FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE RBC < 3.5;\t----- bird -----\tthrombosis_prediction",
    "1236": "SELECT Patient.ID, Patient.SEX, Patient.Birthday, Patient.Admission FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.SEX = 'F' AND (YEAR(CURRENT_TIMESTAMP) - YEAR(Patient.Birthday)) >= 50 AND (Laboratory.RBC <= 3.5 OR Laboratory.RBC >= 6.0) AND Patient.Admission = '+'\t----- bird -----\tthrombosis_prediction",
    "1237": "SELECT T1.ID, T2.SEX FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Admission = '-' AND T2.HGB < 10;\t----- bird -----\tthrombosis_prediction",
    "1238": "SELECT T1.ID, T1.SEX FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.Diagnosis = 'SLE' AND T2.HGB > 10 AND T2.HGB < 17 ORDER BY T1.Birthday ASC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1239": "SELECT Patient.ID, (YEAR(CURRENT_TIMESTAMP) - YEAR(Birthday)) AS Age FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE HCT >= 52 GROUP BY Patient.ID HAVING COUNT(Laboratory.ID) > 2\t----- bird -----\tthrombosis_prediction",
    "1240": "SELECT AVG(HCT) FROM Laboratory WHERE Date LIKE '1991%' AND HCT < 29\t----- bird -----\tthrombosis_prediction",
    "1241": "SELECT COUNT(DISTINCT L.ID) - COUNT(DISTINCT L2.ID) AS difference FROM Laboratory AS L INNER JOIN Patient AS P ON L.ID = P.ID WHERE L.PLT < 100 OR L.PLT > 400;\t----- bird -----\tthrombosis_prediction",
    "1242": "SELECT Patient.ID FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Date LIKE '1984%' AND (YEAR(CURRENT_TIMESTAMP) - YEAR(Birthday)) < 50 AND PLT BETWEEN 100 AND 400;\t----- bird -----\tthrombosis_prediction",
    "1243": "SELECT CAST(SUM(CASE WHEN T1.PT >= 14 AND T2.SEX = 'F' THEN 1 ELSE 0 END) AS REAL) * 100 / SUM(CASE WHEN T1.PT >= 14 THEN 1 ELSE 0 END) FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE strftime('%Y', 'now') - strftime('%Y', T2.Birthday) > 55;\t----- bird -----\tthrombosis_prediction",
    "1244": "SELECT T1.ID, T1.SEX, T1.Birthday, T1.`First Date` FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE year(T1.`First Date`) > 1992 AND T2.PT < 14;\t----- bird -----\tthrombosis_prediction",
    "1245": "SELECT COUNT(*) FROM Examination WHERE `Examination Date` > '1997-01-01' AND APTT >= 45\t----- bird -----\tthrombosis_prediction",
    "1246": "SELECT COUNT(DISTINCT L.ID) FROM Laboratory AS L INNER JOIN Examination AS E ON L.ID = E.ID WHERE L.APTT > 45 AND E.Thrombosis = 3\t----- bird -----\tthrombosis_prediction",
    "1247": "SELECT COUNT(DISTINCT L.ID) FROM Patient P INNER JOIN Laboratory L ON P.ID = L.ID WHERE P.SEX = 'M' AND L.WBC BETWEEN 3.5 AND 9.0 AND (L.FG <= 150 OR L.FG >= 450)\t----- bird -----\tthrombosis_prediction",
    "1248": "SELECT COUNT(DISTINCT P.ID) FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE P.Birthday > '1980-01-01' AND L.FG NOT BETWEEN 150 AND 450;\t----- bird -----\tthrombosis_prediction",
    "1249": "SELECT Diagnosis FROM Examination WHERE `U-PRO` >= 30;\t----- bird -----\tthrombosis_prediction",
    "1250": "SELECT Patient.ID FROM Laboratory INNER JOIN Patient ON Laboratory.ID = Patient.ID WHERE Laboratory.`U-PRO` > 0 AND Laboratory.`U-PRO` < 30 AND Patient.Diagnosis = 'SLE'\t----- bird -----\tthrombosis_prediction",
    "1251": "SELECT COUNT(*) FROM Examination WHERE `aCL IgG` < 900 AND Symptoms = 'abortion'\t----- bird -----\tthrombosis_prediction",
    "1252": "SELECT COUNT(*) FROM Examination WHERE `aCL IgG` BETWEEN 900 AND 2000 AND Symptoms IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
    "1253": "SELECT Diagnosis FROM Examination WHERE `aCL IgA` BETWEEN 80 AND 500 ORDER BY `aCL IgA` DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1254": "SELECT COUNT(*) FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.`U-PRO` BETWEEN 80 AND 500 AND YEAR(Patient.`First Date`) >= 1990\t----- bird -----\tthrombosis_prediction",
    "1255": "SELECT Diagnosis FROM Examination WHERE `aCL IgM` NOT BETWEEN 40 AND 400 GROUP BY Diagnosis ORDER BY COUNT(Diagnosis) DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1256": "SELECT COUNT(*) FROM Patient WHERE ID NOT IN (SELECT ID FROM Laboratory WHERE CRP LIKE '+' OR CRP LIKE '-' OR CRP < 1.0) AND Description IS NULL;\t----- bird -----\tthrombosis_prediction",
    "1257": "SELECT COUNT(DISTINCT P.ID) FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE L.CRP NOT IN ('+-', '-') AND L.CRP >= 1.0 AND (YEAR(CURDATE()) - YEAR(P.Birthday)) < 18\t----- bird -----\tthrombosis_prediction",
    "1258": "SELECT COUNT(DISTINCT L.ID) FROM Laboratory AS L INNER JOIN Patient AS P ON L.ID = P.ID WHERE P.RA IN ('-', '+-') AND L.KCT = '+'\t----- bird -----\tthrombosis_prediction",
    "1259": "SELECT Diagnosis FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE YEAR(p.Birthday) >= 1995 AND e.RA IN ('-', '+-')\t----- bird -----\tthrombosis_prediction",
    "1260": "SELECT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.RF < 20 AND (YEAR(CURDATE()) - YEAR(T1.Birthday)) > 60\t----- bird -----\tthrombosis_prediction",
    "1261": "SELECT COUNT(*) FROM Patient AS P LEFT JOIN Laboratory AS L ON P.ID = L.ID WHERE RF < 20 AND Thrombosis = '0'\t----- bird -----\tthrombosis_prediction",
    "1262": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID INNER JOIN Laboratory AS T3 ON T1.ID = T3.ID WHERE T3.C3 > 35 AND T2.`ANA Pattern` = 'P'\t----- bird -----\tthrombosis_prediction",
    "1263": "SELECT T1.ID FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.HCT < 29 OR T1.HCT > 52 ORDER BY T1.`aCL IgA` DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1264": "SELECT COUNT(DISTINCT P.ID) FROM Patient AS P INNER JOIN Examination AS E ON P.ID = E.ID INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE E.Thrombosis = 1 AND L.C4 > 10;\t----- bird -----\tthrombosis_prediction",
    "1265": "SELECT COUNT(DISTINCT P.ID) FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE L.RNP IN ('-', '+-') AND P.Admission = '+'\t----- bird -----\tthrombosis_prediction",
    "1266": "SELECT Patient.ID, Patient.Birthday FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.RNP NOT IN ('-', '+-') ORDER BY Patient.Birthday ASC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1267": "SELECT COUNT(*) FROM Patient AS P INNER JOIN Examination AS E ON P.ID = E.ID WHERE E.Thrombosis = 1 AND E.SM IN ('-', '+-')\t----- bird -----\tthrombosis_prediction",
    "1268": "SELECT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.SM NOT IN ('-', '+-') ORDER BY T1.Birthday ASC LIMIT 3\t----- bird -----\tthrombosis_prediction",
    "1269": "SELECT T1.ID FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.`Examination Date` >= '1997-01-01' AND T2.SC170 IN ('-', '+-')\t----- bird -----\tthrombosis_prediction",
    "1270": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.SC170 IN ('-', '+-') AND T1.SEX = 'M' AND T2.Symptoms = 'vertigo'\t----- bird -----\tthrombosis_prediction",
    "1271": "SELECT COUNT(DISTINCT p.ID) FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE l.SSA IN ('-', '+-') AND YEAR(p.`First Date`) < 1990\t----- bird -----\tthrombosis_prediction",
    "1272": "SELECT MIN(T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.SSA NOT IN ('-', '+-') ORDER BY T1.`First Date` ASC;\t----- bird -----\tthrombosis_prediction",
    "1273": "SELECT COUNT(DISTINCT e.ID) FROM Examination e JOIN Laboratory l ON e.ID = l.ID WHERE l.SSB IN ('negative', '0') AND e.Diagnosis = 'SLE';\t----- bird -----\tthrombosis_prediction",
    "1274": "SELECT COUNT(DISTINCT p.ID) FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE e.SSB IN ('-', '+-') AND e.Symptoms IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
    "1275": "SELECT COUNT(*) FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE L.CENTROMEA IN ('-', '+-') AND L.SSB IN ('-', '+-') AND P.SEX = 'M'\t----- bird -----\tthrombosis_prediction",
    "1276": "SELECT Patient.ID, Patient.Diagnosis FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.DNA >= 8\t----- bird -----\tthrombosis_prediction",
    "1277": "SELECT COUNT(DISTINCT p.ID) FROM Patient p LEFT JOIN Laboratory l ON p.ID = l.ID WHERE l.DNA < 8 AND p.Description IS NULL\t----- bird -----\tthrombosis_prediction",
    "1278": "SELECT COUNT(p.ID) FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE l.`DNA-II` >= 8 AND p.Admission = '+'\t----- bird -----\tthrombosis_prediction",
    "1279": "SELECT (COUNT(CASE WHEN GOT >= 60 AND Diagnosis = 'SLE' THEN ID END) / COUNT(CASE WHEN GOT >= 60 THEN ID END)) * 100 as Percentage FROM Laboratory\t----- bird -----\tthrombosis_prediction",
    "1280": "SELECT COUNT(*) FROM Laboratory AS L INNER JOIN Patient AS P ON L.ID = P.ID WHERE P.Sex = 'M' AND L.GOT < 60\t----- bird -----\tthrombosis_prediction",
    "1281": "SELECT MIN(Birthday) FROM Patient WHERE ID IN (SELECT ID FROM Laboratory WHERE GOT >= 60)\t----- bird -----\tthrombosis_prediction",
    "1282": "SELECT TOP 3 Birthday FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE GPT < 60 ORDER BY GPT DESC;\t----- bird -----\tthrombosis_prediction",
    "1283": "SELECT COUNT(*) FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE L.GOT < 60 AND P.Sex = 'M'\t----- bird -----\tthrombosis_prediction",
    "1284": "SELECT T1.`First Date` FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.LDH < 500 ORDER BY T2.LDH DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1285": "SELECT MAX(Date) AS Latest_Recorded_Date FROM Laboratory WHERE ID = (SELECT ID FROM Patient WHERE `First Date` = (SELECT MAX(`First Date`) FROM Patient)) AND LDH >= 500\t----- bird -----\tthrombosis_prediction",
    "1286": "SELECT COUNT(*) FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE L.ALP >= 300 AND P.Admission = '+'\t----- bird -----\tthrombosis_prediction",
    "1287": "SELECT COUNT(*) FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE P.Admission = '-' AND L.ALP < 300\t----- bird -----\tthrombosis_prediction",
    "1288": "SELECT T1.Diagnosis FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.TP < 6.0;\t----- bird -----\tthrombosis_prediction",
    "1289": "SELECT COUNT(*) FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE p.Diagnosis = 'SJS' AND e.TP > 6.0 AND e.TP < 8.5;\t----- bird -----\tthrombosis_prediction",
    "1290": "SELECT `Examination Date` FROM Examination WHERE ALB = (SELECT MAX(ALB) FROM Examination WHERE ALB > 3.5 AND ALB < 5.5)\t----- bird -----\tthrombosis_prediction",
    "1291": "SELECT COUNT(*) FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE P.Sex = 'M' AND L.ALB > 3.5 AND L.ALB < 5.5 AND L.TP BETWEEN 6.0 AND 8.5\t----- bird -----\tthrombosis_prediction",
    "1292": "SELECT MAX(`aCL IgG`), MAX(`aCL IgM`), MAX(`aCL IgA`) FROM Examination WHERE ID IN ( SELECT ID FROM Patient WHERE SEX = 'F' ) AND UA <= 6.50;\t----- bird -----\tthrombosis_prediction",
    "1293": "SELECT MAX(ANA) FROM Examination WHERE CRE < 1.5\t----- bird -----\tthrombosis_prediction",
    "1294": "SELECT T1.ID FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.CRE < 1.5 AND T2.`aCL IgA` = (SELECT MAX(`aCL IgA`) FROM Examination)\t----- bird -----\tthrombosis_prediction",
    "1295": "SELECT COUNT(*) FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID JOIN Examination ON Patient.ID = Examination.ID WHERE `T-BIL` >= 2.0 AND `ANA Pattern` LIKE '%P%'\t----- bird -----\tthrombosis_prediction",
    "1296": "SELECT ANA FROM Examination WHERE `T-BIL` < 2.0 ORDER BY `T-BIL` DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1297": "SELECT COUNT(*) FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE L.`T-CHO` >= 250 AND L.KCT = '-'\t----- bird -----\tthrombosis_prediction",
    "1298": "SELECT COUNT(*) FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID INNER JOIN Examination AS E ON P.ID = E.ID WHERE L.`T-CHO` < 250 AND E.`ANA Pattern` = 'P'\t----- bird -----\tthrombosis_prediction",
    "1299": "SELECT COUNT(*) FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE L.TG < 200 AND L.TG IS NOT NULL AND L.Symptoms IS NOT NULL\t----- bird -----\tthrombosis_prediction",
    "1300": "SELECT P.Diagnosis FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE L.TG < 200 ORDER BY L.TG DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1301": "SELECT E.ID FROM Examination AS E INNER JOIN Laboratory AS L ON E.ID = L.ID WHERE E.Thrombosis = 0 AND L.CPK < 250\t----- bird -----\tthrombosis_prediction",
    "1302": "SELECT COUNT(DISTINCT p.ID) FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE l.CPK < 250 AND (l.KCT = '+' OR l.RVVT = '+' OR l.LAC = '+')\t----- bird -----\tthrombosis_prediction",
    "1303": "SELECT MIN(Birthday) AS OldestPatientBirthday FROM Patient WHERE ID IN ( SELECT ID FROM Laboratory WHERE GLU > 180 )\t----- bird -----\tthrombosis_prediction",
    "1304": "SELECT COUNT(Patient.ID) FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE GLU < 180 AND Thrombosis = 0\t----- bird -----\tthrombosis_prediction",
    "1305": "SELECT COUNT(*) FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.Admission = '+' AND Laboratory.WBC BETWEEN 3.5 AND 9.0\t----- bird -----\tthrombosis_prediction",
    "1306": "SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Diagnosis = 'SLE' AND T2.WBC BETWEEN 3.5 AND 9.0\t----- bird -----\tthrombosis_prediction",
    "1307": "SELECT DISTINCT ID FROM Laboratory INNER JOIN Patient ON Laboratory.ID = Patient.ID WHERE (RBC <= 3.5 OR RBC >= 6.0) AND Admission = '-'\t----- bird -----\tthrombosis_prediction",
    "1308": "SELECT COUNT(*) FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE L.PLT > 100 AND L.PLT < 400 AND P.Diagnosis IS NOT NULL\t----- bird -----\tthrombosis_prediction",
    "1309": "SELECT Patient.ID, Laboratory.PLT FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.PLT > 100 AND Laboratory.PLT < 400 AND Patient.Diagnosis = 'MCTD'\t----- bird -----\tthrombosis_prediction",
    "1310": "SELECT AVG(PT) FROM Laboratory AS L INNER JOIN Patient AS P ON L.ID = P.ID WHERE P.SEX = 'M' AND L.PT < 14\t----- bird -----\tthrombosis_prediction",
    "1311": "SELECT COUNT(*) FROM Examination WHERE Thrombosis IN (1, 2) AND PT < 14\t----- bird -----\tthrombosis_prediction",
    "1312": "SELECT major_name FROM member JOIN major ON member.link_to_major = major.major_id WHERE member.first_name = 'Angela' AND member.last_name = 'Sanders'\t----- bird -----\tstudent_club",
    "1313": "SELECT COUNT(*) FROM member WHERE link_to_major IN (SELECT major_id FROM major WHERE college = 'Engineering')\t----- bird -----\tstudent_club",
    "1314": "SELECT T1.first_name || ' ' || T1.last_name AS full_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.department = 'Art and Design'\t----- bird -----\tstudent_club",
    "1315": "SELECT COUNT(DISTINCT M.member_id) FROM member AS M INNER JOIN attendance AS A ON M.member_id = A.link_to_member INNER JOIN event AS E ON A.link_to_event = E.event_id WHERE E.event_name = 'Women\\'s Soccer'\t----- bird -----\tstudent_club",
    "1316": "SELECT T2.phone FROM member AS T1 INNER JOIN attendance AS T2 ON T1.member_id = T2.link_to_member INNER JOIN event AS T3 ON T2.link_to_event = T3.event_id WHERE T3.event_name = \"Women's Soccer\"\t----- bird -----\tstudent_club",
    "1317": "SELECT COUNT(*) FROM member m JOIN attendance a ON m.member_id = a.link_to_member JOIN event e ON a.link_to_event = e.event_id WHERE e.event_name = 'Women\\'s Soccer' AND m.t_shirt_size = 'Medium'\t----- bird -----\tstudent_club",
    "1318": "SELECT T1.event_name FROM event AS T1 INNER JOIN attendance AS T2 ON T1.event_id = T2.link_to_event INNER JOIN member AS T3 ON T2.link_to_member = T3.member_id INNER JOIN major AS T4 ON T3.link_to_major = T4.major_id WHERE T4.major_name = 'Student_Club' GROUP BY T1.event_name ORDER BY COUNT(T2.link_to_member) DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1319": "SELECT T2.college FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.position = 'Vice President' AND T1.first_name = 'Student' AND T1.last_name = 'Club'\t----- bird -----\tstudent_club",
    "1320": "SELECT T1.event_name FROM event AS T1 INNER JOIN attendance AS T2 ON T1.event_id = T2.link_to_event INNER JOIN member AS T3 ON T2.link_to_member = T3.member_id WHERE T3.first_name = 'Maya' AND T3.last_name = 'Mclean';\t----- bird -----\tstudent_club",
    "1321": "SELECT COUNT(*) FROM attendance AS A INNER JOIN event AS E ON A.link_to_event = E.event_id INNER JOIN member AS M ON A.link_to_member = M.member_id WHERE M.first_name = 'Sacha' AND M.last_name = 'Harrison' AND YEAR(event_date) = 2019\t----- bird -----\tstudent_club",
    "1322": "SELECT COUNT(*) FROM event WHERE event_id IN (SELECT link_to_event FROM attendance GROUP BY link_to_event HAVING COUNT(link_to_member) > 10) AND type = 'Meeting'\t----- bird -----\tstudent_club",
    "1323": "SELECT T1.event_name FROM event AS T1 INNER JOIN attendance AS T2 ON T1.event_id = T2.link_to_event GROUP BY T1.event_name HAVING COUNT(T2.link_to_member) > 20;\t----- bird -----\tstudent_club",
    "1324": "SELECT AVG(attendance_count) FROM (SELECT COUNT(event_id) as attendance_count, COUNT(DISTINCT event_name) as unique_events FROM event WHERE type = 'Meeting' AND SUBSTR(event_date, 1, 4) = '2020');\t----- bird -----\tstudent_club",
    "1325": "SELECT MAX(cost) AS most_expensive_item FROM expense WHERE expense_description LIKE '%club events%'\t----- bird -----\tstudent_club",
    "1326": "SELECT COUNT(*) FROM member WHERE link_to_major = (SELECT major_id FROM major WHERE major_name = 'Environmental Engineering')\t----- bird -----\tstudent_club",
    "1327": "SELECT m.first_name || ' ' || m.last_name AS full_name FROM member m JOIN attendance a ON m.member_id = a.link_to_member JOIN event e ON a.link_to_event = e.event_id WHERE e.event_name = 'Laugh Out Loud'\t----- bird -----\tstudent_club",
    "1328": "SELECT last_name FROM member WHERE link_to_major = (SELECT major_id FROM major WHERE major_name = 'Law and Constitutional Studies')\t----- bird -----\tstudent_club",
    "1329": "SELECT T3.county FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code INNER JOIN major AS T3 ON T1.link_to_major = T3.major_id WHERE T1.first_name = 'Sherri' AND T1.last_name = 'Ramsey';\t----- bird -----\tstudent_club",
    "1330": "SELECT college FROM major JOIN member ON major.major_id = member.link_to_major WHERE member.first_name = 'Tyler' AND member.last_name = 'Hewitt';\t----- bird -----\tstudent_club",
    "1331": "SELECT SUM(amount) FROM income WHERE link_to_member IN (SELECT member_id FROM member WHERE position = 'Vice President')\t----- bird -----\tstudent_club",
    "1332": "SELECT SUM(E1.spent) AS total_spent_on_food FROM budget AS B1 JOIN event AS E1 ON B1.link_to_event = E1.event_id WHERE B1.category = 'Food' AND E1.event_name = 'September Meeting'\t----- bird -----\tstudent_club",
    "1333": "SELECT T2.city, T2.state FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T1.position = 'President' AND T1.link_to_major = 'Student_Club'\t----- bird -----\tstudent_club",
    "1334": "SELECT first_name || ' ' || last_name AS full_name FROM member WHERE zip IN (SELECT zip_code FROM zip_code WHERE state = 'Illinois')\t----- bird -----\tstudent_club",
    "1335": "SELECT SUM(e.spent) FROM budget AS b JOIN event AS e ON b.link_to_event = e.event_id WHERE b.category = 'Advertisement' AND e.event_name = 'September Meeting'\t----- bird -----\tstudent_club",
    "1336": "SELECT department FROM major WHERE major_id IN (SELECT link_to_major FROM member WHERE first_name = 'Pierce' OR first_name = 'Guidi')\t----- bird -----\tstudent_club",
    "1337": "SELECT SUM(amount) FROM budget WHERE link_to_event = (SELECT event_id FROM event WHERE event_name = 'October Speaker')\t----- bird -----\tstudent_club",
    "1338": "SELECT E.expense_id, E.approved FROM expense AS E INNER JOIN event AS EV ON E.link_to_event = EV.event_id WHERE EV.event_name = 'October Meeting' AND EV.event_date = '2019-10-08'\t----- bird -----\tstudent_club",
    "1339": "SELECT SUM(cost) / COUNT(DISTINCT link_to_event) AS average_cost FROM expense WHERE link_to_member = (SELECT member_id FROM member WHERE first_name = 'Elijah' AND last_name = 'Allen') AND (MONTH(expense_date) = 9 OR MONTH(expense_date) = 10)\t----- bird -----\tstudent_club",
    "1340": "SELECT SUM(CASE WHEN YEAR(event_date) = 2019 THEN spent ELSE 0 END) - SUM(CASE WHEN YEAR(event_date) = 2020 THEN spent ELSE 0 END) AS difference FROM event WHERE type = 'Student_Club'\t----- bird -----\tstudent_club",
    "1341": "SELECT location FROM event WHERE event_name = 'Spring Budget Review';\t----- bird -----\tstudent_club",
    "1342": "SELECT E.cost FROM expense AS E INNER JOIN budget AS B ON E.link_to_budget = B.budget_id INNER JOIN event AS EV ON B.link_to_event = EV.event_id WHERE EV.event_description = 'Posters' AND EV.event_date = '2019-09-04'\t----- bird -----\tstudent_club",
    "1343": "SELECT budget.remaining FROM budget WHERE category = 'Food' AND amount = (SELECT MAX(amount) FROM budget WHERE category = 'Food')\t----- bird -----\tstudent_club",
    "1344": "SELECT notes FROM income WHERE source = 'Fundraising' AND date_received = '2019-09-14'\t----- bird -----\tstudent_club",
    "1345": "SELECT COUNT(*) FROM major WHERE college = 'College of Humanities and Social Sciences'\t----- bird -----\tstudent_club",
    "1346": "SELECT phone FROM member WHERE first_name = 'Carlo' AND last_name = 'Jacobs'\t----- bird -----\tstudent_club",
    "1347": "SELECT zip_code.county FROM member JOIN zip_code ON member.zip = zip_code.zip_code WHERE member.first_name = 'Adela' AND member.last_name = 'O\\'Gallagher'\t----- bird -----\tstudent_club",
    "1348": "SELECT COUNT(*) FROM budget WHERE event_status = 'November Meeting' AND remaining < 0;\t----- bird -----\tstudent_club",
    "1349": "SELECT SUM(amount) FROM budget WHERE link_to_event = (SELECT event_id FROM event WHERE event_name = 'September Speaker')\t----- bird -----\tstudent_club",
    "1350": "SELECT E.event_status FROM event AS E INNER JOIN budget AS B ON E.event_id = B.link_to_event INNER JOIN expense AS Ex ON B.budget_id = Ex.link_to_budget WHERE Ex.expense_description = 'Post Cards, Posters' AND Ex.expense_date = '2019-8-20'\t----- bird -----\tstudent_club",
    "1351": "SELECT T2.major_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.first_name = 'Brent' AND T1.last_name = 'Thomason'\t----- bird -----\tstudent_club",
    "1352": "SELECT COUNT(*) FROM member WHERE link_to_major = (SELECT major_id FROM major WHERE major_name = 'Human Development and Family Studies') AND t_shirt_size = 'Large'\t----- bird -----\tstudent_club",
    "1353": "SELECT zip_code.type FROM member JOIN zip_code ON member.zip = zip_code.zip_code WHERE member.first_name = 'Christof' AND member.last_name = 'Nielson'\t----- bird -----\tstudent_club",
    "1354": "SELECT T2.major_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.position = 'Vice President'\t----- bird -----\tstudent_club",
    "1355": "SELECT T2.state FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T1.first_name = 'Sacha' AND T1.last_name = 'Harrison'\t----- bird -----\tstudent_club",
    "1356": "SELECT major.department FROM member INNER JOIN major ON member.link_to_major = major.major_id WHERE member.position = 'President'\t----- bird -----\tstudent_club",
    "1357": "SELECT T1.date_received FROM income AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.first_name = 'Connor' AND T2.last_name = 'Hilton' AND T1.source = 'Dues'\t----- bird -----\tstudent_club",
    "1358": "SELECT first_name || ' ' || last_name AS full_name FROM member JOIN income ON member.member_id = income.link_to_member WHERE source = 'Dues' ORDER BY date_received LIMIT 1;\t----- bird -----\tstudent_club",
    "1359": "SELECT SUM(CASE WHEN T1.category = 'Advertisement' AND T2.event_name = 'Yearly Kickoff' THEN T1.amount ELSE 0 END) / SUM(CASE WHEN T1.category = 'Advertisement' AND T2.event_name = 'October Meeting' THEN T1.amount ELSE 0 END) FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id\t----- bird -----\tstudent_club",
    "1360": "SELECT (SUM(amount) / (SELECT SUM(amount) FROM budget WHERE link_to_event = 'November Speaker')) * 100 FROM budget WHERE category = 'Parking' AND link_to_event = 'November Speaker'\t----- bird -----\tstudent_club",
    "1361": "SELECT SUM(cost) FROM expense WHERE expense_description = 'Pizza';\t----- bird -----\tstudent_club",
    "1362": "SELECT COUNT(city) FROM zip_code WHERE county = 'Orange County' AND state = 'Virginia'\t----- bird -----\tstudent_club",
    "1363": "SELECT major_name FROM major WHERE college = 'College of Humanities and Social Sciences'\t----- bird -----\tstudent_club",
    "1364": "SELECT `city`, `county`, `state` FROM `zip_code` JOIN `member` ON `zip_code`.`zip_code` = `member`.`zip` WHERE `first_name` = 'Amy' AND `last_name` = 'Firth'\t----- bird -----\tstudent_club",
    "1365": "SELECT T1.expense_description FROM budget AS T1 INNER JOIN expense AS T2 ON T1.budget_id = T2.link_to_budget WHERE T1.remaining = (SELECT MIN(remaining) FROM budget)\t----- bird -----\tstudent_club",
    "1366": "SELECT m.first_name, m.last_name FROM member m JOIN attendance a ON m.member_id = a.link_to_member JOIN event e ON a.link_to_event = e.event_id WHERE e.event_name = 'October Meeting';\t----- bird -----\tstudent_club",
    "1367": "SELECT major.college FROM member JOIN major ON member.link_to_major = major.major_id GROUP BY major.college ORDER BY COUNT(*) DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1368": "SELECT M.major_name FROM member AS M WHERE M.phone = '809-555-3360'\t----- bird -----\tstudent_club",
    "1369": "SELECT event_name FROM event WHERE event_id = ( SELECT link_to_event FROM budget WHERE amount = ( SELECT MAX(amount) FROM budget ) )\t----- bird -----\tstudent_club",
    "1370": "SELECT T1.expense_description FROM expense AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.position = 'Vice President'\t----- bird -----\tstudent_club",
    "1371": "SELECT COUNT(*) FROM attendance JOIN event ON attendance.link_to_event = event.event_id WHERE event.event_name = 'Women\\'s Soccer'\t----- bird -----\tstudent_club",
    "1372": "SELECT date_received FROM income WHERE link_to_member = (SELECT member_id FROM member WHERE first_name = 'Casey' AND last_name = 'Mason')\t----- bird -----\tstudent_club",
    "1373": "SELECT COUNT(T1.zip) FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T2.state = 'Maryland'\t----- bird -----\tstudent_club",
    "1374": "SELECT COUNT(link_to_event) FROM attendance WHERE link_to_member = (SELECT member_id FROM member WHERE phone = '954-555-6240')\t----- bird -----\tstudent_club",
    "1375": "SELECT first_name || ' ' || last_name AS full_name FROM member WHERE link_to_major IN (SELECT major_id FROM major WHERE department = 'School of Applied Sciences, Technology and Education')\t----- bird -----\tstudent_club",
    "1376": "SELECT event_id, event_name, MAX(spent/amount) AS spend_to_budget_ratio FROM event JOIN budget ON event.event_id = budget.link_to_event WHERE status = 'Closed' GROUP BY event_id, event_name ORDER BY spend_to_budget_ratio DESC LIMIT 1\t----- bird -----\tstudent_club",
    "1377": "SELECT COUNT(member_id) FROM member WHERE position = 'President'\t----- bird -----\tstudent_club",
    "1378": "SELECT MAX(spent) AS highest_budget_spend FROM budget\t----- bird -----\tstudent_club",
    "1379": "SELECT COUNT(*) FROM event WHERE type = 'Meeting' AND strftime('%Y', event_date) = '2020'\t----- bird -----\tstudent_club",
    "1380": "SELECT SUM(spent) FROM budget WHERE category = 'Food'\t----- bird -----\tstudent_club",
    "1381": "SELECT T1.first_name || ' ' || T1.last_name AS full_name FROM member AS T1 INNER JOIN attendance AS T2 ON T1.member_id = T2.link_to_member GROUP BY T1.first_name, T1.last_name HAVING COUNT(T2.link_to_event) > 7;\t----- bird -----\tstudent_club",
    "1382": "SELECT T1.first_name, T1.last_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id INNER JOIN attendance AS T3 ON T1.member_id = T3.link_to_member INNER JOIN event AS T4 ON T3.link_to_event = T4.event_id WHERE T2.major_name = 'Interior Design' AND T4.event_name = 'Community Theater'\t----- bird -----\tstudent_club",
    "1383": "SELECT first_name || ' ' || last_name AS full_name FROM member INNER JOIN zip_code ON member.zip = zip_code.zip_code WHERE zip_code.city = 'Georgetown' AND zip_code.state = 'South Carolina'\t----- bird -----\tstudent_club",
    "1384": "SELECT COUNT(*) FROM income AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.first_name = 'GRANT' AND T2.last_name = 'GILMOUR'\t----- bird -----\tstudent_club",
    "1385": "SELECT M.first_name || ' ' || M.last_name AS full_name FROM member AS M INNER JOIN income AS I ON M.member_id = I.link_to_member WHERE I.amount > 40;\t----- bird -----\tstudent_club",
    "1386": "SELECT SUM(cost) FROM expense WHERE link_to_budget IN (SELECT budget_id FROM budget WHERE link_to_event IN (SELECT event_id FROM event WHERE event_name = 'Yearly Kickoff'))\t----- bird -----\tstudent_club",
    "1387": "SELECT m.first_name, m.last_name FROM member m JOIN budget b ON m.member_id = b.link_to_event JOIN event e ON b.link_to_event = e.event_id WHERE e.event_name = 'Yearly Kickoff';\t----- bird -----\tstudent_club",
    "1388": "SELECT member.first_name || ' ' || member.last_name AS full_name, income.source FROM member INNER JOIN income ON member.member_id = income.link_to_member WHERE income.amount = (SELECT MAX(amount) FROM income)\t----- bird -----\tstudent_club",
    "1389": "SELECT event_name FROM event WHERE event_id = ( SELECT link_to_event FROM budget WHERE spent = ( SELECT MIN(spent) FROM budget ) )\t----- bird -----\tstudent_club",
    "1390": "SELECT (SUM(CASE WHEN T1.event_name = 'Yearly Kickoff' THEN T2.cost ELSE 0 END) / SUM(T2.cost)) * 100 FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event;\t----- bird -----\tstudent_club",
    "1391": "SELECT SUM(CASE WHEN major_name = 'Finance' THEN 1 ELSE 0 END) / SUM(CASE WHEN major_name = 'Physics' THEN 1 ELSE 0 END) FROM major WHERE major_name IN ('Finance', 'Physics')\t----- bird -----\tstudent_club",
    "1392": "SELECT MAX(source) AS TopSource, SUM(amount) AS TotalAmount FROM income WHERE date_received BETWEEN '2019-09-01' AND '2019-09-30'\t----- bird -----\tstudent_club",
    "1393": "SELECT T1.first_name || ' ' || T1.last_name AS full_name, T1.email FROM member AS T1 WHERE T1.position = 'Secretary'\t----- bird -----\tstudent_club",
    "1394": "SELECT COUNT(*) FROM member WHERE link_to_major = (SELECT major_id FROM major WHERE major_name = 'Physics Teaching')\t----- bird -----\tstudent_club",
    "1395": "SELECT COUNT(*) FROM attendance WHERE link_to_event = (SELECT event_id FROM event WHERE event_name = 'Community Theater' AND event_date LIKE '%2019%')\t----- bird -----\tstudent_club",
    "1396": "SELECT COUNT(*) AS num_events_attended, M.major_name FROM attendance AS A INNER JOIN member AS M ON A.link_to_member = M.member_id WHERE M.first_name = 'Luisa' AND M.last_name = 'Guidi'\t----- bird -----\tstudent_club",
    "1397": "SELECT AVG(b.spent) FROM budget AS b INNER JOIN event AS e ON b.link_to_event = e.event_id WHERE b.category = 'Food' AND e.status = 'Closed'\t----- bird -----\tstudent_club",
    "1398": "SELECT event_name FROM event INNER JOIN budget ON event.event_id = budget.link_to_event WHERE category = 'Advertisement' ORDER BY spent DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1399": "SELECT COUNT(*) FROM attendance JOIN event ON attendance.link_to_event = event.event_id JOIN member ON attendance.link_to_member = member.member_id WHERE event.event_name = 'Women\\'s Soccer' AND member.first_name = 'Maya' AND member.last_name = 'Mclean';\t----- bird -----\tstudent_club",
    "1400": "SELECT DIVIDE(SUM(CASE WHEN type = 'Community Service' THEN 1 ELSE 0 END), COUNT(event_id)) * 100 FROM event WHERE event_date BETWEEN '2019-01-01' AND '2019-12-31'\t----- bird -----\tstudent_club",
    "1401": "SELECT cost FROM expense WHERE expense_description = 'Posters' AND link_to_event = (SELECT event_id FROM event WHERE event_name = 'September Speaker')\t----- bird -----\tstudent_club",
    "1402": "SELECT t_shirt_size, COUNT(t_shirt_size) AS size_count FROM member GROUP BY t_shirt_size ORDER BY size_count DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1403": "SELECT event_name FROM event WHERE status = 'Closed' AND event_id IN ( SELECT link_to_event FROM budget WHERE remaining < 0 ORDER BY remaining ASC LIMIT 1 )\t----- bird -----\tstudent_club",
    "1404": "SELECT T2.expense_description, SUM(T1.cost) AS total_value FROM expense AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.event_name = 'October Meeting' AND T1.approved = 'Yes' GROUP BY T1.expense_description;\t----- bird -----\tstudent_club",
    "1405": "SELECT SUM(amount) AS total_budgeted_amount, category FROM budget WHERE link_to_event = (SELECT event_id FROM event WHERE event_name = 'April Speaker') GROUP BY category ORDER BY total_budgeted_amount ASC;\t----- bird -----\tstudent_club",
    "1406": "SELECT MAX(amount) FROM budget WHERE category = 'Food'\t----- bird -----\tstudent_club",
    "1407": "SELECT budget_id, category, amount FROM budget WHERE category = 'Advertisement' ORDER BY amount DESC LIMIT 3;\t----- bird -----\tstudent_club",
    "1408": "SELECT SUM(cost) FROM expense WHERE expense_description = 'Parking'\t----- bird -----\tstudent_club",
    "1409": "SELECT SUM(cost) FROM expense WHERE expense_date = '2019-08-20';\t----- bird -----\tstudent_club",
    "1410": "SELECT T1.first_name || ' ' || T1.last_name AS full_name, SUM(T2.cost) AS total_cost FROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member WHERE T1.member_id = 'rec4BLdZHS2Blfp4v' GROUP BY T1.first_name, T1.last_name;\t----- bird -----\tstudent_club",
    "1411": "SELECT expense_description FROM expense WHERE link_to_member = 'Sacha Harrison'\t----- bird -----\tstudent_club",
    "1412": "SELECT T1.expense_description FROM expense AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.t_shirt_size = 'X-Large'\t----- bird -----\tstudent_club",
    "1413": "SELECT zip FROM member JOIN expense ON member.member_id = expense.link_to_member WHERE cost < 50;\t----- bird -----\tstudent_club",
    "1414": "SELECT major.major_name FROM member JOIN major ON member.link_to_major = major.major_id WHERE member.first_name = 'Phillip' AND member.last_name = 'Cullen'\t----- bird -----\tstudent_club",
    "1415": "SELECT m.position FROM member m JOIN major ma ON m.link_to_major = ma.major_id WHERE ma.major_name = 'Business'\t----- bird -----\tstudent_club",
    "1416": "SELECT COUNT(*) FROM member WHERE link_to_major = (SELECT major_id FROM major WHERE major_name = 'Business') AND t_shirt_size = 'Medium'\t----- bird -----\tstudent_club",
    "1417": "SELECT type FROM event WHERE event_id IN (SELECT link_to_event FROM budget WHERE remaining > 30)\t----- bird -----\tstudent_club",
    "1418": "SELECT T1.event_name, T2.category FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T1.location = 'MU 215'\t----- bird -----\tstudent_club",
    "1419": "SELECT T1.category FROM event AS T1 WHERE T1.event_date = '2020-03-24T12:00:00'\t----- bird -----\tstudent_club",
    "1420": "SELECT major.major_name FROM member JOIN major ON member.link_to_major = major.major_id WHERE member.position = 'Vice President'\t----- bird -----\tstudent_club",
    "1421": "SELECT (COUNT(CASE WHEN T2.major_name = 'Mathematics' THEN 1 END) / COUNT(T1.member_id)) * 100 AS percentage_mathematics_members FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.position = 'Member'\t----- bird -----\tstudent_club",
    "1422": "SELECT DISTINCT T1.type FROM event AS T1 WHERE T1.location = 'MU 215'\t----- bird -----\tstudent_club",
    "1423": "SELECT COUNT(income_id) FROM income WHERE amount = 50\t----- bird -----\tstudent_club",
    "1424": "SELECT COUNT(*) FROM member WHERE position = 'Member' AND t_shirt_size = 'X-Large'\t----- bird -----\tstudent_club",
    "1425": "SELECT COUNT(major_id) FROM major WHERE college = 'College of Agriculture and Applied Sciences' AND department = 'School of Applied Sciences, Technology and Education'\t----- bird -----\tstudent_club",
    "1426": "SELECT T2.last_name, T1.department, T1.college FROM major AS T1 INNER JOIN member AS T2 ON T1.major_id = T2.link_to_major WHERE T1.major_name = 'Environmental Engineering'\t----- bird -----\tstudent_club",
    "1427": "SELECT B.category FROM budget AS B INNER JOIN event AS E ON B.link_to_event = E.event_id WHERE E.location = 'MU 215' AND E.type = 'Guest Speaker' AND B.spent = 0\t----- bird -----\tstudent_club",
    "1428": "SELECT T1.city, T1.state FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.department = 'Electrical and Computer Engineering Department' AND T1.position = 'Member'\t----- bird -----\tstudent_club",
    "1429": "SELECT T1.event_name FROM event AS T1 INNER JOIN attendance AS T2 ON T1.event_id = T2.link_to_event INNER JOIN member AS T3 ON T2.link_to_member = T3.member_id INNER JOIN major AS T4 ON T3.link_to_major = T4.major_id INNER JOIN zip_code AS T5 ON T3.zip = T5.zip_code WHERE T1.type = 'Social' AND T3.position = 'Vice President' AND T5.city = '900 E. Washington St.'\t----- bird -----\tstudent_club",
    "1430": "SELECT T2.last_name, T2.position FROM expense AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T1.expense_description = 'Pizza' AND T1.expense_date = '2019-09-10'\t----- bird -----\tstudent_club",
    "1431": "SELECT M.last_name FROM member AS M INNER JOIN attendance AS A ON M.member_id = A.link_to_member INNER JOIN event AS E ON A.link_to_event = E.event_id WHERE M.position = 'Member' AND E.event_name = 'Women\\'s Soccer'\t----- bird -----\tstudent_club",
    "1432": "SELECT (DIVIDE(COUNT(amount = 50), COUNT(member_id)) * 100) AS percentage FROM income INNER JOIN member ON income.link_to_member = member.member_id WHERE t_shirt_size = 'Medium' AND position = 'Member'\t----- bird -----\tstudent_club",
    "1433": "SELECT DISTINCT state FROM zip_code WHERE type = 'PO Box'\t----- bird -----\tstudent_club",
    "1434": "SELECT zip_code FROM zip_code WHERE type = 'PO Box' AND city = 'San Juan Municipio' AND state = 'Puerto Rico'\t----- bird -----\tstudent_club",
    "1435": "SELECT event_name FROM event WHERE type = 'Game' AND status = 'Closed' AND event_date BETWEEN '2019-03-15' AND '2020-03-20'\t----- bird -----\tstudent_club",
    "1436": "SELECT E.event_id, E.event_name FROM event E INNER JOIN expense EX ON E.event_id = EX.link_to_event INNER JOIN member M ON EX.link_to_member = M.member_id WHERE EX.cost > 50;\t----- bird -----\tstudent_club",
    "1437": "SELECT T1.first_name, T1.last_name, T2.link_to_event FROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member WHERE T2.approved = 'true' AND T2.expense_date BETWEEN '2019-01-10' AND '2019-11-19'\t----- bird -----\tstudent_club",
    "1438": "SELECT T2.college FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.first_name = 'Katy' AND T1.link_to_major = 'rec1N0upiVLy5esTO'\t----- bird -----\tstudent_club",
    "1439": "SELECT phone FROM member JOIN major ON member.link_to_major = major.major_id WHERE major_name = 'Business' AND college = 'College of Agriculture and Applied Sciences';\t----- bird -----\tstudent_club",
    "1440": "SELECT T2.email FROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member WHERE T2.cost > 20 AND T2.expense_date BETWEEN '2019-09-10' AND '2019-11-19'\t----- bird -----\tstudent_club",
    "1441": "SELECT COUNT(*) FROM member WHERE link_to_major IN (SELECT major_id FROM major WHERE major_name = 'education' AND college = 'College of Education & Human Services')\t----- bird -----\tstudent_club",
    "1442": "SELECT (SUM(CASE WHEN remaining < 0 THEN 1 ELSE 0 END) / COUNT(event_id)) * 100 AS percentage FROM budget\t----- bird -----\tstudent_club",
    "1443": "SELECT event_id, location, status FROM event WHERE event_date BETWEEN '2019-11-01' AND '2020-03-31'\t----- bird -----\tstudent_club",
    "1444": "SELECT expense_description FROM expense GROUP BY expense_description HAVING AVG(cost) > 50;\t----- bird -----\tstudent_club",
    "1445": "SELECT first_name || ' ' || last_name AS full_name FROM member WHERE t_shirt_size = 'X-Large'\t----- bird -----\tstudent_club",
    "1446": "SELECT (SUM(type = 'PO Box') / COUNT(zip_code)) * 100 as percentage_of_PO_boxes FROM zip_code\t----- bird -----\tstudent_club",
    "1447": "SELECT event_name, location FROM event INNER JOIN budget ON event.event_id = budget.link_to_event WHERE remaining > 0;\t----- bird -----\tstudent_club",
    "1448": "SELECT event.event_name, event.event_date FROM event INNER JOIN budget ON event.event_id = budget.link_to_event INNER JOIN expense ON budget.budget_id = expense.link_to_budget WHERE expense.expense_description = 'Pizza' AND expense.cost > 50 AND expense.cost < 100;\t----- bird -----\tstudent_club",
    "1449": "SELECT m.first_name || ' ' || m.last_name AS full_name, major_name FROM member m JOIN expense e ON m.member_id = e.link_to_member JOIN budget b ON e.link_to_budget = b.budget_id WHERE e.cost > 100;\t----- bird -----\tstudent_club",
    "1450": "SELECT zip.city, zip.county FROM event JOIN income ON event.event_id = income.link_to_event JOIN zip_code zip ON event.location = zip.zip_code GROUP BY event.event_id HAVING COUNT(income.income_id) > 40;\t----- bird -----\tstudent_club",
    "1451": "SELECT T1.link_to_member, T2.first_name, T2.last_name, SUM(T1.cost) AS total_cost FROM expense AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T1.link_to_member IN (SELECT link_to_member FROM expense GROUP BY link_to_member HAVING COUNT(DISTINCT link_to_event) > 1) GROUP BY T1.link_to_member, T2.first_name, T2.last_name ORDER BY total_cost DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1452": "SELECT DIVIDE(SUM(cost), COUNT(event_id)) AS average_amount_paid FROM expense INNER JOIN member ON expense.link_to_member = member.member_id WHERE member.position != 'Member'\t----- bird -----\tstudent_club",
    "1453": "SELECT event_name FROM event WHERE event_id IN ( SELECT link_to_event FROM budget WHERE category = 'Parking' GROUP BY link_to_event HAVING cost < ( SELECT SUM(cost) / COUNT(event_id) FROM budget WHERE category = 'Parking' ) )\t----- bird -----\tstudent_club",
    "1454": "SELECT (DIVIDE(SUM(cost), COUNT(event_id)) * 100) AS percentage_cost_game_events FROM event LEFT JOIN budget ON event.event_id = budget.link_to_event LEFT JOIN expense ON budget.budget_id = expense.link_to_budget WHERE event.type = 'Game'\t----- bird -----\tstudent_club",
    "1455": "SELECT budget_id FROM budget WHERE budget_id IN ( SELECT link_to_budget FROM expense WHERE expense_description = 'Water, chips, cookies' ) ORDER BY amount DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1456": "SELECT T1.first_name || ' ' || T1.last_name AS full_name FROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member GROUP BY T1.first_name, T1.last_name ORDER BY MAX(T2.cost) DESC LIMIT 5;\t----- bird -----\tstudent_club",
    "1457": "SELECT M.first_name || ' ' || M.last_name AS full_name, M.phone FROM member AS M INNER JOIN expense AS E ON M.member_id = E.link_to_member WHERE E.cost > (SELECT AVG(cost) FROM expense)\t----- bird -----\tstudent_club",
    "1458": "SELECT (SUM(CASE WHEN state = 'Maine' THEN 1 ELSE 0 END) / COUNT(CASE WHEN position = 'Member' THEN 1 ELSE 0 END) - SUM(CASE WHEN state = 'Vermont' THEN 1 ELSE 0 END) / COUNT(CASE WHEN position = 'Member' THEN 1 ELSE 0 END)) * 100 AS percentage_difference FROM member;\t----- bird -----\tstudent_club",
    "1459": "SELECT major_name, department FROM major WHERE major_id = (SELECT link_to_major FROM member WHERE first_name = 'Garrett' AND last_name = 'Gerke')\t----- bird -----\tstudent_club",
    "1460": "SELECT T1.first_name || ' ' || T1.last_name AS full_name, T2.cost FROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member WHERE T2.expense_description = 'Water, Veggie tray, supplies'\t----- bird -----\tstudent_club",
    "1461": "SELECT T1.last_name, T1.phone FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Elementary Education'\t----- bird -----\tstudent_club",
    "1462": "SELECT category, amount FROM budget JOIN event ON budget.link_to_event = event.event_id WHERE event.event_name = 'January Speaker'\t----- bird -----\tstudent_club",
    "1463": "SELECT event_name FROM event JOIN budget ON event.event_id = budget.link_to_event WHERE budget.category = 'Food'\t----- bird -----\tstudent_club",
    "1464": "SELECT M.first_name || ' ' || M.last_name AS full_name, I.amount FROM member AS M INNER JOIN income AS I ON M.member_id = I.link_to_member WHERE I.date_received = '9/9/2019'\t----- bird -----\tstudent_club",
    "1465": "SELECT T1.category FROM budget AS T1 INNER JOIN expense AS T2 ON T1.budget_id = T2.link_to_budget WHERE T2.expense_description = 'Posters'\t----- bird -----\tstudent_club",
    "1466": "SELECT m.first_name || ' ' || m.last_name AS full_name, major.college FROM member m JOIN major ON m.link_to_major = major.major_id WHERE m.position = 'Secretary'\t----- bird -----\tstudent_club",
    "1467": "SELECT SUM(spent) AS total_amount_spent, event_name FROM budget INNER JOIN event ON budget.link_to_event = event.event_id WHERE category = 'Speaker Gifts'\t----- bird -----\tstudent_club",
    "1468": "SELECT T3.city FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T1.first_name = 'Garrett' AND T1.last_name = 'Girke'\t----- bird -----\tstudent_club",
    "1469": "SELECT T1.first_name, T1.last_name, T1.position FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T2.city = 'Lincolnton' AND T2.state = 'North Carolina' AND T2.zip_code = 28092\t----- bird -----\tstudent_club",
    "1470": "SELECT COUNT(GasStationID) FROM gasstations WHERE Country = 'CZE' AND Segment = 'Premium gas'\t----- bird -----\tdebit_card_specializing",
    "1471": "SELECT COUNT(CASE WHEN Currency = 'EUR' THEN 1 END) / COUNT(CASE WHEN Currency = 'CZK' THEN 1 END) AS ratio FROM customers;\t----- bird -----\tdebit_card_specializing",
    "1472": "SELECT CustomerID FROM yearmonth WHERE Date BETWEEN '201201' AND '201212' AND Segment = 'LAM' ORDER BY Consumption LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1473": "SELECT AVG(Consumption) / 12 AS average_monthly_consumption FROM yearmonth WHERE CustomerID IN (SELECT CustomerID FROM customers WHERE Segment = 'SME') AND Date BETWEEN '201301' AND '201312'\t----- bird -----\tdebit_card_specializing",
    "1474": "SELECT customers.CustomerID, SUM(transactions_1k.Amount) AS TotalConsumption FROM customers JOIN transactions_1k ON customers.CustomerID = transactions_1k.CustomerID WHERE customers.Currency = 'CZK' AND transactions_1k.Date BETWEEN '201101' AND '201112' GROUP BY customers.CustomerID ORDER BY TotalConsumption DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1475": "SELECT COUNT(CustomerID) FROM yearmonth WHERE Date BETWEEN '201201' AND '201212' AND Segment = 'KAM' AND Consumption < 30000\t----- bird -----\tdebit_card_specializing",
    "1476": "SELECT SUM(CASE WHEN c.Currency = 'CZK' THEN y.Consumption ELSE 0 END) - SUM(CASE WHEN c.Currency = 'EUR' THEN y.Consumption ELSE 0 END) AS Difference_in_Consumption FROM customers c JOIN yearmonth y ON c.CustomerID = y.CustomerID WHERE y.Date BETWEEN '201201' AND '201212'\t----- bird -----\tdebit_card_specializing",
    "1477": "SELECT strftime('%Y', T1.Date) AS Year, SUM(T1.Amount * T1.Price) AS Total_EUR FROM transactions_1k AS T1 WHERE T1.Currency = 'EUR' GROUP BY strftime('%Y', T1.Date) ORDER BY Total_EUR DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1478": "SELECT Segment FROM yearmonth GROUP BY Segment ORDER BY SUM(Consumption) ASC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1479": "SELECT substr(Date, 1, 4) AS Year, SUM(Consumption) AS Total_Consumption FROM yearmonth JOIN customers ON yearmonth.CustomerID = customers.CustomerID WHERE customers.Currency = 'CZK' GROUP BY substr(Date, 1, 4) ORDER BY Total_Consumption DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1480": "SELECT MAX(Consumption) FROM yearmonth WHERE Date LIKE '2013%' AND CustomerID IN (SELECT CustomerID FROM customers WHERE Segment = 'SME')\t----- bird -----\tdebit_card_specializing",
    "1481": "SELECT (SME.avg_consumption - LAM.avg_consumption) AS diff_SME_LAM, (LAM.avg_consumption - KAM.avg_consumption) AS diff_LAM_KAM, (KAM.avg_consumption - SME.avg_consumption) AS diff_KAM_SME FROM (SELECT AVG(Consumption) AS avg_consumption FROM yearmonth WHERE Date BETWEEN '201301' AND '201312' AND CustomerID = (SELECT CustomerID FROM yearmonth WHERE Date BETWEEN '201301' AND '201312' GROUP BY CustomerID ORDER BY SUM(Consumption) LIMIT 1) AND Segment = 'SME') AS SME, (SELECT AVG(Consumption) AS avg_consumption FROM yearmonth WHERE Date BETWEEN '201301' AND '201312' AND CustomerID = (SELECT CustomerID FROM yearmonth WHERE\t----- bird -----\tdebit_card_specializing",
    "1482": "SELECT Segment, ((SUM(CASE WHEN Date LIKE '2013%' THEN Consumption ELSE 0 END) - SUM(CASE WHEN Date LIKE '2012%' THEN Consumption ELSE 0 END)) / SUM(CASE WHEN Date LIKE '2013%' THEN Consumption ELSE 0 END)) * 100 AS PercentageIncrease FROM yearmonth GROUP BY Segment ORDER BY PercentageIncrease DESC LIMIT 1; SELECT Segment, ((SUM(CASE WHEN Date LIKE '2013%' THEN Consumption ELSE 0 END) - SUM(CASE WHEN Date LIKE '2012%' THEN Consumption ELSE 0 END)) / SUM(CASE WHEN Date LIKE '2013%' THEN Consumption ELSE 0 END)) * 100 AS PercentageIncrease FROM yearmonth GROUP BY Segment ORDER BY PercentageIncrease ASC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1483": "SELECT SUM(Consumption) AS Total_Consumption FROM yearmonth WHERE CustomerID = 6 AND Date >= '201308' AND Date <= '201311'\t----- bird -----\tdebit_card_specializing",
    "1484": "SELECT COUNT(DISTINCT CASE WHEN Country = 'Czech Republic' AND Segment = 'discount' THEN GasStationID END) - COUNT(DISTINCT CASE WHEN Country = 'Slovakia' AND Segment = 'discount' THEN GasStationID END) AS More_Discount_Gas_Stations FROM gasstations WHERE Country IN ('Czech Republic', 'Slovakia')\t----- bird -----\tdebit_card_specializing",
    "1485": "SELECT SUM(CASE WHEN ym.CustomerID = 7 THEN ym.Consumption ELSE 0 END) - SUM(CASE WHEN ym.CustomerID = 5 THEN ym.Consumption ELSE 0 END) FROM yearmonth ym WHERE ym.Date = '201304'\t----- bird -----\tdebit_card_specializing",
    "1486": "SELECT COUNT(*) AS Czech_Koruna_SMEs, (SELECT COUNT(*) FROM customers WHERE Segment = 'SME' AND Currency = 'CZK') - (SELECT COUNT(*) FROM customers WHERE Segment = 'SME' AND Currency = 'EUR') AS More_SMEs FROM customers WHERE Segment = 'SME' AND Currency IN ('CZK', 'EUR')\t----- bird -----\tdebit_card_specializing",
    "1487": "SELECT customers.CustomerID FROM customers JOIN yearmonth ON customers.CustomerID = yearmonth.CustomerID WHERE customers.Currency = 'Euro' AND yearmonth.Date = '201310' ORDER BY yearmonth.Consumption DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1488": "SELECT c.CustomerID, MAX(y.Consumption) as Max_Consumption FROM customers c JOIN yearmonth y ON c.CustomerID = y.CustomerID WHERE c.Segment = 'KAM' GROUP BY c.CustomerID ORDER BY Max_Consumption DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1489": "SELECT SUM(ym.Consumption) FROM yearmonth ym INNER JOIN customers c ON ym.CustomerID = c.CustomerID WHERE c.Segment = 'KAM' AND ym.Date = '201305'\t----- bird -----\tdebit_card_specializing",
    "1490": "SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM customers WHERE Segment = 'LAM') AS Percentage FROM yearmonth WHERE CustomerID IN (SELECT CustomerID FROM customers WHERE Segment = 'LAM') AND Consumption > 46.73;\t----- bird -----\tdebit_card_specializing",
    "1491": "SELECT Country, COUNT(GasStationID) AS Total_Value_For_Money_GasStations FROM gasstations WHERE Segment = 'value for money' GROUP BY Country;\t----- bird -----\tdebit_card_specializing",
    "1492": "SELECT (COUNT(*) * 100.0) / (SELECT COUNT(*) FROM customers WHERE Segment = 'KAM' AND Currency = 'Euro') FROM customers WHERE Segment = 'KAM' AND Currency = 'Euro'\t----- bird -----\tdebit_card_specializing",
    "1493": "SELECT COUNT(DISTINCT CustomerID) * 100.0 / (SELECT COUNT(DISTINCT CustomerID) FROM yearmonth WHERE Date LIKE '201202' AND Consumption > 528.3) FROM yearmonth WHERE Date LIKE '201202' AND Consumption > 528.3\t----- bird -----\tdebit_card_specializing",
    "1494": "SELECT (COUNT(CASE WHEN Segment = 'Premium' THEN 1 ELSE NULL END) / COUNT(*)) * 100 FROM gasstations WHERE Country = 'Slovakia'\t----- bird -----\tdebit_card_specializing",
    "1495": "SELECT T1.CustomerID FROM yearmonth AS T1 WHERE T1.Date = '201309' ORDER BY T1.Consumption DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1496": "SELECT customers.Segment FROM customers INNER JOIN yearmonth ON customers.CustomerID = yearmonth.CustomerID WHERE yearmonth.Date = '201309' GROUP BY customers.Segment ORDER BY SUM(yearmonth.Consumption) LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1497": "SELECT customers.CustomerID, customers.Segment FROM customers INNER JOIN yearmonth ON customers.CustomerID = yearmonth.CustomerID WHERE yearmonth.Date = '201206' ORDER BY yearmonth.Consumption LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1498": "SELECT MAX(Consumption) FROM yearmonth WHERE Date LIKE '2012%'\t----- bird -----\tdebit_card_specializing",
    "1499": "SELECT MAX(SUM(t1.Consumption)/12) FROM yearmonth AS t1 INNER JOIN customers AS t2 ON t1.CustomerID = t2.CustomerID WHERE t2.Currency = 'euro'\t----- bird -----\tdebit_card_specializing",
    "1500": "SELECT P.Description FROM products AS P INNER JOIN \"transactions_1k\" AS T ON P.ProductID = T.ProductID WHERE strftime('%Y%m', T.Date) = '201309'\t----- bird -----\tdebit_card_specializing",
    "1501": "SELECT DISTINCT Country FROM gasstations WHERE GasStationID IN (SELECT GasStationID FROM transactions_1k WHERE Date LIKE '201306%')\t----- bird -----\tdebit_card_specializing",
    "1502": "SELECT ChainID FROM gasstations WHERE GasStationID IN (SELECT GasStationID FROM transactions_1k WHERE Currency = 'Euro')\t----- bird -----\tdebit_card_specializing",
    "1503": "SELECT products.Description FROM transactions_1k INNER JOIN products ON transactions_1k.ProductID = products.ProductID WHERE transactions_1k.Currency = 'euro'\t----- bird -----\tdebit_card_specializing",
    "1504": "SELECT AVG(Price) AS AverageTotalPrice FROM transactions_1k WHERE Date LIKE '2012-01%'\t----- bird -----\tdebit_card_specializing",
    "1505": "SELECT COUNT(*) FROM customers AS c INNER JOIN transactions_1k AS t ON c.CustomerID = t.CustomerID INNER JOIN yearmonth AS y ON c.CustomerID = y.CustomerID WHERE c.Currency = 'euro' AND y.Consumption > 1000\t----- bird -----\tdebit_card_specializing",
    "1506": "SELECT T3.Description FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID INNER JOIN products AS T3 ON T1.ProductID = T3.ProductID WHERE T2.Country = 'CZE'\t----- bird -----\tdebit_card_specializing",
    "1507": "SELECT DISTINCT Time FROM transactions_1k WHERE GasStationID IN (SELECT GasStationID FROM gasstations WHERE ChainID = 11)\t----- bird -----\tdebit_card_specializing",
    "1508": "SELECT COUNT(*) FROM transactions_1k WHERE GasStationID IN (SELECT GasStationID FROM gasstations WHERE Country = 'CZE') AND Price > 1000;\t----- bird -----\tdebit_card_specializing",
    "1509": "SELECT COUNT(*) FROM transactions_1k WHERE GasStationID IN (SELECT GasStationID FROM gasstations WHERE Country = 'CZE') AND Date > '2012-01-01'\t----- bird -----\tdebit_card_specializing",
    "1510": "SELECT AVG(Price) FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T2.Country = 'CZE'\t----- bird -----\tdebit_card_specializing",
    "1511": "SELECT AVG(Price) AS average_total_price FROM transactions_1k WHERE CustomerID IN (SELECT CustomerID FROM customers WHERE Currency = 'Euro')\t----- bird -----\tdebit_card_specializing",
    "1512": "SELECT T1.CustomerID, SUM(T1.Amount * T1.Price) AS TotalPaid FROM transactions_1k AS T1 WHERE T1.Date = '2012-08-25' GROUP BY T1.CustomerID ORDER BY TotalPaid DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1513": "SELECT G.Country FROM gasstations G INNER JOIN transactions_1k T ON G.GasStationID = T.GasStationID WHERE T.Date = '2012-08-25' ORDER BY T.Time LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1514": "SELECT Currency FROM transactions_1k t JOIN customers c ON t.CustomerID = c.CustomerID WHERE t.Time = '16:25:00' AND t.Date = '2012-08-24'\t----- bird -----\tdebit_card_specializing",
    "1515": "SELECT T1.Segment FROM customers AS T1 INNER JOIN \"yearmonth\" AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Date = '2012-08-23' AND T2.time = '21:20:00'\t----- bird -----\tdebit_card_specializing",
    "1516": "SELECT COUNT(*) FROM transactions_1k WHERE Date = '2012-08-26' AND Time < '13:00:00' AND CustomerID IN (SELECT CustomerID FROM customers WHERE Currency = 'EUR')\t----- bird -----\tdebit_card_specializing",
    "1517": "SELECT Segment FROM customers ORDER BY CustomerID LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1518": "SELECT T2.Country FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T1.Date = '2012-08-24' AND T1.Time = '12:42:00'\t----- bird -----\tdebit_card_specializing",
    "1519": "SELECT T1.ProductID FROM transactions_1k AS T1 WHERE T1.Date = '2012-08-23' AND T1.Time = '21:20:00'\t----- bird -----\tdebit_card_specializing",
    "1520": "SELECT SUM(Price) as total_expenses, Date FROM transactions_1k WHERE CustomerID = (SELECT CustomerID FROM transactions_1k WHERE Price = 124.05 AND Date = '2012-08-24') AND Date LIKE '2012-01%' GROUP BY Date\t----- bird -----\tdebit_card_specializing",
    "1521": "SELECT COUNT(*) FROM transactions_1k JOIN gasstations ON transactions_1k.GasStationID = gasstations.GasStationID WHERE Time >= '08:00' AND Time < '09:00' AND Date = '2012-08-26' AND Country = 'CZE'\t----- bird -----\tdebit_card_specializing",
    "1522": "SELECT c.Currency FROM customers c INNER JOIN transactions_1k t ON c.CustomerID = t.CustomerID INNER JOIN yearmonth y ON c.CustomerID = y.CustomerID WHERE t.Amount = 214582.17 AND y.Date LIKE '201306%'\t----- bird -----\tdebit_card_specializing",
    "1523": "SELECT T2.Country FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T1.CardID = 667467\t----- bird -----\tdebit_card_specializing",
    "1524": "SELECT T1.Nationality FROM customers AS T1 INNER JOIN transactions_1k AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Date = '2012-08-24' AND T2.Amount = 548.4\t----- bird -----\tdebit_card_specializing",
    "1525": "SELECT COUNT(DISTINCT CustomerID) * 100.0 / (SELECT COUNT(DISTINCT CustomerID) FROM yearmonth WHERE Date = '2012-08-25' AND Currency = 'EUR') AS percentage FROM yearmonth WHERE Date = '2012-08-25' AND Currency = 'EUR'\t----- bird -----\tdebit_card_specializing",
    "1526": "SELECT ((T1.Consumption - T2.Consumption) / T1.Consumption) AS Consumption_Decrease_Rate FROM yearmonth AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Date = '2012-08-25' AND T2.Date = '2013-08-25'\t----- bird -----\tdebit_card_specializing",
    "1527": "SELECT GasStationID, SUM(Amount*Price) AS Revenue FROM transactions_1k GROUP BY GasStationID ORDER BY Revenue DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1528": "SELECT (SUM(CASE WHEN Segment = 'premium' THEN 1 ELSE 0 END) * 100.0 / COUNT(*)) AS percentage_premium FROM customers WHERE Currency = 'SVK';\t----- bird -----\tdebit_card_specializing",
    "1529": "SELECT SUM(Price) FROM transactions_1k WHERE CustomerID = 38508; SELECT SUM(Price) FROM transactions_1k WHERE CustomerID = 38508 AND Date LIKE '201201%';\t----- bird -----\tdebit_card_specializing",
    "1530": "SELECT Description FROM products INNER JOIN transactions_1k ON products.ProductID = transactions_1k.ProductID GROUP BY products.Description ORDER BY SUM(transactions_1k.Amount) DESC LIMIT 5\t----- bird -----\tdebit_card_specializing",
    "1531": "SELECT T1.CustomerID, SUM(T1.Price) AS TotalSpent, AVG(T1.Price / T1.Amount) AS AvgPricePerItem, T2.Currency FROM transactions_1k AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID GROUP BY T1.CustomerID ORDER BY TotalSpent DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1532": "SELECT Country FROM gasstations WHERE GasStationID = (SELECT GasStationID FROM transactions_1k WHERE ProductID = 2 ORDER BY Price DESC LIMIT 1)\t----- bird -----\tdebit_card_specializing",
    "1533": "SELECT T1.CustomerID, T2.Consumption FROM transactions_1k AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.ProductID = 5 AND T1.Price / T1.Amount > 29.00 AND T2.Date LIKE '%201208%'\t----- bird -----\tdebit_card_specializing"
}