{
    "0": "SELECT MAX(`Percent (%) Eligible Free (K-12)`) FROM frpm WHERE `County Name` = 'Alameda County'\t----- bird -----\tcalifornia_schools",
    "1": "SELECT TOP 3 `Percent (%) Eligible Free (Ages 5-17)` FROM frpm WHERE `District Type` = 'Continuation' ORDER BY (`Free Meal Count (Ages 5-17)` / `Enrollment (Ages 5-17)`) ASC;\t----- bird -----\tcalifornia_schools",
    "2": "SELECT T1.Zip FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.County = 'Fresno' AND T2.`Charter School (Y/N)` = 1\t----- bird -----\tcalifornia_schools",
    "3": "SELECT MailStreet, MailCity, MailZip, MailState FROM schools WHERE CDSCode = ( SELECT CDSCode FROM frpm WHERE `FRPM Count (K-12)` = ( SELECT MAX(`FRPM Count (K-12)`) FROM frpm ) )\t----- bird -----\tcalifornia_schools",
    "4": "SELECT Phone FROM schools WHERE Charter = 1 AND OpenDate > '2000-01-01'\t----- bird -----\tcalifornia_schools",
    "5": "SELECT COUNT(DISTINCT T1.CDSCode) FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T2.AvgScrMath < 400 AND T1.Virtual = 'F'\t----- bird -----\tcalifornia_schools",
    "6": "SELECT schools.School FROM satscores INNER JOIN schools ON satscores.cds = schools.CDSCode WHERE satscores.NumTstTakr > 500 AND schools.Magnet = 1;\t----- bird -----\tcalifornia_schools",
    "7": "SELECT schools.Phone FROM schools JOIN satscores ON schools.CDSCode = satscores.cds WHERE satscores.NumGE1500 = (SELECT MAX(NumGE1500) FROM satscores)\t----- bird -----\tcalifornia_schools",
    "8": "SELECT T2.NumTstTakr FROM frpm AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T1.`FRPM Count (K-12)` = (SELECT MAX(`FRPM Count (K-12)`) FROM frpm);\t----- bird -----\tcalifornia_schools",
    "9": "SELECT COUNT(T1.CDSCode) FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T1.AvgScrMath > 560 AND T2.FundingType = 'Charter'\t----- bird -----\tcalifornia_schools",
    "10": "SELECT T1.`FRPM Count (Ages 5-17)` FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode INNER JOIN satscores AS T3 ON T1.CDSCode = T3.cds WHERE T3.AvgScrRead = (SELECT MAX(AvgScrRead) FROM satscores)\t----- bird -----\tcalifornia_schools",
    "11": "SELECT T1.CDSCode FROM frpm AS T1 WHERE (T1.`Enrollment (K-12)` + T1.`Enrollment (Ages 5-17)`) > 500\t----- bird -----\tcalifornia_schools",
    "12": "SELECT MAX(s.FREE_MEAL_COUNT_AGE_5_17 / s.ENROLLMENT_AGE_5_17) FROM satscores AS s WHERE s.NumGE1500 / s.NumTstTakr > 0.3\t----- bird -----\tcalifornia_schools",
    "13": "SELECT T3.Phone FROM schools AS T3 INNER JOIN satscores AS T2 ON T3.CDSCode = T2.cds ORDER BY CAST(T2.NumGE1500 AS FLOAT) / T2.NumTstTakr DESC LIMIT 3\t----- bird -----\tcalifornia_schools",
    "14": "SELECT NCESchool FROM schools ORDER BY (SELECT SUM(`Enrollment (Ages 5-17)`) FROM frpm WHERE frpm.CDSCode = schools.CDSCode) DESC LIMIT 5\t----- bird -----\tcalifornia_schools",
    "15": "SELECT T.dname, AVG(S.AvgScrRead) AS avg_reading_score FROM satscores AS S INNER JOIN schools AS SCH ON S.cds = SCH.CDSCode WHERE SCH.StatusType = 'Active' GROUP BY S.dname ORDER BY avg_reading_score DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "16": "SELECT COUNT(s.CDSCode) FROM schools AS s INNER JOIN satscores AS ss ON s.CDSCode = ss.cds WHERE s.County = 'Alameda' AND ss.NumTstTakr < 100;\t----- bird -----\tcalifornia_schools",
    "17": "SELECT T2.CharterNum FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T1.AvgScrWrite = 499\t----- bird -----\tcalifornia_schools",
    "18": "SELECT COUNT(schools.School) FROM schools JOIN frpm ON schools.CDSCode = frpm.CDSCode JOIN satscores ON schools.CDSCode = satscores.cds WHERE frpm.CountyName = 'Contra Costa' AND frpm.`Charter Funding Type` = 'Directly Funded' AND satscores.NumTstTakr <= 250;\t----- bird -----\tcalifornia_schools",
    "19": "SELECT T2.Phone FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T1.AvgScrMath = (SELECT MAX(AvgScrMath) FROM satscores)\t----- bird -----\tcalifornia_schools",
    "20": "SELECT COUNT(*) FROM schools WHERE County = 'Amador' AND `Low Grade` = '9' AND `High Grade` = '12'\t----- bird -----\tcalifornia_schools",
    "21": "SELECT COUNT(s.CDSCode) FROM schools AS s INNER JOIN frpm AS f ON s.CDSCode = f.CDSCode WHERE s.County = 'Los Angeles' AND f.`Free Meal Count (K-12)` > 500 AND f.`FRPM Count (K-12)` < 700;\t----- bird -----\tcalifornia_schools",
    "22": "SELECT satscores.sname FROM satscores INNER JOIN schools ON satscores.cds = schools.CDSCode WHERE schools.County = 'Contra Costa' ORDER BY satscores.NumTstTakr DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "23": "SELECT s.School, s.Street FROM frpm f INNER JOIN schools s ON f.CDSCode = s.CDSCode WHERE ABS(f.`Enrollment (K-12)` - f.`Enrollment (Ages 5-17)`) > 30;\t----- bird -----\tcalifornia_schools",
    "24": "SELECT s.School FROM frpm f INNER JOIN satscores s ON f.CDSCode = s.cds WHERE f.`Percent (%) Eligible Free (K-12)` > 0.1 AND s.NumGE1500 > 0;\t----- bird -----\tcalifornia_schools",
    "25": "SELECT s.School, s.FundingType FROM schools s INNER JOIN satscores ss ON s.CDSCode = ss.cds WHERE s.County = 'Riverside' GROUP BY s.School HAVING AVG(ss.AvgScrMath) > 400;\t----- bird -----\tcalifornia_schools",
    "26": "SELECT schools.School, schools.Street || ', ' || schools.City || ', ' || schools.State || ', ' || schools.Zip AS Full_Address FROM schools INNER JOIN frpm ON schools.CDSCode = frpm.CDSCode WHERE frpm.`County Name` = 'Monterey' AND frpm.`School Type` = 'High School' AND frpm.`FRPM Count (Ages 5-17)` > 800;\t----- bird -----\tcalifornia_schools",
    "27": "SELECT T2.`School Name`, T1.AvgScrWrite, T3.Phone FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode LEFT JOIN schools AS T3 ON T1.cds = T3.CDSCode WHERE T2.OpenDate > '1991-01-01' OR T2.ClosedDate < '2000-01-01' GROUP BY T2.`School Name`, T1.AvgScrWrite, T3.Phone\t----- bird -----\tcalifornia_schools",
    "28": "SELECT s.School, s.DOCType FROM frpm AS f INNER JOIN schools AS s ON f.CDSCode = s.CDSCode WHERE f.`Funding Type` = 'Locally Funded' AND (f.`Enrollment (K-12)` - f.`Enrollment (Ages 5-17)`) > (SELECT AVG(f.`Enrollment (K-12)` - f.`Enrollment (Ages 5-17)`) FROM frpm AS f)\t----- bird -----\tcalifornia_schools",
    "29": "SELECT MIN(OpenDate) FROM schools WHERE StatusType = 'Active' AND GSoffered LIKE '%K-12%' ORDER BY enroll12 DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "30": "SELECT City FROM schools ORDER BY enroll12 LIMIT 5;\t----- bird -----\tcalifornia_schools",
    "31": "SELECT (`Free Meal Count (K-12)` / `Enrollment (K-12)`) AS eligible_free_rate FROM frpm WHERE `Educational Option Type` = 'K-12' ORDER BY `Enrollment (K-12)` DESC LIMIT 10, 2\t----- bird -----\tcalifornia_schools",
    "32": "SELECT TOP 5 schools.CDSCode, schools.`School Name`, (schools.`FRPM Count (K-12)` / schools.`Enrollment (K-12)`) AS `Eligible Free or Reduced Price Meal Rate` FROM schools JOIN frpm ON schools.CDSCode = frpm.CDSCode WHERE schools.`Charter School Number` = 66 ORDER BY schools.`FRPM Count (K-12)` DESC LIMIT 5;\t----- bird -----\tcalifornia_schools",
    "33": "SELECT T1.`School Name`, T2.Website FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.`Free Meal Count (Ages 5-17)` >= 1900 AND T1.`Free Meal Count (Ages 5-17)` <= 2000;\t----- bird -----\tcalifornia_schools",
    "34": "SELECT `Free Meal Count (Ages 5-17)` / `Enrollment (Ages 5-17)` AS Free_Rate FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.AdmFName1 = 'Kacey' AND T2.AdmLName1 = 'Gibson'\t----- bird -----\tcalifornia_schools",
    "35": "SELECT T.AdmEmail1 FROM schools AS T INNER JOIN frpm AS T2 ON T.CDSCode = T2.CDSCode WHERE T2.`Charter School (Y/N)` = 1 ORDER BY T2.`Enrollment (K-12)` LIMIT 1\t----- bird -----\tcalifornia_schools",
    "36": "SELECT T3.AdmFName1 || ' ' || T3.AdmLName1 AS Full_Name FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds INNER JOIN schools AS T3 ON T1.CDSCode = T3.CDSCode WHERE T2.NumGE1500 = (SELECT MAX(NumGE1500) FROM satscores)\t----- bird -----\tcalifornia_schools",
    "37": "SELECT T3.Street, T3.City, T3.Zip, T3.State FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode INNER JOIN schools AS T3 ON T1.cds = T3.CDSCode WHERE T1.NumGE1500 / T1.NumTstTakr = (SELECT MIN(T4.NumGE1500 / T4.NumTstTakr) FROM satscores AS T4)\t----- bird -----\tcalifornia_schools",
    "38": "SELECT schools.Website FROM schools INNER JOIN satscores ON schools.CDSCode = satscores.cds WHERE schools.County = 'Los Angeles' AND satscores.NumTstTakr BETWEEN 2000 AND 3000;\t----- bird -----\tcalifornia_schools",
    "39": "SELECT AVG(NumTstTakr) FROM satscores JOIN schools ON satscores.cds = schools.CDSCode WHERE schools.County = 'Fresno' AND schools.OpenDate BETWEEN '1980-01-01' AND '1980-12-31'\t----- bird -----\tcalifornia_schools",
    "40": "SELECT T3.Phone FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T2.District = 'Fresno Unified' ORDER BY T1.AvgScrRead ASC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "41": "SELECT satscores.sname, satscores.AvgScrRead FROM satscores INNER JOIN schools ON satscores.cds = schools.CDSCode WHERE schools.Virtual = 'F' ORDER BY satscores.AvgScrRead DESC LIMIT 5;\t----- bird -----\tcalifornia_schools",
    "42": "SELECT s.EdOpsName FROM satscores AS s INNER JOIN schools AS sc ON s.cds = sc.CDSCode WHERE s.AvgScrMath = (SELECT MAX(AvgScrMath) FROM satscores);\t----- bird -----\tcalifornia_schools",
    "43": "SELECT AVG(s.AvgScrMath) AS AverageMathScore, s.cname AS County FROM satscores s WHERE s.AvgScrMath + s.AvgScrRead + s.AvgScrWrite = ( SELECT MIN(s1.AvgScrMath + s1.AvgScrRead + s1.AvgScrWrite) FROM satscores s1 )\t----- bird -----\tcalifornia_schools",
    "44": "SELECT s.City, AVG(satscores.AvgScrWrite) FROM schools s INNER JOIN satscores ON s.CDSCode = satscores.cds WHERE satscores.NumTstTakr = (SELECT MAX(NumTstTakr) FROM satscores WHERE NumGE1500 >= 1500)\t----- bird -----\tcalifornia_schools",
    "45": "SELECT T1.`School Name`, AVG(T2.AvgScrWrite) AS AverageWritingScore FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T1.AdmFName1 = 'Ricci' AND T1.AdmLName1 = 'Ulrich' GROUP BY T1.`School Name`\t----- bird -----\tcalifornia_schools",
    "46": "SELECT T1.State, SUM(T2.enroll12) FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T1.DOC = 31 GROUP BY T1.State ORDER BY SUM(T2.enroll12) DESC;\t----- bird -----\tcalifornia_schools",
    "47": "SELECT COUNT(*) / 12 AS MonthlyAverage FROM schools WHERE County = 'Alameda' AND DOC = '52' AND STRFTIME('%Y', OpenDate) = '1980'\t----- bird -----\tcalifornia_schools",
    "48": "SELECT COUNT(*) FROM schools WHERE DOC = '54' AND County = 'Orange County' / COUNT(*) FROM schools WHERE DOC = '52' AND County = 'Orange County'\t----- bird -----\tcalifornia_schools",
    "49": "SELECT T1.County, T2.School, T2.ClosedDate FROM schools AS T2 INNER JOIN frpm AS T1 ON T1.CDSCode = T2.CDSCode WHERE T2.StatusType = 'Closed' GROUP BY T1.County ORDER BY COUNT(T2.School) DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "50": "SELECT T1.`School Name`, T2.Street FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode ORDER BY T1.AvgScrMath DESC LIMIT 1 OFFSET 5;\t----- bird -----\tcalifornia_schools",
    "51": "SELECT T2.MailStreet, T2.`School Name` FROM `satscores` AS T1 INNER JOIN `schools` AS T2 ON T2.CDSCode = T1.cds WHERE T1.AvgScrRead = (SELECT MIN(AvgScrRead) FROM `satscores`)\t----- bird -----\tcalifornia_schools",
    "52": "SELECT COUNT(*) FROM satscores AS S INNER JOIN schools AS SCH ON S.cds = SCH.CDSCode WHERE (S.AvgScrRead + S.AvgScrMath + S.AvgScrWrite) >= 1500 AND SCH.MailCity = 'Lakeport'\t----- bird -----\tcalifornia_schools",
    "53": "SELECT SUM(NumTstTakr) FROM satscores INNER JOIN schools ON satscores.cds = schools.CDSCode WHERE schools.MailCity = 'Fresno'\t----- bird -----\tcalifornia_schools",
    "54": "SELECT T1.`School Name`, T1.`MailZip` FROM schools AS T1 WHERE T1.AdmFName1 = 'Avetik' AND T1.AdmLName1 = 'Atoian'\t----- bird -----\tcalifornia_schools",
    "55": "SELECT COUNT(CASE WHEN County = 'Colusa' THEN 1 END) * 1.0 / COUNT(CASE WHEN County = 'Humboldt' THEN 1 END) FROM schools WHERE MailState = 'CA';\t----- bird -----\tcalifornia_schools",
    "56": "SELECT COUNT(*) FROM schools WHERE MailState = 'CA' AND StatusType = 'Active' AND County = 'San Joaquin'\t----- bird -----\tcalifornia_schools",
    "57": "SELECT T3.Phone, T3.Ext FROM ( SELECT T1.AvgScrWrite, T2.Phone, T2.Ext, ROW_NUMBER() OVER (ORDER BY T1.AvgScrWrite DESC) AS rn FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode ) AS T3 WHERE T3.rn = 333;\t----- bird -----\tcalifornia_schools",
    "58": "SELECT T1.Phone, T1.Ext, T1.School FROM schools AS T1 WHERE T1.Zip = '95203-3704'\t----- bird -----\tcalifornia_schools",
    "59": "SELECT T3.Website FROM schools AS T3 INNER JOIN satscores AS T4 ON T3.CDSCode = T4.cds WHERE T3.AdmFName1 = 'Mike' AND T3.AdmLName1 = 'Larson' OR T3.AdmFName1 = 'Dante' AND T3.AdmLName1 = 'Alvarez'\t----- bird -----\tcalifornia_schools",
    "60": "SELECT Website FROM schools WHERE Charter = 1 AND Virtual = 'P' AND County = 'San Joaquin'\t----- bird -----\tcalifornia_schools",
    "61": "SELECT COUNT(*) FROM schools WHERE Charter = 1 AND City = 'Hickman' AND DOC = '52'\t----- bird -----\tcalifornia_schools",
    "62": "SELECT COUNT(DISTINCT T1.CDSCode) FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.County = 'Los Angeles' AND T1.Charter = 0 AND T2.`Percent (%) Eligible Free (K-12)` < 0.18\t----- bird -----\tcalifornia_schools",
    "63": "SELECT T3.AdmFName1, T3.AdmLName1, T3.AdmFName2, T3.AdmLName2, T3.AdmFName3, T3.AdmLName3, T2.School, T2.City FROM schools AS T2 INNER JOIN frpm AS T1 ON T1.CDSCode = T2.CDSCode WHERE T2.Charter = 1 AND T2.CharterNum = '00D2'\t----- bird -----\tcalifornia_schools",
    "64": "SELECT COUNT(*) FROM schools WHERE MailCity = 'Hickman' AND CharterNum = '00D4'\t----- bird -----\tcalifornia_schools",
    "65": "SELECT (CAST(COUNT(CASE WHEN s.FundingType = 'Locally Funded' THEN 1 END) AS REAL) / COUNT(*)) * 100 FROM schools s WHERE s.County = 'Santa Clara County'\t----- bird -----\tcalifornia_schools",
    "66": "SELECT COUNT(*) FROM schools WHERE OpenDate BETWEEN '2000-01-01' AND '2005-12-31' AND County = 'Stanislaus' AND FundingType = 'Directly Funded'\t----- bird -----\tcalifornia_schools",
    "67": "SELECT SUM(Enrollment) FROM frpm WHERE `District Type` = 'Community College District' AND `ClosedDate` = '1989' AND City = 'San Francisco'\t----- bird -----\tcalifornia_schools",
    "68": "SELECT County FROM schools WHERE ClosedDate BETWEEN '1980-01-01' AND '1989-12-31' AND SOC = '11' GROUP BY County ORDER BY COUNT(*) DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "69": "SELECT schools.NCESDist FROM schools WHERE schools.SOC = '31'\t----- bird -----\tcalifornia_schools",
    "70": "SELECT COUNT(*) FROM schools WHERE County = 'Alpine' AND StatusType IN ('Active', 'Closed') AND School = 'District Community Day School'\t----- bird -----\tcalifornia_schools",
    "71": "SELECT DISTINCT District Code FROM frpm WHERE `School Code` IN (SELECT CDSCode FROM schools WHERE City = 'Fresno' AND Magnet = 0)\t----- bird -----\tcalifornia_schools",
    "72": "SELECT SUM(`Enrollment (Ages 5-17)`) FROM frpm WHERE `School Name` = 'State Special School' AND `District Name` = 'Fremont' AND `Academic Year` = '2014-2015' AND EdOpsCode = 'SSS'\t----- bird -----\tcalifornia_schools",
    "73": "SELECT `FRPM Count (Ages 5-17)` FROM frpm WHERE `School Name` = 'Youth Authority School' AND `MailStreet` = 'PO Box 1040'\t----- bird -----\tcalifornia_schools",
    "74": "SELECT MIN(`Low Grade`) FROM frpm WHERE `District Type` = 'SPECON' AND NCESDist = '613360'\t----- bird -----\tcalifornia_schools",
    "75": "SELECT T1.`School Name`, T1.`Educational Option Type` FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.`NSLP Provision Status` = 'Breakfast Provision 2' AND T1.`County Code` = '37'\t----- bird -----\tcalifornia_schools",
    "76": "SELECT City FROM schools WHERE EILCode = 'HS' AND CharterNum = 2 AND `Low Grade` = '9' AND `High Grade` = '12' AND County = 'Merced'\t----- bird -----\tcalifornia_schools",
    "77": "SELECT schools.`School`, frpm.`Percent (%) Eligible FRPM (Ages 5-17)` FROM schools JOIN frpm ON schools.`CDSCode` = frpm.`CDSCode` WHERE schools.`County` = 'Los Angeles' AND schools.`GSserved` = 'K-9'\t----- bird -----\tcalifornia_schools",
    "78": "SELECT schools.`GSserved`, COUNT(schools.`GSserved`) AS num_grade_spans FROM schools WHERE schools.City = 'Adelanto' GROUP BY schools.`GSserved` ORDER BY num_grade_spans DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "79": "SELECT County, COUNT(*) AS NumSchools FROM schools WHERE City IN ('San Diego', 'Santa Barbara') AND Virtual = 'F' GROUP BY County ORDER BY NumSchools DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "80": "SELECT T1.`School Name`, T1.Latitude, T1.`School Type` FROM schools AS T1 WHERE T1.Latitude = (SELECT MAX(Latitude) FROM schools)\t----- bird -----\tcalifornia_schools",
    "81": "SELECT City, `Low Grade`, `School Name` FROM schools WHERE State = 'CA' ORDER BY Latitude ASC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "82": "SELECT T1.`Low Grade`, T1.`High Grade` FROM schools AS T1 WHERE T1.Longitude = (SELECT MAX(Longitude) FROM schools)\t----- bird -----\tcalifornia_schools",
    "83": "SELECT COUNT(s.CDSCode) FROM schools AS s INNER JOIN satscores AS ss ON s.CDSCode = ss.cds WHERE s.GSserved = 'K-8' AND s.Magnet = 1 AND s.EdOpsCode = 'Multiple Provision Types' SELECT City, COUNT(s.CDSCode) FROM schools AS s INNER JOIN satscores AS ss ON s.CDSCode = ss.cds WHERE s.GSserved = 'K-8' GROUP BY City\t----- bird -----\tcalifornia_schools",
    "84": "SELECT AdmFName1, District FROM schools GROUP BY AdmFName1, District ORDER BY COUNT(*) DESC LIMIT 2;\t----- bird -----\tcalifornia_schools",
    "85": "SELECT frpm.`Percent (%) Eligible Free (K-12)`, schools.`District Code` FROM frpm INNER JOIN schools ON frpm.CDSCode = schools.CDSCode WHERE schools.AdmFName1 = 'Alusine'\t----- bird -----\tcalifornia_schools",
    "86": "SELECT T1.AdmLName1, T2.District, T2.County, T2.School FROM schools AS T2 INNER JOIN frpm AS T3 ON T2.CDSCode = T3.CDSCode INNER JOIN satscores AS T1 ON T2.CDSCode = T1.cds WHERE T2.CharterNum = '40'\t----- bird -----\tcalifornia_schools",
    "87": "SELECT T1.AdmEmail1 FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.County = 'San Bernardino' AND T1.District = 'San Bernardino City Unified' AND T1.OpenDate BETWEEN '2009-01-01' AND '2010-12-31' AND (T2.`School Type` = 'Intermediate/Middle Schools' OR T2.`School Type` = 'Unified Schools') AND (T2.SOC = 62 OR T2.DOC = 54)\t----- bird -----\tcalifornia_schools",
    "88": "SELECT T3.AdmEmail1, T3.School FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode INNER JOIN schools AS T3 ON T2.CDSCode = T3.CDSCode WHERE T1.NumGE1500 = (SELECT MAX(NumGE1500) FROM satscores) LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "89": "SELECT COUNT(T1.account_id) FROM account AS T1 INNER JOIN disp AS T2 ON T1.account_id = T2.account_id INNER JOIN client AS T3 ON T2.client_id = T3.client_id INNER JOIN district AS T4 ON T3.district_id = T4.district_id WHERE T2.type = 'POPLATEK PO OBRATU' AND T4.A3 = 'East Bohemia'\t----- bird -----\tfinancial",
    "90": "SELECT COUNT(*) FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.A3 = 'Prague'\t----- bird -----\tfinancial",
    "91": "SELECT IIF(AVG(A12) > AVG(A13), '1995', '1996') as higher_unemployment_ratio_year FROM district\t----- bird -----\tfinancial",
    "92": "SELECT COUNT(district_id) FROM district WHERE district_id IN (SELECT district_id FROM client WHERE gender = 'F' GROUP BY district_id HAVING AVG(A11) > 6000 AND AVG(A11) < 10000)\t----- bird -----\tfinancial",
    "93": "SELECT COUNT(T1.client_id) FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.gender = 'M' AND T2.A3 = 'North Bohemia' AND T2.A11 > 8000\t----- bird -----\tfinancial",
    "94": "SELECT T1.account_id FROM account AS T1 INNER JOIN disp AS T2 ON T1.account_id = T2.account_id INNER JOIN client AS T3 ON T2.client_id = T3.client_id WHERE T3.gender = 'F' GROUP BY T1.account_id ORDER BY T3.birth_date ASC, T1.account_id DESC LIMIT 1\t----- bird -----\tfinancial",
    "95": "SELECT account.account_id FROM account JOIN disp ON account.account_id = disp.account_id JOIN client ON disp.client_id = client.client_id GROUP BY account.account_id ORDER BY client.birth_date DESC, AVG(client.A11) DESC LIMIT 1\t----- bird -----\tfinancial",
    "96": "SELECT COUNT(T1.client_id) FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN account AS T3 ON T2.account_id = T3.account_id WHERE T3.frequency = 'POPLATEK TYDNE' AND T1.gender = 'Owner';\t----- bird -----\tfinancial",
    "97": "SELECT T3.client_id FROM disp AS T1 INNER JOIN card AS T2 ON T1.disp_id = T2.disp_id INNER JOIN client AS T3 ON T1.client_id = T3.client_id WHERE T2.type = 'Disponent' AND T2.issued = 'POPLATEK PO OBRATU'\t----- bird -----\tfinancial",
    "98": "SELECT T1.account_id FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T1.date >= '1997-01-01' AND T1.date <= '1997-12-31' AND T1.amount = (SELECT MIN(amount) FROM loan WHERE date >= '1997-01-01' AND date <= '1997-12-31') AND T2.frequency = 'POPLATEK TYDNE';\t----- bird -----\tfinancial",
    "99": "SELECT T1.account_id, T1.amount FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T1.duration > 12 AND T2.date BETWEEN '1993-01-01' AND '1993-12-31' ORDER BY T1.amount DESC LIMIT 1;\t----- bird -----\tfinancial",
    "100": "SELECT COUNT(DISTINCT T1.client_id) FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN account AS T3 ON T2.account_id = T3.account_id INNER JOIN district AS T4 ON T1.district_id = T4.district_id WHERE T1.gender = 'F' AND T1.birth_date < '1950-01-01' AND T4.A2 = 'Slokolov'\t----- bird -----\tfinancial",
    "101": "SELECT T1.account_id FROM account AS T1 WHERE T1.date = (SELECT MIN(date) FROM account WHERE date LIKE '1995%')\t----- bird -----\tfinancial",
    "102": "SELECT account_id FROM account WHERE date < '1997-01-01' AND account_id IN ( SELECT account_id FROM trans WHERE amount > 3000 )\t----- bird -----\tfinancial",
    "103": "SELECT client_id FROM card WHERE issued = '1994-03-03'\t----- bird -----\tfinancial",
    "104": "SELECT t1.date FROM account AS t1 INNER JOIN trans AS t2 ON t1.account_id = t2.account_id WHERE t2.amount = 840 AND t2.date = '1998-10-14'\t----- bird -----\tfinancial",
    "105": "SELECT T1.district_id FROM account AS T1 INNER JOIN loan AS T2 ON T1.account_id = T2.account_id WHERE T2.date = '1994-08-25'\t----- bird -----\tfinancial",
    "106": "SELECT MAX(amount) FROM trans WHERE account_id IN (SELECT account_id FROM disp WHERE card_id IN (SELECT card_id FROM card WHERE issued = '1996-10-21'))\t----- bird -----\tfinancial",
    "107": "SELECT T2.gender FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN account AS T3 ON T2.account_id = T3.account_id INNER JOIN district AS T4 ON T1.district_id = T4.district_id GROUP BY T1.client_id HAVING T1.birth_date = (SELECT MIN(birth_date) FROM client) AND T4.A11 = (SELECT MAX(A11) FROM district)\t----- bird -----\tfinancial",
    "108": "SELECT T2.first_name, T2.last_name, T3.amount FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN account AS T4 ON T2.account_id = T4.account_id INNER JOIN loan AS T5 ON T4.account_id = T5.account_id INNER JOIN trans AS T3 ON T4.account_id = T3.account_id WHERE T5.amount = (SELECT MAX(amount) FROM loan) AND T3.date = (SELECT MIN(date) FROM trans WHERE account_id = T4.account_id)\t----- bird -----\tfinancial",
    "109": "SELECT COUNT(T1.client_id) FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN account AS T3 ON T2.account_id = T3.account_id INNER JOIN district AS T4 ON T3.district_id = T4.district_id WHERE T4.A2 = 'Jesenik' AND T1.gender = 'F'\t----- bird -----\tfinancial",
    "110": "SELECT T2.disp_id FROM trans AS T1 INNER JOIN disp AS T2 ON T1.account_id = T2.account_id WHERE T1.amount = 5100 AND T1.date = '1998-09-02'\t----- bird -----\tfinancial",
    "111": "SELECT COUNT(*) FROM account WHERE district_id IN (SELECT district_id FROM district WHERE A2 = 'Litomerice') AND date >= '1996-01-01' AND date <= '1996-12-31';\t----- bird -----\tfinancial",
    "112": "SELECT DISTINCT district.A2 FROM client INNER JOIN disp ON client.client_id = disp.client_id INNER JOIN account ON disp.account_id = account.account_id INNER JOIN district ON client.district_id = district.district_id WHERE client.gender = 'F' AND client.birth_date = '1976-01-29'\t----- bird -----\tfinancial",
    "113": "SELECT birth_date FROM client WHERE client_id IN (SELECT client_id FROM disp WHERE account_id IN (SELECT account_id FROM loan WHERE amount = 98832 AND date = '1996-01-03'))\t----- bird -----\tfinancial",
    "114": "SELECT A.account_id FROM account AS A INNER JOIN client AS C ON A.client_id = C.client_id INNER JOIN district AS D ON C.district_id = D.district_id WHERE D.A3 = 'Prague' ORDER BY A.date LIMIT 1\t----- bird -----\tfinancial",
    "115": "SELECT CAST(SUM(IIF(c.gender = 'M', 1, 0)) AS REAL) * 100 / COUNT(c.client_id) FROM client c JOIN district d ON c.district_id = d.district_id WHERE d.A3 = 'south Bohemia' AND d.A4 = (SELECT MAX(A4) FROM district WHERE A3 = 'south Bohemia')\t----- bird -----\tfinancial",
    "116": "SELECT 100.0 * (T2.balance - T1.balance) / T1.balance FROM trans AS T1 INNER JOIN trans AS T2 ON T1.account_id = T2.account_id WHERE T1.date = '1993-03-22' AND T2.date = '1998-12-27' AND T1.trans_id = (SELECT MIN(trans_id) FROM trans WHERE date = '1993-07-05' AND type = 'Loan')\t----- bird -----\tfinancial",
    "117": "SELECT SUM(CASE WHEN status = 'A' THEN amount ELSE 0 END) * 100 / SUM(amount) FROM loan\t----- bird -----\tfinancial",
    "118": "SELECT (CAST(SUM(CASE WHEN T1.status = 'C' THEN 1 ELSE 0 END) AS REAL) / SUM(T2.amount) * 100) FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T1.amount < 100000\t----- bird -----\tfinancial",
    "119": "SELECT T1.account_id, T2.A2 AS district_name, T2.A3 AS district_region FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id INNER JOIN trans AS T3 ON T1.account_id = T3.account_id INNER JOIN card AS T4 ON T1.account_id = T4.disp_id WHERE T1.date = '1993' AND T4.issued > T3.date AND T4.type = 'POPLATEK PO OBRATU'\t----- bird -----\tfinancial",
    "120": "SELECT disp.client_id, account.account_id, account.frequency FROM disp JOIN client ON disp.client_id = client.client_id JOIN account ON disp.account_id = account.account_id JOIN district ON client.district_id = district.district_id WHERE district.A6 = 'east Bohemia' AND account.date BETWEEN '1995-01-01' AND '2000-12-31'\t----- bird -----\tfinancial",
    "121": "SELECT T1.account_id, T1.date FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.A2 = 'Prachatice'\t----- bird -----\tfinancial",
    "122": "SELECT A2, A3 FROM district WHERE district_id IN (SELECT district_id FROM account WHERE account_id IN (SELECT account_id FROM loan WHERE loan_id = 4990))\t----- bird -----\tfinancial",
    "123": "SELECT account_id, A2 as district, A3 as region FROM loan INNER JOIN account ON loan.account_id = account.account_id INNER JOIN district ON account.district_id = district.district_id WHERE amount > 300000;\t----- bird -----\tfinancial",
    "124": "SELECT T1.loan_id, T2.A3, T2.A11 FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T1.duration = 60\t----- bird -----\tfinancial",
    "125": "SELECT district.A2, ((district.A13 - district.A12) / district.A12) * 100 AS unemployment_rate_increment FROM district JOIN account ON district.district_id = account.district_id JOIN loan ON account.account_id = loan.account_id WHERE loan.status = 'D' AND loan.date BETWEEN '1995-01-01' AND '1996-12-31'\t----- bird -----\tfinancial",
    "126": "SELECT (CAST(COUNT(CASE WHEN T2.A2 = 'Decin' THEN T1.account_id END) AS REAL) / COUNT(*)) * 100 FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE STRFTIME('%Y', T1.date) = '1993'\t----- bird -----\tfinancial",
    "127": "SELECT account_id FROM account WHERE frequency = 'POPLATEK MESICNE'\t----- bird -----\tfinancial",
    "128": "SELECT A2, COUNT(account_id) AS num_female_account_holders FROM client JOIN disp ON client.client_id = disp.client_id JOIN account ON disp.account_id = account.account_id JOIN district ON client.district_id = district.district_id WHERE gender = 'F' GROUP BY A2 ORDER BY num_female_account_holders DESC LIMIT 10\t----- bird -----\tfinancial",
    "129": "SELECT D.A2 AS District, SUM(T.amount) AS Total_Withdrawals FROM trans AS T INNER JOIN account AS A ON T.account_id = A.account_id INNER JOIN district AS D ON A.district_id = D.district_id WHERE T.type = 'VYDAJ' AND T.date LIKE '1996-01%' GROUP BY D.A2 ORDER BY Total_Withdrawals DESC LIMIT 10\t----- bird -----\tfinancial",
    "130": "SELECT COUNT(DISTINCT T1.client_id) FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN account AS T3 ON T2.account_id = T3.account_id INNER JOIN district AS T4 ON T1.district_id = T4.district_id WHERE T4.A3 = 'South Bohemia' AND T2.type != 'credit card'\t----- bird -----\tfinancial",
    "131": "SELECT A3 FROM district WHERE district_id IN (SELECT district_id FROM client WHERE client_id IN (SELECT client_id FROM disp WHERE account_id IN (SELECT account_id FROM loan WHERE status = 'C'))) GROUP BY A3 ORDER BY COUNT(*) DESC LIMIT 1;\t----- bird -----\tfinancial",
    "132": "SELECT AVG(amount) AS average_loan_amount FROM loan INNER JOIN account ON loan.account_id = account.account_id INNER JOIN disp ON account.account_id = disp.account_id INNER JOIN client ON disp.client_id = client.client_id WHERE client.gender = 'M'\t----- bird -----\tfinancial",
    "133": "SELECT A2, A5, A6, A7 FROM district WHERE A13 = (SELECT MAX(A13) FROM district WHERE STRFTIME('%Y', date) = '1996')\t----- bird -----\tfinancial",
    "134": "SELECT COUNT(account_id) FROM account WHERE district_id = ( SELECT district_id FROM district WHERE A16 = ( SELECT MAX(A16) FROM district ) )\t----- bird -----\tfinancial",
    "135": "SELECT COUNT(DISTINCT a.account_id) AS account_number FROM account a JOIN disp d ON a.account_id = d.account_id JOIN card c ON d.disp_id = c.disp_id JOIN trans t ON a.account_id = t.account_id WHERE t.balance < 0 AND t.operation = 'VYBER KARTOU' AND a.frequency = 'POPLATEK MESICNE'\t----- bird -----\tfinancial",
    "136": "SELECT COUNT(loan_id) FROM loan WHERE amount >= 250000 AND account_id IN (SELECT account_id FROM account WHERE frequency = 'POPLATEK MESICNE') AND date BETWEEN '1995-01-01' AND '1997-12-31' AND status = 'approved'\t----- bird -----\tfinancial",
    "137": "SELECT COUNT(*) FROM loan AS l INNER JOIN account AS a ON l.account_id = a.account_id INNER JOIN district AS d ON a.district_id = d.district_id WHERE d.A1 = 1 AND l.status = 'C'\t----- bird -----\tfinancial",
    "138": "SELECT COUNT(DISTINCT T3.client_id) AS male_clients FROM district AS T1 INNER JOIN client AS T2 ON T2.district_id = T1.district_id WHERE T1.district_id = ( SELECT T1.district_id FROM district AS T1 ORDER BY T1.A15 DESC LIMIT 1 OFFSET 1 )\t----- bird -----\tfinancial",
    "139": "SELECT COUNT(*) FROM card WHERE type = 'gold' AND disp_id IN (SELECT disp_id FROM disp WHERE type = 'disponent')\t----- bird -----\tfinancial",
    "140": "SELECT COUNT(account_id) FROM account WHERE district_id = (SELECT district_id FROM district WHERE A2 = 'Pisek')\t----- bird -----\tfinancial",
    "141": "SELECT T1.A2, T1.A3 FROM district AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id INNER JOIN trans AS T3 ON T2.account_id = T3.account_id WHERE T3.amount > 10000 AND T3.date BETWEEN '1997-01-01' AND '1997-12-31'\t----- bird -----\tfinancial",
    "142": "SELECT account_id FROM `order` WHERE bank_to = 'Pisek' AND k_symbol = 'SIPO'\t----- bird -----\tfinancial",
    "143": "SELECT T1.account_id FROM account AS T1 INNER JOIN disp AS T2 ON T1.account_id = T2.account_id INNER JOIN card AS T3 ON T2.disp_id = T3.disp_id WHERE T3.type = 'gold' AND T3.type = 'junior'\t----- bird -----\tfinancial",
    "144": "SELECT AVG(amount) FROM trans WHERE type = 'credit card' AND operation = 'VYBER KARTOU' AND date >= '2021-01-01' AND date <= '2021-12-31'\t----- bird -----\tfinancial",
    "145": "SELECT T3.account_id FROM disp AS T1 INNER JOIN card AS T2 ON T1.disp_id = T2.disp_id INNER JOIN trans AS T3 ON T1.account_id = T3.account_id WHERE T3.type = 'VYBER KARTOU' AND strftime('%Y', T3.date) = '1998' GROUP BY T3.account_id HAVING SUM(T3.amount) / 12 < (SELECT AVG(T4.amount) FROM trans AS T4 WHERE T4.type = 'VYBER KARTOU' AND strftime('%Y', T4.date) = '1998')\t----- bird -----\tfinancial",
    "146": "SELECT client.client_id FROM client JOIN disp ON client.client_id = disp.client_id JOIN card ON disp.disp_id = card.disp_id JOIN account ON disp.account_id = account.account_id JOIN loan ON account.account_id = loan.account_id WHERE client.gender = 'F' AND card.type = 'credit' AND loan.status = 'active'\t----- bird -----\tfinancial",
    "147": "SELECT COUNT(T1.client_id) FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.gender = 'F' AND T2.A3 = 'South Bohemia'\t----- bird -----\tfinancial",
    "148": "SELECT T1.account_id FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id INNER JOIN disp AS T3 ON T1.account_id = T3.account_id WHERE T2.A2 = 'Tabor' AND T3.type = 'OWNER'\t----- bird -----\tfinancial",
    "149": "SELECT DISTINCT type FROM account WHERE type NOT IN ( SELECT type FROM disp WHERE type = 'OWNER' ) AND district_id IN ( SELECT district_id FROM district WHERE A11 > 8000 AND A11 <= 9000 )\t----- bird -----\tfinancial",
    "150": "SELECT COUNT(T1.account_id) FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id INNER JOIN trans AS T3 ON T1.account_id = T3.account_id WHERE T2.A3 = 'North Bohemia' AND T3.bank = 'AB'\t----- bird -----\tfinancial",
    "151": "SELECT A2 FROM district WHERE district_id IN (SELECT district_id FROM account WHERE account_id IN (SELECT account_id FROM trans WHERE type = 'VYDAJ'))\t----- bird -----\tfinancial",
    "152": "SELECT AVG(A15) FROM district WHERE A15 > 4000 AND district_id IN (SELECT district_id FROM account WHERE date >= '1997-01-01')\t----- bird -----\tfinancial",
    "153": "SELECT COUNT(DISTINCT T2.card_id) FROM card AS T1 INNER JOIN disp AS T2 ON T1.disp_id = T2.disp_id INNER JOIN account AS T3 ON T2.account_id = T3.account_id INNER JOIN client AS T4 ON T2.client_id = T4.client_id WHERE T1.type = 'classic' AND T2.type = 'OWNER'\t----- bird -----\tfinancial",
    "154": "SELECT COUNT(client_id) FROM client WHERE gender = 'M' AND district_id = (SELECT district_id FROM district WHERE A2 = 'Hl.m. Praha')\t----- bird -----\tfinancial",
    "155": "SELECT CAST(SUM(CASE WHEN type = 'gold' AND issued < '1998-01-01' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM card\t----- bird -----\tfinancial",
    "156": "SELECT c.client_id, c.gender, c.birth_date FROM client c JOIN disp d ON c.client_id = d.client_id JOIN account a ON d.account_id = a.account_id JOIN loan l ON a.account_id = l.account_id WHERE l.amount = (SELECT MAX(amount) FROM loan)\t----- bird -----\tfinancial",
    "157": "SELECT SUM(A15) AS num_committed_crimes FROM district WHERE district_id = (SELECT district_id FROM account WHERE account_id = 532)\t----- bird -----\tfinancial",
    "158": "SELECT district_id FROM account WHERE account_id = (SELECT account_id FROM `order` WHERE order_id = 33333)\t----- bird -----\tfinancial",
    "159": "SELECT t.trans_id, t.date, t.amount FROM trans t JOIN disp d ON t.account_id = d.account_id JOIN client c ON d.client_id = c.client_id WHERE c.client_id = 3356 AND t.type = 'VYBER'\t----- bird -----\tfinancial",
    "160": "SELECT COUNT(*) FROM account WHERE frequency = 'POPLATEK TYDNE' AND account_id IN (SELECT account_id FROM loan WHERE amount < 200000)\t----- bird -----\tfinancial",
    "161": "SELECT type FROM card JOIN disp ON card.disp_id = disp.disp_id JOIN client ON disp.client_id = client.client_id WHERE client.client_id = 13539\t----- bird -----\tfinancial",
    "162": "SELECT A3 FROM client INNER JOIN district ON client.district_id = district.district_id WHERE client.client_id = 3541\t----- bird -----\tfinancial",
    "163": "SELECT A4 FROM district WHERE district_id IN (SELECT district_id FROM account WHERE account_id IN (SELECT account_id FROM loan WHERE status = 'A') GROUP BY district_id ORDER BY COUNT(account_id) DESC LIMIT 1)\t----- bird -----\tfinancial",
    "164": "SELECT T1.client_id FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN account AS T3 ON T2.account_id = T3.account_id INNER JOIN `order` AS T4 ON T3.account_id = T4.account_id WHERE T4.order_id = 32423;\t----- bird -----\tfinancial",
    "165": "SELECT T1.trans_id, T1.date, T1.type, T1.operation, T1.amount, T1.balance, T1.k_symbol, T1.bank, T1.account FROM trans AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T3.district_id = 5\t----- bird -----\tfinancial",
    "166": "SELECT COUNT(account_id) FROM account WHERE district_id = (SELECT district_id FROM district WHERE A2 = 'Jesenik')\t----- bird -----\tfinancial",
    "167": "SELECT client_id FROM client WHERE client_id IN (SELECT client_id FROM disp WHERE type = 'junior card' AND issued > '1996-01-01')\t----- bird -----\tfinancial",
    "168": "SELECT ROUND((COUNT(T1.client_id) * 100.0) / (SELECT COUNT(client_id) FROM client WHERE district_id IN (SELECT district_id FROM district WHERE A11 > 10000)), 2) AS Percentage FROM client AS T1 INNER JOIN account AS T2 ON T1.client_id = T2.account_id WHERE T1.gender = 'F' AND T2.district_id IN (SELECT district_id FROM district WHERE A11 > 10000)\t----- bird -----\tfinancial",
    "169": "SELECT ((SELECT SUM(amount) FROM loan WHERE account_id IN (SELECT account_id FROM disp WHERE client_id IN (SELECT client_id FROM client WHERE gender = 'M')) AND date BETWEEN '1997-01-01' AND '1997-12-31') - (SELECT SUM(amount) FROM loan WHERE account_id IN (SELECT account_id FROM disp WHERE client_id IN (SELECT client_id FROM client WHERE gender = 'M')) AND date BETWEEN '1996-01-01' AND '1996-12-31')) * 1.0 / (SELECT SUM(amount) FROM loan WHERE account_id IN (SELECT account_id FROM disp WHERE client_id IN (SELECT client_id FROM client WHERE gender = 'M')) AND date BETWEEN '1996-01-01' AND '1996-12-31') * 100;\t----- bird -----\tfinancial",
    "170": "SELECT COUNT(*) FROM trans WHERE type = 'VYBER KARTOU' AND date > '1995-01-01';\t----- bird -----\tfinancial",
    "171": "SELECT SUM(CASE WHEN A3 = 'North Bohemia' THEN A16 ELSE 0 END) - SUM(CASE WHEN A3 = 'East Bohemia' THEN A16 ELSE 0 END) AS Difference FROM district WHERE A16 IS NOT NULL AND A16 <> 0 AND A3 IN ('North Bohemia', 'East Bohemia') AND A10 = 1996;\t----- bird -----\tfinancial",
    "172": "SELECT COUNT(*) FROM disp WHERE account_id = 1 OR account_id = 10\t----- bird -----\tfinancial",
    "173": "SELECT COUNT(*) AS statement_requests, SUM(amount) AS total_debit FROM trans WHERE account_id = 3 AND type = 'PRIJEM' AND k_symbol = 'VYBER'\t----- bird -----\tfinancial",
    "174": "SELECT T1.birth_date FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id WHERE T2.account_id = 130\t----- bird -----\tfinancial",
    "175": "SELECT COUNT(*) FROM disp WHERE type = 'OWNER' AND account_id IN (SELECT account_id FROM account WHERE frequency = 'POPLATEK PO OBRATU')\t----- bird -----\tfinancial",
    "176": "SELECT SUM(amount) AS total_debt, status FROM loan WHERE account_id = (SELECT account_id FROM disp WHERE client_id = 992) GROUP BY status\t----- bird -----\tfinancial",
    "177": "SELECT SUM(balance) FROM trans WHERE account_id = (SELECT account_id FROM trans WHERE trans_id = 851) AND client_id = 4 SELECT gender FROM client WHERE client_id = 4\t----- bird -----\tfinancial",
    "178": "SELECT T2.type FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id WHERE T1.client_id = 9\t----- bird -----\tfinancial",
    "179": "SELECT SUM(amount) FROM trans WHERE account_id IN (SELECT account_id FROM disp WHERE client_id = 617) AND date >= '1998-01-01' AND date <= '1998-12-31'\t----- bird -----\tfinancial",
    "180": "SELECT client_id FROM client WHERE birth_date BETWEEN '1983-01-01' AND '1987-12-31' AND district_id IN (SELECT district_id FROM district WHERE A2 = 'East Bohemia')\t----- bird -----\tfinancial",
    "181": "SELECT T1.client_id FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN loan AS T3 ON T2.account_id = T3.account_id WHERE T1.gender = 'F' ORDER BY T3.amount DESC LIMIT 3;\t----- bird -----\tfinancial",
    "182": "SELECT COUNT(DISTINCT c.client_id) FROM client c JOIN disp d ON c.client_id = d.client_id JOIN account a ON d.account_id = a.account_id JOIN trans t ON a.account_id = t.account_id WHERE c.gender = 'M' AND c.birth_date BETWEEN '1974-01-01' AND '1976-12-31' AND t.type = 'SIPO' AND t.amount > 4000;\t----- bird -----\tfinancial",
    "183": "SELECT COUNT(account_id) FROM account WHERE district_id = (SELECT district_id FROM district WHERE A2 = 'Beroun') AND date > '1996-01-01'\t----- bird -----\tfinancial",
    "184": "SELECT COUNT(*) FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN card AS T3 ON T2.disp_id = T3.disp_id WHERE T1.gender = 'F' AND T3.type = 'junior credit card'\t----- bird -----\tfinancial",
    "185": "SELECT CAST(SUM(CASE WHEN T1.gender = 'F' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.client_id) FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN account AS T3 ON T2.account_id = T3.account_id INNER JOIN district AS T4 ON T3.district_id = T4.district_id WHERE T4.A3 = 'Prague'\t----- bird -----\tfinancial",
    "186": "SELECT CAST(SUM(CASE WHEN T1.gender = 'M' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.gender) FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN account AS T3 ON T2.account_id = T3.account_id WHERE T3.frequency = 'POPLATEK TYDNE'\t----- bird -----\tfinancial",
    "187": "SELECT COUNT(T1.client_id) FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN account AS T3 ON T2.account_id = T3.account_id WHERE T3.frequency = 'POPLATEK TYDNE'\t----- bird -----\tfinancial",
    "188": "SELECT account_id FROM loan WHERE duration > 24 AND amount = (SELECT MIN(amount) FROM loan WHERE duration > 24) AND account_id IN (SELECT account_id FROM account WHERE date < '1997-01-01')\t----- bird -----\tfinancial",
    "189": "SELECT account.account_id FROM account JOIN disp ON account.account_id = disp.account_id JOIN client ON disp.client_id = client.client_id WHERE client.gender = 'F' ORDER BY client.birth_date ASC, district.A11 ASC LIMIT 1;\t----- bird -----\tfinancial",
    "190": "SELECT COUNT(DISTINCT T1.client_id) FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE strftime('%Y', T1.birth_date) = '1920' AND T2.A3 = 'East Bohemia'\t----- bird -----\tfinancial",
    "191": "SELECT COUNT(*) FROM loan AS l INNER JOIN account AS a ON l.account_id = a.account_id WHERE l.duration = 24 AND a.frequency = 'POPLATEK TYDNE';\t----- bird -----\tfinancial",
    "192": "SELECT AVG(amount) FROM loan WHERE status = 'C' AND k_symbol = 'POPLATEK PO OBRATU'\t----- bird -----\tfinancial",
    "193": "SELECT T1.client_id, T2.A2 FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN account AS T3 ON T2.account_id = T3.account_id WHERE T3.frequency = 'permanent'\t----- bird -----\tfinancial",
    "194": "SELECT T1.client_id, T2.birth_date FROM disp AS T1 INNER JOIN client AS T2 ON T1.client_id = T2.client_id INNER JOIN card AS T3 ON T1.disp_id = T3.disp_id INNER JOIN account AS T4 ON T1.account_id = T4.account_id INNER JOIN loan AS T5 ON T4.account_id = T5.account_id WHERE T3.type = 'gold' AND T5.status = 'eligible'\t----- bird -----\tfinancial",
    "195": "SELECT bond_type FROM bond GROUP BY bond_type ORDER BY COUNT(bond_type) DESC LIMIT 1\t----- bird -----\ttoxicology",
    "196": "SELECT COUNT(DISTINCT m.molecule_id) FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id WHERE m.label = '-' AND a.element = 'cl'\t----- bird -----\ttoxicology",
    "197": "SELECT AVG(CASE WHEN element = 'o' THEN 1 ELSE 0 END) FROM atom WHERE molecule_id IN (SELECT molecule_id FROM bond WHERE bond_type = '-')\t----- bird -----\ttoxicology",
    "198": "SELECT CAST(SUM(CASE WHEN T4.label = '+' AND T2.bond_type = '-' THEN 1 ELSE 0 END) AS REAL) / COUNT(T1.atom_id) FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN connected AS T3 ON T1.atom_id = T3.atom_id INNER JOIN molecule AS T4 ON T1.molecule_id = T4.molecule_id;\t----- bird -----\ttoxicology",
    "199": "SELECT COUNT(T1.atom_id) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'na' AND T2.label = '-'\t----- bird -----\ttoxicology",
    "200": "SELECT m.molecule_id FROM molecule m JOIN bond b ON m.molecule_id = b.molecule_id WHERE b.bond_type = '#' AND m.label = '+'\t----- bird -----\ttoxicology",
    "201": "SELECT (SUM(CASE WHEN T1.element = 'c' THEN 1 ELSE 0 END) / COUNT(T1.atom_id)) * 100 AS percentage FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'c' AND T2.bond_type = ' = '\t----- bird -----\ttoxicology",
    "202": "SELECT COUNT(*) FROM bond WHERE bond_type = '#'\t----- bird -----\ttoxicology",
    "203": "SELECT COUNT(*) FROM atom WHERE element != 'br'\t----- bird -----\ttoxicology",
    "204": "SELECT COUNT(*) FROM molecule WHERE molecule_id >= 'TR000' AND molecule_id <= 'TR099' AND label = '+'\t----- bird -----\ttoxicology",
    "205": "SELECT T1.molecule_id FROM atom AS T1 WHERE T1.element = 'si'\t----- bird -----\ttoxicology",
    "206": "SELECT element FROM atom WHERE atom_id IN ( SELECT atom_id FROM connected WHERE bond_id = 'TR004_8_9' )\t----- bird -----\ttoxicology",
    "207": "SELECT DISTINCT element FROM atom WHERE atom_id IN ( SELECT atom_id FROM connected WHERE bond_id IN ( SELECT bond_id FROM bond WHERE bond_type = ' = ' ) )\t----- bird -----\ttoxicology",
    "208": "SELECT label FROM atom JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE element = 'h' GROUP BY label ORDER BY COUNT(label) DESC LIMIT 1\t----- bird -----\ttoxicology",
    "209": "SELECT T2.bond_type FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'te'\t----- bird -----\ttoxicology",
    "210": "SELECT T1.atom_id, T2.atom_id FROM connected AS T1 INNER JOIN bond AS T2 ON T1.bond_id = T2.bond_id WHERE T2.bond_type = '-'\t----- bird -----\ttoxicology",
    "211": "SELECT T1.atom_id, T2.atom_id2 FROM connected AS T1 INNER JOIN bond AS T2 ON T1.bond_id = T2.bond_id INNER JOIN molecule AS T3 ON T2.molecule_id = T3.molecule_id WHERE T3.label = '-'\t----- bird -----\ttoxicology",
    "212": "SELECT T1.element FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '-' GROUP BY T1.element ORDER BY COUNT(T1.element) ASC LIMIT 1\t----- bird -----\ttoxicology",
    "213": "SELECT T2.bond_type FROM connected AS T1 INNER JOIN bond AS T2 ON T1.bond_id = T2.bond_id WHERE T1.atom_id = 'TR004_8' AND T1.atom_id2 = 'TR004_20'\t----- bird -----\ttoxicology",
    "214": "SELECT DISTINCT label FROM molecule WHERE molecule_id IN ( SELECT molecule_id FROM atom WHERE element != 'sn' )\t----- bird -----\ttoxicology",
    "215": "SELECT COUNT(DISTINCT A.atom_id) FROM atom AS A INNER JOIN bond AS B ON A.molecule_id = B.molecule_id INNER JOIN connected AS C ON A.atom_id = C.atom_id INNER JOIN atom AS A2 ON C.atom_id2 = A2.atom_id INNER JOIN bond AS B2 ON A2.molecule_id = B2.molecule_id WHERE (A.element = 'i' OR A.element = 's') AND (A2.element = 'i' OR A2.element = 's') AND B.bond_type = '-' AND B2.bond_type = '-'\t----- bird -----\ttoxicology",
    "216": "SELECT T1.atom_id, T2.atom_id FROM connected AS T1 INNER JOIN bond AS T3 ON T1.bond_id = T3.bond_id INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id AND T1.atom_id2 = T2.atom_id2 WHERE T3.bond_type = '#'\t----- bird -----\ttoxicology",
    "217": "SELECT T1.atom_id, T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN molecule AS T3 ON T1.molecule_id = T3.molecule_id WHERE T3.molecule_id = 'TR181'\t----- bird -----\ttoxicology",
    "218": "SELECT CAST(SUM(CASE WHEN T1.element = 'f' THEN 1 ELSE 0 END) AS REAL) / COUNT(T1.molecule_id) as percent FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN bond AS T3 ON T2.molecule_id = T3.molecule_id WHERE T2.label = '+' AND T1.element != 'f'\t----- bird -----\ttoxicology",
    "219": "SELECT (CAST(SUM(CASE WHEN M.label = '+' AND B.bond_type = '#' THEN 1 ELSE 0 END) AS REAL) / COUNT(B.bond_id)) * 100 AS percent FROM molecule AS M JOIN bond AS B ON M.molecule_id = B.molecule_id WHERE M.label = '+' AND B.bond_type = '#'\t----- bird -----\ttoxicology",
    "220": "SELECT element FROM atom WHERE molecule_id = 'TR000' ORDER BY element LIMIT 3;\t----- bird -----\ttoxicology",
    "221": "SELECT T1.atom_id, T2.atom_id2 FROM connected AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T1.bond_id = 'TR001_2_6' AND T2.bond_id = 'TR001_2_6'\t----- bird -----\ttoxicology",
    "222": "SELECT COUNT(CASE WHEN M.label = '+' THEN M.molecule_id ELSE NULL END) - COUNT(CASE WHEN M.label = '-' THEN M.molecule_id ELSE NULL END) AS DIFFERENCE FROM molecule AS M;\t----- bird -----\ttoxicology",
    "223": "SELECT T1.atom_id, T2.atom_id FROM connected AS T1 INNER JOIN bond AS T2 ON T1.bond_id = T2.bond_id WHERE T2.bond_id = 'TR_000_2_5'\t----- bird -----\ttoxicology",
    "224": "SELECT bond_id FROM connected WHERE atom_id2 = 'TR000_2'\t----- bird -----\ttoxicology",
    "225": "SELECT T2.label FROM molecule AS T2 INNER JOIN bond AS T1 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = ' = ' ORDER BY T2.label LIMIT 5;\t----- bird -----\ttoxicology",
    "226": "SELECT CAST(SUM(CASE WHEN T2.bond_type = ' = ' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T2.bond_id) FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.molecule_id = 'TR008'\t----- bird -----\ttoxicology",
    "227": "SELECT CAST(SUM(CASE WHEN T1.label = '+' THEN 1 ELSE 0 END) AS REAL) / COUNT(T1.molecule_id) * 100 AS percent FROM molecule AS T1 WHERE T1.label = '+'\t----- bird -----\ttoxicology",
    "228": "SELECT CAST(SUM(IF(T1.element = 'h', 1, 0)) AS REAL) / COUNT(T1.atom_id) * 100 AS percent FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.molecule_id = 'TR206'\t----- bird -----\ttoxicology",
    "229": "SELECT T2.bond_type FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.molecule_id = 'TR000'\t----- bird -----\ttoxicology",
    "230": "SELECT T1.element, T2.label FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.molecule_id = 'TR060'\t----- bird -----\ttoxicology",
    "231": "SELECT T2.bond_type FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.molecule_id = 'TR018' GROUP BY T2.bond_type ORDER BY COUNT(T2.bond_type) DESC LIMIT 1; SELECT label FROM molecule WHERE molecule_id = 'TR018';\t----- bird -----\ttoxicology",
    "232": "SELECT T2.label FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.bond_type = '-' AND T1.label = '-' GROUP BY T1.molecule_id HAVING COUNT(T1.molecule_id) = 2 ORDER BY T1.label ASC LIMIT 3\t----- bird -----\ttoxicology",
    "233": "SELECT bond_type FROM bond WHERE molecule_id = 'TR006' ORDER BY bond_type LIMIT 2\t----- bird -----\ttoxicology",
    "234": "SELECT COUNT(*) FROM connected c JOIN bond b ON c.bond_id = b.bond_id JOIN molecule m ON b.molecule_id = m.molecule_id WHERE (c.atom_id = 'TR009_12' OR c.atom_id2 = 'TR009_12') AND m.molecule_id = 'TR009'\t----- bird -----\ttoxicology",
    "235": "SELECT COUNT(molecule_id) FROM molecule WHERE label = '+' AND molecule_id IN ( SELECT molecule_id FROM atom WHERE element = 'br' )\t----- bird -----\ttoxicology",
    "236": "SELECT T2.bond_type, T1.atom_id, T1.atom_id2 FROM connected AS T1 INNER JOIN bond AS T2 ON T1.bond_id = T2.bond_id WHERE T2.bond_id = 'TR001_6_9'\t----- bird -----\ttoxicology",
    "237": "SELECT T2.label FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.atom_id = 'TR001_10'\t----- bird -----\ttoxicology",
    "238": "SELECT COUNT(*) FROM bond WHERE bond_type = '#'\t----- bird -----\ttoxicology",
    "239": "SELECT COUNT(bond_id) FROM connected WHERE atom_id LIKE 'TR%_19' OR atom_id2 LIKE 'TR%_19'\t----- bird -----\ttoxicology",
    "240": "SELECT T1.element FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.molecule_id = 'TR004'\t----- bird -----\ttoxicology",
    "241": "SELECT COUNT(*) FROM molecule WHERE label = '-'\t----- bird -----\ttoxicology",
    "242": "SELECT molecule_id FROM atom JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE SUBSTRING(atom_id, 7, 2) BETWEEN '21' AND '25' AND label = '+'\t----- bird -----\ttoxicology",
    "243": "SELECT T3.bond_type FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN atom AS T3 ON T2.atom_id2 = T3.atom_id INNER JOIN bond AS T4 ON T2.bond_id = T4.bond_id WHERE (T1.element = 'p' AND T3.element = 'n') OR (T1.element = 'n' AND T3.element = 'p')\t----- bird -----\ttoxicology",
    "244": "SELECT m.label FROM molecule m JOIN bond b ON m.molecule_id = b.molecule_id WHERE b.bond_type = ' = ' GROUP BY m.molecule_id ORDER BY COUNT(*) DESC LIMIT 1;\t----- bird -----\ttoxicology",
    "245": "SELECT CAST(COUNT(T3.bond_id) AS REAL) / COUNT(DISTINCT T1.atom_id) FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T3.bond_id = T2.bond_id WHERE T1.element = 'i'\t----- bird -----\ttoxicology",
    "246": "SELECT T2.bond_type, T1.bond_id FROM connected AS T1 INNER JOIN bond AS T2 ON T1.bond_id = T2.bond_id WHERE T1.atom_id = 'atom_45' OR T1.atom_id2 = 'atom_45'\t----- bird -----\ttoxicology",
    "247": "SELECT A.element FROM atom AS A LEFT JOIN connected AS C ON A.atom_id = C.atom_id OR A.atom_id = C.atom_id2 WHERE A.element NOT IN ('cl', 'c', 'h', 'o', 's', 'n', 'p', 'na', 'br', 'f', 'i', 'sn', 'pb', 'te', 'ca') AND C.atom_id IS NULL;\t----- bird -----\ttoxicology",
    "248": "SELECT T1.atom_id, T2.atom_id FROM connected AS T3 INNER JOIN bond AS T1 ON T3.bond_id = T1.bond_id INNER JOIN atom AS T2 ON T3.atom_id = T2.atom_id INNER JOIN molecule AS T4 ON T1.molecule_id = T4.molecule_id WHERE T1.bond_type = '#' AND T4.molecule_id = 'TR447'\t----- bird -----\ttoxicology",
    "249": "SELECT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T2.bond_id = 'TR144_8_19'\t----- bird -----\ttoxicology",
    "250": "SELECT T1.molecule_id, COUNT(T2.bond_id) AS double_bonds FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '+' AND T2.bond_type = ' = ' GROUP BY T1.molecule_id ORDER BY double_bonds DESC LIMIT 1;\t----- bird -----\ttoxicology",
    "251": "SELECT element FROM atom WHERE molecule_id IN (SELECT molecule_id FROM molecule WHERE label = '+') GROUP BY element ORDER BY COUNT(*) ASC LIMIT 1;\t----- bird -----\ttoxicology",
    "252": "SELECT T2.atom_id2 FROM connected AS T1 INNER JOIN atom AS T2 ON T1.atom_id2 = T2.atom_id INNER JOIN atom AS T3 ON T1.atom_id = T3.atom_id WHERE T3.element = 'pb'\t----- bird -----\ttoxicology",
    "253": "SELECT A.element FROM atom AS A JOIN bond AS B ON A.molecule_id = B.molecule_id JOIN connected AS C ON A.atom_id = C.atom_id WHERE B.bond_type = '#';\t----- bird -----\ttoxicology",
    "254": "SELECT CAST(COUNT(bond_id) AS FLOAT) * 100 / (SELECT COUNT(atom_id) FROM atom GROUP BY element ORDER BY COUNT(element) DESC LIMIT 1) AS \"percentage\" FROM bond INNER JOIN connected ON bond.molecule_id = connected.bond_id INNER JOIN atom ON connected.atom_id = atom.atom_id GROUP BY bond_id\t----- bird -----\ttoxicology",
    "255": "SELECT CAST(SUM(CASE WHEN T2.bond_type = '-' AND T3.label = '+' THEN 1 ELSE 0 END) AS REAL) / COUNT(T2.bond_id) FROM bond AS T2 INNER JOIN molecule AS T3 ON T2.molecule_id = T3.molecule_id WHERE T2.bond_type = '-'\t----- bird -----\ttoxicology",
    "256": "SELECT COUNT(*) FROM atom WHERE element IN ('c', 'h')\t----- bird -----\ttoxicology",
    "257": "SELECT T2.atom_id2 FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T1.element = 's'\t----- bird -----\ttoxicology",
    "258": "SELECT T2.bond_type FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'sn'\t----- bird -----\ttoxicology",
    "259": "SELECT COUNT(element) FROM atom JOIN bond ON atom.molecule_id = bond.molecule_id WHERE bond.bond_type = '-'\t----- bird -----\ttoxicology",
    "260": "SELECT COUNT(T1.atom_id) FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.bond_type = '#' AND (T1.element = 'p' OR T1.element = 'br')\t----- bird -----\ttoxicology",
    "261": "SELECT bond_id FROM bond WHERE molecule_id IN (SELECT molecule_id FROM molecule WHERE label = '+')\t----- bird -----\ttoxicology",
    "262": "SELECT T1.molecule_id FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '-' AND T2.label = '-'\t----- bird -----\ttoxicology",
    "263": "SELECT CAST(SUM(CASE WHEN T1.element = 'cl' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.atom_id) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN bond AS T3 ON T2.molecule_id = T3.molecule_id INNER JOIN connected AS T4 ON T1.atom_id = T4.atom_id WHERE T3.bond_type = '-'\t----- bird -----\ttoxicology",
    "264": "SELECT label FROM molecule WHERE molecule_id IN ('TR000', 'TR001', 'TR002')\t----- bird -----\ttoxicology",
    "265": "SELECT molecule_id FROM molecule WHERE label = '-'\t----- bird -----\ttoxicology",
    "266": "SELECT COUNT(*) FROM molecule WHERE molecule_id BETWEEN 'TR000' AND 'TR030' AND label = '+'\t----- bird -----\ttoxicology",
    "267": "SELECT T2.bond_type FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.molecule_id BETWEEN 'TR000' AND 'TR050'\t----- bird -----\ttoxicology",
    "268": "SELECT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_id = 'TR001_10_11'\t----- bird -----\ttoxicology",
    "269": "SELECT COUNT(bond_id) FROM bond JOIN atom ON bond.molecule_id = atom.molecule_id WHERE atom.element = 'i'\t----- bird -----\ttoxicology",
    "270": "SELECT element, MAX(label) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'Ca' GROUP BY element\t----- bird -----\ttoxicology",
    "271": "SELECT COUNT(*) FROM connected JOIN atom ON connected.atom_id = atom.atom_id JOIN atom AS atom2 ON connected.atom_id2 = atom2.atom_id WHERE connected.bond_id = 'TR001_1_8' AND (atom.element = 'cl' OR atom2.element = 'cl') AND (atom.element = 'c' OR atom2.element = 'c')\t----- bird -----\ttoxicology",
    "272": "SELECT molecule_id FROM bond JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE bond_type = '#' AND label = '-' AND molecule_id IN ( SELECT molecule_id FROM atom WHERE element = 'c' GROUP BY molecule_id HAVING COUNT(DISTINCT atom_id) = 3 )\t----- bird -----\ttoxicology",
    "273": "SELECT (CAST(SUM(CASE WHEN T1.element = 'cl' THEN 1 ELSE 0 END) AS REAL) / COUNT(T1.molecule_id)) * 100 AS percentage FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN bond AS T3 ON T1.molecule_id = T3.molecule_id WHERE T1.element = 'cl' AND T2.label = '+'\t----- bird -----\ttoxicology",
    "274": "SELECT T1.element FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.molecule_id = 'TR001'\t----- bird -----\ttoxicology",
    "275": "SELECT T2.molecule_id FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = ' = '\t----- bird -----\ttoxicology",
    "276": "SELECT T1.atom_id, T2.atom_id2 FROM connected AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id INNER JOIN bond AS T3 ON T1.bond_id = T3.bond_id WHERE T3.bond_type = '#'\t----- bird -----\ttoxicology",
    "277": "SELECT T1.element FROM connected AS T1 INNER JOIN bond AS T2 ON T1.bond_id = T2.bond_id WHERE T2.bond_id = 'TR005_16_26'\t----- bird -----\ttoxicology",
    "278": "SELECT COUNT(DISTINCT T1.molecule_id) FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '-' AND T2.label = '-'\t----- bird -----\ttoxicology",
    "279": "SELECT T2.label FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_id = 'TR001_10_11'\t----- bird -----\ttoxicology",
    "280": "SELECT bond.bond_id, CASE WHEN molecule.label = '+' THEN 'Carcinogenic' WHEN molecule.label = '-' THEN 'Non-carcinogenic' END AS Carcinogenicity FROM bond JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE bond.bond_type = '#'\t----- bird -----\ttoxicology",
    "281": "SELECT T2.element, COUNT(T2.element) FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '+' AND substr(T2.atom_id, 7, 1) = '4' AND T2.element = 'cl' GROUP BY T2.element;\t----- bird -----\ttoxicology",
    "282": "SELECT CAST(SUM(CASE WHEN T1.element = 'h' THEN 1 ELSE 0 END) AS REAL) / COUNT(T1.element), T2.label FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'h' AND T1.molecule_id = 'TR006'\t----- bird -----\ttoxicology",
    "283": "SELECT T1.label, CASE WHEN T1.label = '+' THEN 'Carcinogenic' WHEN T1.label = '-' THEN 'Non-carcinogenic' END AS Carcinogenicity FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.element = 'ca'\t----- bird -----\ttoxicology",
    "284": "SELECT T2.bond_type FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'te'\t----- bird -----\ttoxicology",
    "285": "SELECT A.element FROM atom A JOIN connected C ON A.atom_id = C.atom_id JOIN bond B ON C.bond_id = B.bond_id WHERE B.bond_id = 'TR001_10_11'\t----- bird -----\ttoxicology",
    "286": "SELECT COUNT(DISTINCT molecule_id) / (SELECT COUNT(DISTINCT molecule_id) FROM bond) * 100 FROM bond WHERE bond_type = '#'\t----- bird -----\ttoxicology",
    "287": "SELECT CAST(SUM(CASE WHEN B.bond_type = ' = ' THEN 1 ELSE 0 END) AS REAL) / COUNT(B.bond_id) * 100 AS percent FROM bond AS B INNER JOIN molecule AS M ON B.molecule_id = M.molecule_id WHERE M.molecule_id = 'TR047'\t----- bird -----\ttoxicology",
    "288": "SELECT CASE WHEN T4.label = '+' THEN 'Carcinogenic' ELSE 'Not Carcinogenic' END AS Carcinogenic_Status FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id LEFT JOIN bond AS T3 ON T2.molecule_id = T3.molecule_id LEFT JOIN connected AS T4 ON T1.atom_id = T4.atom_id WHERE T1.atom_id = 'TR001_1';\t----- bird -----\ttoxicology",
    "289": "SELECT CASE WHEN label = '+' THEN 'Yes, molecule TR151 is carcinogenic' ELSE 'No, molecule TR151 is not carcinogenic' END AS Is_Carcinogenic FROM molecule WHERE molecule_id = 'TR151';\t----- bird -----\ttoxicology",
    "290": "SELECT T1.element FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = 'TR151' AND T1.element = 'cl'\t----- bird -----\ttoxicology",
    "291": "SELECT COUNT(DISTINCT molecule_id) FROM molecule WHERE label = '+'\t----- bird -----\ttoxicology",
    "292": "SELECT atom_id FROM atom WHERE element = 'c' AND molecule_id BETWEEN 'TR010' AND 'TR050'\t----- bird -----\ttoxicology",
    "293": "SELECT COUNT(atom_id) FROM atom WHERE molecule_id IN (SELECT molecule_id FROM molecule WHERE label = '+')\t----- bird -----\ttoxicology",
    "294": "SELECT bond_id FROM bond JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE bond_type = ' = ' AND label = '+'\t----- bird -----\ttoxicology",
    "295": "SELECT COUNT(atom_id) FROM atom WHERE element = 'h' AND molecule_id IN (SELECT molecule_id FROM molecule WHERE label = '+')\t----- bird -----\ttoxicology",
    "296": "SELECT molecule_id FROM bond JOIN connected ON bond.bond_id = connected.bond_id JOIN atom ON connected.atom_id = atom.atom_id WHERE bond_type = 'TR00_1_2' AND atom.element = 'TR00_1'\t----- bird -----\ttoxicology",
    "297": "SELECT atom_id FROM atom WHERE element = 'c' AND atom_id NOT IN ( SELECT atom_id FROM connected JOIN bond ON connected.bond_id = bond.bond_id JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE label = '-' )\t----- bird -----\ttoxicology",
    "298": "SELECT SUM(IIF(T1.element = 'h' AND T2.label = '+', 1, 0)) / COUNT(T1.molecule_id) * 100.0 AS per FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'h' AND T2.label = '+'\t----- bird -----\ttoxicology",
    "299": "SELECT CASE WHEN label = '+' THEN 'Yes, molecule TR124 is carcinogenic' ELSE 'No, molecule TR124 is not carcinogenic' END FROM molecule WHERE molecule_id = 'TR124';\t----- bird -----\ttoxicology",
    "300": "SELECT t1.atom_id, t1.element FROM atom AS t1 INNER JOIN molecule AS t2 ON t1.molecule_id = t2.molecule_id WHERE t2.molecule_id = 'TR186'\t----- bird -----\ttoxicology",
    "301": "SELECT T2.bond_type FROM bond AS T2 INNER JOIN molecule AS T1 ON T1.molecule_id = T2.molecule_id WHERE T1.label = 'TR007_4_19'\t----- bird -----\ttoxicology",
    "302": "SELECT A.element FROM atom AS A JOIN connected AS C ON A.atom_id = C.atom_id JOIN bond AS B ON C.bond_id = B.bond_id WHERE B.bond_id = 'TR001_2_4'\t----- bird -----\ttoxicology",
    "303": "SELECT COUNT(bond_id) FROM bond WHERE molecule_id = 'TR006' AND bond_type = ' = ' SELECT label FROM molecule WHERE molecule_id = 'TR006'\t----- bird -----\ttoxicology",
    "304": "SELECT T1.label, T2.element FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '+';\t----- bird -----\ttoxicology",
    "305": "SELECT T1.bond_id, T2.atom_id, T2.atom_id2 FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id WHERE T1.bond_type = '-'\t----- bird -----\ttoxicology",
    "306": "SELECT m.label, a.element FROM molecule m JOIN bond b ON m.molecule_id = b.molecule_id JOIN connected c ON b.bond_id = c.bond_id JOIN atom a ON c.atom_id = a.atom_id WHERE b.bond_type = '#' AND (a.element = 'cl' OR a.element = 'c' OR a.element = 'h' OR a.element = 'o' OR a.element = 's' OR a.element = 'n' OR a.element = 'p' OR a.element = 'na' OR a.element = 'br' OR a.element = 'f' OR a.element = 'i' OR a.element = 'sn' OR a.element = 'pb' OR a.element = 'te' OR a.element = 'ca')\t----- bird -----\ttoxicology",
    "307": "SELECT A.element FROM atom A JOIN connected C ON A.atom_id = C.atom_id JOIN bond B ON C.bond_id = B.bond_id WHERE B.bond_id = 'TR000_2_3'\t----- bird -----\ttoxicology",
    "308": "SELECT COUNT(bond_id) FROM bond JOIN atom ON bond.molecule_id = atom.molecule_id WHERE atom.element = 'cl'\t----- bird -----\ttoxicology",
    "309": "SELECT T1.atom_id, COUNT(T2.bond_type) AS num_bond_types FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.molecule_id = 'TR346' GROUP BY T1.atom_id\t----- bird -----\ttoxicology",
    "310": "SELECT COUNT(DISTINCT m.molecule_id) FROM bond b JOIN molecule m ON b.molecule_id = m.molecule_id WHERE b.bond_type = ' = ' AND m.label = '+'\t----- bird -----\ttoxicology",
    "311": "SELECT COUNT(DISTINCT T1.molecule_id) FROM molecule AS T1 LEFT JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id LEFT JOIN bond AS T3 ON T1.molecule_id = T3.molecule_id WHERE T2.element != 's' OR T3.bond_type != ' = '\t----- bird -----\ttoxicology",
    "312": "SELECT T2.label FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_id = 'TR001_2_4' AND T2.label = '+'\t----- bird -----\ttoxicology",
    "313": "SELECT COUNT(*) FROM atom WHERE molecule_id = 'TR005'\t----- bird -----\ttoxicology",
    "314": "SELECT COUNT(*) FROM bond WHERE bond_type = '-'\t----- bird -----\ttoxicology",
    "315": "SELECT m.molecule_id FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id WHERE a.element = 'cl' AND m.label = '+'\t----- bird -----\ttoxicology",
    "316": "SELECT molecule_id FROM molecule WHERE molecule_id IN ( SELECT molecule_id FROM atom WHERE element = 'c' ) AND label = '-'\t----- bird -----\ttoxicology",
    "317": "SELECT (CAST(SUM(CASE WHEN M.label = '+' AND A.element = 'Cl' THEN 1 ELSE 0 END) AS REAL) / COUNT(M.molecule_id)) * 100 AS percentage FROM molecule AS M JOIN atom AS A ON M.molecule_id = A.molecule_id WHERE M.label = '+';\t----- bird -----\ttoxicology",
    "318": "SELECT T2.molecule_id FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_id = 'TR001_1_7'\t----- bird -----\ttoxicology",
    "319": "SELECT COUNT(element) FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE bond.bond_id = 'TR001_3_4'\t----- bird -----\ttoxicology",
    "320": "SELECT T2.bond_type FROM connected AS T1 INNER JOIN bond AS T2 ON T1.bond_id = T2.bond_id WHERE T1.atom_id = 'TR000_1' AND T1.atom_id2 = 'TR000_2'\t----- bird -----\ttoxicology",
    "321": "SELECT m.label FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id WHERE a.atom_id = 'TR000_2' OR a.atom_id = 'TR000_4';\t----- bird -----\ttoxicology",
    "322": "SELECT T1.element FROM atom AS T1 WHERE T1.atom_id = 'TR000_1'\t----- bird -----\ttoxicology",
    "323": "SELECT CASE WHEN label = '+' THEN 'Carcinogenic' WHEN label = '-' THEN 'Non-carcinogenic' ELSE 'Unknown' END AS Carcinogenicity FROM molecule WHERE molecule_id = 'TR000'\t----- bird -----\ttoxicology",
    "324": "SELECT SUM(CASE WHEN T2.bond_type = '-' THEN 1 ELSE 0 END) * 100 / COUNT(T2.bond_id) AS percentage FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id\t----- bird -----\ttoxicology",
    "325": "SELECT COUNT(DISTINCT T4.molecule_id) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN bond AS T3 ON T2.molecule_id = T3.molecule_id INNER JOIN connected AS T4 ON T1.atom_id = T4.atom_id WHERE T1.element = 'n' AND T2.label = '+'\t----- bird -----\ttoxicology",
    "326": "SELECT T2.label FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN bond AS T3 ON T2.molecule_id = T3.molecule_id WHERE T1.element = 'S' AND T3.bond_type = '=';\t----- bird -----\ttoxicology",
    "327": "SELECT molecule_id FROM molecule WHERE label = '-' GROUP BY molecule_id HAVING COUNT(atom_id) > 5;\t----- bird -----\ttoxicology",
    "328": "SELECT A.element FROM atom AS A JOIN bond AS B ON A.molecule_id = B.molecule_id JOIN connected AS C ON A.atom_id = C.atom_id JOIN connected AS D ON C.atom_id2 = D.atom_id WHERE B.bond_type = '=' AND A.element IN ('cl', 'c', 'h', 'o', 's', 'n', 'p', 'na', 'br', 'f', 'i', 'sn', 'pb', 'te', 'ca') AND A.molecule_id = 'TR024'\t----- bird -----\ttoxicology",
    "329": "SELECT T2.molecule_id FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '+' GROUP BY T2.molecule_id ORDER BY COUNT(T2.atom_id) DESC LIMIT 1\t----- bird -----\ttoxicology",
    "330": "SELECT (CAST(SUM(CASE WHEN M.label = '+' THEN 1 ELSE 0 END) AS REAL) / COUNT(DISTINCT M.molecule_id)) * 100.0 AS percentage FROM molecule AS M INNER JOIN atom AS A ON M.molecule_id = A.molecule_id INNER JOIN bond AS B ON M.molecule_id = B.molecule_id INNER JOIN connected AS C ON A.atom_id = C.atom_id OR A.atom_id = C.atom_id2 WHERE A.element = 'h' AND B.bond_type = '#'\t----- bird -----\ttoxicology",
    "331": "SELECT COUNT(*) FROM molecule WHERE label = '+'\t----- bird -----\ttoxicology",
    "332": "SELECT COUNT(DISTINCT m.molecule_id) FROM molecule m JOIN bond b ON m.molecule_id = b.molecule_id WHERE m.molecule_id BETWEEN 'TR004' AND 'TR010' AND b.bond_type = '-'\t----- bird -----\ttoxicology",
    "333": "SELECT COUNT(*) FROM atom WHERE molecule_id = 'TR008' AND element = 'c'\t----- bird -----\ttoxicology",
    "334": "SELECT T1.element FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.atom_id = 'TR004_7' AND T2.label = '-'\t----- bird -----\ttoxicology",
    "335": "SELECT COUNT(DISTINCT M.molecule_id) FROM atom A JOIN bond B ON A.molecule_id = B.molecule_id JOIN connected C ON A.atom_id = C.atom_id JOIN atom A2 ON C.atom_id2 = A2.atom_id JOIN bond B2 ON A2.molecule_id = B2.molecule_id JOIN molecule M ON A.molecule_id = M.molecule_id WHERE A.element = 'o' AND B.bond_type = ' = ' AND A2.element = 'o' AND B2.bond_type = ' = ';\t----- bird -----\ttoxicology",
    "336": "SELECT COUNT(DISTINCT T1.molecule_id) FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '#' AND T2.label = '-'\t----- bird -----\ttoxicology",
    "337": "SELECT T1.element, T2.bond_type FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.molecule_id = 'TR016'\t----- bird -----\ttoxicology",
    "338": "SELECT T1.atom_id FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN bond AS T3 ON T2.molecule_id = T3.molecule_id WHERE T2.label = 'TR012' AND T1.element = 'c' AND T3.bond_type = ' = '\t----- bird -----\ttoxicology",
    "339": "SELECT T1.atom_id FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+' AND T1.element = 'o'\t----- bird -----\ttoxicology",
    "340": "SELECT * FROM cards WHERE cardKingdomFoilId = cardKingdomId AND cardKingdomId IS NOT NULL\t----- bird -----\tcard_games",
    "341": "SELECT name FROM cards WHERE borderColor = 'borderless' AND cardKingdomFoilId IS NULL AND cardKingdomId IS NULL\t----- bird -----\tcard_games",
    "342": "SELECT name FROM cards WHERE faceConvertedManaCost = (SELECT MAX(faceConvertedManaCost) FROM cards)\t----- bird -----\tcard_games",
    "343": "SELECT name FROM cards WHERE frameVersion = '2015' AND edhrecRank < 100;\t----- bird -----\tcard_games",
    "344": "SELECT name FROM cards INNER JOIN legalities ON cards.uuid = legalities.uuid WHERE rarity = 'mythic' AND status = 'Banned' AND format = 'gladiator'\t----- bird -----\tcard_games",
    "345": "SELECT T1.* FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.types = 'Artifact' AND T1.side IS NULL AND T2.format = 'vintage'\t----- bird -----\tcard_games",
    "346": "SELECT T1.id, T1.artist FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE (T1.power = '*' OR T1.power IS NULL) AND T2.format = 'commander' AND T2.status = 'Legal'\t----- bird -----\tcard_games",
    "347": "SELECT cards.name, rulings.text FROM cards JOIN rulings ON cards.uuid = rulings.uuid WHERE cards.artist = 'Stephen Daniele' AND cards.hasContentWarning = 1;\t----- bird -----\tcard_games",
    "348": "SELECT T1.text FROM rulings AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T2.name = 'Sublime Epiphany' AND T2.number = '74s'\t----- bird -----\tcard_games",
    "349": "SELECT cards.name, cards.artist, cards.isPromo FROM cards INNER JOIN rulings ON cards.uuid = rulings.uuid GROUP BY cards.name, cards.artist, cards.isPromo ORDER BY COUNT(rulings.uuid) DESC LIMIT 1\t----- bird -----\tcard_games",
    "350": "SELECT T2.language FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.name = 'Annul' AND T1.number = '29'\t----- bird -----\tcard_games",
    "351": "SELECT T1.name FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.language = 'Japanese'\t----- bird -----\tcard_games",
    "352": "SELECT CAST(SUM(CASE WHEN T2.language = 'Chinese Simplified' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM foreign_data AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid;\t----- bird -----\tcard_games",
    "353": "SELECT T1.name AS set_name, T2.totalSetSize AS total_cards FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.language = 'Italian'\t----- bird -----\tcard_games",
    "354": "SELECT COUNT(DISTINCT T1.type) FROM cards AS T1 WHERE T1.artist = 'Aaron Boyd'\t----- bird -----\tcard_games",
    "355": "SELECT T1.keywords FROM cards AS T1 WHERE T1.name = 'Angel of Mercy'\t----- bird -----\tcard_games",
    "356": "SELECT COUNT(*) FROM cards WHERE power = '*'\t----- bird -----\tcard_games",
    "357": "SELECT promoTypes FROM cards WHERE name = 'Duress'\t----- bird -----\tcard_games",
    "358": "SELECT borderColor FROM cards WHERE name = 'Ancestor\\'s Chosen';\t----- bird -----\tcard_games",
    "359": "SELECT originalType FROM cards WHERE name = 'Ancestor\\'s Chosen'\t----- bird -----\tcard_games",
    "360": "SELECT T2.language FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T1.name = 'Angel of Mercy'\t----- bird -----\tcard_games",
    "361": "SELECT COUNT(*) FROM legalities AS L INNER JOIN cards AS C ON L.uuid = C.uuid WHERE L.status = 'restricted' AND C.isTextless = 0;\t----- bird -----\tcard_games",
    "362": "SELECT T1.text FROM rulings AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T2.name = \"Condemn\"\t----- bird -----\tcard_games",
    "363": "SELECT COUNT(*) FROM legalities l JOIN cards c ON l.uuid = c.uuid WHERE l.status = 'restricted' AND c.isStarter = 1;\t----- bird -----\tcard_games",
    "364": "SELECT T2.status FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.name = 'Cloudchaser Eagle';\t----- bird -----\tcard_games",
    "365": "SELECT T1.type FROM cards AS T1 WHERE T1.name = 'Benalish Knight'\t----- bird -----\tcard_games",
    "366": "SELECT T2.format FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.name = 'Benalish Knight'\t----- bird -----\tcard_games",
    "367": "SELECT artist FROM cards WHERE language = 'Phyrexian'\t----- bird -----\tcard_games",
    "368": "SELECT (CAST(SUM(CASE WHEN borderColor = 'borderless' THEN 1 ELSE 0 END) AS REAL) / COUNT(id)) * 100 FROM cards;\t----- bird -----\tcard_games",
    "369": "SELECT COUNT(c.id) FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid WHERE fd.language = 'German' AND c.isReprint = 1;\t----- bird -----\tcard_games",
    "370": "SELECT COUNT(*) FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.borderColor = 'borderless' AND T2.language = 'Russian'\t----- bird -----\tcard_games",
    "371": "SELECT CAST(SUM(CASE WHEN T2.language = 'French' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.isStorySpotlight = 1;\t----- bird -----\tcard_games",
    "372": "SELECT COUNT(id) FROM cards WHERE toughness = '99'\t----- bird -----\tcard_games",
    "373": "SELECT cards.name FROM cards WHERE cards.artist = 'Aaron Boyd';\t----- bird -----\tcard_games",
    "374": "SELECT COUNT(id) FROM cards WHERE borderColor = 'black' AND availability = 'mtgo'\t----- bird -----\tcard_games",
    "375": "SELECT id FROM cards WHERE convertedManaCost = 0\t----- bird -----\tcard_games",
    "376": "SELECT cards.layout FROM cards WHERE cards.keywords LIKE '%flying%'\t----- bird -----\tcard_games",
    "377": "SELECT COUNT(*) FROM cards WHERE originalType = 'Summon - Angel' AND subtypes != 'Angel'\t----- bird -----\tcard_games",
    "378": "SELECT T1.id FROM cards AS T1 WHERE T1.cardKingdomFoilId IS NOT NULL AND T1.cardKingdomId IS NOT NULL\t----- bird -----\tcard_games",
    "379": "SELECT id FROM cards WHERE duelDeck = 'a'\t----- bird -----\tcard_games",
    "380": "SELECT edhrecRank FROM cards WHERE frameVersion = '2015'\t----- bird -----\tcard_games",
    "381": "SELECT DISTINCT artist FROM cards INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE foreign_data.language = 'Chinese Simplified'\t----- bird -----\tcard_games",
    "382": "SELECT * FROM cards WHERE availability = 'paper' AND uuid IN (SELECT uuid FROM foreign_data WHERE language = 'Japanese')\t----- bird -----\tcard_games",
    "383": "SELECT COUNT(*) FROM cards INNER JOIN legalities ON cards.uuid = legalities.uuid WHERE legalities.status = 'Banned' AND cards.borderColor = 'white'\t----- bird -----\tcard_games",
    "384": "SELECT cards.uuid, foreign_data.language FROM cards INNER JOIN legalities ON cards.uuid = legalities.uuid INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE legalities.format = 'legacy'\t----- bird -----\tcard_games",
    "385": "SELECT text FROM rulings WHERE uuid = (SELECT uuid FROM cards WHERE name = 'Beacon of Immortality')\t----- bird -----\tcard_games",
    "386": "SELECT COUNT(*) AS num_cards, T2.status FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.frameVersion = 'future' AND T2.status = 'legal'\t----- bird -----\tcard_games",
    "387": "SELECT cards.name, cards.colors FROM cards INNER JOIN sets ON cards.setCode = sets.code WHERE sets.name = 'OGW'\t----- bird -----\tcard_games",
    "388": "SELECT T1.name, T2.language FROM cards AS T1 INNER JOIN set_translations AS T2 ON T1.setCode = T2.setCode WHERE T1.setCode = '10E' AND T1.convertedManaCost = 5;\t----- bird -----\tcard_games",
    "389": "SELECT T1.name, T2.date FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.uuid = T2.uuid WHERE T1.originalType = 'Creature - Elf'\t----- bird -----\tcard_games",
    "390": "SELECT colors, format FROM cards INNER JOIN legalities ON cards.uuid = legalities.uuid WHERE cards.id BETWEEN 1 AND 20;\t----- bird -----\tcard_games",
    "391": "SELECT c.name FROM cards c INNER JOIN foreign_data fd ON c.uuid = fd.uuid WHERE c.originalType = 'Artifact' AND c.colors = 'B' AND fd.language != 'en'\t----- bird -----\tcard_games",
    "392": "SELECT T1.name FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.uuid = T2.uuid WHERE T1.rarity = 'uncommon' ORDER BY T2.date ASC LIMIT 3\t----- bird -----\tcard_games",
    "393": "SELECT COUNT(*) FROM cards WHERE artist = 'John Avon' AND cardKingdomFoilId IS NOT NULL AND hasFoil = 1 AND isPowerful = 0\t----- bird -----\tcard_games",
    "394": "SELECT COUNT(*) FROM cards WHERE borderColor = 'white' AND cardKingdomFoilId = cardKingdomId AND cardKingdomId IS NOT NULL\t----- bird -----\tcard_games",
    "395": "SELECT COUNT(*) FROM cards WHERE artist = 'UDON' AND availability = 'mtgo' AND hand = -1;\t----- bird -----\tcard_games",
    "396": "SELECT COUNT(*) FROM cards WHERE frameVersion = '1993' AND availability = 'paper' AND hasContentWarning = 1;\t----- bird -----\tcard_games",
    "397": "SELECT ManaCost FROM cards WHERE layout = 'normal' AND frameVersion = '2003' AND borderColor = 'black' AND availability IN ('paper', 'mtgo')\t----- bird -----\tcard_games",
    "398": "SELECT SUM(convertedManaCost) FROM cards WHERE artist = 'Rob Alexander'\t----- bird -----\tcard_games",
    "399": "SELECT T.subtypes, T.supertypes FROM cards AS T WHERE T.availability = 'arena'\t----- bird -----\tcard_games",
    "400": "SELECT sets.code FROM cards INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE foreign_data.language = 'Spanish'\t----- bird -----\tcard_games",
    "401": "SELECT (CAST(COUNT(CASE WHEN hand = '+3' THEN 1 END) AS REAL) / COUNT(id)) * 100 FROM cards WHERE frameEffects = 'legendary';\t----- bird -----\tcard_games",
    "402": "SELECT COUNT(CASE WHEN c.isStorySpotlight = 1 AND c.isTextless = 0 THEN c.id END) * 100 / COUNT(c.id) AS Percentage, c.id FROM cards c GROUP BY c.id HAVING c.isStorySpotlight = 1\t----- bird -----\tcard_games",
    "403": "SELECT cards.name FROM cards INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE foreign_data.language = 'Spanish' GROUP BY cards.name ORDER BY cards.name SELECT CAST(SUM(CASE WHEN foreign_data.language = 'Spanish' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(cards.id) AS percentage FROM cards INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid\t----- bird -----\tcard_games",
    "404": "SELECT language FROM set_translations WHERE setCode = (SELECT code FROM sets WHERE baseSetSize = 309)\t----- bird -----\tcard_games",
    "405": "SELECT COUNT(*) FROM set_translations WHERE language = 'Portuguese (Brasil)' AND setCode IN (SELECT code FROM sets WHERE block = 'Commander')\t----- bird -----\tcard_games",
    "406": "SELECT cards.id FROM cards INNER JOIN legalities ON cards.uuid = legalities.uuid WHERE cards.types LIKE '%Creature%' AND legalities.status LIKE 'legal'\t----- bird -----\tcard_games",
    "407": "SELECT DISTINCT T1.subtypes FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.language = 'German' AND T1.subtypes IS NOT NULL UNION SELECT DISTINCT T1.supertypes FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.language = 'German' AND T1.supertypes IS NOT NULL;\t----- bird -----\tcard_games",
    "408": "SELECT COUNT(*) FROM cards WHERE power IS NULL AND text LIKE '%triggered ability%'\t----- bird -----\tcard_games",
    "409": "SELECT COUNT(*) FROM cards WHERE id IN (SELECT DISTINCT c.id FROM cards c INNER JOIN legalities l ON c.uuid = l.uuid INNER JOIN rulings r ON c.uuid = r.uuid WHERE l.format = 'pre-modern' AND r.text = 'This is a triggered mana ability' AND c.side IS NULL)\t----- bird -----\tcard_games",
    "410": "SELECT T1.id FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.artist = 'Erica Yang' AND T2.format = 'pauper' AND T1.availability = 'paper'\t----- bird -----\tcard_games",
    "411": "SELECT c.artist FROM cards AS c INNER JOIN foreign_data AS f ON c.uuid = f.uuid WHERE f.flavorText = 'Das perfekte Gegenmittel zu einer dichten Formation'\t----- bird -----\tcard_games",
    "412": "SELECT T1.name FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.type = 'Creature' AND T1.layout = 'normal' AND T1.borderColor = 'black' AND T1.artist = 'Matthew D. Wilson' AND T2.language = 'French'\t----- bird -----\tcard_games",
    "413": "SELECT COUNT(T1.uuid) FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.uuid = T2.uuid WHERE T1.rarity = 'rare' AND T2.date = '2009-01-10';\t----- bird -----\tcard_games",
    "414": "SELECT T2.language FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.baseSetSize = 180 AND T1.block = 'Ravnica'\t----- bird -----\tcard_games",
    "415": "SELECT CAST(COUNT(CASE WHEN c.hasContentWarning = 0 THEN c.id END) AS REAL) * 100 / COUNT(c.id) FROM cards AS c INNER JOIN legalities AS l ON c.uuid = l.uuid WHERE l.format = 'commander' AND l.status = 'legal';\t----- bird -----\tcard_games",
    "416": "SELECT CAST(SUM(CASE WHEN T2.language = 'French' AND (T1.power IS NULL OR T1.power = '*') THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(CASE WHEN T1.power IS NULL OR T1.power = '*' THEN 1 ELSE 0 END) FROM cards AS T1 LEFT JOIN foreign_data AS T2 ON T1.uuid = T2.uuid\t----- bird -----\tcard_games",
    "417": "SELECT CAST(SUM(CASE WHEN T2.language = 'Japanese' AND T1.type = 'expansion' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM set_translations AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code;\t----- bird -----\tcard_games",
    "418": "SELECT T1.availability FROM cards AS T1 WHERE T1.artist = 'Daren Bader'\t----- bird -----\tcard_games",
    "419": "SELECT COUNT(T1.id) FROM cards AS T1 WHERE T1.borderColor = 'borderless' AND T1.edhrecRank > 12000;\t----- bird -----\tcard_games",
    "420": "SELECT COUNT(id) FROM cards WHERE isOversized = 1 AND isReprint = 1 AND isPromo = 1;\t----- bird -----\tcard_games",
    "421": "SELECT name FROM cards WHERE (power IS NULL OR power = '*') AND promoTypes = 'arenaleague' ORDER BY name LIMIT 3;\t----- bird -----\tcard_games",
    "422": "SELECT F.language FROM cards AS C INNER JOIN foreign_data AS F ON C.uuid = F.uuid WHERE F.multiverseid = 149934;\t----- bird -----\tcard_games",
    "423": "SELECT T1.cardKingdomFoilId, T1.cardKingdomId FROM cards AS T1 WHERE T1.cardKingdomFoilId IS NOT NULL AND T1.cardKingdomId IS NOT NULL ORDER BY T1.cardKingdomFoilId, T1.cardKingdomId LIMIT 3;\t----- bird -----\tcard_games",
    "424": "SELECT CAST(SUM(CASE WHEN isTextless = 1 AND layout = 'normal' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(isTextless) FROM cards;\t----- bird -----\tcard_games",
    "425": "SELECT cards.number FROM cards WHERE cards.side IS NULL AND cards.number NOT IN (SELECT cards.number FROM cards WHERE cards.number IN (SELECT cards.number FROM cards WHERE cards.number IN (SELECT cards.number FROM cards WHERE cards.subtypes LIKE '%Angel%' AND cards.subtypes LIKE '%Wizard%') GROUP BY cards.number HAVING COUNT(cards.number) > 1) GROUP BY cards.number)\t----- bird -----\tcard_games",
    "426": "SELECT name FROM sets WHERE mtgoCode IS NULL OR mtgoCode = '' ORDER BY name LIMIT 3;\t----- bird -----\tcard_games",
    "427": "SELECT language FROM set_translations WHERE setCode = 'ARC' AND mcmName = 'Archenemy'\t----- bird -----\tcard_games",
    "428": "SELECT T1.name, T2.translation FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.id = 5\t----- bird -----\tcard_games",
    "429": "SELECT language, type FROM sets WHERE id = 206\t----- bird -----\tcard_games",
    "430": "SELECT T2.name, T2.id FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.language = 'Italian' AND T1.block = 'Shadowmoor' ORDER BY T2.name ASC LIMIT 2;\t----- bird -----\tcard_games",
    "431": "SELECT T1.id, T1.name FROM sets AS T1 WHERE T1.isForeignOnly = 1 AND T1.isFoilOnly = 1 AND T1.code IN (SELECT T2.setCode FROM set_translations AS T2 WHERE T2.language = 'Japanese')\t----- bird -----\tcard_games",
    "432": "SELECT T1.name FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.language = 'Russian' ORDER BY T1.baseSetSize DESC LIMIT 1\t----- bird -----\tcard_games",
    "433": "SELECT CAST(SUM(CASE WHEN T1.language = 'Chinese Simplified' AND T2.isOnlineOnly = 1 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM foreign_data AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid\t----- bird -----\tcard_games",
    "434": "SELECT COUNT(T1.code) FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.language = 'Japanese' AND (T1.mtgoCode IS NULL OR T1.mtgoCode = '')\t----- bird -----\tcard_games",
    "435": "SELECT COUNT(id) FROM cards WHERE borderColor = 'black' SELECT id FROM cards WHERE borderColor = 'black'\t----- bird -----\tcard_games",
    "436": "SELECT COUNT(id) AS total_cards, id FROM cards WHERE frameEffects = 'extendedart'\t----- bird -----\tcard_games",
    "437": "SELECT name FROM cards WHERE borderColor = 'black' AND isFullArt = 1\t----- bird -----\tcard_games",
    "438": "SELECT T2.language FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.id = 174\t----- bird -----\tcard_games",
    "439": "SELECT name FROM sets WHERE code = 'ALL'\t----- bird -----\tcard_games",
    "440": "SELECT T2.language FROM foreign_data AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T2.name = 'A Pedra Fellwar'\t----- bird -----\tcard_games",
    "441": "SELECT T1.code FROM sets AS T1 WHERE T1.releaseDate = '2007-07-13'\t----- bird -----\tcard_games",
    "442": "SELECT T1.baseSetSize, T1.code FROM sets AS T1 WHERE T1.block = 'Masques' OR T1.block = 'Mirage'\t----- bird -----\tcard_games",
    "443": "SELECT code FROM sets WHERE type = 'expansion'\t----- bird -----\tcard_games",
    "444": "SELECT foreign_data.name, cards.type FROM cards INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE cards.watermark = 'Boros'\t----- bird -----\tcard_games",
    "445": "SELECT T2.language, T2.flavorText, T1.type FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.watermark = 'colorpie'\t----- bird -----\tcard_games",
    "446": "SELECT CAST(SUM(IIF(T1.name = 'Abyssal Horror' AND T2.convertedManaCost = 10, 1, 0)) AS REAL) * 100 / COUNT(T2.convertedManaCost) FROM cards AS T2 INNER JOIN sets AS T1 ON T2.setCode = T1.code\t----- bird -----\tcard_games",
    "447": "SELECT code FROM sets WHERE type = 'expansion commander'\t----- bird -----\tcard_games",
    "448": "SELECT foreign_data.name, cards.type FROM cards INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE cards.watermark = 'abzan'\t----- bird -----\tcard_games",
    "449": "SELECT T2.language, T1.type FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.watermark = 'Azorius'\t----- bird -----\tcard_games",
    "450": "SELECT COUNT(*) FROM cards WHERE artist = 'Aaron Miller' AND cardKingdomFoilId = cardKingdomId AND cardKingdomId IS NOT NULL\t----- bird -----\tcard_games",
    "451": "SELECT COUNT(*) FROM cards WHERE availability LIKE '%paper%' AND hand LIKE '+%';\t----- bird -----\tcard_games",
    "452": "SELECT name FROM cards WHERE isTextless = 0;\t----- bird -----\tcard_games",
    "453": "SELECT convertedManaCost FROM cards WHERE name = 'Ancestor`s Chosen';\t----- bird -----\tcard_games",
    "454": "SELECT COUNT(id) FROM cards WHERE borderColor = 'White' AND (power = '*' OR power IS NULL)\t----- bird -----\tcard_games",
    "455": "SELECT name FROM cards WHERE isPromo = 1 AND side IS NOT NULL;\t----- bird -----\tcard_games",
    "456": "SELECT T1.subtypes, T1.supertypes FROM cards AS T1 WHERE T1.name = 'Molimo, Maro-Sorcerer'\t----- bird -----\tcard_games",
    "457": "SELECT purchaseUrls FROM cards WHERE promoTypes = 'bundle'\t----- bird -----\tcard_games",
    "458": "SELECT COUNT(DISTINCT artist) FROM cards WHERE borderColor = 'Black' AND availability LIKE '%arena,mtgo%'\t----- bird -----\tcard_games",
    "459": "SELECT name FROM cards WHERE name IN ('Serra Angel', 'Shrine Keeper') ORDER BY convertedManaCost DESC LIMIT 1\t----- bird -----\tcard_games",
    "460": "SELECT artist FROM cards WHERE flavorName = 'Battra, Dark Destroyer'\t----- bird -----\tcard_games",
    "461": "SELECT T1.name FROM cards AS T1 WHERE T1.frameVersion = '2003' ORDER BY T1.convertedManaCost DESC LIMIT 3\t----- bird -----\tcard_games",
    "462": "SELECT T2.translation FROM cards AS T1 INNER JOIN set_translations AS T2 ON T1.setCode = T2.setCode WHERE T1.name = 'Ancestor\\'s Chosen' AND T2.language = 'Italian'\t----- bird -----\tcard_games",
    "463": "SELECT COUNT(*) FROM set_translations WHERE setCode IN (SELECT code FROM sets WHERE code IN (SELECT setCode FROM cards WHERE name = 'Angel of Mercy'))\t----- bird -----\tcard_games",
    "464": "SELECT T1.name FROM cards AS T1 INNER JOIN set_translations AS T2 ON T1.setCode = T2.code WHERE T2.translation = 'Hauptset Zehnte Edition'\t----- bird -----\tcard_games",
    "465": "SELECT CASE WHEN EXISTS (SELECT * FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.name = 'Ancestor\\'s Chosen' AND T2.language = 'Korean') THEN 'Yes' ELSE 'No' END as Korean_Version_EXISTS;\t----- bird -----\tcard_games",
    "466": "SELECT COUNT(*) FROM cards AS T1 INNER JOIN set_translations AS T2 ON T1.setCode = T2.code WHERE T2.translation = 'Hauptset Zehnte Edition' AND T1.artist = 'Adam Rex'\t----- bird -----\tcard_games",
    "467": "SELECT baseSetSize FROM sets WHERE name = 'Hauptset Zehnte Edition'\t----- bird -----\tcard_games",
    "468": "SELECT translation FROM set_translations WHERE setCode = '8ED' AND language = 'Simplified Chinese';\t----- bird -----\tcard_games",
    "469": "SELECT CASE WHEN T1.mtgoCode IS NOT NULL THEN 'Yes' ELSE 'No' END AS appeared_on_mtgo FROM cards AS T1 WHERE T1.name = 'Angel of Mercy'\t----- bird -----\tcard_games",
    "470": "SELECT releaseDate FROM sets WHERE code IN (SELECT setCode FROM cards WHERE name = 'Ancestor''s Chosen')\t----- bird -----\tcard_games",
    "471": "SELECT T2.type FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.translation = 'Hauptset Zehnte Edition'\t----- bird -----\tcard_games",
    "472": "SELECT COUNT(*) FROM sets INNER JOIN set_translations ON sets.code = set_translations.setCode WHERE sets.block = 'Ice Age' AND set_translations.language = 'Italian'\t----- bird -----\tcard_games",
    "473": "SELECT CASE WHEN sets.isForeignOnly = 1 THEN 'Yes' ELSE 'No' END AS Available_Outside_USA FROM cards JOIN sets ON cards.setCode = sets.code WHERE cards.name = 'Adarkar Valkyrie';\t----- bird -----\tcard_games",
    "474": "SELECT COUNT(DISTINCT T1.code) FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.language = 'Italian' AND T2.translation IS NOT NULL AND T1.baseSetSize < 10;\t----- bird -----\tcard_games",
    "475": "SELECT COUNT(id) FROM cards WHERE borderColor = 'black' AND id IN (SELECT id FROM sets WHERE name = 'Coldsnap')\t----- bird -----\tcard_games",
    "476": "SELECT name FROM cards WHERE setCode = 'Coldsnap' ORDER BY convertedManaCost DESC LIMIT 1;\t----- bird -----\tcard_games",
    "477": "SELECT artist FROM cards WHERE id IN (SELECT id FROM sets WHERE name = 'Coldsnap') AND artist IN ('Jeremy Jarvis', 'Aaron Miller', 'Chippy')\t----- bird -----\tcard_games",
    "478": "SELECT * FROM cards WHERE setCode = (SELECT code FROM sets WHERE name = 'Coldsnap') AND number = '4'\t----- bird -----\tcard_games",
    "479": "SELECT COUNT(T1.id) FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.name = 'Coldsnap' AND T1.convertedManaCost > 5 AND (T1.power = '*' OR T1.power IS NULL)\t----- bird -----\tcard_games",
    "480": "SELECT T2.flavorText FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.name = 'Ancestor''s Chosen' AND T2.language = 'Italian'\t----- bird -----\tcard_games",
    "481": "SELECT language FROM foreign_data WHERE name = 'Ancestor''s Chosen' AND flavorText IS NOT NULL;\t----- bird -----\tcard_games",
    "482": "SELECT type FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE name = 'Ancestor''s Chosen' AND language = 'German'\t----- bird -----\tcard_games",
    "483": "SELECT T1.text FROM rulings AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid INNER JOIN sets AS T3 ON T2.setCode = T3.code INNER JOIN set_translations AS T4 ON T3.code = T4.setCode WHERE T4.language = 'Italian' AND T3.name = 'Coldsnap'\t----- bird -----\tcard_games",
    "484": "SELECT T2.name FROM cards AS T1 INNER JOIN set_translations AS T2 ON T1.setCode = T2.setCode WHERE T1.setCode = 'Coldsnap' AND T2.language = 'Italian' ORDER BY T1.convertedManaCost DESC LIMIT 1;\t----- bird -----\tcard_games",
    "485": "SELECT T1.date FROM rulings AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T2.name = 'Reminisce'\t----- bird -----\tcard_games",
    "486": "SELECT CAST(SUM(CASE WHEN T1.name = 'Coldsnap' AND T2.convertedManaCost = 7 THEN 1 ELSE 0 END) AS REAL) * 100 / SUM(CASE WHEN T1.name = 'Coldsnap' THEN 1 ELSE 0 END) FROM sets AS T1 INNER JOIN cards AS T2 ON T1.code = T2.setCode\t----- bird -----\tcard_games",
    "487": "SELECT (COUNT(CASE WHEN cardKingdomFoilId = cardKingdomId AND cardKingdomId IS NOT NULL THEN 1 END) * 100.0) / COUNT(CASE WHEN name = 'Coldsnap' THEN 1 END) AS percentage_of_incredibly_powerful_cards FROM cards WHERE name = 'Coldsnap'\t----- bird -----\tcard_games",
    "488": "SELECT code FROM sets WHERE releaseDate = '2017-07-14'\t----- bird -----\tcard_games",
    "489": "SELECT keyruneCode FROM sets WHERE code = 'PKHC'\t----- bird -----\tcard_games",
    "490": "SELECT mcmId FROM sets WHERE code = 'SS2'\t----- bird -----\tcard_games",
    "491": "SELECT T1.mcmName FROM sets AS T1 WHERE T1.releaseDate = '2017-06-09'\t----- bird -----\tcard_games",
    "492": "SELECT T2.type FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.translation LIKE '%From the Vault: Lore%'\t----- bird -----\tcard_games",
    "493": "SELECT S.parentCode FROM sets AS S WHERE S.name = 'Commander 2014 Oversized'\t----- bird -----\tcard_games",
    "494": "SELECT c.name, r.text, c.hasContentWarning FROM cards AS c INNER JOIN rulings AS r ON c.uuid = r.uuid WHERE c.artist = 'Jim Pavelec'\t----- bird -----\tcard_games",
    "495": "SELECT T2.releaseDate FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T1.name = 'Evacuation'\t----- bird -----\tcard_games",
    "496": "SELECT baseSetSize FROM sets JOIN set_translations ON sets.code = set_translations.setCode WHERE translation = 'Rinascita di Alara'\t----- bird -----\tcard_games",
    "497": "SELECT type FROM sets WHERE name = 'Huiti\u00c3\u00a8me \u00c3\u00a9dition'\t----- bird -----\tcard_games",
    "498": "SELECT sets.name FROM sets JOIN set_translations ON sets.code = set_translations.setCode JOIN cards ON sets.code = cards.setCode WHERE set_translations.language = 'French' AND cards.name = 'Tendo Ice Bridge'\t----- bird -----\tcard_games",
    "499": "SELECT COUNT(translation) FROM set_translations WHERE setCode = (SELECT code FROM sets WHERE name = 'Salvat 2011') AND translation IS NOT NULL;\t----- bird -----\tcard_games",
    "500": "SELECT T2.translation FROM cards AS T1 INNER JOIN set_translations AS T2 ON T1.setCode = T2.setCode WHERE T1.name = 'Fellwar Stone' AND T2.language = 'Japanese';\t----- bird -----\tcard_games",
    "501": "SELECT name FROM cards WHERE setCode = 'JOU' ORDER BY convertedManaCost DESC LIMIT 1;\t----- bird -----\tcard_games",
    "502": "SELECT T1.releaseDate FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.translation = 'Ola de fr\u00edo'\t----- bird -----\tcard_games",
    "503": "SELECT T2.type FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T1.name = 'Samite Pilgrim'\t----- bird -----\tcard_games",
    "504": "SELECT COUNT(*) FROM cards WHERE setCode = (SELECT code FROM sets WHERE name = 'World Championship Decks 2004') AND convertedManaCost = 3;\t----- bird -----\tcard_games",
    "505": "SELECT T2.translation FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.name = 'Mirrodin' AND T2.language = 'Chinese Simplified'\t----- bird -----\tcard_games",
    "506": "SELECT CAST(SUM(CASE WHEN T2.language = 'Japanese' AND T1.isNonFoilOnly = 1 THEN 1 ELSE 0 END) AS REAL) * 100 / SUM(CASE WHEN T2.language = 'Japanese' THEN 1 ELSE 0 END) FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid;\t----- bird -----\tcard_games",
    "507": "SELECT CAST(SUM(CASE WHEN isOnlineOnly = 1 THEN 1 ELSE 0 END) AS REAL) * 100 / SUM(language = 'Portuguese (Brazil)') FROM sets WHERE code IN (SELECT setCode FROM set_translations WHERE language = 'Portuguese (Brazil)')\t----- bird -----\tcard_games",
    "508": "SELECT DISTINCT c.availability FROM cards c WHERE c.artist = 'Aleksi Briclot' AND c.isTextless = 1;\t----- bird -----\tcard_games",
    "509": "SELECT id FROM sets WHERE baseSetSize = (SELECT MAX(baseSetSize) FROM sets);\t----- bird -----\tcard_games",
    "510": "SELECT T1.artist FROM cards AS T1 WHERE T1.side IS NULL ORDER BY T1.convertedManaCost DESC LIMIT 1\t----- bird -----\tcard_games",
    "511": "SELECT frameEffects FROM cards WHERE cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL GROUP BY frameEffects ORDER BY COUNT(*) DESC LIMIT 1\t----- bird -----\tcard_games",
    "512": "SELECT COUNT(id) FROM cards WHERE (power IS NULL OR power = '*') AND hasFoil = 0 AND duelDeck = 'a'\t----- bird -----\tcard_games",
    "513": "SELECT T1.id FROM sets AS T1 WHERE T1.type = 'commander' AND T1.totalSetSize = (SELECT MAX(totalSetSize) FROM sets WHERE type = 'commander' AND isPartialPreview = 0)\t----- bird -----\tcard_games",
    "514": "SELECT c.name FROM cards c JOIN legalities l ON c.uuid = l.uuid WHERE l.format = 'duel' ORDER BY c.convertedManaCost DESC LIMIT 10;\t----- bird -----\tcard_games",
    "515": "SELECT MIN(c.originalReleaseDate) AS Oldest_Release_Date, c.name AS Card_Name, l.format AS Legal_Play_Format FROM cards AS c INNER JOIN legalities AS l ON c.uuid = l.uuid WHERE c.rarity = 'mythic' AND l.status = 'legal' GROUP BY c.name ORDER BY c.originalReleaseDate ASC LIMIT 1\t----- bird -----\tcard_games",
    "516": "SELECT COUNT(t1.id) FROM cards AS t1 INNER JOIN foreign_data AS t2 ON t1.uuid = t2.uuid WHERE t1.artist = 'Volkan Baga' AND t2.language = 'French'\t----- bird -----\tcard_games",
    "517": "SELECT COUNT(*) FROM cards JOIN legalities ON cards.uuid = legalities.uuid WHERE rarity = 'rare' AND types = 'Enchantment' AND name = 'Abundance' AND status = 'Legal'\t----- bird -----\tcard_games",
    "518": "SELECT legalities.format, cards.name FROM legalities JOIN cards ON legalities.uuid = cards.uuid WHERE legalities.status = 'banned' GROUP BY legalities.format ORDER BY COUNT(*) DESC LIMIT 1;\t----- bird -----\tcard_games",
    "519": "SELECT T2.language FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.name = 'Battlebond'\t----- bird -----\tcard_games",
    "520": "SELECT T1.artist, T2.format FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.artist = (SELECT artist FROM cards GROUP BY artist ORDER BY COUNT(*) LIMIT 1)\t----- bird -----\tcard_games",
    "521": "SELECT T1.status FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.frameVersion = '1997' AND T1.artist = 'D. Alexander Gregory' AND (T1.hasContentWarning = 1 OR T1.keywords LIKE '%Wizards of the Coast%') AND T2.format = 'legacy'\t----- bird -----\tcard_games",
    "522": "SELECT cards.name, legalities.format FROM cards INNER JOIN legalities ON cards.uuid = legalities.uuid WHERE cards.edhrecRank = 1 AND legalities.status = 'banned';\t----- bird -----\tcard_games",
    "523": "SELECT AVG(id), MAX(COUNT(language)) FROM sets JOIN set_translations ON sets.code = set_translations.setCode WHERE releaseDate BETWEEN '2012-01-01' AND '2015-12-31'\t----- bird -----\tcard_games",
    "524": "SELECT artist FROM cards WHERE borderColor = 'black' AND availability = 'arena'\t----- bird -----\tcard_games",
    "525": "SELECT T1.uuid FROM legalities AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T1.format = 'oldschool' AND (T1.status = 'banned' OR T1.status = 'restricted')\t----- bird -----\tcard_games",
    "526": "SELECT COUNT(*) FROM cards WHERE artist = 'Matthew D. Wilson' AND availability = 'paper'\t----- bird -----\tcard_games",
    "527": "SELECT T1.text FROM rulings AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T2.artist = 'Kev Walker' GROUP BY T1.text ORDER BY MAX(T1.date) DESC;\t----- bird -----\tcard_games",
    "528": "SELECT T1.name, T2.format FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid INNER JOIN sets AS T3 ON T1.setCode = T3.code WHERE T3.name = 'Hour of Devastation' AND T2.status = 'legal'\t----- bird -----\tcard_games",
    "529": "SELECT T1.name FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.language = 'Korean' AND T1.code NOT IN (SELECT T3.setCode FROM set_translations AS T3 WHERE T3.language NOT LIKE '%Japanese%')\t----- bird -----\tcard_games",
    "530": "SELECT T1.frameVersion, T2.name FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid INNER JOIN legalities AS T3 ON T1.uuid = T3.uuid WHERE T1.artist = 'Allen Williams' AND T3.status = 'banned'\t----- bird -----\tcard_games",
    "531": "SELECT DisplayName FROM users WHERE DisplayName = 'Harlan' OR DisplayName = 'Jarrod Dixon' ORDER BY Reputation DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "532": "SELECT DisplayName FROM users WHERE strftime('%Y', CreationDate) = '2014'\t----- bird -----\tcodebase_community",
    "533": "SELECT COUNT(*) FROM users WHERE LastAccessDate > '2014-09-01 00:00:00';\t----- bird -----\tcodebase_community",
    "534": "SELECT DisplayName FROM users ORDER BY Views DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "535": "SELECT COUNT(*) FROM users WHERE UpVotes > 100 AND DownVotes > 1;\t----- bird -----\tcodebase_community",
    "536": "SELECT COUNT(*) FROM users WHERE Views > 10 AND strftime('%Y', CreationDate) > '2013'\t----- bird -----\tcodebase_community",
    "537": "SELECT COUNT(*) FROM posts WHERE OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'csgillespie')\t----- bird -----\tcodebase_community",
    "538": "SELECT T2.Title FROM posts AS T2 INNER JOIN users AS T1 ON T1.Id = T2.OwnerUserId WHERE T1.DisplayName = 'csgillespie'\t----- bird -----\tcodebase_community",
    "539": "SELECT T1.DisplayName FROM posts AS T2 INNER JOIN users AS T1 ON T2.OwnerUserId = T1.Id WHERE T2.Title = 'Eliciting priors from experts'\t----- bird -----\tcodebase_community",
    "540": "SELECT T1.Title FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'csgillespie' ORDER BY T1.ViewCount DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "541": "SELECT T1.DisplayName FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId ORDER BY T2.FavoriteCount DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "542": "SELECT SUM(P.CommentCount) FROM posts AS P INNER JOIN users AS U ON P.OwnerUserId = U.Id WHERE U.DisplayName = 'csgillespie'\t----- bird -----\tcodebase_community",
    "543": "SELECT MAX(p.AnswerCount) AS MaxAnswerCount FROM posts AS p INNER JOIN users AS u ON p.OwnerUserId = u.Id WHERE u.DisplayName = 'csgillespie'\t----- bird -----\tcodebase_community",
    "544": "SELECT T1.LastEditorDisplayName FROM posts AS T1 WHERE T1.Title = 'Examples for teaching: Correlation does not mean causation'\t----- bird -----\tcodebase_community",
    "545": "SELECT COUNT(*) FROM posts WHERE OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'csgillespie') AND ParentId IS NULL;\t----- bird -----\tcodebase_community",
    "546": "SELECT T1.DisplayName FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T2.ClosedDate IS NOT NULL;\t----- bird -----\tcodebase_community",
    "547": "SELECT COUNT(*) FROM posts AS p INNER JOIN users AS u ON p.OwnerUserId = u.Id WHERE u.Age > 65 AND p.Score >= 20;\t----- bird -----\tcodebase_community",
    "548": "SELECT T1.Location FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T1.Title = 'Eliciting priors from experts'\t----- bird -----\tcodebase_community",
    "549": "SELECT T2.Body FROM posts AS T1 INNER JOIN tags AS T2 ON T1.Id = T2.ExcerptPostId WHERE T2.TagName = 'bayesian'\t----- bird -----\tcodebase_community",
    "550": "SELECT T2.Body FROM tags AS T1 INNER JOIN posts AS T2 ON T1.ExcerptPostId = T2.Id ORDER BY T1.Count DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "551": "SELECT COUNT(*) FROM badges WHERE UserId = (SELECT Id FROM users WHERE DisplayName = 'csgillespie')\t----- bird -----\tcodebase_community",
    "552": "SELECT T1.Name FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.DisplayName = 'csgillespie'\t----- bird -----\tcodebase_community",
    "553": "SELECT COUNT(*) FROM badges WHERE UserId = (SELECT Id FROM users WHERE DisplayName = 'csgillespie') AND strftime('%Y', Date) = '2011'\t----- bird -----\tcodebase_community",
    "554": "SELECT U.DisplayName FROM users AS U INNER JOIN badges AS B ON U.Id = B.UserId GROUP BY U.Id ORDER BY COUNT(B.Id) DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "555": "SELECT AVG(posts.Score) FROM posts JOIN users ON posts.OwnerUserId = users.Id WHERE users.DisplayName = 'csgillespie'\t----- bird -----\tcodebase_community",
    "556": "SELECT CAST(COUNT(T1.Id) AS REAL) / COUNT(DISTINCT T1.DisplayName) FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.Views > 200;\t----- bird -----\tcodebase_community",
    "557": "SELECT CAST(SUM(CASE WHEN T1.Age > 65 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.Id) FROM posts AS T1 WHERE T1.Score > 20\t----- bird -----\tcodebase_community",
    "558": "SELECT COUNT(*) FROM votes WHERE UserId = 58 AND CreationDate = '2010-07-19'\t----- bird -----\tcodebase_community",
    "559": "SELECT CreationDate FROM votes GROUP BY CreationDate ORDER BY COUNT(Id) DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "560": "SELECT COUNT(Id) FROM badges WHERE Name = 'Revival'\t----- bird -----\tcodebase_community",
    "561": "SELECT T1.Title FROM posts AS T1 INNER JOIN comments AS T2 ON T2.PostId = T1.Id ORDER BY T2.Score DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "562": "SELECT COUNT(*) FROM comments WHERE PostId = (SELECT Id FROM posts WHERE ViewCount = 1910)\t----- bird -----\tcodebase_community",
    "563": "SELECT T1.FavoriteCount FROM posts AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.PostId WHERE T2.UserId = '3025' AND T2.CreationDate = '2014-04-23 20:29:39.0'\t----- bird -----\tcodebase_community",
    "564": "SELECT Text FROM comments WHERE PostId = 107829 AND CommentCount = '1'\t----- bird -----\tcodebase_community",
    "565": "SELECT CASE WHEN T1.ClosedDate IS NULL THEN 'Well-finished' ELSE 'Not well-finished' END AS PostStatus FROM posts AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.PostId WHERE T2.UserId = 23853 AND T2.CreationDate = '2013-07-12 09:08:18.0'\t----- bird -----\tcodebase_community",
    "566": "SELECT T2.Reputation FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T1.Id = '65041'\t----- bird -----\tcodebase_community",
    "567": "SELECT COUNT(*) FROM posts WHERE OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'Tiago Pasqualini')\t----- bird -----\tcodebase_community",
    "568": "SELECT T1.DisplayName FROM users AS T1 INNER JOIN votes AS T2 ON T1.Id = T2.UserId WHERE T2.Id = 6347\t----- bird -----\tcodebase_community",
    "569": "SELECT COUNT(*) FROM votes INNER JOIN posts ON votes.PostId = posts.Id WHERE posts.Title LIKE '%data visualization%'\t----- bird -----\tcodebase_community",
    "570": "SELECT T1.Name FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.DisplayName = 'DatEpicCoderGuyWhoPrograms'\t----- bird -----\tcodebase_community",
    "571": "SELECT COUNT(DISTINCT post.Id) / COUNT(DISTINCT votes.Id) AS times_posts_to_votes FROM posts AS post LEFT JOIN votes AS vote ON post.Id = vote.PostId WHERE post.OwnerUserId = 24;\t----- bird -----\tcodebase_community",
    "572": "SELECT ViewCount FROM posts WHERE Title = 'Integration of Weka and/or RapidMiner into Informatica PowerCenter/Developer'\t----- bird -----\tcodebase_community",
    "573": "SELECT Text FROM comments WHERE Score = 17\t----- bird -----\tcodebase_community",
    "574": "SELECT T1.DisplayName FROM users AS T1 WHERE T1.WebsiteUrl = 'http://stackoverflow.com'\t----- bird -----\tcodebase_community",
    "575": "SELECT b.Name FROM badges b JOIN users u ON b.UserId = u.Id WHERE u.DisplayName = 'SilentGhost'\t----- bird -----\tcodebase_community",
    "576": "SELECT DisplayName FROM users JOIN comments ON users.Id = comments.UserId WHERE comments.Text = 'thank you user93!'\t----- bird -----\tcodebase_community",
    "577": "SELECT T1.Text FROM comments AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.DisplayName = 'A Lion'\t----- bird -----\tcodebase_community",
    "578": "SELECT T1.DisplayName, T1.Reputation FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T2.Title = 'Understanding what Dassault iSight is doing?'\t----- bird -----\tcodebase_community",
    "579": "SELECT T2.Text FROM posts AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.PostId WHERE T1.Title = 'How does gentle boosting differ from AdaBoost?'\t----- bird -----\tcodebase_community",
    "580": "SELECT T2.DisplayName FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Name = 'Necromancer' LIMIT 10;\t----- bird -----\tcodebase_community",
    "581": "SELECT T2.DisplayName FROM posts AS T1 INNER JOIN users AS T2 ON T1.LastEditorUserId = T2.Id WHERE T1.Title = 'Open source tools for visualizing multi-dimensional data'\t----- bird -----\tcodebase_community",
    "582": "SELECT Title FROM posts WHERE LastEditorUserId IN (SELECT Id FROM users WHERE DisplayName = 'Vebjorn Ljosa')\t----- bird -----\tcodebase_community",
    "583": "SELECT SUM(T1.Score), T2.WebsiteUrl FROM posts AS T1 INNER JOIN users AS T2 ON T1.LastEditorUserId = T2.Id WHERE T2.DisplayName = 'Yevgeny'\t----- bird -----\tcodebase_community",
    "584": "SELECT C.Text FROM comments AS C INNER JOIN postHistory AS PH ON C.PostId = PH.PostId INNER JOIN posts AS P ON PH.PostId = P.Id WHERE P.Title = 'Why square the difference instead of taking the absolute value in standard deviation?';\t----- bird -----\tcodebase_community",
    "585": "SELECT SUM(T1.BountyAmount) FROM posts AS T1 INNER JOIN votes AS T2 ON T1.Id = T2.PostId WHERE T1.Title LIKE '%data%'\t----- bird -----\tcodebase_community",
    "586": "SELECT u.DisplayName FROM users u JOIN votes v ON u.Id = v.UserId JOIN posts p ON v.PostId = p.Id WHERE p.Title LIKE '%variance%' AND v.BountyAmount = 50;\t----- bird -----\tcodebase_community",
    "587": "SELECT AVG(T1.ViewCount), T2.Title, T3.Text, T2.Score FROM posts AS T1 INNER JOIN tags AS T2 ON T1.Id = T2.ExcerptPostId LEFT JOIN comments AS T3 ON T1.Id = T3.PostId WHERE T2.TagName = 'humor'\t----- bird -----\tcodebase_community",
    "588": "SELECT COUNT(*) FROM comments WHERE UserId = 13;\t----- bird -----\tcodebase_community",
    "589": "SELECT T1.Id FROM users AS T1 ORDER BY T1.Reputation DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "590": "SELECT MIN(Id) AS LowestViewUser FROM users\t----- bird -----\tcodebase_community",
    "591": "SELECT COUNT(*) FROM badges WHERE Name = 'Supporter' AND strftime('%Y', Date) = '2011';\t----- bird -----\tcodebase_community",
    "592": "SELECT COUNT(UserId) FROM badges GROUP BY UserId HAVING COUNT(Name) > 5\t----- bird -----\tcodebase_community",
    "593": "SELECT COUNT(users.Id) FROM users JOIN badges ON users.Id = badges.UserId WHERE users.Location = 'New York' AND (badges.Name = 'Supporter' OR badges.Name = 'Teacher')\t----- bird -----\tcodebase_community",
    "594": "SELECT T1.DisplayName, T1.Reputation FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T2.Id = 1;\t----- bird -----\tcodebase_community",
    "595": "SELECT UserId FROM postHistory INNER JOIN posts ON postHistory.PostId = posts.Id WHERE posts.ViewCount >= 1000 GROUP BY UserId HAVING COUNT(DISTINCT postHistory.PostId) = 1;\t----- bird -----\tcodebase_community",
    "596": "SELECT u.Id, u.DisplayName, b.Name FROM users u JOIN comments c ON u.Id = c.UserId JOIN badges b ON u.Id = b.UserId GROUP BY u.Id ORDER BY COUNT(c.Id) DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "597": "SELECT COUNT(T1.Id) FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T1.Location = 'India' AND T2.Name = 'Teacher'\t----- bird -----\tcodebase_community",
    "598": "SELECT ((COUNT(CASE WHEN Year(Date) = 2010 AND Name = 'Students' THEN 1 END) / COUNT(Name) * 100) - (COUNT(CASE WHEN Year(Date) = 2011 AND Name = 'Students' THEN 1 END) / COUNT(Name) * 100)) AS percentage_difference FROM badges;\t----- bird -----\tcodebase_community",
    "599": "SELECT DISTINCT PostHistoryTypeId FROM postHistory WHERE PostId = 3720 SELECT COUNT(DISTINCT UserId) FROM comments WHERE PostId = 3720\t----- bird -----\tcodebase_community",
    "600": "SELECT posts.Id, posts.Title, posts.ViewCount FROM postLinks JOIN posts ON postLinks.PostId = posts.Id WHERE postLinks.RelatedPostId = 61217;\t----- bird -----\tcodebase_community",
    "601": "SELECT T1.Score, T2.LinkTypeId FROM posts AS T1 INNER JOIN postLinks AS T2 ON T1.Id = T2.PostId WHERE T1.Id = 395\t----- bird -----\tcodebase_community",
    "602": "SELECT P.Id AS PostID, P.OwnerUserId AS UserID FROM posts AS P WHERE P.Score > 60;\t----- bird -----\tcodebase_community",
    "603": "SELECT SUM(FavoriteCount) FROM posts WHERE OwnerUserId = 686 AND strftime('%Y', CreationDate) = '2011'\t----- bird -----\tcodebase_community",
    "604": "SELECT AVG(T1.UpVotes), AVG(T2.Age) FROM users AS T2 INNER JOIN posts AS T1 ON T2.Id = T1.OwnerUserId GROUP BY T1.OwnerUserId HAVING COUNT(T1.OwnerUserId) > 10\t----- bird -----\tcodebase_community",
    "605": "SELECT COUNT(UserId) FROM badges WHERE Name = 'Announcer'\t----- bird -----\tcodebase_community",
    "606": "SELECT Name FROM badges WHERE Date = '2010-07-19 19:39:08'\t----- bird -----\tcodebase_community",
    "607": "SELECT COUNT(*) FROM comments WHERE Score > 60;\t----- bird -----\tcodebase_community",
    "608": "SELECT Text FROM comments WHERE CreationDate = '2010-07-19 19:16:14.0'\t----- bird -----\tcodebase_community",
    "609": "SELECT COUNT(Id) FROM posts WHERE Score = 10\t----- bird -----\tcodebase_community",
    "610": "SELECT T.Name FROM badges AS T INNER JOIN users AS U ON T.UserId = U.Id WHERE U.Reputation = (SELECT MAX(Reputation) FROM users)\t----- bird -----\tcodebase_community",
    "611": "SELECT T2.Reputation FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Date = '2010-07-19 19:39:08.0'\t----- bird -----\tcodebase_community",
    "612": "SELECT b.Name FROM badges AS b INNER JOIN users AS u ON b.UserId = u.Id WHERE u.DisplayName = 'Pierre'\t----- bird -----\tcodebase_community",
    "613": "SELECT b.Date FROM badges b JOIN users u ON b.UserId = u.Id WHERE u.Location = 'Rochester, NY'\t----- bird -----\tcodebase_community",
    "614": "SELECT CAST(COUNT(T1.UserId) AS REAL) * 100 / COUNT(T2.Id) FROM badges AS T1 JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Name = 'Teacher';\t----- bird -----\tcodebase_community",
    "615": "SELECT COUNT(CASE WHEN T1.Age BETWEEN 13 AND 18 THEN T1.UserId END) / COUNT(T1.UserId) * 100 AS percentage FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T2.Name = 'Organizer';\t----- bird -----\tcodebase_community",
    "616": "SELECT T2.Score FROM comments AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T2.CreationDate = '2010-07-19 19:19:56.0'\t----- bird -----\tcodebase_community",
    "617": "SELECT T2.Text FROM posts AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.PostId WHERE T1.CreationDate = '2010-07-19 19:37:33.0'\t----- bird -----\tcodebase_community",
    "618": "SELECT u.Age FROM users AS u INNER JOIN badges AS b ON u.Id = b.UserId WHERE u.Location = 'Vienna, Austria'\t----- bird -----\tcodebase_community",
    "619": "SELECT COUNT(b.Id) FROM badges b JOIN users u ON b.UserId = u.Id WHERE u.Age BETWEEN 19 AND 65 AND b.Name = 'Supporter'\t----- bird -----\tcodebase_community",
    "620": "SELECT SUM(u.Views) AS TotalViews FROM users u INNER JOIN badges b ON u.Id = b.UserId WHERE b.Date = '2010-07-19 19:39:08.0'\t----- bird -----\tcodebase_community",
    "621": "SELECT Name FROM badges WHERE UserId = (SELECT Id FROM users ORDER BY Reputation LIMIT 1);\t----- bird -----\tcodebase_community",
    "622": "SELECT Name FROM badges WHERE UserId = (SELECT Id FROM users WHERE DisplayName = \"Sharpie\")\t----- bird -----\tcodebase_community",
    "623": "SELECT COUNT(*) FROM badges AS b INNER JOIN users AS u ON b.UserId = u.Id WHERE u.Age > 65 AND b.Name = \"Supporter\"\t----- bird -----\tcodebase_community",
    "624": "SELECT DisplayName FROM users WHERE Id = 30;\t----- bird -----\tcodebase_community",
    "625": "SELECT COUNT(*) FROM users WHERE Location = 'New York'\t----- bird -----\tcodebase_community",
    "626": "SELECT COUNT(Id) FROM votes WHERE YEAR(CreationDate) = 2010\t----- bird -----\tcodebase_community",
    "627": "SELECT COUNT(Id) FROM users WHERE Age BETWEEN 19 AND 65\t----- bird -----\tcodebase_community",
    "628": "SELECT DisplayName FROM users WHERE Views = (SELECT MAX(Views) FROM users)\t----- bird -----\tcodebase_community",
    "629": "SELECT COUNT(Id) / COUNT(Id) FROM votes WHERE YEAR(CreationDate) = 2010 OR YEAR(CreationDate) = 2011;\t----- bird -----\tcodebase_community",
    "630": "SELECT TagName FROM tags WHERE Id IN (SELECT DISTINCT ExcerptPostId FROM posts WHERE OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'John Stauffer'))\t----- bird -----\tcodebase_community",
    "631": "SELECT COUNT(*) FROM posts WHERE OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'Daniel Vassallo')\t----- bird -----\tcodebase_community",
    "632": "SELECT COUNT(*) FROM votes INNER JOIN users ON votes.UserId = users.Id WHERE users.DisplayName = 'Harlan'\t----- bird -----\tcodebase_community",
    "633": "SELECT T1.Id FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'slashnick' ORDER BY T1.AnswerCount DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "634": "SELECT MAX(SUM(ViewCount)) FROM posts WHERE OwnerDisplayName = 'Harvey Motulsky' OR OwnerDisplayName = 'Noah Snyder'\t----- bird -----\tcodebase_community",
    "635": "SELECT COUNT(*) FROM posts WHERE OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'Matt Parker') AND Id > 4;\t----- bird -----\tcodebase_community",
    "636": "SELECT COUNT(c.Id) AS negative_comments FROM comments c JOIN users u ON c.UserId = u.Id JOIN posts p ON c.PostId = p.Id WHERE u.DisplayName = 'Neil McGuigan' AND c.Score < 60;\t----- bird -----\tcodebase_community",
    "637": "SELECT t.TagName FROM tags t JOIN posts p ON t.Id = p.Tags JOIN users u ON p.OwnerUserId = u.Id LEFT JOIN comments c ON p.Id = c.PostId WHERE u.DisplayName = 'Mark Meckes' AND c.Id IS NULL;\t----- bird -----\tcodebase_community",
    "638": "SELECT DisplayName FROM users WHERE Id IN (SELECT UserId FROM badges WHERE Name = 'Organizer')\t----- bird -----\tcodebase_community",
    "639": "SELECT CAST(SUM(IIF(T2.TagName = 'r', 1, 0)) AS REAL) * 100 / COUNT(T1.Id) FROM posts AS T1 INNER JOIN tags AS T2 ON T1.Id = T2.ExcerptPostId WHERE T1.OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'Community')\t----- bird -----\tcodebase_community",
    "640": "SELECT SUM(CASE WHEN T1.OwnerDisplayName = 'Mornington' THEN T2.ViewCount ELSE 0 END) - SUM(CASE WHEN T1.OwnerDisplayName = 'Amos' THEN T2.ViewCount ELSE 0 END) AS DIFFERENCE FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id;\t----- bird -----\tcodebase_community",
    "641": "SELECT COUNT(DISTINCT b.UserId) FROM badges AS b INNER JOIN users AS u ON b.UserId = u.Id WHERE b.Name = 'commentator' AND strftime('%Y', b.Date) = '2014'\t----- bird -----\tcodebase_community",
    "642": "SELECT COUNT(*) FROM posts WHERE CreationDate BETWEEN '2010-07-21 00:00:00' AND '2010-07-21 23:59:59'\t----- bird -----\tcodebase_community",
    "643": "SELECT T1.DisplayName, T1.Age FROM users AS T1 WHERE T1.Views = (SELECT MAX(Views) FROM users)\t----- bird -----\tcodebase_community",
    "644": "SELECT P.LastEditDate, P.LastEditorUserId FROM posts AS P WHERE P.Title = 'Detecting a given face in a database of facial images'\t----- bird -----\tcodebase_community",
    "645": "SELECT COUNT(*) AS negative_comments FROM comments WHERE UserId = 13 AND Score < 60\t----- bird -----\tcodebase_community",
    "646": "SELECT T2.Title, T1.UserDisplayName FROM comments AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T1.Score > 60\t----- bird -----\tcodebase_community",
    "647": "SELECT DISTINCT b.Name FROM badges AS b INNER JOIN users AS u ON b.UserId = u.Id WHERE u.Location = 'North Pole' AND strftime('%Y', b.Date) = '2011'\t----- bird -----\tcodebase_community",
    "648": "SELECT users.DisplayName, users.WebsiteUrl FROM posts JOIN users ON posts.OwnerUserId = users.Id WHERE posts.FavoriteCount > 150;\t----- bird -----\tcodebase_community",
    "649": "SELECT COUNT(*) AS post_history_counts, MAX(CreationDate) AS last_edit_date FROM postHistory WHERE PostId = (SELECT Id FROM posts WHERE Title = 'What is the best introductory Bayesian statistics textbook?');\t----- bird -----\tcodebase_community",
    "650": "SELECT T1.LastAccessDate, T1.Location FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T2.Name = 'Outliers'\t----- bird -----\tcodebase_community",
    "651": "SELECT T2.Title FROM posts AS T1 INNER JOIN postLinks AS T2 ON T1.Id = T2.RelatedPostId WHERE T1.Title = 'How to tell if something happened in a data set which monitors a value over time'\t----- bird -----\tcodebase_community",
    "652": "SELECT T1.Id, T2.Name FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T1.DisplayName = 'Samuel' AND YEAR(T1.CreationDate) = 2013 AND YEAR(T2.Date) = 2013;\t----- bird -----\tcodebase_community",
    "653": "SELECT P.OwnerDisplayName FROM posts AS P WHERE P.ViewCount = (SELECT MAX(ViewCount) FROM posts)\t----- bird -----\tcodebase_community",
    "654": "SELECT T1.DisplayName, T1.Location FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId INNER JOIN tags AS T3 ON T3.ExcerptPostId = T2.Id WHERE T3.TagName = 'hypothesis-testing'\t----- bird -----\tcodebase_community",
    "655": "SELECT T2.Title, T1.LinkTypeId FROM postLinks AS T1 INNER JOIN posts AS T2 ON T1.RelatedPostId = T2.Id WHERE T2.Title = 'What are principal component scores?'\t----- bird -----\tcodebase_community",
    "656": "SELECT Parent.DisplayName FROM posts Child JOIN posts Parent ON Child.ParentId = Parent.Id WHERE Child.Score = (SELECT MAX(Score) FROM posts)\t----- bird -----\tcodebase_community",
    "657": "SELECT DisplayName, WebsiteUrl FROM users WHERE Id = (SELECT UserId FROM votes WHERE VoteTypeId = 8 ORDER BY BountyAmount DESC LIMIT 1)\t----- bird -----\tcodebase_community",
    "658": "SELECT Title FROM posts ORDER BY ViewCount DESC LIMIT 5;\t----- bird -----\tcodebase_community",
    "659": "SELECT COUNT(Id) FROM tags WHERE Count BETWEEN 5000 AND 7000;\t----- bird -----\tcodebase_community",
    "660": "SELECT OwnerUserId FROM posts WHERE FavoriteCount = (SELECT MAX(FavoriteCount) FROM posts)\t----- bird -----\tcodebase_community",
    "661": "SELECT MAX(u.Age) FROM users AS u WHERE u.Reputation = (SELECT MAX(Reputation) FROM users)\t----- bird -----\tcodebase_community",
    "662": "SELECT COUNT(p.Id) FROM posts p JOIN votes v ON p.Id = v.PostId WHERE YEAR(v.CreationDate) = 2011 AND v.BountyAmount = 50;\t----- bird -----\tcodebase_community",
    "663": "SELECT T1.Id FROM users AS T1 ORDER BY T1.Age ASC LIMIT 1\t----- bird -----\tcodebase_community",
    "664": "SELECT MAX(Tags.Count) AS MaxTagCount, Posts.Score FROM Tags INNER JOIN posts ON Tags.Id = posts.Id ORDER BY Posts.ViewCount DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "665": "SELECT CAST(COUNT(T1.Id) AS REAL) / 12 FROM postLinks AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE YEAR(T1.CreationDate) = 2010 AND T2.AnswerCount <= 2\t----- bird -----\tcodebase_community",
    "666": "SELECT P.Id FROM posts AS P INNER JOIN votes AS V ON P.Id = V.PostId WHERE V.UserId = 1465 ORDER BY P.FavoriteCount DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "667": "SELECT T1.Title FROM posts AS T1 INNER JOIN postLinks AS T2 ON T1.Id = T2.PostId ORDER BY T2.CreationDate LIMIT 1\t----- bird -----\tcodebase_community",
    "668": "SELECT T1.DisplayName FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId GROUP BY T1.DisplayName ORDER BY COUNT(T2.Name) DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "669": "SELECT MIN(V.CreationDate) FROM votes AS V INNER JOIN users AS U ON V.UserId = U.Id WHERE U.DisplayName = 'chl'\t----- bird -----\tcodebase_community",
    "670": "SELECT MIN(T5.CreationDate) AS First_Post_Date FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId INNER JOIN ( SELECT MIN(Age) AS Min_Age FROM users ) AS T3 ON T1.Age = T3.Min_Age INNER JOIN ( SELECT MIN(CreationDate) AS CreationDate FROM posts ) AS T5 ON T2.CreaionDate = T5.CreationDate;\t----- bird -----\tcodebase_community",
    "671": "SELECT T1.UserDisplayName FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Name = 'Autobiographer' ORDER BY T1.Date LIMIT 1\t----- bird -----\tcodebase_community",
    "672": "SELECT COUNT(T1.Id) FROM users AS T1 INNER JOIN posts ON T1.Id = posts.OwnerUserId WHERE T1.Location = 'United Kingdom' AND posts.FavoriteCount >= 4;\t----- bird -----\tcodebase_community",
    "673": "SELECT AVG(PostId) FROM votes WHERE UserId IN (SELECT Id FROM users WHERE Age = (SELECT MAX(Age) FROM users))\t----- bird -----\tcodebase_community",
    "674": "SELECT DisplayName FROM users ORDER BY Reputation DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "675": "SELECT COUNT(Id) FROM users WHERE Reputation > 2000 AND Views > 1000;\t----- bird -----\tcodebase_community",
    "676": "SELECT DisplayName FROM users WHERE Age BETWEEN 19 AND 65\t----- bird -----\tcodebase_community",
    "677": "SELECT COUNT(*) FROM posts WHERE OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'Jay Stevens') AND YEAR(CreationDate) = 2010;\t----- bird -----\tcodebase_community",
    "678": "SELECT p.Id, p.Title FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE u.DisplayName = 'Harvey Motulsky' ORDER BY p.ViewCount DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "679": "SELECT posts.Id, posts.Title FROM posts ORDER BY Score DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "680": "SELECT AVG(posts.Score) FROM posts JOIN users ON posts.OwnerUserId = users.Id WHERE users.DisplayName = 'Stephen Turner'\t----- bird -----\tcodebase_community",
    "681": "SELECT T1.DisplayName FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T2.ViewCount > 20000 AND YEAR(T2.CreationDate) = 2011\t----- bird -----\tcodebase_community",
    "682": "SELECT p.Id, u.DisplayName FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE year(p.CreationDate) = 2010 ORDER BY p.FavoriteCount DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "683": "SELECT CAST(COUNT(CASE WHEN T1.CreationDate = '2011' AND T2.Reputation > 1000 THEN T3.Id ELSE NULL END) AS REAL) * 100 / COUNT(T3.Id) FROM posts AS T3 INNER JOIN users AS T2 ON T3.OwnerUserId = T2.Id INNER JOIN postHistory AS T1 ON T3.Id = T1.PostId;\t----- bird -----\tcodebase_community",
    "684": "SELECT CAST(COUNT(CASE WHEN Age BETWEEN 13 AND 18 THEN 1 END) AS REAL) * 100 / COUNT(Id) FROM users;\t----- bird -----\tcodebase_community",
    "685": "SELECT P.ViewCount AS TotalViews, U.DisplayName AS LastPoster FROM posts AS P INNER JOIN users AS U ON P.OwnerUserId = U.Id WHERE P.Title = 'Computer Game Datasets'\t----- bird -----\tcodebase_community",
    "686": "SELECT COUNT(*) FROM posts WHERE ViewCount > (SELECT AVG(ViewCount) FROM posts)\t----- bird -----\tcodebase_community",
    "687": "SELECT COUNT(*) FROM comments WHERE PostId = (SELECT Id FROM posts WHERE Score = (SELECT MAX(Score) FROM posts))\t----- bird -----\tcodebase_community",
    "688": "SELECT COUNT(*) FROM posts WHERE ViewCount > 35000 AND CommentCount = 0\t----- bird -----\tcodebase_community",
    "689": "SELECT T1.DisplayName, T1.Location FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.LastEditorUserId WHERE T2.Id = 183\t----- bird -----\tcodebase_community",
    "690": "SELECT Name FROM badges WHERE UserId = (SELECT Id FROM users WHERE DisplayName = 'Emmett') ORDER BY Date DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "691": "SELECT COUNT(*) FROM users WHERE Age BETWEEN 19 AND 65 AND UpVotes > 5000;\t----- bird -----\tcodebase_community",
    "692": "SELECT strftime('%J', b.Date) - strftime('%J', u.CreationDate) AS TimeToBadge FROM badges AS b INNER JOIN users AS u ON b.UserId = u.Id WHERE u.DisplayName = 'Zolomon'\t----- bird -----\tcodebase_community",
    "693": "SELECT COUNT(posts.Id) AS num_posts, COUNT(comments.Id) AS num_comments FROM users LEFT JOIN posts ON users.Id = posts.OwnerUserId LEFT JOIN comments ON users.Id = comments.UserId WHERE CreationDate = (SELECT MAX(CreationDate) FROM users)\t----- bird -----\tcodebase_community",
    "694": "SELECT C.Text, C.UserDisplayName FROM comments C JOIN posts P ON C.PostId = P.Id WHERE P.Title = 'Analysing wind data with R' AND C.CreationDate = (SELECT MAX(CreationDate) FROM comments WHERE PostId = P.Id)\t----- bird -----\tcodebase_community",
    "695": "SELECT COUNT(*) FROM badges WHERE Name = 'Citizen Patrol';\t----- bird -----\tcodebase_community",
    "696": "SELECT COUNT(*) FROM tags WHERE TagName = 'careers'\t----- bird -----\tcodebase_community",
    "697": "SELECT Reputation, ViewCount FROM users WHERE DisplayName = 'Jarrod Dixon'\t----- bird -----\tcodebase_community",
    "698": "SELECT COUNT(*) FROM comments WHERE PostId = (SELECT Id FROM posts WHERE Title = 'Clustering 1D data') SELECT COUNT(*) FROM posts WHERE ParentId = (SELECT Id FROM posts WHERE Title = 'Clustering 1D data')\t----- bird -----\tcodebase_community",
    "699": "SELECT CreationDate FROM users WHERE DisplayName = 'IrishStat'\t----- bird -----\tcodebase_community",
    "700": "SELECT COUNT(Id) FROM votes WHERE BountyAmount >= 30\t----- bird -----\tcodebase_community",
    "701": "SELECT COUNT(stats_posts.Id) AS total_posts, COUNT(CASE WHEN stats_posts.Score >= 50 THEN 1 END) AS high_score_posts, (COUNT(CASE WHEN stats_posts.Score >= 50 THEN 1 END) / COUNT(stats_posts.Id)) * 100 AS percentage FROM ( SELECT p.Id, p.Score, u.Reputation FROM posts AS p INNER JOIN users AS u ON p.OwnerUserId = u.Id WHERE u.Reputation = (SELECT MAX(Reputation) FROM users) ) AS stats_posts;\t----- bird -----\tcodebase_community",
    "702": "SELECT COUNT(Id) FROM posts WHERE Score < 20\t----- bird -----\tcodebase_community",
    "703": "SELECT COUNT(Id) FROM tags WHERE Id < 15 AND Count <= 20\t----- bird -----\tcodebase_community",
    "704": "SELECT T1.ExcerptPostId, T1.WikiPostId FROM tags AS T1 WHERE T1.TagName = 'sample'\t----- bird -----\tcodebase_community",
    "705": "SELECT T1.Reputation, T1.UpVotes FROM users AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.UserId WHERE T2.Text = 'fine, you win :)';\t----- bird -----\tcodebase_community",
    "706": "SELECT c.Text FROM comments c JOIN posts p ON c.PostId = p.Id WHERE p.Title = 'How can I adapt ANOVA for binary data?';\t----- bird -----\tcodebase_community",
    "707": "SELECT T2.Text FROM posts AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.PostId WHERE T1.ViewCount BETWEEN 100 AND 150 ORDER BY T2.Score DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "708": "SELECT U.CreationDate, U.Age FROM users U INNER JOIN comments C ON U.Id = C.UserId WHERE C.Text LIKE '%http%'\t----- bird -----\tcodebase_community",
    "709": "SELECT COUNT(DISTINCT c.PostId) FROM comments c JOIN posts p ON c.PostId = p.Id WHERE c.Score = 0 AND p.ViewCount < 5;\t----- bird -----\tcodebase_community",
    "710": "SELECT COUNT(*) FROM comments WHERE PostId IN (SELECT Id FROM posts WHERE CommentCount = 1) AND Score = 0\t----- bird -----\tcodebase_community",
    "711": "SELECT COUNT(DISTINCT U.Id) FROM users AS U INNER JOIN comments AS C ON U.Id = C.UserId WHERE C.Score = 0 AND U.Age = 40\t----- bird -----\tcodebase_community",
    "712": "SELECT posts.Id, comments.Text FROM posts JOIN comments ON posts.Id = comments.PostId WHERE posts.Title = 'Group differences on a five point Likert item'\t----- bird -----\tcodebase_community",
    "713": "SELECT u.UpVotes FROM users u JOIN comments c ON u.Id = c.UserId WHERE c.Text = 'R is also lazy evaluated.';\t----- bird -----\tcodebase_community",
    "714": "SELECT T1.Text FROM comments AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.DisplayName = 'Harvey Motulsky'\t----- bird -----\tcodebase_community",
    "715": "SELECT T1.UserDisplayName FROM comments AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Score BETWEEN 1 AND 5 AND T2.DownVotes = 0\t----- bird -----\tcodebase_community",
    "716": "SELECT SUM(CASE WHEN T2.UpVotes = 0 THEN 1.0 ELSE 0 END) / COUNT(T1.UserId) AS percentage FROM comments AS T1 INNER JOIN users AS T2 ON T2.Id = T1.UserId WHERE T1.Score BETWEEN 5 AND 10;\t----- bird -----\tcodebase_community",
    "717": "SELECT T2.power_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T1.superhero_name = '3-D Man'\t----- bird -----\tsuperhero",
    "718": "SELECT COUNT(*) FROM superhero AS s INNER JOIN hero_power AS hp ON s.id = hp.hero_id INNER JOIN superpower AS sp ON hp.power_id = sp.id WHERE sp.power_name = 'Super Strength'\t----- bird -----\tsuperhero",
    "719": "SELECT COUNT(hero.id) FROM superhero hero JOIN hero_power hp ON hero.id = hp.hero_id JOIN superpower sp ON hp.power_id = sp.id WHERE sp.power_name = 'Super Strength' AND hero.height_cm > 200\t----- bird -----\tsuperhero",
    "720": "SELECT full_name FROM superhero JOIN hero_power ON superhero.id = hero_power.hero_id GROUP BY full_name HAVING COUNT(hero_power.power_id) > 15;\t----- bird -----\tsuperhero",
    "721": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T2.colour = 'Blue'\t----- bird -----\tsuperhero",
    "722": "SELECT C.colour FROM superhero AS S JOIN colour AS C ON S.skin_colour_id = C.id WHERE S.superhero_name = 'Apocalypse'\t----- bird -----\tsuperhero",
    "723": "SELECT COUNT(T1.superhero_name) FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id INNER JOIN hero_power AS T3 ON T1.id = T3.hero_id INNER JOIN superpower AS T4 ON T3.power_id = T4.id WHERE T2.colour = 'Blue' AND T4.power_name = 'Agility'\t----- bird -----\tsuperhero",
    "724": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id INNER JOIN colour AS T3 ON T1.hair_colour_id = T3.id INNER JOIN hero_power AS T4 ON T1.id = T4.hero_id INNER JOIN superpower AS T5 ON T4.power_id = T5.id WHERE T2.colour = 'Blue' AND T3.colour = 'Blond' AND T5.power_name = 'Agility'\t----- bird -----\tsuperhero",
    "725": "SELECT COUNT(*) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'Marvel Comics'\t----- bird -----\tsuperhero",
    "726": "SELECT full_name FROM superhero WHERE height_cm = (SELECT MAX(height_cm) FROM superhero) AND publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')\t----- bird -----\tsuperhero",
    "727": "SELECT publisher.publisher_name FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id WHERE superhero.superhero_name = 'Sauron'\t----- bird -----\tsuperhero",
    "728": "SELECT COUNT(T1.superhero_name) FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id INNER JOIN publisher AS T3 ON T1.publisher_id = T3.id WHERE T2.colour = 'Blue' AND T3.publisher_name = 'Marvel Comics'\t----- bird -----\tsuperhero",
    "729": "SELECT AVG(height_cm) FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')\t----- bird -----\tsuperhero",
    "730": "SELECT CAST(SUM(IIF(T3.power_name = 'Super Strength', 1, 0)) AS REAL) * 100 / COUNT(T1.id) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id INNER JOIN hero_power AS T3 ON T1.id = T3.hero_id INNER JOIN superpower AS T4 ON T3.power_id = T4.id WHERE T2.publisher_name = 'Marvel Comics'\t----- bird -----\tsuperhero",
    "731": "SELECT COUNT(DISTINCT T1.id) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'DC Comics'\t----- bird -----\tsuperhero",
    "732": "SELECT publisher.publisher_name FROM superhero JOIN hero_attribute ON superhero.id = hero_attribute.hero_id JOIN attribute ON hero_attribute.attribute_id = attribute.id JOIN publisher ON superhero.publisher_id = publisher.id WHERE attribute.attribute_name = 'Speed' ORDER BY hero_attribute.attribute_value ASC LIMIT 1;\t----- bird -----\tsuperhero",
    "733": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id INNER JOIN publisher AS T3 ON T1.publisher_id = T3.id WHERE T2.colour = 'Gold' AND T3.publisher_name = 'Marvel Comics'\t----- bird -----\tsuperhero",
    "734": "SELECT publisher.publisher_name FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id WHERE superhero.superhero_name = 'Blue Beetle II'\t----- bird -----\tsuperhero",
    "735": "SELECT COUNT(*) FROM superhero WHERE hair_colour_id = (SELECT id FROM colour WHERE colour = 'Blond')\t----- bird -----\tsuperhero",
    "736": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN attribute AS T3 ON T2.attribute_id = T3.id WHERE T3.attribute_name = 'Intelligence' ORDER BY T2.attribute_value ASC LIMIT 1\t----- bird -----\tsuperhero",
    "737": "SELECT race.race FROM superhero JOIN race ON superhero.race_id = race.id WHERE superhero.superhero_name = 'Copycat'\t----- bird -----\tsuperhero",
    "738": "SELECT COUNT(hero_id) FROM hero_attribute JOIN attribute ON hero_attribute.attribute_id = attribute.id WHERE attribute.attribute_name = 'Durability' AND hero_attribute.attribute_value < 50\t----- bird -----\tsuperhero",
    "739": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T3.power_name = 'Death Touch'\t----- bird -----\tsuperhero",
    "740": "SELECT COUNT(*) FROM superhero JOIN gender ON superhero.gender_id = gender.id JOIN hero_attribute ON superhero.id = hero_attribute.hero_id JOIN attribute ON hero_attribute.attribute_id = attribute.id WHERE gender.gender = 'Female' AND attribute.attribute_name = 'Strength' AND hero_attribute.attribute_value = 100\t----- bird -----\tsuperhero",
    "741": "SELECT T.superhero_name FROM ( SELECT T1.superhero_name, COUNT(T2.power_id) AS num_powers FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id GROUP BY T1.superhero_name ORDER BY num_powers DESC LIMIT 1 ) T\t----- bird -----\tsuperhero",
    "742": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T2.race = 'Vampire'\t----- bird -----\tsuperhero",
    "743": "SELECT CAST(SUM(CASE WHEN T1.alignment = 'Bad' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id INNER JOIN alignment AS T3 ON T1.alignment_id = T3.id WHERE T2.publisher_name = 'Marvel Comics'\t----- bird -----\tsuperhero",
    "744": "SELECT SUM(CASE WHEN publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) AS Marvel_Count, SUM(CASE WHEN publisher_name = 'DC Comics' THEN 1 ELSE 0 END) AS DC_Count, SUM(CASE WHEN publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) - SUM(CASE WHEN publisher_name = 'DC Comics' THEN 1 ELSE 0 END) AS Difference FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id;\t----- bird -----\tsuperhero",
    "745": "SELECT id FROM publisher WHERE publisher_name = 'Star Trek'\t----- bird -----\tsuperhero",
    "746": "SELECT AVG(attribute_value) FROM hero_attribute\t----- bird -----\tsuperhero",
    "747": "SELECT COUNT(*) FROM superhero WHERE full_name IS NULL\t----- bird -----\tsuperhero",
    "748": "SELECT T2.colour FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.id = 75;\t----- bird -----\tsuperhero",
    "749": "SELECT T2.power_name FROM superhero AS T1 INNER JOIN hero_power AS T3 ON T1.id = T3.hero_id INNER JOIN superpower AS T2 ON T3.power_id = T2.id WHERE T1.superhero_name = 'Deathlok'\t----- bird -----\tsuperhero",
    "750": "SELECT AVG(weight_kg) FROM superhero WHERE gender_id = 2\t----- bird -----\tsuperhero",
    "751": "SELECT sp.power_name FROM superhero s JOIN hero_power hp ON s.id = hp.hero_id JOIN superpower sp ON hp.power_id = sp.id JOIN gender g ON s.gender_id = g.id WHERE g.gender = 'Male' LIMIT 5;\t----- bird -----\tsuperhero",
    "752": "SELECT superhero_name FROM superhero WHERE race_id = (SELECT id FROM race WHERE race = 'Alien')\t----- bird -----\tsuperhero",
    "753": "SELECT T1.superhero_name FROM superhero AS T1 WHERE T1.height_cm BETWEEN 170 AND 190 AND T1.eye_colour_id = 1\t----- bird -----\tsuperhero",
    "754": "SELECT sp.power_name FROM superhero AS s INNER JOIN hero_power AS hp ON s.id = hp.hero_id INNER JOIN superpower AS sp ON hp.power_id = sp.id WHERE s.id = 56;\t----- bird -----\tsuperhero",
    "755": "SELECT T1.full_name FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T2.race = 'Demi-God'\t----- bird -----\tsuperhero",
    "756": "SELECT COUNT(*) FROM superhero WHERE alignment_id = (SELECT id FROM alignment WHERE alignment = 'Bad')\t----- bird -----\tsuperhero",
    "757": "SELECT T2.race FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T1.weight_kg = 169\t----- bird -----\tsuperhero",
    "758": "SELECT T2.colour FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.hair_colour_id = T2.id WHERE T1.height_cm = 185 AND T1.race_id = (SELECT id FROM race WHERE race = 'human')\t----- bird -----\tsuperhero",
    "759": "SELECT T3.colour FROM superhero AS T1 INNER JOIN colour AS T3 ON T1.eye_colour_id = T3.id WHERE T1.weight_kg = (SELECT MAX(T2.weight_kg) FROM superhero AS T2)\t----- bird -----\tsuperhero",
    "760": "SELECT CAST(COUNT(CASE WHEN T1.publisher_id = 13 THEN T2.id ELSE NULL END) AS REAL) * 100 / COUNT(T2.id) FROM superhero AS T2 INNER JOIN publisher AS T1 ON T2.publisher_id = T1.id WHERE T2.height_cm BETWEEN 150 AND 180;\t----- bird -----\tsuperhero",
    "761": "SELECT T1.full_name FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id WHERE T2.gender = 'M' AND T1.weight_kg > (SELECT AVG(weight_kg) FROM superhero) * 0.79;\t----- bird -----\tsuperhero",
    "762": "SELECT T2.power_name FROM hero_power AS T1 INNER JOIN superpower AS T2 ON T1.power_id = T2.id GROUP BY T1.power_id ORDER BY COUNT(T1.hero_id) DESC LIMIT 1\t----- bird -----\tsuperhero",
    "763": "SELECT T2.attribute_value FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id WHERE T1.superhero_name = 'Abomination'\t----- bird -----\tsuperhero",
    "764": "SELECT SP.power_name FROM superpower AS SP INNER JOIN hero_power AS HP ON SP.id = HP.power_id WHERE HP.hero_id = 1;\t----- bird -----\tsuperhero",
    "765": "SELECT COUNT(DISTINCT T1.hero_id) FROM hero_power AS T1 INNER JOIN superpower AS T2 ON T1.power_id = T2.id WHERE T2.power_name = 'stealth'\t----- bird -----\tsuperhero",
    "766": "SELECT T1.full_name FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN attribute AS T3 ON T2.attribute_id = T3.id WHERE T3.attribute_name = 'strength' ORDER BY T2.attribute_value DESC LIMIT 1\t----- bird -----\tsuperhero",
    "767": "SELECT AVG(CASE WHEN T1.skin_colour_id IS NULL THEN 1 ELSE 0 END) FROM superhero AS T1 WHERE T1.skin_colour_id IS NULL\t----- bird -----\tsuperhero",
    "768": "SELECT COUNT(DISTINCT T1.id) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'Dark Horse Comics'\t----- bird -----\tsuperhero",
    "769": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id INNER JOIN hero_attribute AS T3 ON T1.id = T3.hero_id INNER JOIN attribute AS T4 ON T3.attribute_id = T4.id WHERE T4.attribute_name = 'durability' AND T2.publisher_name = 'Dark Horse Comics' GROUP BY T1.superhero_name ORDER BY MAX(T3.attribute_value) DESC LIMIT 1\t----- bird -----\tsuperhero",
    "770": "SELECT T2.colour FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.full_name = 'Abraham Sapien'\t----- bird -----\tsuperhero",
    "771": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T3.power_name = 'Flight'\t----- bird -----\tsuperhero",
    "772": "SELECT T1.colour AS eye_colour, T2.colour AS hair_colour, T3.colour AS skin_colour FROM superhero AS T4 INNER JOIN colour AS T1 ON T4.eye_colour_id = T1.id INNER JOIN colour AS T2 ON T4.hair_colour_id = T2.id INNER JOIN colour AS T3 ON T4.skin_colour_id = T3.id INNER JOIN gender AS T5 ON T4.gender_id = T5.id INNER JOIN publisher AS T6 ON T4.publisher_id = T6.id WHERE T5.gender = 'Female' AND T6.publisher_name = 'Dark Horse Comics'\t----- bird -----\tsuperhero",
    "773": "SELECT s.superhero_name, p.publisher_name FROM superhero s JOIN colour c1 ON s.hair_colour_id = c1.id JOIN colour c2 ON s.skin_colour_id = c2.id JOIN colour c3 ON s.eye_colour_id = c3.id JOIN publisher p ON s.publisher_id = p.id WHERE c1.colour = c2.colour AND c1.colour = c3.colour;\t----- bird -----\tsuperhero",
    "774": "SELECT T1.race FROM superhero AS T1 WHERE T1.superhero_name = 'A-Bomb'\t----- bird -----\tsuperhero",
    "775": "SELECT (CAST(SUM(colour = 'Blue' AND gender_id = (SELECT id FROM gender WHERE gender = 'Female')) AS REAL) / COUNT(gender_id = (SELECT id FROM gender WHERE gender = 'Female'))) * 100 FROM superhero;\t----- bird -----\tsuperhero",
    "776": "SELECT T1.superhero_name, T2.race FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T1.full_name = 'Charles Chandler'\t----- bird -----\tsuperhero",
    "777": "SELECT T2.gender FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id WHERE T1.superhero_name = 'Agent 13';\t----- bird -----\tsuperhero",
    "778": "SELECT superhero.superhero_name FROM superhero JOIN hero_power ON superhero.id = hero_power.hero_id JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'Adaptation';\t----- bird -----\tsuperhero",
    "779": "SELECT COUNT(*) FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id WHERE T1.superhero_name = 'Amazo'\t----- bird -----\tsuperhero",
    "780": "SELECT T2.power_name FROM superhero AS T1 INNER JOIN hero_power AS T3 ON T1.id = T3.hero_id INNER JOIN superpower AS T2 ON T3.power_id = T2.id WHERE T1.full_name = 'Hunter Zolomon'\t----- bird -----\tsuperhero",
    "781": "SELECT T1.height_cm FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T2.colour = 'Amber'\t----- bird -----\tsuperhero",
    "782": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id INNER JOIN colour AS T3 ON T1.hair_colour_id = T3.id WHERE T2.colour = 'Black' AND T3.colour = 'Black'\t----- bird -----\tsuperhero",
    "783": "SELECT T1.colour FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.skin_colour_id = (SELECT id FROM colour WHERE colour = 'Gold')\t----- bird -----\tsuperhero",
    "784": "SELECT T1.full_name FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T2.race = 'Vampire'\t----- bird -----\tsuperhero",
    "785": "SELECT superhero.superhero_name FROM superhero JOIN alignment ON superhero.alignment_id = alignment.id WHERE alignment.alignment = 'Neutral'\t----- bird -----\tsuperhero",
    "786": "SELECT COUNT(*) FROM hero_attribute WHERE attribute_id = (SELECT id FROM attribute WHERE attribute_name = 'Strength') AND attribute_value = (SELECT MAX(attribute_value) FROM hero_attribute WHERE attribute_id = (SELECT id FROM attribute WHERE attribute_name = 'Strength'))\t----- bird -----\tsuperhero",
    "787": "SELECT T1.race, T2.alignment FROM superhero AS T1 INNER JOIN alignment AS T2 ON T1.alignment_id = T2.id WHERE T1.superhero_name = 'Cameron Hicks'\t----- bird -----\tsuperhero",
    "788": "SELECT CAST(SUM(CASE WHEN T1.gender_id = (SELECT id FROM gender WHERE gender = 'Female') THEN 1 ELSE 0 END) * 100 / COUNT(*) AS REAL) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'Marvel Comics'\t----- bird -----\tsuperhero",
    "789": "SELECT AVG(weight_kg) FROM superhero WHERE race_id = (SELECT id FROM race WHERE race = 'Alien')\t----- bird -----\tsuperhero",
    "790": "SELECT SUM(CASE WHEN T1.full_name = 'Emil Blonsky' THEN T1.weight_kg ELSE 0 END) - SUM(CASE WHEN T1.full_name = 'Charles Chandler' THEN T1.weight_kg ELSE 0 END) FROM superhero AS T1\t----- bird -----\tsuperhero",
    "791": "SELECT superhero.superhero_name, AVG(superhero.height_cm) FROM superhero GROUP BY superhero.superhero_name;\t----- bird -----\tsuperhero",
    "792": "SELECT T2.power_name FROM superhero AS T1 INNER JOIN hero_power AS T3 ON T1.id = T3.hero_id INNER JOIN superpower AS T2 ON T3.power_id = T2.id WHERE T1.superhero_name = 'Abomination'\t----- bird -----\tsuperhero",
    "793": "SELECT COUNT(*) FROM superhero WHERE race_id = 21 AND gender_id = 1;\t----- bird -----\tsuperhero",
    "794": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN attribute AS T3 ON T2.attribute_id = T3.id WHERE T3.attribute_name = 'Speed' ORDER BY T2.attribute_value DESC LIMIT 1\t----- bird -----\tsuperhero",
    "795": "SELECT COUNT(*) FROM superhero WHERE alignment_id = 3\t----- bird -----\tsuperhero",
    "796": "SELECT A.attribute_name, HA.attribute_value FROM superhero AS S JOIN hero_attribute AS HA ON S.id = HA.hero_id JOIN attribute AS A ON HA.attribute_id = A.id WHERE S.superhero_name = '3-D Man'\t----- bird -----\tsuperhero",
    "797": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id INNER JOIN colour AS T3 ON T1.hair_colour_id = T3.id WHERE T2.colour = 'blue' AND T3.colour = 'brown'\t----- bird -----\tsuperhero",
    "798": "SELECT T1.publisher_name FROM publisher AS T1 INNER JOIN superhero AS T2 ON T1.id = T2.publisher_id WHERE T2.superhero_name IN ('Hawkman', 'Karate Kid', 'Speedy')\t----- bird -----\tsuperhero",
    "799": "SELECT COUNT(id) FROM superhero WHERE publisher_id IS NULL OR publisher_id != 1\t----- bird -----\tsuperhero",
    "800": "SELECT CAST(SUM(CASE WHEN T2.colour = 'blue' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.superhero_name) FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T2.colour = 'blue'\t----- bird -----\tsuperhero",
    "801": "SELECT CAST(SUM(CASE WHEN gender_id = 1 THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN gender_id = 2 THEN 1 ELSE 0 END) FROM superhero\t----- bird -----\tsuperhero",
    "802": "SELECT superhero_name FROM superhero ORDER BY height_cm DESC LIMIT 1\t----- bird -----\tsuperhero",
    "803": "SELECT id FROM superpower WHERE power_name = 'cryokinesis'\t----- bird -----\tsuperhero",
    "804": "SELECT superhero_name FROM superhero WHERE id = 294;\t----- bird -----\tsuperhero",
    "805": "SELECT full_name FROM superhero WHERE weight_kg = 0 OR weight_kg IS NULL;\t----- bird -----\tsuperhero",
    "806": "SELECT C.colour FROM superhero AS S INNER JOIN colour AS C ON S.eye_colour_id = C.id WHERE S.full_name = 'Karen Beecher-Duncan'\t----- bird -----\tsuperhero",
    "807": "SELECT T2.power_name FROM superhero AS T1 INNER JOIN hero_power AS T3 ON T1.id = T3.hero_id INNER JOIN superpower AS T2 ON T3.power_id = T2.id WHERE T1.full_name = 'Helen Parr';\t----- bird -----\tsuperhero",
    "808": "SELECT race.race FROM superhero INNER JOIN race ON superhero.race_id = race.id WHERE superhero.weight_kg = 108 AND superhero.height_cm = 188\t----- bird -----\tsuperhero",
    "809": "SELECT T2.publisher_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.id = 38\t----- bird -----\tsuperhero",
    "810": "SELECT T6.race FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN attribute AS T3 ON T2.attribute_id = T3.id INNER JOIN race AS T6 ON T1.race_id = T6.id WHERE T2.attribute_value = (SELECT MAX(attribute_value) FROM hero_attribute)\t----- bird -----\tsuperhero",
    "811": "SELECT T1.alignment, T3.power_name FROM superhero AS T1 INNER JOIN alignment AS T2 ON T1.alignment_id = T2.id INNER JOIN hero_power AS T3 ON T1.id = T3.hero_id WHERE T1.superhero_name = 'Atom IV'\t----- bird -----\tsuperhero",
    "812": "SELECT T1.full_name FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T2.colour = 'Blue'\t----- bird -----\tsuperhero",
    "813": "SELECT AVG(attribute_value) FROM hero_attribute WHERE hero_id IN (SELECT id FROM superhero WHERE alignment_id = 3)\t----- bird -----\tsuperhero",
    "814": "SELECT C.colour FROM superhero AS S INNER JOIN colour AS C ON S.skin_colour_id = C.id INNER JOIN hero_attribute AS HA ON S.id = HA.hero_id WHERE HA.attribute_value = 100;\t----- bird -----\tsuperhero",
    "815": "SELECT COUNT(superhero.id) FROM superhero WHERE alignment_id = 1 AND gender_id = 2\t----- bird -----\tsuperhero",
    "816": "SELECT superhero.superhero_name FROM superhero INNER JOIN hero_attribute ON superhero.id = hero_attribute.hero_id WHERE hero_attribute.attribute_value BETWEEN 75 AND 80;\t----- bird -----\tsuperhero",
    "817": "SELECT T3.race FROM superhero AS T1 JOIN colour AS T2 ON T1.hair_colour_id = T2.id JOIN gender AS T4 ON T1.gender_id = T4.id JOIN race AS T3 ON T1.race_id = T3.id WHERE T2.colour = 'blue' AND T4.gender = 'male'\t----- bird -----\tsuperhero",
    "818": "SELECT CAST(COUNT(CASE WHEN s.gender_id = 2 THEN s.id ELSE NULL END) AS REAL) * 100 / (SELECT COUNT(*) FROM superhero WHERE alignment_id = 2) FROM superhero s WHERE alignment_id = 2;\t----- bird -----\tsuperhero",
    "819": "SELECT (SUM(CASE WHEN T1.eye_colour_id = 7 THEN 1 ELSE 0 END) - SUM(CASE WHEN T1.eye_colour_id = 1 THEN 1 ELSE 0 END)) FROM superhero AS T1 WHERE T1.weight_kg = 0 OR T1.weight_kg IS NULL\t----- bird -----\tsuperhero",
    "820": "SELECT HA.attribute_value FROM superhero AS S INNER JOIN hero_attribute AS HA ON S.id = HA.hero_id INNER JOIN attribute AS A ON HA.attribute_id = A.id WHERE S.superhero_name = 'Hulk' AND A.attribute_name = 'Strength'\t----- bird -----\tsuperhero",
    "821": "SELECT T2.power_name FROM superhero AS T1 INNER JOIN hero_power AS T3 ON T1.id = T3.hero_id INNER JOIN superpower AS T2 ON T3.power_id = T2.id WHERE T1.superhero_name = 'Ajax'\t----- bird -----\tsuperhero",
    "822": "SELECT COUNT(*) FROM superhero AS s INNER JOIN colour AS c ON s.skin_colour_id = c.id INNER JOIN alignment AS a ON s.alignment_id = a.id WHERE c.colour = 'Green' AND a.alignment = 'Bad';\t----- bird -----\tsuperhero",
    "823": "SELECT COUNT(*) FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id INNER JOIN publisher AS T3 ON T1.publisher_id = T3.id WHERE T2.gender = 'Female' AND T3.publisher_name = 'Marvel Comics'\t----- bird -----\tsuperhero",
    "824": "SELECT T.superhero_name FROM superhero AS T INNER JOIN hero_power AS HP ON T.id = HP.hero_id INNER JOIN superpower AS SP ON HP.power_id = SP.id WHERE SP.power_name = 'Wind Control' ORDER BY T.superhero_name ASC;\t----- bird -----\tsuperhero",
    "825": "SELECT gender.gender FROM superhero INNER JOIN hero_power ON superhero.id = hero_power.hero_id INNER JOIN superpower ON hero_power.power_id = superpower.id INNER JOIN gender ON superhero.gender_id = gender.id WHERE superpower.power_name = 'Phoenix Force';\t----- bird -----\tsuperhero",
    "826": "SELECT MAX(T1.weight_kg) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'DC Comics'\t----- bird -----\tsuperhero",
    "827": "SELECT AVG(height_cm) FROM superhero WHERE race_id <> (SELECT id FROM race WHERE race = 'Human') AND publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Dark Horse Comics')\t----- bird -----\tsuperhero",
    "828": "SELECT COUNT(*) FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN attribute AS T3 ON T2.attribute_id = T3.id WHERE T3.attribute_name = 'Speed' AND T2.attribute_value = 100\t----- bird -----\tsuperhero",
    "829": "SELECT ABS(COUNT(CASE WHEN T1.publisher_name = 'DC Comics' THEN T2.id ELSE NULL END) - COUNT(CASE WHEN T1.publisher_name = 'Marvel Comics' THEN T2.id ELSE NULL END)) AS difference FROM publisher AS T1 INNER JOIN superhero AS T2 ON T1.id = T2.publisher_id;\t----- bird -----\tsuperhero",
    "830": "SELECT T2.attribute_name FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id WHERE T1.superhero_name = 'Black Panther' ORDER BY T2.attribute_value ASC LIMIT 1\t----- bird -----\tsuperhero",
    "831": "SELECT T2.colour FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.superhero_name = 'Abomination'\t----- bird -----\tsuperhero",
    "832": "SELECT superhero.superhero_name FROM superhero ORDER BY superhero.height_cm DESC LIMIT 1\t----- bird -----\tsuperhero",
    "833": "SELECT superhero_name FROM superhero WHERE full_name = 'Charles Chandler'\t----- bird -----\tsuperhero",
    "834": "SELECT CAST(COUNT(CASE WHEN T3.gender = 'Female' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T3.gender) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id INNER JOIN gender AS T3 ON T1.gender_id = T3.id WHERE T2.publisher_name = 'George Lucas'\t----- bird -----\tsuperhero",
    "835": "SELECT MULTIPLY(DIVIDE(SUM(CASE WHEN T1.alignment = 'Good' THEN 1 ELSE 0 END), COUNT(*)), 100.0) AS percentage_good_superheroes FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'Marvel Comics';\t----- bird -----\tsuperhero",
    "836": "SELECT COUNT(*) AS total_superheroes_with_John_as_first_name FROM superhero WHERE full_name LIKE 'John%'\t----- bird -----\tsuperhero",
    "837": "SELECT T1.hero_id FROM hero_attribute AS T1 ORDER BY T1.attribute_value LIMIT 1\t----- bird -----\tsuperhero",
    "838": "SELECT T1.full_name FROM superhero AS T1 WHERE T1.superhero_name = 'Alien'\t----- bird -----\tsuperhero",
    "839": "SELECT T1.full_name FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.weight_kg < 100 AND T2.colour = 'brown'\t----- bird -----\tsuperhero",
    "840": "SELECT T2.attribute_value FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id WHERE T1.superhero_name = 'Aquababy'\t----- bird -----\tsuperhero",
    "841": "SELECT T1.weight_kg, T2.race FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T1.id = 40;\t----- bird -----\tsuperhero",
    "842": "SELECT AVG(height_cm) FROM superhero WHERE alignment_id = (SELECT id FROM alignment WHERE alignment = 'neutral')\t----- bird -----\tsuperhero",
    "843": "SELECT hero_id FROM hero_power INNER JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'Intelligence'\t----- bird -----\tsuperhero",
    "844": "SELECT T2.colour FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.superhero_name = 'Blackwulf'\t----- bird -----\tsuperhero",
    "845": "SELECT T2.power_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id WHERE T1.height_cm > 0.8 * (SELECT AVG(height_cm) FROM superhero)\t----- bird -----\tsuperhero",
    "846": "SELECT T2.driverRef FROM qualifying AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.raceId = 18 AND T1.q1 IN ( SELECT MAX(q1) FROM qualifying WHERE raceId = 18 LIMIT 5 );\t----- bird -----\tformula_1",
    "847": "SELECT D.surname FROM drivers AS D INNER JOIN qualifying AS Q ON D.driverId = Q.driverId WHERE Q.raceId = 19 AND Q.q2 = (SELECT MIN(q2) FROM qualifying WHERE raceId = 19)\t----- bird -----\tformula_1",
    "848": "SELECT T4.year FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId INNER JOIN seasons AS T3 ON T1.year = T3.year WHERE T2.location = 'Shanghai'\t----- bird -----\tformula_1",
    "849": "SELECT T1.url FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T2.name = 'Circuit de Barcelona-Catalunya'\t----- bird -----\tformula_1",
    "850": "SELECT races.name FROM races INNER JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.country = 'Germany';\t----- bird -----\tformula_1",
    "851": "SELECT t1.name, t2.position FROM circuits AS t1 INNER JOIN constructorResults AS t2 ON t1.circuitId = t2.circuitId INNER JOIN constructors AS t3 ON t2.constructorId = t3.constructorId WHERE t3.name = 'Renault'\t----- bird -----\tformula_1",
    "852": "SELECT COUNT(*) FROM races WHERE year = 2010 AND circuitId NOT IN (SELECT circuitId FROM circuits WHERE country IN ('Asia', 'Europe'))\t----- bird -----\tformula_1",
    "853": "SELECT T1.name FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T2.country = 'Spain'\t----- bird -----\tformula_1",
    "854": "SELECT c.lat, c.lng FROM circuits c INNER JOIN races r ON c.circuitId = r.circuitId WHERE r.name = 'Australian Grand Prix';\t----- bird -----\tformula_1",
    "855": "SELECT races.url FROM races INNER JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.name = 'Sepang International Circuit'\t----- bird -----\tformula_1",
    "856": "SELECT Races.date, Races.time FROM Races INNER JOIN Circuits ON Races.circuitId = Circuits.circuitId WHERE Circuits.name = 'Sepang International Circuit'\t----- bird -----\tformula_1",
    "857": "SELECT lat, lng FROM circuits WHERE name = 'Abu Dhabi Grand Prix'\t----- bird -----\tformula_1",
    "858": "SELECT T2.nationality FROM constructorResults AS T1 INNER JOIN constructors AS T2 ON T1.constructorId = T2.constructorId WHERE T1.raceId = 24 AND T1.points = 1;\t----- bird -----\tformula_1",
    "859": "SELECT q1 FROM qualifying WHERE raceId = 354 AND driverId = (SELECT driverId FROM drivers WHERE forename = 'Bruno' AND surname = 'Senna')\t----- bird -----\tformula_1",
    "860": "SELECT nationality FROM drivers WHERE driverId = (SELECT driverId FROM qualifying WHERE raceId = 355 AND q2 = '0:01:40')\t----- bird -----\tformula_1",
    "861": "SELECT D.number FROM drivers AS D INNER JOIN qualifying AS Q ON D.driverId = Q.driverId WHERE Q.raceId = 903 AND Q.q3 = '0:01:54'\t----- bird -----\tformula_1",
    "862": "SELECT COUNT(*) FROM results WHERE raceId = (SELECT raceId FROM races WHERE name = 'Bahrain Grand Prix' AND year = 2007) AND time IS NULL\t----- bird -----\tformula_1",
    "863": "SELECT url FROM seasons WHERE year = (SELECT year FROM races WHERE raceId = 901)\t----- bird -----\tformula_1",
    "864": "SELECT COUNT(DISTINCT driverId) FROM results WHERE raceId = (SELECT raceId FROM races WHERE date = '2015-11-29') AND time IS NOT NULL\t----- bird -----\tformula_1",
    "865": "SELECT d.forename, d.surname FROM results r JOIN drivers d ON r.driverId = d.driverId WHERE r.raceId = 592 AND r.time IS NOT NULL ORDER BY d.dob ASC LIMIT 1\t----- bird -----\tformula_1",
    "866": "SELECT T2.forename, T2.surname, T2.url FROM lapTimes AS T1 INNER JOIN drivers AS T2 ON T2.driverId = T1.driverId WHERE T1.raceId = 161 AND T1.time = '0:01:27'\t----- bird -----\tformula_1",
    "867": "SELECT d.nationality FROM drivers d JOIN results r ON d.driverId = r.driverId WHERE r.raceId = 933 AND r.fastestLapSpeed = (SELECT MAX(fastestLapSpeed) FROM results WHERE raceId = 933)\t----- bird -----\tformula_1",
    "868": "SELECT location, lat, lng FROM circuits WHERE name = 'Malaysian Grand Prix'\t----- bird -----\tformula_1",
    "869": "SELECT T2.url FROM constructorResults AS T1 INNER JOIN constructors AS T2 ON T1.constructorId = T2.constructorId WHERE T1.raceId = 9 ORDER BY T1.points DESC LIMIT 1\t----- bird -----\tformula_1",
    "870": "SELECT q1 FROM qualifying WHERE raceId = 345 AND driverId = (SELECT driverId FROM drivers WHERE forename = 'Lucas' AND surname = 'di Grassi')\t----- bird -----\tformula_1",
    "871": "SELECT nationality FROM drivers WHERE driverId = (SELECT driverId FROM qualifying WHERE raceId = 347 AND q2 = '0:01:15')\t----- bird -----\tformula_1",
    "872": "SELECT D.code FROM drivers AS D INNER JOIN qualifying AS Q ON D.driverId = Q.driverId INNER JOIN races AS R ON Q.raceId = R.raceId WHERE R.raceId = 45 AND Q.q3 = '0:01:33'\t----- bird -----\tformula_1",
    "873": "SELECT T1.time FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.raceId = 743 AND T2.forename = 'Bruce' AND T2.surname = 'McLaren'\t----- bird -----\tformula_1",
    "874": "SELECT T2.forename, T2.surname FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T1.raceId = T3.raceId WHERE T3.name = 'San Marino Grand Prix' AND T3.year = 2006 AND T1.position = 2\t----- bird -----\tformula_1",
    "875": "SELECT url FROM seasons WHERE year = (SELECT year FROM races WHERE raceId = 901)\t----- bird -----\tformula_1",
    "876": "SELECT COUNT(T1.driverId) FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.date = '2015-11-29' AND T1.statusId = (SELECT statusId FROM status WHERE status = 'Finished')\t----- bird -----\tformula_1",
    "877": "SELECT d.forename, d.surname FROM results r JOIN drivers d ON r.driverId = d.driverId WHERE r.raceId = 872 AND r.time IS NOT NULL ORDER BY d.dob DESC LIMIT 1\t----- bird -----\tformula_1",
    "878": "SELECT T2.forename || ' ' || T2.surname AS DriverName FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.raceId = 348 AND T1.time = (SELECT MIN(time) FROM results WHERE raceId = 348)\t----- bird -----\tformula_1",
    "879": "SELECT T1.nationality FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T2.fastestLapSpeed = (SELECT MAX(fastestLapSpeed) FROM results)\t----- bird -----\tformula_1",
    "880": "SELECT CAST((T1.fastestLapSpeed - T2.fastestLapSpeed) * 100 / T1.fastestLapSpeed AS REAL) FROM results AS T1 INNER JOIN results AS T2 ON T1.raceId = 853 AND T2.raceId = 854 WHERE T1.driverId = (SELECT driverId FROM drivers WHERE forename = 'Paul' AND surname = 'di Resta')\t----- bird -----\tformula_1",
    "881": "SELECT CAST(COUNT(CASE WHEN T2.time IS NOT NULL THEN 1 END) AS REAL) * 100 / COUNT(T1.driverId) FROM races AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId WHERE T1.date = '1983-07-16'\t----- bird -----\tformula_1",
    "882": "SELECT MIN(year) FROM races WHERE circuitId = (SELECT circuitId FROM circuits WHERE name = 'Marina Bay Street Circuit')\t----- bird -----\tformula_1",
    "883": "SELECT COUNT(*) FROM races WHERE year = 2005; SELECT name FROM races WHERE year = 2005 ORDER BY round DESC;\t----- bird -----\tformula_1",
    "884": "SELECT races.name FROM races WHERE year = (SELECT MIN(year(date)) FROM races) AND month = (SELECT MIN(month(date)) FROM races) ORDER BY date;\t----- bird -----\tformula_1",
    "885": "SELECT T2.name, T1.date FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T1.year = 1999 ORDER BY T1.round DESC LIMIT 1\t----- bird -----\tformula_1",
    "886": "SELECT year FROM races GROUP BY year HAVING MAX(round);\t----- bird -----\tformula_1",
    "887": "SELECT name FROM races WHERE year = 2017 AND raceId NOT IN (SELECT raceId FROM races WHERE year = 2000)\t----- bird -----\tformula_1",
    "888": "SELECT C.country, CI.name, CI.location FROM races AS R INNER JOIN circuits AS CI ON R.circuitId = CI.circuitId INNER JOIN seasons AS S ON R.year = S.year WHERE R.round = 1 AND S.year = (SELECT MIN(year) FROM seasons WHERE url LIKE '%europe%')\t----- bird -----\tformula_1",
    "889": "SELECT MAX(year) FROM races INNER JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.name = 'Brands Hatch' AND races.name = 'British Grand Prix'\t----- bird -----\tformula_1",
    "890": "SELECT COUNT(DISTINCT T1.year) FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T2.name = 'Silverstone Circuit' AND T1.name = 'British Grand Prix'\t----- bird -----\tformula_1",
    "891": "SELECT Drivers.forename, Drivers.surname FROM Drivers INNER JOIN Results ON Drivers.driverId = Results.driverId INNER JOIN Races ON Results.raceId = Races.raceId WHERE Races.name = 'Singapore Grand Prix' AND Races.year = 2010 ORDER BY Results.position;\t----- bird -----\tformula_1",
    "892": "SELECT drivers.forename || ' ' || drivers.surname AS full_name FROM drivers JOIN driverStandings ON drivers.driverId = driverStandings.driverId WHERE driverStandings.points = (SELECT MAX(points) FROM driverStandings);\t----- bird -----\tformula_1",
    "893": "SELECT D.forename, D.surname, R.points FROM drivers AS D INNER JOIN results AS R ON D.driverId = R.driverId INNER JOIN races AS RA ON R.raceId = RA.raceId WHERE RA.year = 2017 AND RA.name = 'Chinese Grand Prix' ORDER BY R.points DESC LIMIT 3\t----- bird -----\tformula_1",
    "894": "SELECT T2.forename, T2.surname, T3.name FROM lapTimes AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T1.raceId = T3.raceId WHERE T1.time = (SELECT MIN(time) FROM lapTimes)\t----- bird -----\tformula_1",
    "895": "SELECT AVG(LapTimes.milliseconds) FROM drivers JOIN lapTimes ON drivers.driverId = lapTimes.driverId JOIN races ON races.raceId = lapTimes.raceId WHERE drivers.forename = 'Sebastian' AND drivers.surname = 'Vettel' AND races.year = 2009 AND races.name = 'Chinese Grand Prix'\t----- bird -----\tformula_1",
    "896": "SELECT CAST(SUM(CASE WHEN surname = 'Hamilton' AND year >= 2010 AND position > 1 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(raceId) FROM results WHERE surname = 'Hamilton' AND year >= 2010\t----- bird -----\tformula_1",
    "897": "SELECT D.forename, D.surname, D.nationality, AVG(DS.points) AS avg_points FROM drivers AS D INNER JOIN driverStandings AS DS ON D.driverId = DS.driverId GROUP BY D.driverId ORDER BY COUNT(DS.wins) DESC LIMIT 1;\t----- bird -----\tformula_1",
    "898": "SELECT 2022 - year(dob) + 1 AS age, forename, surname FROM drivers WHERE nationality = 'Japanese' ORDER BY dob DESC LIMIT 1\t----- bird -----\tformula_1",
    "899": "SELECT T2.name FROM circuits AS T1 INNER JOIN races AS T2 ON T1.circuitId = T2.circuitId WHERE T2.year BETWEEN 1990 AND 2000 GROUP BY T1.name HAVING COUNT(T2.raceId) = 4;\t----- bird -----\tformula_1",
    "900": "SELECT T1.name AS circuit_name, T1.location AS circuit_location, T2.name AS race_name FROM circuits AS T1 INNER JOIN races AS T2 ON T1.circuitId = T2.circuitId WHERE T1.country = 'USA' AND T2.year = 2006;\t----- bird -----\tformula_1",
    "901": "SELECT T1.name AS race_name, T2.name AS circuit_name, T2.location FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE strftime('%m', T1.date) = '09' AND T1.year = 2005;\t----- bird -----\tformula_1",
    "902": "SELECT T2.name FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T1.forename = 'Alex' AND T1.surname = 'Yoong' AND T2.position < 10;\t----- bird -----\tformula_1",
    "903": "SELECT COUNT(*) FROM results AS R INNER JOIN drivers AS D ON R.driverId = D.driverId INNER JOIN races AS RA ON R.raceId = RA.raceId INNER JOIN circuits AS C ON RA.circuitId = C.circuitId WHERE D.forename = 'Michael' AND D.surname = 'Schumacher' AND R.points = (SELECT MAX(points) FROM results WHERE raceId IN (SELECT raceId FROM races WHERE circuitId = (SELECT circuitId FROM circuits WHERE circuitRef = 'sepang')))\t----- bird -----\tformula_1",
    "904": "SELECT T1.name, T2.year FROM races AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId INNER JOIN drivers AS T3 ON T2.driverId = T3.driverId WHERE T3.forename = 'Michael' AND T3.surname = 'Schumacher' ORDER BY T2.milliseconds LIMIT 1\t----- bird -----\tformula_1",
    "905": "SELECT AVG(R.points) FROM drivers AS D INNER JOIN results AS R ON D.driverId = R.driverId INNER JOIN races AS RA ON R.raceId = RA.raceId WHERE D.forename = 'Eddie' AND D.surname = 'Irvine' AND RA.year = 2000\t----- bird -----\tformula_1",
    "906": "SELECT T2.name, T3.points FROM drivers AS T1 INNER JOIN races AS T2 ON T1.driverId = T2.driverId INNER JOIN results AS T3 ON T2.raceId = T3.raceId WHERE T1.forename = 'Lewis' AND T1.surname = 'Hamilton' ORDER BY T2.year LIMIT 1;\t----- bird -----\tformula_1",
    "907": "SELECT races.name, circuits.country FROM races INNER JOIN circuits ON races.circuitId = circuits.circuitId WHERE races.year = 2017 ORDER BY races.date;\t----- bird -----\tformula_1",
    "908": "SELECT MAX(laps) AS most_laps, races.name, races.year, circuits.location FROM races JOIN circuits ON races.circuitId = circuits.circuitId WHERE races.raceId IN (SELECT raceId FROM results WHERE laps = (SELECT MAX(laps) FROM results)) GROUP BY races.name, races.year, circuits.location;\t----- bird -----\tformula_1",
    "909": "SELECT CAST(SUM(IIF(T2.country = 'Germany' AND T1.name = 'European Grand Prix', 1, 0)) AS REAL) * 100 / COUNT(T1.raceId) FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T1.name = 'European Grand Prix'\t----- bird -----\tformula_1",
    "910": "SELECT lat, lng FROM circuits WHERE name = 'Silverstone Circuit';\t----- bird -----\tformula_1",
    "911": "SELECT name FROM circuits WHERE lat = (SELECT MAX(lat) FROM circuits WHERE name IN ('Silverstone Circuit', 'Hockenheimring', 'Hungaroring'))\t----- bird -----\tformula_1",
    "912": "SELECT circuitRef FROM circuits WHERE name = 'Marina Bay Street Circuit';\t----- bird -----\tformula_1",
    "913": "SELECT c.country FROM circuits AS c WHERE c.alt = (SELECT MAX(alt) FROM circuits)\t----- bird -----\tformula_1",
    "914": "SELECT COUNT(code) FROM drivers WHERE code IS NULL\t----- bird -----\tformula_1",
    "915": "SELECT T1.nationality FROM drivers AS T1 WHERE T1.dob = (SELECT MIN(dob) FROM drivers)\t----- bird -----\tformula_1",
    "916": "SELECT surname FROM drivers WHERE nationality = 'Italian'\t----- bird -----\tformula_1",
    "917": "SELECT url FROM drivers WHERE forename = 'Anthony' AND surname = 'Davidson'\t----- bird -----\tformula_1",
    "918": "SELECT driverRef FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton'\t----- bird -----\tformula_1",
    "919": "SELECT t2.name FROM races AS t1 INNER JOIN circuits AS t2 ON t1.circuitId = t2.circuitId WHERE t1.year = 2009 AND t1.name = 'Spanish Grand Prix'\t----- bird -----\tformula_1",
    "920": "SELECT T1.year FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T2.name = 'Silverstone Circuit'\t----- bird -----\tformula_1",
    "921": "SELECT races.name, races.date, races.url FROM races INNER JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.name = 'Silverstone'\t----- bird -----\tformula_1",
    "922": "SELECT T1.time FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T1.year >= 2010 AND T1.year < 2020 AND T2.location = 'Abu Dhabi';\t----- bird -----\tformula_1",
    "923": "SELECT COUNT(*) FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T2.country = 'Italy'\t----- bird -----\tformula_1",
    "924": "SELECT races.date FROM races JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.name = 'Barcelona-Catalunya'\t----- bird -----\tformula_1",
    "925": "SELECT T2.url FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T1.year = 2009 AND T1.name = 'Spanish Grand Prix'\t----- bird -----\tformula_1",
    "926": "SELECT MIN(T1.fastestLapTime) FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T2.forename = 'Lewis' AND T2.surname = 'Hamilton'\t----- bird -----\tformula_1",
    "927": "SELECT t2.forename, t2.surname FROM results AS t1 INNER JOIN drivers AS t2 ON t1.driverId = t2.driverId WHERE t1.fastestLapSpeed = (SELECT MAX(fastestLapSpeed) FROM results)\t----- bird -----\tformula_1",
    "928": "SELECT T2.driverRef FROM races AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId WHERE T1.name = 'Australian Grand Prix' AND T1.year = 2008 AND T2.position = 1\t----- bird -----\tformula_1",
    "929": "SELECT T1.name FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T2.raceId = T3.raceId WHERE T1.forename = 'Lewis' AND T1.surname = 'Hamilton'\t----- bird -----\tformula_1",
    "930": "SELECT races.name FROM results JOIN races ON results.raceId = races.raceId JOIN drivers ON results.driverId = drivers.driverId WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton' ORDER BY results.rank ASC LIMIT 1\t----- bird -----\tformula_1",
    "931": "SELECT MAX(fastestLapSpeed) FROM results INNER JOIN races ON results.raceId = races.raceId WHERE races.year = 2009 AND races.name = 'Spanish Grand Prix'\t----- bird -----\tformula_1",
    "932": "SELECT T1.year FROM drivers AS T2 INNER JOIN results AS T1 ON T2.driverId = T1.driverId WHERE T2.forename = 'Lewis' AND T2.surname = 'Hamilton'\t----- bird -----\tformula_1",
    "933": "SELECT T1.positionOrder FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T1.raceId = T3.raceId WHERE T2.forename = 'Lewis' AND T2.surname = 'Hamilton' AND T3.year = 2008 AND T3.name = 'Australian Grand Prix'\t----- bird -----\tformula_1",
    "934": "SELECT T2.forename, T2.surname FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T1.raceId = T3.raceId WHERE T3.year = 2008 AND T1.grid = 4\t----- bird -----\tformula_1",
    "935": "SELECT COUNT(*) FROM results WHERE raceId = (SELECT raceId FROM races WHERE year = 2008 AND name = 'Australian Grand Prix') AND time IS NOT NULL;\t----- bird -----\tformula_1",
    "936": "SELECT T1.fastestLapTime FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId INNER JOIN drivers AS T3 ON T1.driverId = T3.driverId WHERE T2.year = 2008 AND T2.name = 'Australian Grand Prix' AND T3.forename = 'Lewis' AND T3.surname = 'Hamilton'\t----- bird -----\tformula_1",
    "937": "SELECT T1.time FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.year = 2008 AND T2.name = 'Australian Grand Prix' AND T1.position = 2\t----- bird -----\tformula_1",
    "938": "SELECT T2.forename, T2.surname, T2.url FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T1.raceId = T3.raceId WHERE T3.year = 2008 AND T3.name = 'Australian Grand Prix' AND T1.position = 1 AND T1.time LIKE '__:__:__.___'\t----- bird -----\tformula_1",
    "939": "SELECT COUNT(CASE WHEN T2.nationality = 'American' THEN T1.driverId ELSE NULL END) FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T2.raceId = T3.raceId WHERE T3.year = 2008 AND T3.name = 'Australian Grand Prix'\t----- bird -----\tformula_1",
    "940": "SELECT COUNT(DISTINCT T1.driverID) FROM Results AS T1 INNER JOIN Races AS T2 ON T1.raceID = T2.raceID WHERE T2.year = 2008 AND T1.time IS NOT NULL\t----- bird -----\tformula_1",
    "941": "SELECT SUM(points) FROM results WHERE driverId = (SELECT driverId FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton')\t----- bird -----\tformula_1",
    "942": "SELECT AVG((SUBSTR(fastestLapTime, 1, 2) * 60) + SUBSTR(fastestLapTime, 4, 2) + (SUBSTR(fastestLapTime, 7) / 1000)) FROM results INNER JOIN drivers ON results.driverId = drivers.driverId WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton'\t----- bird -----\tformula_1",
    "943": "SELECT CAST(SUM(CASE WHEN R.time IS NOT NULL THEN 1 ELSE 0 END) AS REAL) / COUNT(R.raceId) AS rate FROM races AS R INNER JOIN results AS RS ON R.raceId = RS.raceId WHERE R.year = 2008 AND R.name = 'Australian Grand Prix';\t----- bird -----\tformula_1",
    "944": "SELECT ((STRFTIME('%s', R1.time) - STRFTIME('%s', R2.time)) / STRFTIME('%s', R2.time) * 100) AS percentage_faster FROM results AS R1 INNER JOIN races AS RA ON R1.raceId = RA.raceId INNER JOIN drivers AS D1 ON R1.driverId = D1.driverId INNER JOIN ( SELECT R3.raceId, R3.driverId, R3.time FROM results AS R3 INNER JOIN races AS RA2 ON R3.raceId = RA2.raceId INNER JOIN drivers AS D2 ON R3.driverId = D2.driverId WHERE RA2.year = 2008 AND RA2.name = 'Australian Grand Prix' AND R3.position = (SELECT MAX(position) FROM results WHERE raceId = R3.raceId) ) AS R2 ON RA.raceId = R2\t----- bird -----\tformula_1",
    "945": "SELECT COUNT(*) FROM circuits WHERE location = 'Melbourne' AND country = 'Australia';\t----- bird -----\tformula_1",
    "946": "SELECT location, lat, lng FROM circuits WHERE country = 'USA'\t----- bird -----\tformula_1",
    "947": "SELECT COUNT(driverId) FROM drivers WHERE nationality = 'British' AND SUBSTR(dob, 1, 4) > 1980;\t----- bird -----\tformula_1",
    "948": "SELECT AVG(points) FROM constructorResults JOIN constructors ON constructorResults.constructorId = constructors.constructorId WHERE constructors.nationality = 'British'\t----- bird -----\tformula_1",
    "949": "SELECT c.name FROM constructors c JOIN constructorStandings cs ON c.constructorId = cs.constructorId ORDER BY cs.points DESC LIMIT 1;\t----- bird -----\tformula_1",
    "950": "SELECT C.name FROM constructors AS C LEFT JOIN constructorStandings AS CS ON C.constructorId = CS.constructorId WHERE CS.points = 0 AND CS.raceId = 291;\t----- bird -----\tformula_1",
    "951": "SELECT COUNT(T1.constructorId) FROM constructorStandings AS T1 INNER JOIN constructors AS T2 ON T1.constructorId = T2.constructorId INNER JOIN races AS T3 ON T1.raceId = T3.raceId WHERE T2.nationality = 'Japanese' AND T1.points = 0 GROUP BY T1.constructorId HAVING COUNT(T1.raceId) = 2;\t----- bird -----\tformula_1",
    "952": "SELECT t2.name AS constructorName FROM constructorStandings AS t1 INNER JOIN constructors AS t2 ON t1.constructorId = t2.constructorId WHERE t1.position = 1;\t----- bird -----\tformula_1",
    "953": "SELECT COUNT(DISTINCT constructors.constructorId) FROM constructors JOIN constructorResults ON constructors.constructorId = constructorResults.constructorId JOIN races ON constructorResults.raceId = races.raceId JOIN lapTimes ON races.raceId = lapTimes.raceId WHERE constructors.nationality = 'French' AND lapTimes.lap > 50;\t----- bird -----\tformula_1",
    "954": "SELECT CAST(SUM(CASE WHEN T1.time IS NOT NULL THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.driverId) FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T1.driverId IN (SELECT driverId FROM drivers WHERE nationality = 'Japanese') AND T2.year BETWEEN 2007 AND 2009\t----- bird -----\tformula_1",
    "955": "SELECT T1.year, AVG(strftime('%s', T2.time)) FROM seasons AS T1 INNER JOIN results AS T2 ON T1.year = T2.year WHERE T2.position = 1 AND T2.time IS NOT NULL GROUP BY T1.year\t----- bird -----\tformula_1",
    "956": "SELECT T1.forename, T1.surname FROM drivers AS T1 INNER JOIN driverStandings AS T2 ON T1.driverId = T2.driverId WHERE year(T1.dob) > 1975 AND T2.position = 2\t----- bird -----\tformula_1",
    "957": "SELECT COUNT(*) FROM drivers d JOIN results r ON d.driverId = r.driverId WHERE d.nationality = 'Italian' AND r.time IS NULL\t----- bird -----\tformula_1",
    "958": "SELECT forename, surname FROM drivers WHERE driverId = (SELECT driverId FROM results WHERE fastestLap = 1 ORDER BY milliseconds ASC LIMIT 1)\t----- bird -----\tformula_1",
    "959": "SELECT T2.fastestLap FROM Results AS T1 INNER JOIN Drivers AS T2 ON T1.driverId = T2.driverId INNER JOIN Races AS T3 ON T1.raceId = T3.raceId WHERE T3.year = 2009 AND T1.position = 1;\t----- bird -----\tformula_1",
    "960": "SELECT AVG(fastestLapSpeed) FROM results WHERE raceId = (SELECT raceId FROM races WHERE name = 'Spanish Grand Prix' AND year = 2009)\t----- bird -----\tformula_1",
    "961": "SELECT races.name, races.year FROM races JOIN results ON races.raceId = results.raceId WHERE results.milliseconds IS NOT NULL ORDER BY results.milliseconds ASC LIMIT 1;\t----- bird -----\tformula_1",
    "962": "SELECT CAST(SUM(CASE WHEN SUBSTR(dob, 1, 4) < '1985' AND laps > 50 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(driverId) FROM drivers WHERE SUBSTR(dob, 1, 4) < '1985' AND year BETWEEN 2000 AND 2005;\t----- bird -----\tformula_1",
    "963": "SELECT COUNT(*) FROM drivers AS D INNER JOIN lapTimes AS LT ON D.driverId = LT.driverId WHERE D.nationality = 'French' AND LT.milliseconds < 120000\t----- bird -----\tformula_1",
    "964": "SELECT driverRef FROM drivers WHERE nationality = 'American'\t----- bird -----\tformula_1",
    "965": "SELECT raceId FROM races WHERE year = 2009;\t----- bird -----\tformula_1",
    "966": "SELECT COUNT(DISTINCT driverId) FROM results WHERE raceId = 18;\t----- bird -----\tformula_1",
    "967": "SELECT T1.driverId, T1.forename, T1.surname, T1.dob, T1.nationality FROM drivers AS T1 ORDER BY T1.dob DESC LIMIT 3\t----- bird -----\tformula_1",
    "968": "SELECT driverRef FROM drivers WHERE forename = 'Robert' AND surname = 'Kubica';\t----- bird -----\tformula_1",
    "969": "SELECT COUNT(driverId) AS cnt FROM drivers WHERE nationality = 'Australian' AND strftime('%Y', dob) = '1980'\t----- bird -----\tformula_1",
    "970": "SELECT forename, surname FROM drivers WHERE nationality = 'German' AND dob BETWEEN 1980 AND 1990 ORDER BY time LIMIT 3;\t----- bird -----\tformula_1",
    "971": "SELECT MIN(dob) as oldest_driver_dob, driverRef FROM drivers WHERE nationality = 'German'\t----- bird -----\tformula_1",
    "972": "SELECT T1.driverId, T1.code FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE STRFTIME('%Y', T1.dob) = '1971' AND T2.fastestLapTime IS NOT NULL\t----- bird -----\tformula_1",
    "973": "SELECT D.forename, D.surname FROM drivers AS D INNER JOIN lapTimes AS L ON D.driverId = L.driverId WHERE STRFTIME('%Y', D.dob) < '1982' AND L.time = (SELECT MAX(time) FROM lapTimes) AND D.nationality = 'Spanish' ORDER BY L.time DESC LIMIT 10;\t----- bird -----\tformula_1",
    "974": "SELECT T1.year FROM races AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId WHERE T2.fastestLapTime IS NOT NULL ORDER BY T2.fastestLapTime ASC LIMIT 1\t----- bird -----\tformula_1",
    "975": "SELECT year FROM races JOIN lapTimes ON races.raceId = lapTimes.raceId GROUP BY year ORDER BY MAX(milliseconds) DESC LIMIT 1\t----- bird -----\tformula_1",
    "976": "SELECT driverId FROM lapTimes WHERE lap = 1 ORDER BY time ASC LIMIT 5\t----- bird -----\tformula_1",
    "977": "SELECT COUNT(T1.resultId) FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T1.statusId = 2 AND T1.time IS NOT NULL AND T2.raceId > 50 AND T2.raceId < 100\t----- bird -----\tformula_1",
    "978": "SELECT COUNT(*) AS TimesHeld, location, lat, lng FROM circuits WHERE country = 'Austria' GROUP BY location, lat, lng;\t----- bird -----\tformula_1",
    "979": "SELECT T1.round, COUNT(T2.driverId) AS numFinishers FROM races AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId WHERE T2.time IS NOT NULL GROUP BY T1.round ORDER BY numFinishers DESC LIMIT 1\t----- bird -----\tformula_1",
    "980": "SELECT T1.driverRef, T1.nationality, T1.dob FROM drivers AS T1 INNER JOIN qualifying AS T2 ON T1.driverId = T2.driverId WHERE T2.raceId = 23 AND T2.q2 IS NOT NULL\t----- bird -----\tformula_1",
    "981": "SELECT T1.name, T1.date, T1.time FROM races AS T1 INNER JOIN qualifying AS T2 ON T1.raceId = T2.raceId INNER JOIN drivers AS T3 ON T2.driverId = T3.driverId WHERE T3.dob = (SELECT MAX(year(dob)) FROM drivers) ORDER BY T1.date LIMIT 1\t----- bird -----\tformula_1",
    "982": "SELECT COUNT(*) FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T1.nationality = 'American' AND T2.statusId = 2;\t----- bird -----\tformula_1",
    "983": "SELECT T2.name, T2.url FROM constructors AS T1 INNER JOIN constructorStandings AS T2 ON T1.constructorId = T2.constructorId WHERE T1.nationality = 'Italian' ORDER BY T2.points DESC LIMIT 1;\t----- bird -----\tformula_1",
    "984": "SELECT T2.url FROM constructorStandings AS T1 INNER JOIN constructors AS T2 ON T1.constructorId = T2.constructorId GROUP BY T1.constructorId ORDER BY SUM(T1.wins) DESC LIMIT 1\t----- bird -----\tformula_1",
    "985": "SELECT T2.forename, T2.surname FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T1.raceId = T3.raceId WHERE T3.name = 'French Grand Prix' AND T1.lap = 3 ORDER BY T1.time DESC LIMIT 1\t----- bird -----\tformula_1",
    "986": "SELECT Races.name, Results.fastestLapTime, Results.milliseconds FROM Races INNER JOIN Results ON Races.raceId = Results.raceId WHERE Results.fastestLap = 1 ORDER BY Results.milliseconds ASC LIMIT 1\t----- bird -----\tformula_1",
    "987": "SELECT AVG(fastestLapTime) FROM results WHERE raceId = (SELECT raceId FROM races WHERE name = 'United States Grand Prix' AND year = 2006) AND rank < 11;\t----- bird -----\tformula_1",
    "988": "SELECT D.driverId, D.forename, D.surname FROM drivers D JOIN pitStops P ON D.driverId = P.driverId WHERE D.nationality = 'German' AND D.dob BETWEEN '1980-01-01' AND '1985-12-31' GROUP BY D.driverId ORDER BY MIN(SUM(P.duration)/COUNT(P.duration)) ASC LIMIT 5;\t----- bird -----\tformula_1",
    "989": "SELECT T2.forename || ' ' || T2.surname AS Champion, T1.time AS FinishTime FROM races AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId WHERE T1.name = 'Canadian Grand Prix' AND T1.year = 2008 AND T2.position = 1;\t----- bird -----\tformula_1",
    "990": "SELECT C.constructorRef, C.url FROM constructors AS C INNER JOIN constructorResults AS CR ON C.constructorId = CR.constructorId INNER JOIN races AS R ON CR.raceId = R.raceId WHERE R.name = 'Singapore Grand Prix' AND R.year = 2009 ORDER BY CR.points DESC LIMIT 1;\t----- bird -----\tformula_1",
    "991": "SELECT forename || ' ' || surname AS full_name, dob FROM drivers WHERE nationality = 'Austrian' AND year(dob) BETWEEN 1981 AND 1991;\t----- bird -----\tformula_1",
    "992": "SELECT forename || ' ' || surname AS full_name, url AS wikipedia_page, dob AS date_of_birth FROM drivers WHERE nationality = 'German' AND year(dob) BETWEEN 1971 AND 1985 ORDER BY dob DESC;\t----- bird -----\tformula_1",
    "993": "SELECT location, country, lat, lng FROM circuits WHERE name = 'Hungaroring'\t----- bird -----\tformula_1",
    "994": "SELECT T2.name, T2.nationality, SUM(T1.points) AS TotalPoints FROM constructorResults AS T1 INNER JOIN constructors AS T2 ON T1.constructorId = T2.constructorId INNER JOIN races AS T3 ON T1.raceId = T3.raceId WHERE T3.name = 'Monaco Grand Prix' AND T3.year BETWEEN 1980 AND 2010 GROUP BY T1.constructorId ORDER BY TotalPoints DESC LIMIT 1\t----- bird -----\tformula_1",
    "995": "SELECT AVG(T3.points) FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T2.raceId = T3.raceId WHERE T3.name = 'Turkish Grand Prix' AND T1.forename = 'Lewis' AND T1.surname = 'Hamilton'\t----- bird -----\tformula_1",
    "996": "SELECT YEAR(date) AS Year, COUNT(raceId) AS NumRaces FROM races WHERE date BETWEEN '2000-01-01' AND '2010-12-31' GROUP BY Year ORDER BY Year;\t----- bird -----\tformula_1",
    "997": "SELECT MAX(nationality) FROM drivers\t----- bird -----\tformula_1",
    "998": "SELECT SUM(R.points) AS total_points, R.wins FROM results AS R WHERE R.positionOrder = 91\t----- bird -----\tformula_1",
    "999": "SELECT races.name FROM results INNER JOIN races ON results.raceId = races.raceId WHERE results.fastestLapTime = (SELECT MIN(fastestLapTime) FROM results)\t----- bird -----\tformula_1",
    "1000": "SELECT c.name || ', ' || c.location || ', ' || c.country AS full_location FROM circuits AS c INNER JOIN races AS r ON c.circuitId = r.circuitId WHERE r.date = (SELECT MAX(date) FROM races)\t----- bird -----\tformula_1",
    "1001": "SELECT T2.forename || ' ' || T2.surname AS full_name FROM qualifying AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T1.raceId = T3.raceId INNER JOIN circuits AS T4 ON T3.circuitId = T4.circuitId WHERE T3.year = 2008 AND T4.name = 'Marina Bay Street Circuit' AND T1.q3 = 1;\t----- bird -----\tformula_1",
    "1002": "SELECT forename || ' ' || surname AS full_name, nationality, races.name FROM drivers JOIN driverStandings ON drivers.driverId = driverStandings.driverId JOIN races ON driverStandings.raceId = races.raceId WHERE dob = (SELECT MAX(dob) FROM drivers)\t----- bird -----\tformula_1",
    "1003": "SELECT COUNT(*) FROM results AS R INNER JOIN races AS RA ON R.raceId = RA.raceId INNER JOIN drivers AS D ON R.driverId = D.driverId WHERE RA.name = 'Canadian Grand Prix' AND D.driverId = ( SELECT driverId FROM ( SELECT driverId, COUNT(*) AS num_accidents FROM results WHERE statusId = 3 GROUP BY driverId ORDER BY num_accidents DESC LIMIT 1 ) )\t----- bird -----\tformula_1",
    "1004": "SELECT COUNT(T1.wins), T2.forename || ' ' || T2.surname FROM driverStandings AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T2.dob = (SELECT MIN(dob) FROM drivers) GROUP BY T2.forename, T2.surname;\t----- bird -----\tformula_1",
    "1005": "SELECT MAX(milliseconds) FROM pitStops\t----- bird -----\tformula_1",
    "1006": "SELECT MIN(milliseconds) AS FastestLapTime FROM lapTimes\t----- bird -----\tformula_1",
    "1007": "SELECT MAX(duration) FROM pitStops WHERE driverId = (SELECT driverId FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton')\t----- bird -----\tformula_1",
    "1008": "SELECT T1.lap FROM pitStops AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId INNER JOIN drivers AS T3 ON T1.driverId = T3.driverId WHERE T2.year = 2011 AND T2.name = 'Australian Grand Prix' AND T3.forename = 'Lewis' AND T3.surname = 'Hamilton'\t----- bird -----\tformula_1",
    "1009": "SELECT T2.forename, T2.surname, T1.duration FROM pitStops AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T1.raceId = T3.raceId WHERE T3.year = 2011 AND T3.name = 'Australian Grand Prix'\t----- bird -----\tformula_1",
    "1010": "SELECT T1.time FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T1.raceId = T3.raceId WHERE T2.forename = 'Lewis' AND T2.surname = 'Hamilton' AND T3.name = 'Formula_1' ORDER BY T1.milliseconds ASC LIMIT 1\t----- bird -----\tformula_1",
    "1011": "SELECT drivers.forename || ' ' || drivers.surname AS DriverName FROM lapTimes JOIN drivers ON lapTimes.driverId = drivers.driverId WHERE lapTimes.time = (SELECT MIN(time) FROM lapTimes)\t----- bird -----\tformula_1",
    "1012": "SELECT circuits.name, results.position FROM circuits JOIN races ON circuits.circuitId = races.circuitId JOIN results ON races.raceId = results.raceId JOIN drivers ON results.driverId = drivers.driverId WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton' AND results.fastestLapTime = (SELECT MIN(results.fastestLapTime) FROM results);\t----- bird -----\tformula_1",
    "1013": "SELECT MIN(milliseconds) AS lap_record FROM lapTimes INNER JOIN races ON lapTimes.raceId = races.raceId INNER JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.name = 'Austrian Grand Prix Circuit'\t----- bird -----\tformula_1",
    "1014": "SELECT C.name, L.time FROM circuits AS C INNER JOIN races AS R ON C.circuitId = R.circuitId INNER JOIN lapTimes AS L ON R.raceId = L.raceId WHERE C.country = 'Italy' ORDER BY L.time LIMIT 1;\t----- bird -----\tformula_1",
    "1015": "SELECT T1.name, T2.time FROM races AS T1 INNER JOIN lapTimes AS T2 ON T1.raceId = T2.raceId WHERE T1.circuitId = (SELECT circuitId FROM circuits WHERE name = 'Austrian Grand Prix Circuit') ORDER BY T2.milliseconds ASC LIMIT 1\t----- bird -----\tformula_1",
    "1016": "SELECT duration FROM pitStops WHERE raceId = (SELECT raceId FROM races WHERE name = 'Austrian Grand Prix Circuit') AND driverId = (SELECT driverId FROM lapTimes WHERE raceId = (SELECT raceId FROM races WHERE name = 'Austrian Grand Prix Circuit') ORDER BY milliseconds ASC LIMIT 1)\t----- bird -----\tformula_1",
    "1017": "SELECT c.lat, c.lng FROM circuits c INNER JOIN races r ON c.circuitId = r.circuitId INNER JOIN results res ON r.raceId = res.raceId WHERE res.fastestLapTime = '1:29.488'\t----- bird -----\tformula_1",
    "1018": "SELECT AVG(milliseconds) FROM pitStops WHERE driverId = (SELECT driverId FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton')\t----- bird -----\tformula_1",
    "1019": "SELECT AVG(milliseconds) FROM lapTimes JOIN races ON lapTimes.raceId = races.raceId JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.country = 'Italy'\t----- bird -----\tformula_1",
    "1020": "SELECT player_api_id FROM Player_Attributes ORDER BY overall_rating DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1021": "SELECT T1.player_name, T1.height FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id ORDER BY T1.height DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1022": "SELECT T1.preferred_foot FROM Player_Attributes AS T1 WHERE T1.potential = (SELECT MIN(potential) FROM Player_Attributes)\t----- bird -----\teuropean_football_2",
    "1023": "SELECT COUNT(*) FROM Player_Attributes WHERE overall_rating >= 60 AND overall_rating < 65 AND defensive_work_rate = 'low'\t----- bird -----\teuropean_football_2",
    "1024": "SELECT id FROM Player_Attributes ORDER BY crossing DESC LIMIT 5\t----- bird -----\teuropean_football_2",
    "1025": "SELECT L.name FROM League AS L INNER JOIN Match AS M ON L.id = M.league_id WHERE M.season = '2015/2016' GROUP BY L.name ORDER BY SUM(M.home_team_goal + M.away_team_goal) DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1026": "SELECT T2.team_long_name FROM Match AS T1 INNER JOIN Team AS T2 ON T2.team_api_id = T1.home_team_api_id WHERE T1.season = '2015/2016' AND (T1.home_team_goal - T1.away_team_goal) < 0 GROUP BY T1.home_team_api_id ORDER BY COUNT(*) ASC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1027": "SELECT T.player_name FROM (SELECT T1.player_name, MAX(T2.penalties) AS max_penalties FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id GROUP BY T1.player_name ORDER BY max_penalties DESC LIMIT 10) AS T;\t----- bird -----\teuropean_football_2",
    "1028": "SELECT T1.away_team_api_id FROM `Match` AS T1 INNER JOIN League AS T2 ON T1.league_id = T2.id WHERE T2.name = 'Scotland Premier League' AND T1.season = '2009/2010' AND (T1.away_team_goal - T1.home_team_goal) > 0 GROUP BY T1.away_team_api_id ORDER BY COUNT(T1.away_team_api_id) DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1029": "SELECT Team.team_long_name, Team_Attributes.buildUpPlaySpeed FROM Team JOIN Team_Attributes ON Team.team_api_id = Team_Attributes.team_api_id ORDER BY Team_Attributes.buildUpPlaySpeed DESC LIMIT 4;\t----- bird -----\teuropean_football_2",
    "1030": "SELECT L.name FROM League AS L INNER JOIN Match AS M ON L.id = M.league_id WHERE M.season = '2015/2016' GROUP BY L.name ORDER BY SUM(M.home_team_goal = M.away_team_goal) DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1031": "SELECT DATETIME('now') - STRFTIME('%Y', T2.birthday) AS age FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.sprint_speed >= 97 AND T2.date >= '2013-01-01 00:00:00' AND T2.date <= '2015-12-31 00:00:00';\t----- bird -----\teuropean_football_2",
    "1032": "SELECT l.name AS League_Name, COUNT(m.id) AS Matches_Played FROM League l JOIN Match m ON l.id = m.league_id GROUP BY l.name ORDER BY Matches_Played DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1033": "SELECT AVG(height) FROM Player WHERE birthday >= '1990-01-01 00:00:00' AND birthday < '1996-01-01 00:00:00'\t----- bird -----\teuropean_football_2",
    "1034": "SELECT T1.player_api_id FROM Player_Attributes AS T1 WHERE T1.overall_rating > (SELECT AVG(overall_rating) FROM Player_Attributes WHERE substr(date,1,4) = '2010') AND substr(date,1,4) = '2010' ORDER BY T1.overall_rating DESC;\t----- bird -----\teuropean_football_2",
    "1035": "SELECT T1.team_fifa_api_id FROM Team_Attributes AS T1 WHERE T1.buildUpPlaySpeed BETWEEN 51 AND 59;\t----- bird -----\teuropean_football_2",
    "1036": "SELECT Team.team_long_name FROM Team INNER JOIN Team_Attributes ON Team.team_api_id = Team_Attributes.team_api_id WHERE Team_Attributes.buildUpPlayPassing > (SELECT AVG(buildUpPlayPassing) FROM Team_Attributes WHERE buildUpPlayPassing IS NOT NULL) AND strftime('%Y', Team_Attributes.date) = '2012'\t----- bird -----\teuropean_football_2",
    "1037": "SELECT COUNT(player_fifa_api_id) * 100.0 / (SELECT COUNT(player_fifa_api_id) FROM Player_Attributes WHERE birthday BETWEEN '1987-01-01 00:00:00' AND '1992-12-31 00:00:00') FROM Player_Attributes WHERE preferred_foot = 'left' AND birthday BETWEEN '1987-01-01 00:00:00' AND '1992-12-31 00:00:00'\t----- bird -----\teuropean_football_2",
    "1038": "SELECT League.name, SUM(home_team_goal + away_team_goal) AS total_goals FROM Match JOIN League ON Match.league_id = League.id GROUP BY League.name ORDER BY total_goals ASC LIMIT 5;\t----- bird -----\teuropean_football_2",
    "1039": "SELECT CAST(SUM(PA.long_shots) AS REAL) / COUNT(PA.player_fifa_api_id) FROM Player_Attributes AS PA INNER JOIN Player AS P ON PA.player_fifa_api_id = P.player_fifa_api_id WHERE P.player_name = 'Ahmed Samir Farag'\t----- bird -----\teuropean_football_2",
    "1040": "SELECT Player.player_name FROM Player INNER JOIN Player_Attributes ON Player.player_fifa_api_id = Player_Attributes.player_fifa_api_id WHERE Player.height > 180 GROUP BY Player.player_name ORDER BY AVG(Player_Attributes.heading_accuracy) DESC LIMIT 10;\t----- bird -----\teuropean_football_2",
    "1041": "SELECT T1.team_long_name FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.buildUpPlayDribblingClass = 'Normal' AND T2.date >= '2014-01-01 00:00:00' AND T2.date <= '2014-01-31 00:00:00' AND T2.chanceCreationPassing < (SELECT AVG(chanceCreationPassing) FROM Team_Attributes WHERE buildUpPlayDribblingClass = 'Normal' AND date >= '2014-01-01 00:00:00' AND date <= '2014-01-31 00:00:00') ORDER BY T2.chanceCreationPassing DESC;\t----- bird -----\teuropean_football_2",
    "1042": "SELECT L.name FROM League AS L INNER JOIN Match AS M ON L.id = M.league_id WHERE M.season = '2009/2010' GROUP BY L.name HAVING AVG(M.home_team_goal) > AVG(M.away_team_goal)\t----- bird -----\teuropean_football_2",
    "1043": "SELECT T1.team_short_name FROM Team AS T1 WHERE T1.team_long_name = 'Queens Park Rangers'\t----- bird -----\teuropean_football_2",
    "1044": "SELECT * FROM `Player` WHERE SUBSTR(birthday, 1, 4) = '1970' AND SUBSTR(birthday, 6, 2) = '10'\t----- bird -----\teuropean_football_2",
    "1045": "SELECT T1.attacking_work_rate FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Franco Zennaro'\t----- bird -----\teuropean_football_2",
    "1046": "SELECT T1.team_long_name, T2.buildUpPlayPositioningClass FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.team_long_name = 'ADO Den Haag' AND T2.buildUpPlayPositioningClass = 'Free Form'\t----- bird -----\teuropean_football_2",
    "1047": "SELECT heading_accuracy, finishing FROM Player_Attributes JOIN Player ON Player_Attributes.player_api_id = Player.player_api_id WHERE Player.player_name = 'Francois Affolter' AND Player_Attributes.date = '2014-09-18 00:00:00'\t----- bird -----\teuropean_football_2",
    "1048": "SELECT T1.overall_rating FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Gabriel Tamas' AND strftime('%Y', T1.date) = '2011'\t----- bird -----\teuropean_football_2",
    "1049": "SELECT COUNT(*) FROM Match WHERE season = '2015/2016' AND league_id = (SELECT id FROM League WHERE name = 'Scotland Premier League')\t----- bird -----\teuropean_football_2",
    "1050": "SELECT T1.preferred_foot FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id ORDER BY T2.birthday DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1051": "SELECT * FROM Player_Attributes WHERE potential = (SELECT MAX(potential) FROM Player_Attributes)\t----- bird -----\teuropean_football_2",
    "1052": "SELECT COUNT(*) FROM Player_Attributes WHERE weight < 130 AND attacking_work_rate = 'left'\t----- bird -----\teuropean_football_2",
    "1053": "SELECT T2.team_short_name FROM Team_Attributes AS T1 INNER JOIN Team AS T2 ON T2.team_api_id = T1.team_api_id WHERE T1.chanceCreationPassingClass = 'Risky'\t----- bird -----\teuropean_football_2",
    "1054": "SELECT T1.defensive_work_rate FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'David Wilson'\t----- bird -----\teuropean_football_2",
    "1055": "SELECT T1.birthday FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.overall_rating = (SELECT MAX(overall_rating) FROM Player_Attributes)\t----- bird -----\teuropean_football_2",
    "1056": "SELECT name FROM League WHERE country_id = (SELECT id FROM Country WHERE name = 'Netherlands')\t----- bird -----\teuropean_football_2",
    "1057": "SELECT AVG(home_team_goal) FROM Match INNER JOIN Country ON Match.country_id = Country.id WHERE Country.name = 'Poland' AND Match.season = '2010/2011'\t----- bird -----\teuropean_football_2",
    "1058": "SELECT Player.player_name, AVG(Player_Attributes.finishing) AS avg_finishing FROM Player INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE Player.height = (SELECT MAX(height) FROM Player) OR Player.height = (SELECT MIN(height) FROM Player) GROUP BY Player.player_name ORDER BY avg_finishing DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1059": "SELECT Player.player_name FROM Player WHERE Player.height > 180\t----- bird -----\teuropean_football_2",
    "1060": "SELECT COUNT(player_api_id) FROM Player WHERE strftime('%Y', birthday) > '1990'\t----- bird -----\teuropean_football_2",
    "1061": "SELECT COUNT(T1.player_name) FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name LIKE 'Adam%' AND T1.weight > 170\t----- bird -----\teuropean_football_2",
    "1062": "SELECT T2.player_name FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.overall_rating > 80 AND strftime('%Y', T1.date) BETWEEN '2008' AND '2010';\t----- bird -----\teuropean_football_2",
    "1063": "SELECT potential FROM Player_Attributes INNER JOIN Player ON Player_Attributes.player_api_id = Player.player_api_id WHERE player_name = 'Aaron Doran';\t----- bird -----\teuropean_football_2",
    "1064": "SELECT player_name FROM Player WHERE preferred_foot = 'left'\t----- bird -----\teuropean_football_2",
    "1065": "SELECT T1.team_long_name FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.buildUpPlaySpeedClass = 'Fast'\t----- bird -----\teuropean_football_2",
    "1066": "SELECT T1.buildUpPlayPassingClass FROM Team_Attributes AS T1 INNER JOIN Team AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.team_short_name = 'CLB'\t----- bird -----\teuropean_football_2",
    "1067": "SELECT team_short_name FROM Team JOIN Team_Attributes ON Team.team_api_id = Team_Attributes.team_api_id WHERE buildUpPlayPassing > 70\t----- bird -----\teuropean_football_2",
    "1068": "SELECT AVG(overall_rating) FROM Player_Attributes WHERE height > 170 AND strftime('%Y', date) BETWEEN '2010' AND '2015'\t----- bird -----\teuropean_football_2",
    "1069": "SELECT Player.player_name FROM Player ORDER BY Player.height ASC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1070": "SELECT C.name FROM League AS L INNER JOIN Country AS C ON L.country_id = C.id WHERE L.name = 'Italy Serie A'\t----- bird -----\teuropean_football_2",
    "1071": "SELECT T.team_short_name FROM Team_Attributes AS TA INNER JOIN Team AS T ON TA.team_api_id = T.team_api_id WHERE TA.buildUpPlaySpeed = 31 AND TA.buildUpPlayDribbling = 53 AND TA.buildUpPlayPassing = 32\t----- bird -----\teuropean_football_2",
    "1072": "SELECT AVG(overall_rating) FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Aaron Doran')\t----- bird -----\teuropean_football_2",
    "1073": "SELECT COUNT(*) AS num_matches FROM Match INNER JOIN League ON Match.league_id = League.id WHERE League.name = 'Germany 1. Bundesliga' AND strftime('%Y-%m', Match.date) BETWEEN '2008-08' AND '2008-10'\t----- bird -----\teuropean_football_2",
    "1074": "SELECT T.team_short_name FROM Team AS T INNER JOIN Match AS M ON T.team_api_id = M.home_team_api_id WHERE M.home_team_goal = 10;\t----- bird -----\teuropean_football_2",
    "1075": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.balance = (SELECT MAX(balance) FROM Player_Attributes WHERE potential = 61) AND T2.potential = 61;\t----- bird -----\teuropean_football_2",
    "1076": "SELECT AVG(ball_control) FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Abdou Diallo') - AVG(ball_control) FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Aaron Appindangoye');\t----- bird -----\teuropean_football_2",
    "1077": "SELECT T1.team_long_name FROM Team AS T1 WHERE T1.team_short_name = 'GEN'\t----- bird -----\teuropean_football_2",
    "1078": "SELECT player_name FROM Player WHERE player_name = 'Aaron Lennon' OR player_name = 'Abdelaziz Barrada' ORDER BY birthday LIMIT 1\t----- bird -----\teuropean_football_2",
    "1079": "SELECT T1.player_name FROM Player AS T1 ORDER BY T1.height DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1080": "SELECT COUNT(T1.id) FROM Player_Attributes AS T1 WHERE T1.preferred_foot = 'left' AND T1.attacking_work_rate = 'low'\t----- bird -----\teuropean_football_2",
    "1081": "SELECT T2.name FROM League AS T1 INNER JOIN Country AS T2 ON T1.country_id = T2.id WHERE T1.name = 'Belgium Jupiler League'\t----- bird -----\teuropean_football_2",
    "1082": "SELECT League.name FROM League JOIN Country ON League.country_id = Country.id WHERE Country.name = 'Germany'\t----- bird -----\teuropean_football_2",
    "1083": "SELECT Player.player_name FROM Player INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id ORDER BY Player_Attributes.overall_rating DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1084": "SELECT COUNT(Player.player_api_id) FROM Player JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE strftime('%Y', Player.birthday)<'1986' AND Player_Attributes.defensive_work_rate = 'high'\t----- bird -----\teuropean_football_2",
    "1085": "SELECT Player.player_name FROM Player INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE Player.player_name IN ('Alexis', 'Ariel Borysiuk', 'Arouna Kone') ORDER BY Player_Attributes.crossing DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1086": "SELECT heading_accuracy FROM Player_Attributes JOIN Player ON Player_Attributes.player_api_id = Player.player_api_id WHERE Player.player_name = 'Ariel Borysiuk';\t----- bird -----\teuropean_football_2",
    "1087": "SELECT COUNT(DISTINCT T1.player_api_id) FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.height > 180 AND T2.volleys > 70\t----- bird -----\teuropean_football_2",
    "1088": "SELECT player_name FROM Player JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE volleys > 70 AND dribbling > 70;\t----- bird -----\teuropean_football_2",
    "1089": "SELECT COUNT(*) FROM Match WHERE season = '2008/2009' AND country_id = (SELECT id FROM Country WHERE name = 'Belgium')\t----- bird -----\teuropean_football_2",
    "1090": "SELECT T1.long_passing FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id ORDER BY T2.birthday ASC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1091": "SELECT COUNT(*) FROM Match WHERE league_id = (SELECT id FROM League WHERE name = 'Belgium Jupiler League') AND strftime('%Y', date) = '2009' AND strftime('%m', date) = '04'\t----- bird -----\teuropean_football_2",
    "1092": "SELECT league_id FROM Match WHERE season = '2008/2009' GROUP BY league_id ORDER BY COUNT(*) DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1093": "SELECT DIVIDE(SUM(overall_rating), COUNT(id)) AS average_overall_rating FROM Player_Attributes WHERE strftime('%Y', birthday) < '1986'\t----- bird -----\teuropean_football_2",
    "1094": "SELECT CAST(((MAX(CASE WHEN T1.player_name = 'Ariel Borysiuk' THEN T2.overall_rating END) - MAX(CASE WHEN T1.player_name = 'Paulin Puel' THEN T2.overall_rating END)) * 100.0 / MAX(CASE WHEN T1.player_name = 'Paulin Puel' THEN T2.overall_rating END)) AS REAL) FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id;\t----- bird -----\teuropean_football_2",
    "1095": "SELECT AVG(T1.buildUpPlaySpeed) FROM Team_Attributes AS T1 INNER JOIN Team AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.team_long_name = 'Heart of Midlothian'\t----- bird -----\teuropean_football_2",
    "1096": "SELECT AVG(T1.overall_rating) FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Pietro Marino';\t----- bird -----\teuropean_football_2",
    "1097": "SELECT SUM(T1.crossing) FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Aaron Lennox'\t----- bird -----\teuropean_football_2",
    "1098": "SELECT MAX(T2.chanceCreationPassing), T2.chanceCreationPassingClass FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.team_long_name = 'Ajax'\t----- bird -----\teuropean_football_2",
    "1099": "SELECT preferred_foot FROM Player_Attributes INNER JOIN Player ON Player_Attributes.player_api_id = Player.player_api_id WHERE Player.player_name = 'Abdou Diallo'\t----- bird -----\teuropean_football_2",
    "1100": "SELECT MAX(overall_rating) AS Highest_Overall_Rating FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Dorlan Pabon'\t----- bird -----\teuropean_football_2",
    "1101": "SELECT AVG(away_team_goal) FROM Match INNER JOIN Team ON Match.away_team_api_id = Team.team_api_id WHERE Team.team_long_name = 'Parma' AND Match.country_id = (SELECT id FROM Country WHERE name = 'Italy')\t----- bird -----\teuropean_football_2",
    "1102": "SELECT P.player_name FROM Player AS P INNER JOIN Player_Attributes AS PA ON P.player_api_id = PA.player_api_id WHERE PA.overall_rating = 77 AND PA.date = '2016-06-23' ORDER BY P.birthday ASC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1103": "SELECT T1.overall_rating FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Aaron Mooy' AND T1.date = '2016-02-04 00:00:00'\t----- bird -----\teuropean_football_2",
    "1104": "SELECT T1.potential FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Francesco Parravicini' AND T1.date = '2010-08-30 00:00:00'\t----- bird -----\teuropean_football_2",
    "1105": "SELECT T1.attacking_work_rate FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Francesco Migliore' AND T1.date = '2015-05-01'\t----- bird -----\teuropean_football_2",
    "1106": "SELECT T1.defensive_work_rate FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Kevin Berigaud' AND T1.date = '2013-02-22 00:00:00'\t----- bird -----\teuropean_football_2",
    "1107": "SELECT T2.date FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'Kevin Constant' ORDER BY T2.crossing DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1108": "SELECT T1.buildUpPlaySpeedClass FROM Team_Attributes AS T1 INNER JOIN Team AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.team_long_name = 'Willem II' AND T1.date = '2012-02-22'\t----- bird -----\teuropean_football_2",
    "1109": "SELECT T1.buildUpPlayDribblingClass FROM Team_Attributes AS T1 INNER JOIN Team AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.team_short_name = 'LEI' AND T1.date = '2015-09-10 00:00:00'\t----- bird -----\teuropean_football_2",
    "1110": "SELECT TA.buildUpPlayPassingClass FROM Team_Attributes AS TA INNER JOIN Team AS T ON TA.team_api_id = T.team_api_id WHERE T.team_long_name = 'FC Lorient' AND TA.date = '2010-02-22'\t----- bird -----\teuropean_football_2",
    "1111": "SELECT T2.chanceCreationPassingClass FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.team_long_name = 'PEC Zwolle' AND T2.date = '2013-09-20 00:00:00'\t----- bird -----\teuropean_football_2",
    "1112": "SELECT T1.chanceCreationCrossingClass FROM Match AS T1 INNER JOIN Team AS T2 ON T1.home_team_api_id = T2.team_api_id WHERE T2.team_long_name = 'Hull City' AND T1.date = '2010-02-22 00:00:00'\t----- bird -----\teuropean_football_2",
    "1113": "SELECT T2.defenceAggressionClass FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.team_long_name = 'Hannover 96' AND T2.date = '2015-09-10 00:00:00'\t----- bird -----\teuropean_football_2",
    "1114": "SELECT AVG(overall_rating) FROM Player_Attributes WHERE player_api_id IN (SELECT player_api_id FROM Player WHERE player_name = 'Marko Arnautovic') AND date BETWEEN '2007-02-22 00:00:00' AND '2016-04-21 00:00:00'\t----- bird -----\teuropean_football_2",
    "1115": "SELECT CAST((SUM(IIF(T1.player_name = 'Landon Donovan', T1.overall_rating, 0)) - SUM(IIF(T1.player_name = 'Jordan Bowery', T1.overall_rating, 0))) AS REAL) * 100 / SUM(IIF(T1.player_name = 'Landon Donovan', T1.overall_rating, 0)) FROM Player_Attributes AS T1 WHERE T1.date = '2013/7/12'\t----- bird -----\teuropean_football_2",
    "1116": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id ORDER BY T1.height DESC LIMIT 5\t----- bird -----\teuropean_football_2",
    "1117": "SELECT T1.player_api_id FROM Player AS T1 ORDER BY T1.weight DESC LIMIT 10\t----- bird -----\teuropean_football_2",
    "1118": "SELECT player_name FROM Player WHERE (strftime('%Y', 'now') - strftime('%Y', birthday)) >= 35;\t----- bird -----\teuropean_football_2",
    "1119": "SELECT SUM(home_team_goal) AS total_home_team_goals FROM Match WHERE home_player_1 IN (SELECT player_api_id FROM Player WHERE player_name = 'Aaron Lennon') OR home_player_2 IN (SELECT player_api_id FROM Player WHERE player_name = 'Aaron Lennon') OR home_player_3 IN (SELECT player_api_id FROM Player WHERE player_name = 'Aaron Lennon') OR home_player_4 IN (SELECT player_api_id FROM Player WHERE player_name = 'Aaron Lennon') OR home_player_5 IN (SELECT player_api_id FROM Player WHERE player_name = 'Aaron Lennon') OR home_player_6 IN (SELECT player_api_id FROM Player WHERE player_name = 'Aaron Lennon') OR home_player_7 IN (SELECT player_api_id FROM Player WHERE player_name = 'Aaron Lennon') OR home_player_8 IN (SELECT player_api_id FROM Player WHERE player_name = 'Aaron Lennon') OR home_player_9 IN (SELECT player_api_id FROM Player WHERE player_name = '\t----- bird -----\teuropean_football_2",
    "1120": "SELECT SUM(M.away_team_goal) FROM Match AS M INNER JOIN Player AS P ON M.away_player_1 = P.player_api_id OR M.away_player_2 = P.player_api_id OR M.away_player_3 = P.player_api_id OR M.away_player_4 = P.player_api_id OR M.away_player_5 = P.player_api_id OR M.away_player_6 = P.player_api_id OR M.away_player_7 = P.player_api_id OR M.away_player_8 = P.player_api_id OR M.away_player_9 = P.player_api_id OR M.away_player_10 = P.player_api_id OR M.away_player_11 = P.player_api_id WHERE P.player_name = 'Daan Smith' OR P.player_name = 'Filipe Ferreira'\t----- bird -----\teuropean_football_2",
    "1121": "SELECT SUM(M.home_team_goal) FROM Match AS M INNER JOIN Player AS P ON M.home_player_1 = P.player_api_id OR M.home_player_2 = P.player_api_id OR M.home_player_3 = P.player_api_id OR M.home_player_4 = P.player_api_id OR M.home_player_5 = P.player_api_id OR M.home_player_6 = P.player_api_id OR M.home_player_7 = P.player_api_id OR M.home_player_8 = P.player_api_id OR M.home_player_9 = P.player_api_id OR M.home_player_10 = P.player_api_id OR M.home_player_11 = P.player_api_id WHERE (strftime('%Y', 'now') - strftime('%Y', P.birthday)) < 31;\t----- bird -----\teuropean_football_2",
    "1122": "SELECT Player.player_name FROM Player INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE Player_Attributes.overall_rating = (SELECT MAX(overall_rating) FROM Player_Attributes) LIMIT 10\t----- bird -----\teuropean_football_2",
    "1123": "SELECT player_name FROM Player INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id ORDER BY Player_Attributes.potential DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1124": "SELECT Player.player_name FROM Player INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE Player_Attributes.attacking_work_rate = 'high'\t----- bird -----\teuropean_football_2",
    "1125": "SELECT T2.player_name FROM `Player_Attributes` AS T1 INNER JOIN `Player` AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.finishing = 1 ORDER BY strftime('%Y', 'now') - strftime('%Y', T2.birthday) DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1126": "SELECT T3.player_name FROM Player AS T3 INNER JOIN Country AS T1 ON T3.country_id = T1.id WHERE T1.name = 'Belgium'\t----- bird -----\teuropean_football_2",
    "1127": "SELECT Player.player_name, Country.name FROM Player JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id JOIN Country ON Player.country_id = Country.id WHERE Player_Attributes.vision > 89;\t----- bird -----\teuropean_football_2",
    "1128": "SELECT T1.name FROM Country AS T1 INNER JOIN Player AS T2 ON T1.id = T2.country_id GROUP BY T1.name ORDER BY AVG(T2.weight) DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1129": "SELECT T1.team_long_name FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.buildUpPlaySpeedClass = 'Slow'\t----- bird -----\teuropean_football_2",
    "1130": "SELECT T1.team_short_name FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.chanceCreationPassingClass = 'Safe'\t----- bird -----\teuropean_football_2",
    "1131": "SELECT AVG(T1.height) FROM Player AS T1 INNER JOIN Country AS T2 ON T1.country_id = T2.id WHERE T2.name = 'Italy'\t----- bird -----\teuropean_football_2",
    "1132": "SELECT Player.player_name FROM Player WHERE Player.height > 180 ORDER BY Player.player_name LIMIT 3;\t----- bird -----\teuropean_football_2",
    "1133": "SELECT COUNT(*) FROM Player WHERE player_name LIKE 'Aaron%' AND birthday > '1990'\t----- bird -----\teuropean_football_2",
    "1134": "SELECT (Player_Attributes.jumping) FROM Player_Attributes WHERE id = 6 - SELECT (Player_Attributes.jumping) FROM Player_Attributes WHERE id = 23;\t----- bird -----\teuropean_football_2",
    "1135": "SELECT PA.player_api_id FROM Player_Attributes AS PA INNER JOIN Player AS P ON PA.player_api_id = P.player_api_id WHERE PA.potential = (SELECT MIN(potential) FROM Player_Attributes) AND PA.preferred_foot = 'right' ORDER BY PA.overall_rating DESC LIMIT 3\t----- bird -----\teuropean_football_2",
    "1136": "SELECT COUNT(*) FROM Player_Attributes WHERE crossing = (SELECT MAX(crossing) FROM Player_Attributes) AND preferred_foot = 'left';\t----- bird -----\teuropean_football_2",
    "1137": "SELECT (CAST(SUM(CASE WHEN P.stamina > 80 AND P.strength > 80 THEN 1 ELSE 0 END) AS REAL) / COUNT(*)) * 100 FROM Player_Attributes AS P;\t----- bird -----\teuropean_football_2",
    "1138": "SELECT T2.name FROM League AS T1 INNER JOIN Country AS T2 ON T1.country_id = T2.id WHERE T1.name = 'Poland Ekstraklasa'\t----- bird -----\teuropean_football_2",
    "1139": "SELECT home_team_goal, away_team_goal FROM Match WHERE date LIKE '2008-09-24%' AND league_id = (SELECT id FROM League WHERE name = 'Belgian Jupiler League')\t----- bird -----\teuropean_football_2",
    "1140": "SELECT pa.sprint_speed, pa.agility, pa.acceleration FROM Player_Attributes AS pa INNER JOIN Player AS p ON pa.player_api_id = p.player_api_id WHERE p.player_name = 'Alexis Blin'\t----- bird -----\teuropean_football_2",
    "1141": "SELECT buildUpPlaySpeedClass FROM Team_Attributes JOIN Team ON Team_Attributes.team_api_id = Team.team_api_id WHERE Team.team_long_name = 'KSV Cercle Brugge'\t----- bird -----\teuropean_football_2",
    "1142": "SELECT COUNT(*) FROM Match WHERE league_id = (SELECT id FROM League WHERE name = 'Italian Serie A') AND season = '2015/2016'\t----- bird -----\teuropean_football_2",
    "1143": "SELECT MAX(home_team_goal) FROM Match WHERE league_id = (SELECT id FROM League WHERE name = 'Netherlands Eredivisie')\t----- bird -----\teuropean_football_2",
    "1144": "SELECT P.player_name, P.weight, PA.finishing, PA.curve FROM Player AS P INNER JOIN Player_Attributes AS PA ON P.player_api_id = PA.player_api_id WHERE P.weight = (SELECT MAX(weight) FROM Player)\t----- bird -----\teuropean_football_2",
    "1145": "SELECT L.name FROM League AS L INNER JOIN Match AS M ON L.id = M.league_id WHERE M.season = '2015/2016' GROUP BY L.name ORDER BY COUNT(M.id) DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1146": "SELECT T2.team_long_name FROM Team AS T1 INNER JOIN Match AS T2 ON T1.team_api_id = T2.away_team_api_id WHERE T2.away_team_goal = (SELECT MAX(away_team_goal) FROM Match)\t----- bird -----\teuropean_football_2",
    "1147": "SELECT Player.player_name FROM Player INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE Player_Attributes.overall_rating = (SELECT MAX(overall_rating) FROM Player_Attributes)\t----- bird -----\teuropean_football_2",
    "1148": "SELECT CAST(COUNT(CASE WHEN T1.height < 180 AND T2.strength > 70 THEN T2.id ELSE NULL END) AS REAL) * 100 / COUNT(T2.id) FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id;\t----- bird -----\teuropean_football_2",
    "1149": "SELECT COUNT(CASE WHEN SEX = 'M' AND Admission = '+' THEN ID END) AS InPatient_Male, COUNT(CASE WHEN SEX = 'M' AND Admission = '-' THEN ID END) AS OutPatient_Male, (COUNT(CASE WHEN SEX = 'M' AND Admission = '+' THEN ID END) - COUNT(CASE WHEN SEX = 'M' AND Admission = '-' THEN ID END)) AS Deviation, ((COUNT(CASE WHEN SEX = 'M' AND Admission = '+' THEN ID END) - COUNT(CASE WHEN SEX = 'M' AND Admission = '-' THEN ID END)) / COUNT(CASE WHEN SEX = 'M' THEN ID END)) * 100 AS Deviation_Percentage FROM Patient\t----- bird -----\tthrombosis_prediction",
    "1150": "SELECT CAST(COUNT(CASE WHEN T2.SEX = 'F' AND strftime('%Y', T2.Birthday) > '1930' THEN 1 END) AS REAL) * 100 / COUNT(CASE WHEN T2.SEX = 'F' THEN 1 END) FROM Patient AS T2\t----- bird -----\tthrombosis_prediction",
    "1151": "SELECT COUNT(DISTINCT T1.ID) * 100.0 / (SELECT COUNT(DISTINCT ID) FROM Patient WHERE Birthday BETWEEN '1930-01-01' AND '1940-12-31') AS Percentage FROM Patient AS T1 WHERE T1.Birthday BETWEEN '1930-01-01' AND '1940-12-31' AND T1.Admission = '+'\t----- bird -----\tthrombosis_prediction",
    "1152": "SELECT CAST(SUM(CASE WHEN T1.Diagnosis = 'SLE' AND T2.Admission = '+' THEN 1 ELSE 0 END) AS REAL) / CAST(SUM(CASE WHEN T1.Diagnosis = 'SLE' AND T2.Admission = '-' THEN 1 ELSE 0 END) AS REAL) as ratio FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.Diagnosis = 'SLE'\t----- bird -----\tthrombosis_prediction",
    "1153": "SELECT Patient.Diagnosis, Laboratory.Date FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.ID = 30609\t----- bird -----\tthrombosis_prediction",
    "1154": "SELECT Patient.SEX, Patient.Birthday, Examination.`Examination Date`, Examination.Symptoms FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Patient.ID = '163109'\t----- bird -----\tthrombosis_prediction",
    "1155": "SELECT Patient.ID, Patient.SEX, Patient.Birthday FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.LDH > 500;\t----- bird -----\tthrombosis_prediction",
    "1156": "SELECT Patient.ID, STRFTIME('%Y', CURRENT_TIMESTAMP) - STRFTIME('%Y', Birthday) AS age FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.RVVT = '+'\t----- bird -----\tthrombosis_prediction",
    "1157": "SELECT Patient.ID, Patient.SEX, Patient.Diagnosis FROM Patient INNER JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.Thrombosis = 2;\t----- bird -----\tthrombosis_prediction",
    "1158": "SELECT P.ID, P.SEX, P.Birthday, L.`T-CHO` FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE strftime('%Y', P.Birthday) = '1937' AND L.`T-CHO` >= 250;\t----- bird -----\tthrombosis_prediction",
    "1159": "SELECT Patient.ID, Patient.SEX, Patient.Diagnosis FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.ALB < 3.5;\t----- bird -----\tthrombosis_prediction",
    "1160": "SELECT SUM(CASE WHEN T1.SEX = 'F' AND (T2.TP < 6.0 OR T2.TP > 8.5) THEN 1 ELSE 0 END) / COUNT(DISTINCT T1.ID) * 100 AS percentage FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID;\t----- bird -----\tthrombosis_prediction",
    "1161": "SELECT AVG(aCL IgG) AS average_anti_cardiolipin_antibody_concentration FROM Examination INNER JOIN Patient ON Examination.ID = Patient.ID WHERE Admission = '+' AND (strftime('%Y', 'now') - strftime('%Y', Birthday)) >= 50;\t----- bird -----\tthrombosis_prediction",
    "1162": "SELECT COUNT(*) FROM Patient WHERE SEX = 'F' AND strftime('%Y', Description) = '1997' AND Admission = '-'\t----- bird -----\tthrombosis_prediction",
    "1163": "SELECT YEAR(Birthday) - YEAR(`First Date`) AS Age, MIN(YEAR(Birthday) - YEAR(`First Date`)) AS MinAge FROM Patient GROUP BY Age ORDER BY MinAge ASC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1164": "SELECT COUNT(DISTINCT T2.ID) FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.Thrombosis = '1' AND T2.SEX = 'F' AND YEAR(T1.`Examination Date`) = 1997\t----- bird -----\tthrombosis_prediction",
    "1165": "SELECT MAX(STRFTIME('%Y', Birthday)) - MIN(STRFTIME('%Y', Birthday)) AS AgeGap FROM Patient WHERE ID IN (SELECT ID FROM Laboratory WHERE TG >= 200)\t----- bird -----\tthrombosis_prediction",
    "1166": "SELECT Symptoms, Diagnosis FROM Examination JOIN Patient ON Examination.ID = Patient.ID WHERE Patient.Birthday = (SELECT MIN(Birthday) FROM Patient)\t----- bird -----\tthrombosis_prediction",
    "1167": "SELECT AVG(COUNT(ID) / 12) FROM Patient WHERE ID IN (SELECT ID FROM Laboratory WHERE Date BETWEEN '1998-01-01' AND '1998-12-31') AND SEX = 'M'\t----- bird -----\tthrombosis_prediction",
    "1168": "SELECT MAX(T1.Birthday) AS Oldest_Patient_Birthday, T2.Date AS Lab_Work_Completion_Date, year(T1.`First Date`) - year(T1.Birthday) AS Age_At_Initial_Arrival FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Diagnosis = 'SJS' ORDER BY T1.Birthday DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1169": "SELECT CAST(SUM(CASE WHEN SEX = 'M' AND UA <= 8.0 THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN SEX = 'F' AND UA <= 6.5 THEN 1 ELSE 0 END) FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE (SEX = 'M' AND UA <= 8.0) OR (SEX = 'F' AND UA <= 6.5)\t----- bird -----\tthrombosis_prediction",
    "1170": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 LEFT JOIN Examination AS T2 ON T1.ID = T2.ID WHERE strftime('%Y', T2.`Examination Date`) - strftime('%Y', T1.`First Date`) >= 1 OR T2.ID IS NULL\t----- bird -----\tthrombosis_prediction",
    "1171": "SELECT COUNT(DISTINCT e.ID) FROM Examination e JOIN Patient p ON e.ID = p.ID WHERE e.`Examination Date` BETWEEN '1990-01-01' AND '1993-12-31' AND strftime('%Y', p.Birthday) > 18\t----- bird -----\tthrombosis_prediction",
    "1172": "SELECT COUNT(*) FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE P.SEX = 'M' AND L.`T-BIL` > 2.0\t----- bird -----\tthrombosis_prediction",
    "1173": "SELECT T1.Diagnosis FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.`Examination Date` BETWEEN '1985-01-01' AND '1995-12-31' GROUP BY T1.Diagnosis ORDER BY COUNT(T1.Diagnosis) DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1174": "SELECT AVG(DATEDIFF('1991-10-01', Birthday) / 365) FROM Patient p JOIN Examination e ON p.ID = e.ID JOIN Laboratory l ON p.ID = l.ID WHERE e.`Examination Date` BETWEEN '1991-10-01' AND '1991-10-30'\t----- bird -----\tthrombosis_prediction",
    "1175": "SELECT T1.`Examination Date` - T2.Birthday AS Age, T1.Diagnosis FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.HGB = (SELECT MAX(HGB) FROM Examination)\t----- bird -----\tthrombosis_prediction",
    "1176": "SELECT `ANA` FROM Examination WHERE ID = 3605340 AND `Examination Date` = '1996-12-02'\t----- bird -----\tthrombosis_prediction",
    "1177": "SELECT `T-CHO` FROM Laboratory WHERE ID = 2927464 AND Date = '1995-09-04' AND `T-CHO` < 250\t----- bird -----\tthrombosis_prediction",
    "1178": "SELECT T1.SEX FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.Diagnosis = 'AORTITIS' ORDER BY T2.`Examination Date` ASC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1179": "SELECT aCL IgM FROM Examination WHERE ID = (SELECT ID FROM Patient WHERE Diagnosis = 'SLE' AND Description = '1994-02-19') AND `Examination Date` = '1993-11-12'\t----- bird -----\tthrombosis_prediction",
    "1180": "SELECT SEX FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE L.GPT = 9 AND L.Date = '1992-06-12'\t----- bird -----\tthrombosis_prediction",
    "1181": "SELECT SUBTRACT('1992', strftime('%Y', Birthday)) AS age FROM Patient WHERE ID IN ( SELECT ID FROM Laboratory WHERE UA = 8.4 AND Date = '1991-10-21' )\t----- bird -----\tthrombosis_prediction",
    "1182": "SELECT COUNT(ID) FROM Laboratory WHERE ID = (SELECT ID FROM Patient WHERE `First Date` = '1991-06-13' AND Diagnosis = 'SJS') AND strftime('%Y', Date) = '1995'\t----- bird -----\tthrombosis_prediction",
    "1183": "SELECT T1.Diagnosis FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.`First Date` = '1997-01-27' AND T2.Diagnosis = 'SLE'\t----- bird -----\tthrombosis_prediction",
    "1184": "SELECT Symptoms FROM Examination WHERE ID IN (SELECT ID FROM Patient WHERE Birthday = '1959-03-01') AND `Examination Date` = '1993-09-27'\t----- bird -----\tthrombosis_prediction",
    "1185": "SELECT CAST((SUM(CASE WHEN T2.Birthday = '1959-02-18' AND strftime('%Y-%m', T1.Date) = '1981-11' THEN T1.`T-CHO` ELSE 0 END) - SUM(CASE WHEN T2.Birthday = '1959-02-18' AND strftime('%Y-%m', T1.Date) = '1981-12' THEN T1.`T-CHO` ELSE 0 END) AS REAL) * 100 / SUM(CASE WHEN T2.Birthday = '1959-02-18' AND strftime('%Y-%m', T1.Date) = '1981-11' THEN T1.`T-CHO` ELSE 0 END) FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID;\t----- bird -----\tthrombosis_prediction",
    "1186": "SELECT Patient.ID FROM Patient INNER JOIN Examination ON Patient.ID = Examination.ID WHERE Patient.Diagnosis = 'Behcet' AND YEAR(Examination.`Examination Date`) >= 1997 AND YEAR(Examination.`Examination Date`) < 1998;\t----- bird -----\tthrombosis_prediction",
    "1187": "SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.Date BETWEEN '1987-07-06' AND '1996-01-31' AND T2.GPT > 30 AND T2.ALB < 4\t----- bird -----\tthrombosis_prediction",
    "1188": "SELECT COUNT(ID) FROM Patient WHERE SEX = 'F' AND YEAR(Birthday) = 1964 AND Admission = '+'\t----- bird -----\tthrombosis_prediction",
    "1189": "SELECT COUNT(*) FROM Examination AS E INNER JOIN Patient AS P ON E.ID = P.ID WHERE E.Thrombosis = 2 AND E.ANA = 'S' AND E.`aCL IgM` > (SELECT 1.2 * AVG(`aCL IgM`) FROM Examination)\t----- bird -----\tthrombosis_prediction",
    "1190": "SELECT CAST(SUM(CASE WHEN UA <= 6.5 AND `U-PRO` > 0 AND `U-PRO` < 30 THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN `U-PRO` > 0 AND `U-PRO` < 30 THEN 1 ELSE 0 END) * 100 FROM Laboratory\t----- bird -----\tthrombosis_prediction",
    "1191": "SELECT SUM(CASE WHEN T1.Diagnosis = 'BEHCET' THEN 1 ELSE 0 END) / COUNT(CASE WHEN YEAR(T2.`First Date`) = 1981 THEN 1 END) * 100 AS percentage FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND YEAR(T1.`First Date`) = 1981;\t----- bird -----\tthrombosis_prediction",
    "1192": "SELECT T1.ID, T1.SEX, T1.Birthday, T1.Description, T1.`First Date`, T1.Admission, T1.Diagnosis FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Admission = '-' AND T2.Date LIKE '1991-10%' AND T2.`T-BIL` < 2.0;\t----- bird -----\tthrombosis_prediction",
    "1193": "SELECT COUNT(e.ID) FROM Examination e JOIN Patient p ON e.ID = p.ID WHERE `ANA Pattern` != 'P' AND p.SEX = 'F' AND p.Birthday BETWEEN '1980-01-01' AND '1989-12-31'\t----- bird -----\tthrombosis_prediction",
    "1194": "SELECT T2.SEX FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID INNER JOIN Laboratory AS T3 ON T1.ID = T3.ID WHERE T1.Diagnosis = 'PSS' AND T3.CRP = '2+' AND T3.CRE = 1 AND T3.LDH = 123\t----- bird -----\tthrombosis_prediction",
    "1195": "SELECT AVG(ALB) FROM Laboratory AS L INNER JOIN Patient AS P ON L.ID = P.ID WHERE P.SEX = 'F' AND L.PLT > 400 AND P.Diagnosis = 'SLE'\t----- bird -----\tthrombosis_prediction",
    "1196": "SELECT Symptoms FROM Examination WHERE Diagnosis = 'SLE' GROUP BY Symptoms ORDER BY COUNT(*) DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1197": "SELECT Patient.`First Date`, Patient.Diagnosis FROM Patient WHERE Patient.ID = 48473\t----- bird -----\tthrombosis_prediction",
    "1198": "SELECT COUNT(*) FROM Patient WHERE SEX = 'F' AND Diagnosis = 'APS'\t----- bird -----\tthrombosis_prediction",
    "1199": "SELECT COUNT(*) FROM Laboratory WHERE YEAR(Date) = '1997' AND (TP < 6 OR TP > 8.5)\t----- bird -----\tthrombosis_prediction",
    "1200": "SELECT CAST(SUM(CASE WHEN T1.Symptoms LIKE '%thrombocytopenia%' THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN T1.Diagnosis LIKE '%SLE%' THEN 1 ELSE 0 END) * 100 FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID;\t----- bird -----\tthrombosis_prediction",
    "1201": "SELECT CAST(COUNT(CASE WHEN T2.SEX = 'F' THEN 1 END) AS REAL) * 100 / COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE YEAR(T1.Birthday) = 1980 AND T1.Diagnosis = 'RA'\t----- bird -----\tthrombosis_prediction",
    "1202": "SELECT COUNT(Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE SEX = 'M' AND `Examination Date` BETWEEN '1995-01-01' AND '1997-12-31' AND Diagnosis = 'BEHCET' AND Admission = '-'\t----- bird -----\tthrombosis_prediction",
    "1203": "SELECT COUNT(Patient.ID) FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.SEX = 'F' AND Laboratory.WBC < 3.5\t----- bird -----\tthrombosis_prediction",
    "1204": "SELECT DATEDIFF(`Examination Date`, `First Date`) AS evaluation_time FROM Examination INNER JOIN Patient ON Examination.ID = Patient.ID WHERE Patient.ID = 821298;\t----- bird -----\tthrombosis_prediction",
    "1205": "SELECT CASE WHEN P.SEX = 'M' AND L.UA > 8.0 THEN 'Above normal range' WHEN P.SEX = 'F' AND L.UA > 6.5 THEN 'Above normal range' ELSE 'Within normal range' END AS UricAcidRange FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE P.ID = 57266\t----- bird -----\tthrombosis_prediction",
    "1206": "SELECT L.Date FROM Laboratory AS L WHERE L.ID = 48473 AND L.GOT >= 60\t----- bird -----\tthrombosis_prediction",
    "1207": "SELECT T1.ID, T2.SEX, T2.Birthday FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID INNER JOIN Laboratory AS T3 ON T1.ID = T3.ID WHERE T3.GOT < 60 AND year(T1.`Examination Date`) = 1994\t----- bird -----\tthrombosis_prediction",
    "1208": "SELECT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND T2.GPT >= 60\t----- bird -----\tthrombosis_prediction",
    "1209": "SELECT T2.Diagnosis FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.GPT > 60 ORDER BY T1.Birthday ASC;\t----- bird -----\tthrombosis_prediction",
    "1210": "SELECT AVG(LDH) FROM Laboratory WHERE LDH < 500\t----- bird -----\tthrombosis_prediction",
    "1211": "SELECT P.ID, STRFTIME('%Y', CURRENT_TIMESTAMP) - STRFTIME('%Y', P.Birthday) AS age FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE L.LDH > 600 AND L.LDH < 800\t----- bird -----\tthrombosis_prediction",
    "1212": "SELECT T1.ID, T1.Admission FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.ALP < 300 AND T1.Admission = '+';\t----- bird -----\tthrombosis_prediction",
    "1213": "SELECT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Birthday = '1982-04-01' AND T2.ALP < 300\t----- bird -----\tthrombosis_prediction",
    "1214": "SELECT Patient.ID, Patient.SEX, Patient.Birthday FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.TP < 6.0;\t----- bird -----\tthrombosis_prediction",
    "1215": "SELECT ID, TP, TP - 8.5 AS Deviation FROM Laboratory WHERE ID IN (SELECT ID FROM Patient WHERE SEX = 'F') AND TP > 8.5;\t----- bird -----\tthrombosis_prediction",
    "1216": "SELECT * FROM Patient WHERE SEX = 'M' AND (ALB <= 3.5 OR ALB >= 5.5) ORDER BY Birthday DESC;\t----- bird -----\tthrombosis_prediction",
    "1217": "SELECT P.ID, P.`First Date`, P.Diagnosis, L.ALB FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE strftime('%Y', P.Birthday) = '1982' AND L.ALB BETWEEN 3.5 AND 5.5;\t----- bird -----\tthrombosis_prediction",
    "1218": "SELECT COUNT(*) * 100 / (SELECT COUNT(*) FROM Patient WHERE SEX = 'F') AS Percentage FROM Laboratory AS L INNER JOIN Patient AS P ON L.ID = P.ID WHERE (L.UA > 8.0 AND P.SEX = 'M') OR (L.UA > 6.5 AND P.SEX = 'F')\t----- bird -----\tthrombosis_prediction",
    "1219": "SELECT AVG(UA) FROM Laboratory WHERE Date = (SELECT MAX(Date) FROM Laboratory) AND (UA < 8.0 AND SEX = 'M' OR UA < 6.5 AND SEX = 'F')\t----- bird -----\tthrombosis_prediction",
    "1220": "SELECT Patient.ID, Patient.SEX, Patient.Birthday FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.UN = 29;\t----- bird -----\tthrombosis_prediction",
    "1221": "SELECT T1.ID, T1.SEX, T1.Birthday FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Diagnosis = 'RA' AND T2.UN < 30\t----- bird -----\tthrombosis_prediction",
    "1222": "SELECT COUNT(*) FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE P.Sex = 'M' AND L.CRE >= 1.5\t----- bird -----\tthrombosis_prediction",
    "1223": "SELECT CASE WHEN SUM(CASE WHEN SEX = 'M' AND CRE >= 1.5 THEN 1 ELSE 0 END) > SUM(CASE WHEN SEX = 'F' AND CRE >= 1.5 THEN 1 ELSE 0 END) THEN 'True' ELSE 'False' END FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID;\t----- bird -----\tthrombosis_prediction",
    "1224": "SELECT T1.ID, T2.SEX, T2.Birthday FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.`T-BIL` = (SELECT MAX(`T-BIL`) FROM Laboratory)\t----- bird -----\tthrombosis_prediction",
    "1225": "SELECT Patient.SEX, SUM(Laboratory.`T-BIL`) AS Total_Bilirubin FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.`T-BIL` >= 2.0 GROUP BY Patient.SEX;\t----- bird -----\tthrombosis_prediction",
    "1226": "SELECT T1.ID, T2.`T-CHO` FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Birthday = (SELECT MIN(Birthday) FROM Patient) ORDER BY T2.`T-CHO` DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1227": "SELECT AVG(YEAR(date('now')) - YEAR(P.birthday)) FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE P.SEX = 'M' AND L.`T-CHO` >= 250;\t----- bird -----\tthrombosis_prediction",
    "1228": "SELECT P.ID, P.Diagnosis FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE L.TG > 300;\t----- bird -----\tthrombosis_prediction",
    "1229": "SELECT COUNT(*) FROM Patient WHERE ID IN (SELECT ID FROM Laboratory WHERE TG >= 200) AND (YEAR(CURRENT_TIMESTAMP) - YEAR(Birthday)) > 50\t----- bird -----\tthrombosis_prediction",
    "1230": "SELECT DISTINCT ID FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Admission = '-' AND CPK < 250;\t----- bird -----\tthrombosis_prediction",
    "1231": "SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND year(T1.Birthday) BETWEEN 1936 AND 1956 AND T2.CPK >= 250\t----- bird -----\tthrombosis_prediction",
    "1232": "SELECT T1.ID, T1.SEX, STRFTIME('%Y', CURRENT_TIMESTAMP) - STRFTIME('%Y', T1.Birthday) AS age FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.GLU >= 180 AND T2.`T-CHO` < 250\t----- bird -----\tthrombosis_prediction",
    "1233": "SELECT T1.ID, T2.GLU FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.GLU < 180 AND strftime('%Y', T1.`First Date`) >= 1991;\t----- bird -----\tthrombosis_prediction",
    "1234": "SELECT T1.ID, T2.SEX, T2.Birthday FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.WBC <= 3.5 OR T1.WBC >= 9.0 GROUP BY T2.SEX, T2.Birthday ORDER BY T2.Birthday ASC;\t----- bird -----\tthrombosis_prediction",
    "1235": "SELECT T1.ID, CASE WHEN T2.Birthday IS NOT NULL THEN strftime('%Y', 'now') - strftime('%Y', T2.Birthday) ELSE NULL END AS age, T2.Diagnosis FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.RBC < 3.5;\t----- bird -----\tthrombosis_prediction",
    "1236": "SELECT P.S. The SQL query provided is incomplete and needs to be finished with the appropriate SELECT statement to retrieve the required information.\t----- bird -----\tthrombosis_prediction",
    "1237": "SELECT T1.ID, T2.SEX FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Admission = '-' AND T2.HGB < 10\t----- bird -----\tthrombosis_prediction",
    "1238": "SELECT Patient.ID, Patient.SEX FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Diagnosis = 'SLE' AND HGB > 10 AND HGB < 17 ORDER BY Birthday DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1239": "SELECT T1.ID, STRFTIME('%Y', CURRENT_TIMESTAMP) - STRFTIME('%Y', T2.Birthday) AS age FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.HCT >= 52 GROUP BY T1.ID HAVING COUNT(T1.ID) > 2\t----- bird -----\tthrombosis_prediction",
    "1240": "SELECT AVG(HCT) FROM Laboratory WHERE Date LIKE '1991%' AND HCT < 29\t----- bird -----\tthrombosis_prediction",
    "1241": "SELECT COUNT(*) AS LowerThanNormal, (SELECT COUNT(*) FROM Laboratory WHERE PLT > 400) AS HigherThanNormal FROM Laboratory WHERE PLT < 100\t----- bird -----\tthrombosis_prediction",
    "1242": "SELECT P.ID, P.SEX, P.Birthday, L.PLT FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE L.Date LIKE '1984%' AND (STRFTIME('%Y', CURRENT_TIMESTAMP) - STRFTIME('%Y', P.Birthday)) < 50 AND L.PLT BETWEEN 100 AND 400\t----- bird -----\tthrombosis_prediction",
    "1243": "SELECT SUM(IIF(PT >= 14 AND SEX = 'F', 1, 0)) / SUM(IIF(PT >= 14, 1, 0)) * 100 AS percentage FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE (YEAR(CURRENT_TIMESTAMP) - YEAR(Birthday)) > 55\t----- bird -----\tthrombosis_prediction",
    "1244": "SELECT ID FROM Patient WHERE year(`First Date`) > 1992 AND ID IN (SELECT ID FROM Laboratory WHERE PT < 14)\t----- bird -----\tthrombosis_prediction",
    "1245": "SELECT COUNT(ID) FROM Examination WHERE `Examination Date` > '1997-01-01' AND APTT < 45\t----- bird -----\tthrombosis_prediction",
    "1246": "SELECT COUNT(DISTINCT T1.ID) FROM Laboratory AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.APTT > 45 AND T2.Thrombosis = 3\t----- bird -----\tthrombosis_prediction",
    "1247": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Sex = 'M' AND T2.WBC BETWEEN 3.5 AND 9.0 AND (T2.FG <= 150 OR T2.FG >= 450)\t----- bird -----\tthrombosis_prediction",
    "1248": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Birthday > '1980-01-01' AND T2.FG NOT BETWEEN 150 AND 450\t----- bird -----\tthrombosis_prediction",
    "1249": "SELECT Diagnosis FROM Patient WHERE ID IN ( SELECT ID FROM Laboratory WHERE `U-PRO` >= 30 )\t----- bird -----\tthrombosis_prediction",
    "1250": "SELECT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.`U-PRO` > 0 AND T2.`U-PRO` < 30 AND T1.Diagnosis = 'SLE'\t----- bird -----\tthrombosis_prediction",
    "1251": "SELECT COUNT(DISTINCT T3.ID) FROM Laboratory AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID INNER JOIN Patient AS T3 ON T1.ID = T3.ID WHERE T1.IGG < 900 AND T2.Symptoms = 'abortion'\t----- bird -----\tthrombosis_prediction",
    "1252": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.`aCL IgG` BETWEEN 900 AND 2000 AND T2.Symptoms IS NOT NULL\t----- bird -----\tthrombosis_prediction",
    "1253": "SELECT T1.Diagnosis FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.IGA BETWEEN 80 AND 500 ORDER BY T2.IGA DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1254": "SELECT COUNT(ID) FROM Laboratory WHERE IGA BETWEEN 80 AND 500 AND Date > '1990-01-01' AND ID IN (SELECT ID FROM Patient WHERE strftime('%Y', `First Date`) >= '1990')\t----- bird -----\tthrombosis_prediction",
    "1255": "SELECT T1.Diagnosis FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.IGM NOT BETWEEN 40 AND 400 GROUP BY T1.Diagnosis ORDER BY COUNT(T1.Diagnosis) DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1256": "SELECT COUNT(T1.ID) FROM Patient AS T1 LEFT JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE (T2.CRP LIKE '+' OR T2.CRP LIKE '-' OR T2.CRP < 1.0 OR T2.CRP IS NULL) AND T1.Description IS NULL\t----- bird -----\tthrombosis_prediction",
    "1257": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.CRP NOT IN('+-', '-') AND T2.CRP >= 1.0 AND (YEAR(CURDATE()) - YEAR(T1.Birthday)) < 18\t----- bird -----\tthrombosis_prediction",
    "1258": "SELECT COUNT(DISTINCT p.ID) AS patient_number FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE RA IN ('-', '+-') AND KCT = '+'\t----- bird -----\tthrombosis_prediction",
    "1259": "SELECT Diagnosis FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE YEAR(Birthday) >= 1995 AND RA IN ('-', '+-')\t----- bird -----\tthrombosis_prediction",
    "1260": "SELECT ID FROM Laboratory INNER JOIN Patient ON Laboratory.ID = Patient.ID WHERE RF < 20 AND (STRFTIME('%Y', CURRENT_TIMESTAMP) - STRFTIME('%Y', Birthday)) > 60\t----- bird -----\tthrombosis_prediction",
    "1261": "SELECT COUNT(Patient.ID) FROM Patient LEFT JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE RF < 20 AND Thrombosis = '0'\t----- bird -----\tthrombosis_prediction",
    "1262": "SELECT COUNT(DISTINCT E.ID) FROM Examination AS E INNER JOIN Laboratory AS L ON E.ID = L.ID WHERE L.C3 > 35 AND E.`ANA Pattern` = 'P'\t----- bird -----\tthrombosis_prediction",
    "1263": "SELECT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.HCT < 29 OR T2.HCT > 52 ORDER BY T2.`aCL IgA` DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1264": "SELECT COUNT(DISTINCT E.ID) FROM Examination AS E INNER JOIN Laboratory AS L ON E.ID = L.ID WHERE E.Thrombosis = 1 AND L.C4 > 10\t----- bird -----\tthrombosis_prediction",
    "1265": "SELECT COUNT(DISTINCT T1.ID) FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE (T1.RNP = '-' OR T1.RNP = '+-') AND T2.Admission = '+'\t----- bird -----\tthrombosis_prediction",
    "1266": "SELECT p.Birthday FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE l.RNP NOT IN ('-', '+-') ORDER BY p.Birthday DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1267": "SELECT COUNT(*) FROM Patient AS P INNER JOIN Examination AS E ON P.ID = E.ID WHERE E.SM = 'negative' OR E.SM = '0' AND E.Thrombosis = 1;\t----- bird -----\tthrombosis_prediction",
    "1268": "SELECT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.SM NOT IN ('-', '+-') ORDER BY T1.Birthday DESC LIMIT 3;\t----- bird -----\tthrombosis_prediction",
    "1269": "SELECT T1.ID FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.`Examination Date` >= '1997-01-01' AND T2.SC170 IN ('-', '+-')\t----- bird -----\tthrombosis_prediction",
    "1270": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.SC170 IN ('-', '+-') AND T1.SEX = 'M' AND T2.Symptoms = 'vertigo'\t----- bird -----\tthrombosis_prediction",
    "1271": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.SSA IN ('-', '+-') AND strftime('%Y', T1.`First Date`) < '1990'\t----- bird -----\tthrombosis_prediction",
    "1272": "SELECT T2.ID FROM Patient AS T2 INNER JOIN Laboratory AS T1 ON T1.ID = T2.ID WHERE T1.SSA NOT IN ('-', '+-') AND T2.`First Date` = (SELECT MIN(`First Date`) FROM Patient)\t----- bird -----\tthrombosis_prediction",
    "1273": "SELECT COUNT(DISTINCT E.ID) FROM Examination E INNER JOIN Laboratory L ON E.ID = L.ID WHERE L.SSB IN ('-', '+-') AND E.Diagnosis = 'SLE';\t----- bird -----\tthrombosis_prediction",
    "1274": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.SSB IN ('-', '+-') AND T2.Symptoms IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
    "1275": "SELECT COUNT(*) FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE L.CENTROMEA IN ('-', '+-') AND L.SSB IN ('-', '+-') AND P.SEX = 'M'\t----- bird -----\tthrombosis_prediction",
    "1276": "SELECT T2.Diagnosis FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.DNA >= 8;\t----- bird -----\tthrombosis_prediction",
    "1277": "SELECT COUNT(DISTINCT p.ID) FROM Patient p LEFT JOIN Laboratory l ON p.ID = l.ID WHERE l.DNA < 8 AND p.Description IS NULL\t----- bird -----\tthrombosis_prediction",
    "1278": "SELECT COUNT(DISTINCT T1.ID) FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.`DNA-II` >= 8 AND T2.Admission = '+'\t----- bird -----\tthrombosis_prediction",
    "1279": "SELECT CAST(SUM(CASE WHEN T1.GOT >= 60 AND T1.Diagnosis = 'SLE' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.ID) FROM Laboratory AS T1\t----- bird -----\tthrombosis_prediction",
    "1280": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND T2.GOT < 60;\t----- bird -----\tthrombosis_prediction",
    "1281": "SELECT MIN(Birthday) AS youngest_birthdate FROM Patient WHERE ID IN (SELECT ID FROM Laboratory WHERE GOT >= 60)\t----- bird -----\tthrombosis_prediction",
    "1282": "SELECT T1.Birthday FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.GPT < 60 ORDER BY T2.GPT DESC LIMIT 3\t----- bird -----\tthrombosis_prediction",
    "1283": "SELECT COUNT(*) FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE L.GOT < 60 AND P.Sex = 'M'\t----- bird -----\tthrombosis_prediction",
    "1284": "SELECT MIN(`First Date`) FROM Patient WHERE ID = (SELECT ID FROM Laboratory WHERE LDH < 500 ORDER BY LDH DESC LIMIT 1)\t----- bird -----\tthrombosis_prediction",
    "1285": "SELECT MAX(`First Date`) AS Latest_Recorded_Date FROM Patient WHERE ID IN (SELECT ID FROM Laboratory WHERE LDH >= 500)\t----- bird -----\tthrombosis_prediction",
    "1286": "SELECT COUNT(Patient.ID) FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.ALP >= 300 AND Patient.Admission = '+'\t----- bird -----\tthrombosis_prediction",
    "1287": "SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Admission = '-' AND T2.ALP < 300\t----- bird -----\tthrombosis_prediction",
    "1288": "SELECT Diagnosis FROM Examination WHERE ID IN (SELECT ID FROM Laboratory WHERE TP < 6.0)\t----- bird -----\tthrombosis_prediction",
    "1289": "SELECT COUNT(*) FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T2.Diagnosis = 'SJS' AND T1.TP > 6.0 AND T1.TP < 8.5\t----- bird -----\tthrombosis_prediction",
    "1290": "SELECT E.`Examination Date` FROM Examination E INNER JOIN Laboratory L ON E.ID = L.ID WHERE L.ALB > 3.5 AND L.ALB < 5.5 ORDER BY L.ALB DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1291": "SELECT COUNT(*) FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE P.Sex = 'M' AND L.ALB > 3.5 AND L.ALB < 5.5 AND L.TP BETWEEN 6.0 AND 8.5\t----- bird -----\tthrombosis_prediction",
    "1292": "SELECT `aCL IgG`, `aCL IgM`, `aCL IgA` FROM Examination WHERE ID IN (SELECT ID FROM Patient WHERE SEX = 'F' AND ID IN (SELECT ID FROM Laboratory WHERE UA = (SELECT MAX(UA) FROM Laboratory WHERE UA <= 6.50)))\t----- bird -----\tthrombosis_prediction",
    "1293": "SELECT MAX(ANA) FROM Examination WHERE CRE < 1.5\t----- bird -----\tthrombosis_prediction",
    "1294": "SELECT T1.ID FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID INNER JOIN (SELECT ID, MAX(`aCL IgA`) AS max_aCL FROM Examination) AS T3 ON T2.ID = T3.ID INNER JOIN Laboratory AS T4 ON T1.ID = T4.ID WHERE T4.CRE < 1.5 AND T2.`aCL IgA` = T3.max_aCL\t----- bird -----\tthrombosis_prediction",
    "1295": "SELECT COUNT(DISTINCT E.ID) FROM Examination AS E INNER JOIN Laboratory AS L ON E.ID = L.ID WHERE L.`T-BIL` >= 2.0 AND E.`ANA Pattern` LIKE '%P%'\t----- bird -----\tthrombosis_prediction",
    "1296": "SELECT ANA FROM Examination WHERE ID = (SELECT ID FROM Laboratory WHERE `T-BIL` < 2.0 ORDER BY `T-BIL` DESC LIMIT 1)\t----- bird -----\tthrombosis_prediction",
    "1297": "SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.`T-CHO` >= 250 AND T2.KCT = '-'\t----- bird -----\tthrombosis_prediction",
    "1298": "SELECT COUNT(*) FROM Examination AS E INNER JOIN Laboratory AS L ON E.ID = L.ID WHERE L.`T-CHO` < 250 AND E.`ANA Pattern` = 'P'\t----- bird -----\tthrombosis_prediction",
    "1299": "SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.TG < 200 AND T2.TG IS NOT NULL AND T2.Symptoms IS NOT NULL\t----- bird -----\tthrombosis_prediction",
    "1300": "SELECT Diagnosis FROM Patient WHERE ID IN (SELECT ID FROM Laboratory WHERE TG < 200 ORDER BY TG DESC LIMIT 1)\t----- bird -----\tthrombosis_prediction",
    "1301": "SELECT T1.ID FROM Patient AS T1 LEFT JOIN Examination AS T2 ON T1.ID = T2.ID LEFT JOIN Laboratory AS T3 ON T1.ID = T3.ID WHERE T2.Thrombosis = 0 AND T3.CPK < 250\t----- bird -----\tthrombosis_prediction",
    "1302": "SELECT COUNT(DISTINCT L.ID) FROM Laboratory AS L INNER JOIN Patient AS P ON L.ID = P.ID WHERE L.CPK < 250 AND (L.KCT = '+' OR L.RVVT = '+' OR L.LAC = '+')\t----- bird -----\tthrombosis_prediction",
    "1303": "SELECT MIN(Birthday) FROM Patient WHERE ID IN ( SELECT ID FROM Laboratory WHERE GLU > 180 ORDER BY Date ASC LIMIT 1 )\t----- bird -----\tthrombosis_prediction",
    "1304": "SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.GLU < 180 AND T2.Thrombosis = 0\t----- bird -----\tthrombosis_prediction",
    "1305": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Admission = '+' AND T2.WBC >= 3.5 AND T2.WBC <= 9.0\t----- bird -----\tthrombosis_prediction",
    "1306": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID INNER JOIN Laboratory AS T3 ON T1.ID = T3.ID WHERE T1.Diagnosis = 'SLE' AND T3.WBC BETWEEN 3.5 AND 9.0;\t----- bird -----\tthrombosis_prediction",
    "1307": "SELECT DISTINCT Patient.ID FROM Laboratory INNER JOIN Patient ON Laboratory.ID = Patient.ID WHERE (RBC <= 3.5 OR RBC >= 6.0) AND Admission = '-'\t----- bird -----\tthrombosis_prediction",
    "1308": "SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.PLT > 100 AND T2.PLT < 400 AND T1.Diagnosis IS NOT NULL\t----- bird -----\tthrombosis_prediction",
    "1309": "SELECT L.PLT FROM Laboratory AS L INNER JOIN Patient AS P ON L.ID = P.ID WHERE L.PLT > 100 AND L.PLT < 400 AND P.Diagnosis = 'MCTD'\t----- bird -----\tthrombosis_prediction",
    "1310": "SELECT AVG(PT) FROM Laboratory AS L INNER JOIN Patient AS P ON L.ID = P.ID WHERE P.Sex = 'M' AND L.PT < 14\t----- bird -----\tthrombosis_prediction",
    "1311": "SELECT COUNT(*) FROM Examination WHERE Thrombosis IN (1, 2) AND PT < 14\t----- bird -----\tthrombosis_prediction",
    "1312": "SELECT major_name FROM member JOIN major ON member.link_to_major = major.major_id WHERE first_name = 'Angela' AND last_name = 'Sanders'\t----- bird -----\tstudent_club",
    "1313": "SELECT COUNT(T1.member_id) FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.college = 'College of Engineering'\t----- bird -----\tstudent_club",
    "1314": "SELECT T1.first_name || ' ' || T1.last_name AS full_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.department = 'Art and Design'\t----- bird -----\tstudent_club",
    "1315": "SELECT COUNT(link_to_member) FROM attendance WHERE link_to_event = (SELECT event_id FROM event WHERE event_name = 'Women\\'s Soccer')\t----- bird -----\tstudent_club",
    "1316": "SELECT phone FROM member JOIN attendance ON member.member_id = attendance.link_to_member JOIN event ON attendance.link_to_event = event.event_id WHERE event.event_name = 'Women\\'s Soccer'\t----- bird -----\tstudent_club",
    "1317": "SELECT COUNT(T1.member_id) FROM member AS T1 INNER JOIN attendance AS T2 ON T1.member_id = T2.link_to_member INNER JOIN event AS T3 ON T2.link_to_event = T3.event_id WHERE T1.link_to_major = 'Student_Club' AND T3.event_name = 'Women\\'s Soccer' AND T1.t_shirt_size = 'Medium'\t----- bird -----\tstudent_club",
    "1318": "SELECT E.event_name FROM event E INNER JOIN attendance A ON E.event_id = A.link_to_event INNER JOIN member M ON A.link_to_member = M.member_id INNER JOIN major MA ON M.link_to_major = MA.major_id WHERE MA.major_name = 'Student_Club' GROUP BY E.event_name ORDER BY COUNT(A.link_to_event) DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1319": "SELECT T2.college FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.position = 'Vice President' AND T2.major_name = 'Student_Club'\t----- bird -----\tstudent_club",
    "1320": "SELECT T1.event_name FROM event AS T1 INNER JOIN attendance AS T2 ON T1.event_id = T2.link_to_event INNER JOIN member AS T3 ON T2.link_to_member = T3.member_id WHERE T3.first_name = 'Maya' AND T3.last_name = 'Mclean';\t----- bird -----\tstudent_club",
    "1321": "SELECT COUNT(*) FROM attendance JOIN event ON attendance.link_to_event = event.event_id JOIN member ON attendance.link_to_member = member.member_id WHERE member.first_name = 'Sacha' AND member.last_name = 'Harrison' AND YEAR(event.event_date) = 2019 AND event.type = 'Student_Club'\t----- bird -----\tstudent_club",
    "1322": "SELECT COUNT(*) FROM (SELECT event_id FROM attendance WHERE link_to_member IN (SELECT member_id FROM member WHERE link_to_major = 'Student_Club') GROUP BY event_id HAVING COUNT(event_id) > 10) AS events_attended WHERE event_id IN (SELECT event_id FROM event WHERE type = 'Meeting')\t----- bird -----\tstudent_club",
    "1323": "SELECT event_name FROM event WHERE event_id IN (SELECT link_to_event FROM attendance GROUP BY link_to_event HAVING COUNT(link_to_member) > 20)\t----- bird -----\tstudent_club",
    "1324": "SELECT AVG(attendance_count) FROM ( SELECT COUNT(event_id) as attendance_count FROM event WHERE type = 'Meeting' AND event_date BETWEEN '2020-01-01' AND '2020-12-31' GROUP BY event_name ) as subquery;\t----- bird -----\tstudent_club",
    "1325": "SELECT T1.expense_description FROM expense AS T1 INNER JOIN budget AS T2 ON T1.link_to_budget = T2.budget_id WHERE T2.event_status = 'club events' ORDER BY T1.cost DESC LIMIT 1\t----- bird -----\tstudent_club",
    "1326": "SELECT COUNT(T1.member_id) FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Environmental Engineering'\t----- bird -----\tstudent_club",
    "1327": "SELECT T1.first_name || ' ' || T1.last_name AS full_name FROM member AS T1 INNER JOIN attendance AS T2 ON T1.member_id = T2.link_to_member INNER JOIN event AS T3 ON T2.link_to_event = T3.event_id WHERE T3.event_name = 'Laugh Out Loud'\t----- bird -----\tstudent_club",
    "1328": "SELECT T1.last_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Law and Constitutional Studies'\t----- bird -----\tstudent_club",
    "1329": "SELECT county FROM zip_code JOIN member ON zip_code.zip_code = member.zip WHERE member.first_name = 'SHERRI' AND member.last_name = 'RAMSEY'\t----- bird -----\tstudent_club",
    "1330": "SELECT college FROM major WHERE major_id = (SELECT link_to_major FROM member WHERE first_name = 'Tyler' AND last_name = 'Hewitt')\t----- bird -----\tstudent_club",
    "1331": "SELECT SUM(amount) FROM income WHERE link_to_member IN (SELECT member_id FROM member WHERE position = 'Vice President')\t----- bird -----\tstudent_club",
    "1332": "SELECT SUM(T1.cost) FROM expense AS T1 INNER JOIN budget AS T2 ON T1.link_to_budget = T2.budget_id INNER JOIN event AS T3 ON T2.link_to_event = T3.event_id WHERE T1.expense_description = 'Food' AND T2.category = 'Food' AND T3.event_name = 'September Meeting'\t----- bird -----\tstudent_club",
    "1333": "SELECT T3.city, T3.state FROM member AS T1 INNER JOIN attendance AS T2 ON T1.member_id = T2.link_to_member INNER JOIN zip_code AS T3 ON T1.zip = T3.zip_code WHERE T1.position = 'President'\t----- bird -----\tstudent_club",
    "1334": "SELECT T1.first_name || ' ' || T1.last_name AS full_name FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T2.state = 'Illinois'\t----- bird -----\tstudent_club",
    "1335": "SELECT SUM(T1.cost) FROM expense AS T1 INNER JOIN budget AS T2 ON T1.link_to_budget = T2.budget_id INNER JOIN event AS T3 ON T2.link_to_event = T3.event_id WHERE T1.expense_description = 'Advertisement' AND T2.event_status = 'September Meeting'\t----- bird -----\tstudent_club",
    "1336": "SELECT department FROM major INNER JOIN member ON major.major_id = member.link_to_major WHERE member.first_name = 'Pierce' AND member.last_name = 'Guidi'\t----- bird -----\tstudent_club",
    "1337": "SELECT SUM(amount) FROM budget WHERE link_to_event = (SELECT event_id FROM event WHERE event_name = 'October Speaker')\t----- bird -----\tstudent_club",
    "1338": "SELECT E.expense_id, E.approved FROM expense AS E INNER JOIN event AS EV ON E.link_to_event = EV.event_id WHERE EV.event_name = 'October Meeting' AND EV.event_date = '2019-10-08'\t----- bird -----\tstudent_club",
    "1339": "SELECT SUM(cost) / COUNT(DISTINCT link_to_event) AS average_cost FROM expense WHERE link_to_member = 'Elijah Allen' AND (strftime('%m', expense_date) = '09' OR strftime('%m', expense_date) = '10')\t----- bird -----\tstudent_club",
    "1340": "SELECT SUM(CASE WHEN strftime('%Y', event_date) = '2019' THEN spent ELSE 0 END) - SUM(CASE WHEN strftime('%Y', event_date) = '2020' THEN spent ELSE 0 END) FROM budget WHERE event_status = 'Student_Club'\t----- bird -----\tstudent_club",
    "1341": "SELECT location FROM event WHERE event_name = 'Spring Budget Review'\t----- bird -----\tstudent_club",
    "1342": "SELECT E.cost FROM expense AS E INNER JOIN budget AS B ON E.link_to_budget = B.budget_id INNER JOIN event AS EV ON B.link_to_event = EV.event_id WHERE EV.event_date = '2019-09-04' AND E.expense_description = 'Posters'\t----- bird -----\tstudent_club",
    "1343": "SELECT MAX(b.remaining) FROM budget AS b WHERE b.category = 'Food'\t----- bird -----\tstudent_club",
    "1344": "SELECT notes FROM income WHERE source = 'Fundraising' AND date_received = '2019-09-14'\t----- bird -----\tstudent_club",
    "1345": "SELECT COUNT(*) FROM major WHERE college = 'College of Humanities and Social Sciences'\t----- bird -----\tstudent_club",
    "1346": "SELECT T1.phone FROM member AS T1 WHERE T1.first_name = \"Carlo\" AND T1.last_name = \"Jacobs\"\t----- bird -----\tstudent_club",
    "1347": "SELECT T3.county FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code INNER JOIN major AS T3 ON T1.link_to_major = T3.major_id WHERE T1.first_name = 'Adela' AND T1.last_name = 'O\\'Gallagher'\t----- bird -----\tstudent_club",
    "1348": "SELECT COUNT(budget_id) FROM budget WHERE event_status = 'November Meeting' AND remaining < 0;\t----- bird -----\tstudent_club",
    "1349": "SELECT SUM(amount) FROM budget WHERE link_to_event = (SELECT event_id FROM event WHERE event_name = 'September Speaker')\t----- bird -----\tstudent_club",
    "1350": "SELECT T1.event_status FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event INNER JOIN expense AS T3 ON T3.link_to_budget = T2.budget_id WHERE T3.expense_description = 'Post Cards, Posters' AND T3.expense_date = '2019-8-20'\t----- bird -----\tstudent_club",
    "1351": "SELECT major_name FROM member JOIN major ON member.link_to_major = major.major_id WHERE first_name = 'Brent' AND last_name = 'Thomason'\t----- bird -----\tstudent_club",
    "1352": "SELECT COUNT(T1.member_id) FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Human Development and Family Studies' AND T1.t_shirt_size = 'Large'\t----- bird -----\tstudent_club",
    "1353": "SELECT T2.type FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T1.first_name = 'Christof' AND T1.last_name = 'Nielson'\t----- bird -----\tstudent_club",
    "1354": "SELECT major.major_name FROM member JOIN major ON member.link_to_major = major.major_id WHERE member.position = 'Vice President'\t----- bird -----\tstudent_club",
    "1355": "SELECT T3.state FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code INNER JOIN zip_code AS T3 ON T1.zip = T3.zip_code WHERE T1.first_name = 'Sacha' AND T1.last_name = 'Harrison'\t----- bird -----\tstudent_club",
    "1356": "SELECT department FROM member WHERE position = 'President'\t----- bird -----\tstudent_club",
    "1357": "SELECT T1.date_received FROM income AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.first_name = 'Connor' AND T2.last_name = 'Hilton' AND T1.source = 'Dues'\t----- bird -----\tstudent_club",
    "1358": "SELECT T1.first_name, T1.last_name FROM member AS T1 INNER JOIN income AS T2 ON T1.member_id = T2.link_to_member WHERE T2.source = 'Dues' ORDER BY T2.date_received LIMIT 1\t----- bird -----\tstudent_club",
    "1359": "SELECT SUM(CASE WHEN T1.category = 'Advertisement' AND T2.event_name = 'Yearly Kickoff' THEN T1.amount ELSE 0 END) / SUM(CASE WHEN T1.category = 'Advertisement' AND T2.event_name = 'October Meeting' THEN T1.amount ELSE 0 END) FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id;\t----- bird -----\tstudent_club",
    "1360": "SELECT (SUM(CASE WHEN T2.category = 'Parking' THEN T1.amount ELSE 0 END) * 100) / SUM(T1.amount) FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.event_name = 'November Speaker'\t----- bird -----\tstudent_club",
    "1361": "SELECT SUM(cost) FROM expense WHERE expense_description = 'Pizza'\t----- bird -----\tstudent_club",
    "1362": "SELECT COUNT(DISTINCT city) FROM zip_code WHERE county = 'Orange' AND state = 'Virginia'\t----- bird -----\tstudent_club",
    "1363": "SELECT department FROM major WHERE college = 'College of Humanities and Social Sciences'\t----- bird -----\tstudent_club",
    "1364": "SELECT T3.city, T3.county, T3.state FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code INNER JOIN zip_code AS T3 ON T2.city = T3.city WHERE T1.first_name = 'AMY' AND T1.last_name = 'FIRTH'\t----- bird -----\tstudent_club",
    "1365": "SELECT expense_description FROM expense WHERE link_to_budget = (SELECT budget_id FROM budget ORDER BY remaining LIMIT 1);\t----- bird -----\tstudent_club",
    "1366": "SELECT T2.first_name, T2.last_name FROM event AS T1 INNER JOIN attendance AS T3 ON T1.event_id = T3.link_to_event INNER JOIN member AS T2 ON T3.link_to_member = T2.member_id WHERE T1.event_name = 'October Meeting'\t----- bird -----\tstudent_club",
    "1367": "SELECT major.college FROM member INNER JOIN major ON member.link_to_major = major.major_id GROUP BY major.college ORDER BY COUNT(*) DESC LIMIT 1\t----- bird -----\tstudent_club",
    "1368": "SELECT T2.major_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.phone = '809-555-3360'\t----- bird -----\tstudent_club",
    "1369": "SELECT T1.event_name FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event ORDER BY T2.amount DESC LIMIT 1\t----- bird -----\tstudent_club",
    "1370": "SELECT e.expense_description, e.cost FROM expense e JOIN member m ON e.link_to_member = m.member_id WHERE m.position = 'Vice President'\t----- bird -----\tstudent_club",
    "1371": "SELECT COUNT(T2.link_to_member) FROM event AS T1 INNER JOIN attendance AS T2 ON T1.event_id = T2.link_to_event WHERE T1.event_name = 'Women\\'s Soccer'\t----- bird -----\tstudent_club",
    "1372": "SELECT t1.date_received FROM income AS t1 INNER JOIN member AS t2 ON t1.link_to_member = t2.member_id WHERE t2.first_name = 'Casey' AND t2.last_name = 'Mason'\t----- bird -----\tstudent_club",
    "1373": "SELECT COUNT(T1.member_id) FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T2.state = 'Maryland'\t----- bird -----\tstudent_club",
    "1374": "SELECT COUNT(link_to_event) FROM attendance WHERE link_to_member = (SELECT member_id FROM member WHERE phone = '954-555-6240')\t----- bird -----\tstudent_club",
    "1375": "SELECT T1.first_name || ' ' || T1.last_name AS full_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.department = 'School of Applied Sciences, Technology and Education'\t----- bird -----\tstudent_club",
    "1376": "SELECT event_id, event_name, MAX(spent/amount) AS spend_to_budget_ratio FROM event JOIN budget ON event.event_id = budget.link_to_event WHERE status = 'Closed' GROUP BY event_id, event_name ORDER BY spend_to_budget_ratio DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1377": "SELECT COUNT(*) FROM member WHERE position = 'President';\t----- bird -----\tstudent_club",
    "1378": "SELECT MAX(spent) FROM budget\t----- bird -----\tstudent_club",
    "1379": "SELECT COUNT(event_id) FROM event WHERE type = 'Meeting' AND YEAR(event_date) = 2020;\t----- bird -----\tstudent_club",
    "1380": "SELECT SUM(spent) FROM budget WHERE category = 'Food'\t----- bird -----\tstudent_club",
    "1381": "SELECT first_name || ' ' || last_name AS full_name FROM member INNER JOIN attendance ON member.member_id = attendance.link_to_member GROUP BY full_name HAVING COUNT(attendance.link_to_event) > 7;\t----- bird -----\tstudent_club",
    "1382": "SELECT T1.first_name, T1.last_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id INNER JOIN attendance AS T3 ON T1.member_id = T3.link_to_member INNER JOIN event AS T4 ON T3.link_to_event = T4.event_id WHERE T2.major_name = 'Interior Design' AND T4.event_name = 'Community Theater'\t----- bird -----\tstudent_club",
    "1383": "SELECT first_name || ' ' || last_name AS full_name FROM member JOIN zip_code ON member.zip = zip_code.zip_code WHERE zip_code.city = 'Georgetown' AND zip_code.state = 'South Carolina'\t----- bird -----\tstudent_club",
    "1384": "SELECT COUNT(*) FROM income WHERE link_to_member = (SELECT member_id FROM member WHERE first_name = 'Grant' AND last_name = 'Gilmour')\t----- bird -----\tstudent_club",
    "1385": "SELECT T1.first_name || ' ' || T1.last_name AS full_name FROM member AS T1 INNER JOIN income AS T2 ON T1.member_id = T2.link_to_member WHERE T2.amount > 40;\t----- bird -----\tstudent_club",
    "1386": "SELECT SUM(cost) FROM expense WHERE link_to_budget IN (SELECT budget_id FROM budget WHERE link_to_event IN (SELECT event_id FROM event WHERE event_name = 'Yearly Kickoff'))\t----- bird -----\tstudent_club",
    "1387": "SELECT T2.first_name, T2.last_name FROM member AS T2 INNER JOIN budget AS T1 ON T2.member_id = T1.link_to_event INNER JOIN event AS T3 ON T1.link_to_event = T3.event_id WHERE T3.event_name = 'Yearly Kickoff'\t----- bird -----\tstudent_club",
    "1388": "SELECT T1.first_name || ' ' || T1.last_name AS full_name, T2.source FROM member AS T1 INNER JOIN income AS T2 ON T1.member_id = T2.link_to_member WHERE T2.amount = (SELECT MAX(amount) FROM income)\t----- bird -----\tstudent_club",
    "1389": "SELECT event_name FROM event WHERE event_id = ( SELECT link_to_event FROM budget WHERE spent = ( SELECT MIN(spent) FROM budget ) );\t----- bird -----\tstudent_club",
    "1390": "SELECT SUM(CASE WHEN T1.event_name = 'Yearly Kickoff' THEN T2.cost END) * 100 / SUM(T2.cost) FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event\t----- bird -----\tstudent_club",
    "1391": "SELECT SUM(CASE WHEN major_name = 'Finance' THEN 1 ELSE 0 END) / SUM(CASE WHEN major_name = 'Physics' THEN 1 ELSE 0 END) AS ratio FROM major;\t----- bird -----\tstudent_club",
    "1392": "SELECT MAX(source) AS Top_Source FROM income WHERE date_received BETWEEN '2019-09-01' AND '2019-09-30' ORDER BY amount DESC LIMIT 1\t----- bird -----\tstudent_club",
    "1393": "SELECT first_name || ' ' || last_name AS full_name, email FROM member WHERE position = 'Secretary'\t----- bird -----\tstudent_club",
    "1394": "SELECT COUNT(T1.member_id) FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Physics Teaching'\t----- bird -----\tstudent_club",
    "1395": "SELECT COUNT(*) FROM attendance AS A INNER JOIN event AS E ON A.link_to_event = E.event_id WHERE E.event_name = 'Community Theater' AND YEAR(E.event_date) = 2019\t----- bird -----\tstudent_club",
    "1396": "SELECT COUNT(*) AS num_events_attended, T2.major_name FROM member AS T1 INNER JOIN attendance AS T2 ON T1.member_id = T2.link_to_member WHERE T1.first_name = 'Luisa' AND T1.last_name = 'Guidi'\t----- bird -----\tstudent_club",
    "1397": "SELECT AVG(T1.spent) FROM budget AS T1 INNER JOIN expense AS T2 ON T1.budget_id = T2.link_to_budget INNER JOIN event AS T3 ON T1.link_to_event = T3.event_id WHERE T1.category = 'Food' AND T1.event_status = 'Closed'\t----- bird -----\tstudent_club",
    "1398": "SELECT event_name FROM budget WHERE category = 'Advertisement' ORDER BY spent DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1399": "SELECT CASE WHEN EXISTS (SELECT * FROM attendance AS A INNER JOIN event AS E ON A.link_to_event = E.event_id INNER JOIN member AS M ON A.link_to_member = M.member_id WHERE M.first_name = 'Maya' AND M.last_name = 'Mclean' AND E.event_name = 'Women\\'s Soccer') THEN 'Yes' ELSE 'No' END as attended_event\t----- bird -----\tstudent_club",
    "1400": "SELECT (SUM(CASE WHEN type = 'Community Service' THEN 1 ELSE 0 END) * 100 / COUNT(event_id)) FROM event WHERE event_date BETWEEN '2019-01-01' AND '2019-12-31';\t----- bird -----\tstudent_club",
    "1401": "SELECT E.cost FROM expense AS E INNER JOIN event AS EV ON E.link_to_event = EV.event_id WHERE EV.event_name = 'September Speaker' AND E.expense_description = 'Posters';\t----- bird -----\tstudent_club",
    "1402": "SELECT T1.t_shirt_size FROM member AS T1 GROUP BY T1.t_shirt_size ORDER BY COUNT(T1.t_shirt_size) DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1403": "SELECT event_name FROM event WHERE status = 'Closed' AND event_id IN ( SELECT link_to_event FROM budget WHERE remaining < 0 ORDER BY remaining LIMIT 1 )\t----- bird -----\tstudent_club",
    "1404": "SELECT expense_description, SUM(cost) FROM expense WHERE link_to_budget IN (SELECT budget_id FROM budget WHERE link_to_event IN (SELECT event_id FROM event WHERE event_name = 'October Meeting')) AND approved = 'Yes' GROUP BY expense_description;\t----- bird -----\tstudent_club",
    "1405": "SELECT SUM(amount) AS total_budgeted_amount, category FROM budget WHERE link_to_event = (SELECT event_id FROM event WHERE event_name = 'April Speaker') GROUP BY category ORDER BY total_budgeted_amount ASC;\t----- bird -----\tstudent_club",
    "1406": "SELECT budget_id FROM budget WHERE category = 'Food' ORDER BY amount DESC LIMIT 1\t----- bird -----\tstudent_club",
    "1407": "SELECT budget_id, category, amount FROM budget WHERE category = 'Advertisement' ORDER BY amount DESC LIMIT 3\t----- bird -----\tstudent_club",
    "1408": "SELECT SUM(cost) FROM expense WHERE expense_description = 'Parking'\t----- bird -----\tstudent_club",
    "1409": "SELECT SUM(cost) FROM expense WHERE expense_date = '2019-08-20'\t----- bird -----\tstudent_club",
    "1410": "SELECT T1.first_name || ' ' || T1.last_name AS full_name, SUM(T3.cost) AS total_cost FROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member INNER JOIN budget AS T3 ON T2.link_to_budget = T3.budget_id WHERE T1.member_id = 'rec4BLdZHS2Blfp4v' GROUP BY T1.first_name, T1.last_name\t----- bird -----\tstudent_club",
    "1411": "SELECT DISTINCT T2.expense_description FROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member WHERE T1.first_name = 'Sacha' AND T1.last_name = 'Harrison'\t----- bird -----\tstudent_club",
    "1412": "SELECT expense_description FROM expense WHERE link_to_member IN (SELECT member_id FROM member WHERE t_shirt_size = 'X-Large')\t----- bird -----\tstudent_club",
    "1413": "SELECT zip FROM member JOIN expense ON member.member_id = expense.link_to_member WHERE cost < 50\t----- bird -----\tstudent_club",
    "1414": "SELECT major.major_name FROM member JOIN major ON member.link_to_major = major.major_id WHERE member.first_name = 'Phillip' AND member.last_name = 'Cullen'\t----- bird -----\tstudent_club",
    "1415": "SELECT position FROM member WHERE link_to_major = (SELECT major_id FROM major WHERE major_name = 'Business')\t----- bird -----\tstudent_club",
    "1416": "SELECT COUNT(T1.member_id) FROM Member AS T1 INNER JOIN Major ON T1.link_to_major = Major.major_id WHERE Major.major_name = 'Business' AND T1.t_shirt_size = 'Medium'\t----- bird -----\tstudent_club",
    "1417": "SELECT T1.type FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T2.remaining > 30;\t----- bird -----\tstudent_club",
    "1418": "SELECT T1.category FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.location = 'MU 215'\t----- bird -----\tstudent_club",
    "1419": "SELECT T1.category FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.event_date = '2020-03-24T12:00:00'\t----- bird -----\tstudent_club",
    "1420": "SELECT T2.major_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.position = 'Vice President'\t----- bird -----\tstudent_club",
    "1421": "SELECT (SUM(IIF(T1.position = 'Member' AND T2.major_name = 'Mathematics', 1.0, 0)) / COUNT(T1.member_id)) * 100 AS percentage FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id;\t----- bird -----\tstudent_club",
    "1422": "SELECT T1.category FROM event AS T1 WHERE T1.location = 'MU 215'\t----- bird -----\tstudent_club",
    "1423": "SELECT COUNT(*) FROM income WHERE amount = 50\t----- bird -----\tstudent_club",
    "1424": "SELECT COUNT(*) FROM member WHERE position = 'Member' AND t_shirt_size = 'X-Large'\t----- bird -----\tstudent_club",
    "1425": "SELECT COUNT(major_id) FROM major WHERE college = 'College of Agriculture and Applied Sciences' AND department = 'School of Applied Sciences, Technology and Education'\t----- bird -----\tstudent_club",
    "1426": "SELECT T1.last_name, T2.department, T2.college FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Environmental Engineering'\t----- bird -----\tstudent_club",
    "1427": "SELECT T1.category FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.location = 'MU 215' AND T2.type = 'Guest Speaker' AND T1.spent = 0\t----- bird -----\tstudent_club",
    "1428": "SELECT zip_code.city, zip_code.state FROM member JOIN major ON member.link_to_major = major.major_id JOIN zip_code ON member.zip = zip_code.zip_code WHERE major.department = 'Electrical and Computer Engineering Department' AND member.position = 'Member'\t----- bird -----\tstudent_club",
    "1429": "SELECT T1.event_name FROM event AS T1 INNER JOIN attendance AS T2 ON T1.event_id = T2.link_to_event INNER JOIN member AS T3 ON T2.link_to_member = T3.member_id INNER JOIN major AS T4 ON T3.link_to_major = T4.major_id INNER JOIN zip_code AS T5 ON T3.zip = T5.zip_code WHERE T1.type = 'Social' AND T3.position = 'Vice President' AND T5.city = '900 E. Washington St.'\t----- bird -----\tstudent_club",
    "1430": "SELECT T2.last_name, T2.position FROM expense AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T1.expense_description = 'Pizza' AND T1.expense_date = '2019-09-10'\t----- bird -----\tstudent_club",
    "1431": "SELECT M.last_name FROM member AS M JOIN attendance AS A ON M.member_id = A.link_to_member JOIN event AS E ON A.link_to_event = E.event_id WHERE M.position = 'Member' AND E.event_name = 'Women\\'s Soccer'\t----- bird -----\tstudent_club",
    "1432": "SELECT CAST(SUM(CASE WHEN T3.amount = 50 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T3.member_id) FROM member AS T1 INNER JOIN income AS T2 ON T1.member_id = T2.link_to_member INNER JOIN budget AS T3 ON T2.link_to_member = T3.link_to_event WHERE T1.t_shirt_size = 'Medium' AND T1.position = 'Member' AND T3.category = 'Student_Club'\t----- bird -----\tstudent_club",
    "1433": "SELECT T1.country FROM zip_code AS T1 WHERE T1.type = 'PO Box'\t----- bird -----\tstudent_club",
    "1434": "SELECT zip_code FROM zip_code WHERE type = 'PO Box' AND city = 'San Juan Municipio' AND state = 'PR'\t----- bird -----\tstudent_club",
    "1435": "SELECT event_name FROM event WHERE type = 'Game' AND status = 'Closed' AND event_date BETWEEN '2019-03-15' AND '2020-03-20'\t----- bird -----\tstudent_club",
    "1436": "SELECT T1.link_to_event FROM expense AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T1.cost > 50\t----- bird -----\tstudent_club",
    "1437": "SELECT T1.first_name, T1.last_name, T2.link_to_event FROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member WHERE T2.approved = 'true' AND T2.expense_date BETWEEN '2019-01-10' AND '2019-11-19';\t----- bird -----\tstudent_club",
    "1438": "SELECT college FROM member JOIN major ON member.link_to_major = major.major_id WHERE member.first_name = 'Katy' AND member.link_to_major = 'rec1N0upiVLy5esTO'\t----- bird -----\tstudent_club",
    "1439": "SELECT phone FROM member WHERE link_to_major IN (SELECT major_id FROM major WHERE major_name = 'Business' AND college = 'College of Agriculture and Applied Sciences')\t----- bird -----\tstudent_club",
    "1440": "SELECT T2.email FROM expense AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T1.cost > 20 AND T1.expense_date BETWEEN '2019-09-10' AND '2019-11-19'\t----- bird -----\tstudent_club",
    "1441": "SELECT COUNT(T1.member_id) FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'education' AND T1.position = 'Member' AND T2.college = 'College of Education & Human Services'\t----- bird -----\tstudent_club",
    "1442": "SELECT (CAST(SUM(CASE WHEN T1.remaining < 0 THEN 1 ELSE 0 END) AS REAL) / COUNT(T1.event_id)) * 100 FROM budget AS T1\t----- bird -----\tstudent_club",
    "1443": "SELECT event_id, location, status FROM event WHERE event_date BETWEEN '2019-11-01' AND '2020-03-31'\t----- bird -----\tstudent_club",
    "1444": "SELECT expense_description FROM expense GROUP BY expense_description HAVING SUM(cost) / COUNT(expense_id) > 50;\t----- bird -----\tstudent_club",
    "1445": "SELECT first_name, last_name FROM member WHERE t_shirt_size = 'X-Large';\t----- bird -----\tstudent_club",
    "1446": "SELECT CAST(SUM(CASE WHEN type = 'PO Box' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(zip_code) FROM zip_code\t----- bird -----\tstudent_club",
    "1447": "SELECT event_name, location FROM event INNER JOIN budget ON event.event_id = budget.link_to_event WHERE budget.remaining > 0\t----- bird -----\tstudent_club",
    "1448": "SELECT T1.event_name, T1.event_date FROM event AS T1 INNER JOIN expense AS T2 ON T1.event_id = T2.link_to_event WHERE T2.expense_description = 'Pizza' AND T2.cost > 50 AND T2.cost < 100\t----- bird -----\tstudent_club",
    "1449": "SELECT T2.first_name || ' ' || T2.last_name AS full_name, T3.major_name FROM member AS T2 INNER JOIN major AS T3 ON T2.link_to_major = T3.major_id INNER JOIN expense AS T4 ON T2.member_id = T4.link_to_member WHERE T4.cost > 100\t----- bird -----\tstudent_club",
    "1450": "SELECT E.location, Z.city, Z.county FROM event AS E INNER JOIN zip_code AS Z ON E.location = Z.zip_code WHERE E.event_id IN (SELECT link_to_event FROM income GROUP BY link_to_event HAVING COUNT(*) > 40)\t----- bird -----\tstudent_club",
    "1451": "SELECT T1.first_name, T1.last_name, SUM(T2.cost) AS total_cost FROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member WHERE T1.member_id IN (SELECT link_to_member FROM expense GROUP BY link_to_member HAVING COUNT(DISTINCT link_to_event) > 1) GROUP BY T1.member_id ORDER BY total_cost DESC LIMIT 1\t----- bird -----\tstudent_club",
    "1452": "SELECT SUM(cost) / COUNT(DISTINCT link_to_event) AS avg_amount_paid FROM expense INNER JOIN member ON expense.link_to_member = member.member_id WHERE member.position != 'Member'\t----- bird -----\tstudent_club",
    "1453": "SELECT event_name FROM event WHERE event_id IN ( SELECT link_to_event FROM budget WHERE category = 'Parking' AND cost < ( SELECT SUM(cost) / COUNT(event_id) FROM budget WHERE category = 'Parking' ) )\t----- bird -----\tstudent_club",
    "1454": "SELECT SUM(cost) * 100 / COUNT(event_id) FROM expense WHERE link_to_budget IN (SELECT budget_id FROM budget WHERE link_to_event IN (SELECT event_id FROM event WHERE type = 'Game'))\t----- bird -----\tstudent_club",
    "1455": "SELECT T1.budget_id FROM budget AS T1 INNER JOIN expense AS T2 ON T1.budget_id = T2.link_to_budget WHERE T2.expense_description = 'Water, chips, cookies' ORDER BY T2.cost DESC LIMIT 1\t----- bird -----\tstudent_club",
    "1456": "SELECT T2.first_name, T2.last_name FROM expense AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id GROUP BY T2.first_name, T2.last_name ORDER BY MAX(T1.cost) DESC LIMIT 5\t----- bird -----\tstudent_club",
    "1457": "SELECT T2.first_name, T2.last_name, T2.phone FROM member AS T2 INNER JOIN expense AS T1 ON T1.link_to_member = T2.member_id WHERE T1.cost > (SELECT AVG(cost) FROM expense)\t----- bird -----\tstudent_club",
    "1458": "SELECT ( (SELECT (COUNT(CASE WHEN state = 'Maine' THEN 1 END) / COUNT(CASE WHEN position = 'Member' THEN 1 END)) * 100) - (SELECT (COUNT(CASE WHEN state = 'Vermont' THEN 1 END) / COUNT(CASE WHEN position = 'Member' THEN 1 END)) * 100) ) AS DIFFERENCE_PERCENTAGE\t----- bird -----\tstudent_club",
    "1459": "SELECT major_name, department FROM major JOIN member ON major.major_id = member.link_to_major WHERE first_name = 'Garrett' AND last_name = 'Gerke'\t----- bird -----\tstudent_club",
    "1460": "SELECT T2.first_name || ' ' || T2.last_name AS full_name, T1.cost FROM expense AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T1.expense_description = 'Water, Veggie tray, supplies'\t----- bird -----\tstudent_club",
    "1461": "SELECT T1.last_name, T1.phone FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Elementary Education'\t----- bird -----\tstudent_club",
    "1462": "SELECT T1.category, T1.amount FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.event_name = 'January Speaker'\t----- bird -----\tstudent_club",
    "1463": "SELECT event_name FROM event WHERE event_id IN (SELECT link_to_event FROM budget WHERE category = 'Food')\t----- bird -----\tstudent_club",
    "1464": "SELECT T1.first_name || ' ' || T1.last_name AS full_name, T2.amount FROM member AS T1 INNER JOIN income AS T2 ON T1.member_id = T2.link_to_member WHERE T2.date_received = '9/9/2019'\t----- bird -----\tstudent_club",
    "1465": "SELECT T1.category FROM budget AS T1 INNER JOIN expense AS T2 ON T1.budget_id = T2.link_to_budget WHERE T2.expense_description = 'Posters'\t----- bird -----\tstudent_club",
    "1466": "SELECT T1.first_name, T1.last_name, T2.college FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.position = 'Secretary'\t----- bird -----\tstudent_club",
    "1467": "SELECT SUM(b.spent), e.event_name FROM budget b JOIN event e ON b.link_to_event = e.event_id WHERE b.category = 'Speaker Gifts'\t----- bird -----\tstudent_club",
    "1468": "SELECT T3.city FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code INNER JOIN zip_code AS T3 ON T2.city = T3.city WHERE T1.first_name = 'Garrett' AND T1.last_name = 'Girke'\t----- bird -----\tstudent_club",
    "1469": "SELECT T1.first_name || ' ' || T1.last_name AS full_name, T1.position FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T2.city = 'Lincolnton' AND T2.state = 'North Carolina' AND T2.zip_code = 28092\t----- bird -----\tstudent_club",
    "1470": "SELECT COUNT(GasStationID) FROM gasstations WHERE Country = 'CZE' AND Segment = 'Premium gas'\t----- bird -----\tdebit_card_specializing",
    "1471": "SELECT COUNT(CASE WHEN Currency = 'EUR' THEN 1 END) * 1.0 / COUNT(CASE WHEN Currency = 'CZK' THEN 1 END) AS ratio FROM customers;\t----- bird -----\tdebit_card_specializing",
    "1472": "SELECT CustomerID FROM yearmonth WHERE Date BETWEEN '201201' AND '201212' AND Consumption = (SELECT MIN(Consumption) FROM yearmonth WHERE Date BETWEEN '201201' AND '201212' AND Segment = 'LAM')\t----- bird -----\tdebit_card_specializing",
    "1473": "SELECT AVG(Consumption) / 12 FROM yearmonth WHERE Date BETWEEN '201301' AND '201312' AND CustomerID IN (SELECT CustomerID FROM customers WHERE Segment = 'SME')\t----- bird -----\tdebit_card_specializing",
    "1474": "SELECT customers.CustomerID, SUM(transactions_1k.Amount) AS TotalConsumption FROM customers JOIN transactions_1k ON customers.CustomerID = transactions_1k.CustomerID WHERE customers.Currency = 'CZK' AND transactions_1k.Date BETWEEN 201101 AND 201112 GROUP BY customers.CustomerID ORDER BY TotalConsumption DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1475": "SELECT COUNT(CustomerID) FROM yearmonth WHERE Date BETWEEN '201201' AND '201212' AND CustomerID IN (SELECT CustomerID FROM customers WHERE Segment = 'KAM' AND CustomerID IN (SELECT CustomerID FROM yearmonth WHERE Consumption < 30000))\t----- bird -----\tdebit_card_specializing",
    "1476": "SELECT (SELECT SUM(Consumption) FROM yearmonth INNER JOIN customers ON yearmonth.CustomerID = customers.CustomerID WHERE Currency = 'CZK' AND Date BETWEEN '201201' AND '201212') - (SELECT SUM(Consumption) FROM yearmonth INNER JOIN customers ON yearmonth.CustomerID = customers.CustomerID WHERE Currency = 'EUR' AND Date BETWEEN '201201' AND '201212') as Difference_in_Consumption\t----- bird -----\tdebit_card_specializing",
    "1477": "SELECT strftime('%Y', T1.Date) AS Year, SUM(T2.Amount) AS TotalGasUse FROM transactions_1k AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Currency = 'EUR' GROUP BY Year ORDER BY TotalGasUse DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1478": "SELECT Segment, SUM(Consumption) AS TotalConsumption FROM yearmonth JOIN customers ON yearmonth.CustomerID = customers.CustomerID GROUP BY Segment ORDER BY TotalConsumption ASC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1479": "SELECT substr(Date, 1, 4) AS Year, SUM(Consumption) AS Total_Consumption FROM yearmonth WHERE CustomerID IN (SELECT CustomerID FROM customers WHERE Currency = 'CZK') GROUP BY substr(Date, 1, 4) ORDER BY Total_Consumption DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1480": "SELECT Date, SUM(Consumption) AS TotalConsumption FROM yearmonth WHERE Date LIKE '2013%' AND CustomerID IN (SELECT CustomerID FROM customers WHERE Segment = 'SME') GROUP BY Date ORDER BY TotalConsumption DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1481": "SELECT (SUM(T1.Consumption) / COUNT(T1.CustomerID)) AS SME_avg_consumption, (SUM(T2.Consumption) / COUNT(T2.CustomerID)) AS LAM_avg_consumption, (SUM(T3.Consumption) / COUNT(T3.CustomerID)) AS KAM_avg_consumption, (SUM(T1.Consumption) / COUNT(T1.CustomerID)) - (SUM(T2.Consumption) / COUNT(T2.CustomerID) AS SME_LAM_difference, (SUM(T2.Consumption) / COUNT(T2.CustomerID)) - (SUM(T3.Consumption) / COUNT(T3.CustomerID) AS LAM_KAM_difference, (SUM(T3.Consumption) / COUNT(T3.CustomerID)) - (SUM(T1.Consumption) / COUNT(T1.CustomerID) AS KAM_SME_difference FROM yearmonth AS T1 JOIN yearmonth AS T2 ON T1.CustomerID = T\t----- bird -----\tdebit_card_specializing",
    "1482": "SELECT Segment, MAX((T2.Consumption - T1.Consumption) / T2.Consumption * 100) AS Max_Increase_Percentage, MIN((T2.Consumption - T1.Consumption) / T2.Consumption * 100) AS Min_Increase_Percentage FROM yearmonth AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Date LIKE '2012%' AND T2.Date LIKE '2013%' GROUP BY Segment\t----- bird -----\tdebit_card_specializing",
    "1483": "SELECT SUM(Consumption) FROM yearmonth WHERE CustomerID = 6 AND Date LIKE '2013-08%' OR Date LIKE '2013-09%' OR Date LIKE '2013-10%' OR Date LIKE '2013-11%';\t----- bird -----\tdebit_card_specializing",
    "1484": "SELECT COUNT(*) AS Czech_discount_gas_stations FROM gasstations WHERE Country = 'Czech Republic' AND Segment = 'discount'; SELECT COUNT(*) AS Slovakia_discount_gas_stations FROM gasstations WHERE Country = 'Slovakia' AND Segment = 'discount'; SELECT (Czech_discount_gas_stations - Slovakia_discount_gas_stations) AS More_discount_gas_stations FROM (SELECT COUNT(*) AS Czech_discount_gas_stations FROM gasstations WHERE Country = 'Czech Republic' AND Segment = 'discount') AS Czech, (SELECT COUNT(*) AS Slovakia_discount_gas_stations FROM gasstations WHERE Country = 'Slovakia' AND Segment = 'discount') AS Slovakia;\t----- bird -----\tdebit_card_specializing",
    "1485": "SELECT SUM(YM1.Consumption) - SUM(YM2.Consumption) AS Consumption_Difference FROM yearmonth AS YM1 JOIN yearmonth AS YM2 ON YM1.CustomerID = 7 AND YM2.CustomerID = 5 WHERE YM1.Date = '201304' AND YM2.Date = '201304'\t----- bird -----\tdebit_card_specializing",
    "1486": "SELECT COUNT(CASE WHEN Currency = 'Czech koruna' AND Segment = 'SME' THEN 1 END) - COUNT(CASE WHEN Currency = 'Euro' AND Segment = 'SME' THEN 1 END) AS \"Amount of more SMEs\" FROM customers;\t----- bird -----\tdebit_card_specializing",
    "1487": "SELECT CustomerID FROM customers WHERE Segment = 'LAM' AND Currency = 'Euro' AND CustomerID IN (SELECT CustomerID FROM yearmonth WHERE Date = '201310' ORDER BY Consumption DESC LIMIT 1)\t----- bird -----\tdebit_card_specializing",
    "1488": "SELECT customers.CustomerID, MAX(yearmonth.Consumption) AS Max_Consumption FROM customers INNER JOIN yearmonth ON customers.CustomerID = yearmonth.CustomerID WHERE customers.Segment = 'KAM' GROUP BY customers.CustomerID ORDER BY Max_Consumption DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1489": "SELECT SUM(Consumption) AS total_consumption FROM yearmonth WHERE Date = '201305' AND CustomerID IN (SELECT CustomerID FROM customers WHERE Segment = 'KAM')\t----- bird -----\tdebit_card_specializing",
    "1490": "SELECT (CAST(SUM(CASE WHEN T2.Consumption > 46.73 THEN 1 ELSE 0 END) AS REAL) / COUNT(*)) * 100 FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Segment = 'LAM'\t----- bird -----\tdebit_card_specializing",
    "1491": "SELECT Country, COUNT(GasStationID) AS TotalValueForMoneyGasStations FROM gasstations WHERE Segment = 'value for money' GROUP BY Country;\t----- bird -----\tdebit_card_specializing",
    "1492": "SELECT (COUNT(CASE WHEN Segment = 'KAM' AND Currency = 'Euro' THEN 1 END) / COUNT(CASE WHEN Segment = 'KAM' THEN 1 END)) * 100 AS percentage_euro FROM customers\t----- bird -----\tdebit_card_specializing",
    "1493": "SELECT CAST(SUM(CASE WHEN Consumption > 528.3 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(CustomerID) FROM yearmonth WHERE Date = '201202'\t----- bird -----\tdebit_card_specializing",
    "1494": "SELECT (COUNT(CASE WHEN Segment = 'Premium' THEN 1 END) / COUNT(*)) * 100 FROM gasstations WHERE Country = 'Slovakia'\t----- bird -----\tdebit_card_specializing",
    "1495": "SELECT CustomerID FROM yearmonth WHERE Date = '201309' ORDER BY Consumption DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1496": "SELECT Segment FROM customers WHERE CustomerID IN ( SELECT CustomerID FROM yearmonth WHERE Date = '201309' ORDER BY Consumption LIMIT 1 )\t----- bird -----\tdebit_card_specializing",
    "1497": "SELECT CustomerID FROM yearmonth WHERE Date = '201206' ORDER BY Consumption LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1498": "SELECT MAX(Consumption) AS highest_monthly_consumption FROM yearmonth WHERE SUBSTR(Date, 1, 4) = '2012'\t----- bird -----\tdebit_card_specializing",
    "1499": "SELECT MAX(SUM(T2.Consumption)/12) AS BiggestMonthlyConsumption FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Currency = 'Euro' GROUP BY T2.Date\t----- bird -----\tdebit_card_specializing",
    "1500": "SELECT P.Description FROM products AS P INNER JOIN transactions_1k AS T ON P.ProductID = T.ProductID WHERE SUBSTR(T.Date, 1, 6) = '201309'\t----- bird -----\tdebit_card_specializing",
    "1501": "SELECT Country FROM gasstations WHERE GasStationID IN (SELECT GasStationID FROM transactions_1k WHERE SUBSTR(Date, 1, 6) = '201306')\t----- bird -----\tdebit_card_specializing",
    "1502": "SELECT ChainID FROM gasstations WHERE GasStationID IN (SELECT GasStationID FROM transactions_1k WHERE Currency = 'Euro')\t----- bird -----\tdebit_card_specializing",
    "1503": "SELECT T3.Description FROM transactions_1k AS T1 INNER JOIN products AS T3 ON T1.ProductID = T3.ProductID INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Currency = 'Euro'\t----- bird -----\tdebit_card_specializing",
    "1504": "SELECT AVG(Price) FROM transactions_1k WHERE Date LIKE '2012-01%'\t----- bird -----\tdebit_card_specializing",
    "1505": "SELECT COUNT(DISTINCT T1.CustomerID) FROM customers AS T1 INNER JOIN transactions_1k AS T2 ON T1.CustomerID = T2.CustomerID INNER JOIN yearmonth AS T3 ON T1.CustomerID = T3.CustomerID WHERE T1.Currency = 'Euro' AND T3.Consumption > 1000\t----- bird -----\tdebit_card_specializing",
    "1506": "SELECT p.Description FROM products p JOIN \"transactions_1k\" t ON p.ProductID = t.ProductID JOIN gasstations g ON t.GasStationID = g.GasStationID WHERE g.Country = 'CZE'\t----- bird -----\tdebit_card_specializing",
    "1507": "SELECT DISTINCT Time FROM transactions_1k WHERE GasStationID IN (SELECT GasStationID FROM gasstations WHERE ChainID = 11)\t----- bird -----\tdebit_card_specializing",
    "1508": "SELECT COUNT(*) FROM transactions_1k WHERE GasStationID IN (SELECT GasStationID FROM gasstations WHERE Country = 'CZE') AND Price > 1000;\t----- bird -----\tdebit_card_specializing",
    "1509": "SELECT COUNT(*) FROM transactions_1k WHERE GasStationID IN (SELECT GasStationID FROM gasstations WHERE Country = 'CZE') AND Date > '2012-01-01'\t----- bird -----\tdebit_card_specializing",
    "1510": "SELECT AVG(Price * Amount) AS average_total_price FROM transactions_1k JOIN gasstations ON transactions_1k.GasStationID = gasstations.GasStationID WHERE gasstations.Country = 'CZE'\t----- bird -----\tdebit_card_specializing",
    "1511": "SELECT AVG(Price) AS AverageTotalPrice FROM transactions_1k AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Currency = 'Euro'\t----- bird -----\tdebit_card_specializing",
    "1512": "SELECT t1.CustomerID, SUM(t1.Amount) AS TotalPayment FROM transactions_1k AS t1 WHERE t1.Date = '2012-08-25' GROUP BY t1.CustomerID ORDER BY TotalPayment DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1513": "SELECT t2.Country FROM transactions_1k AS t1 INNER JOIN gasstations AS t2 ON t1.GasStationID = t2.GasStationID WHERE t1.Date = '2012-08-25' ORDER BY t1.TransactionID LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1514": "SELECT T1.Currency FROM customers AS T1 INNER JOIN transactions_1k AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Date = '2012-08-24' AND T2.Time = '16:25:00'\t----- bird -----\tdebit_card_specializing",
    "1515": "SELECT T1.Segment FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Date = '2012-08-23' AND T1.time = '21:20:00'\t----- bird -----\tdebit_card_specializing",
    "1516": "SELECT COUNT(*) FROM transactions_1k WHERE Date = '2012-08-26' AND Time < '13:00:00' AND CustomerID IN (SELECT CustomerID FROM customers WHERE Currency = 'EUR')\t----- bird -----\tdebit_card_specializing",
    "1517": "SELECT Segment FROM customers WHERE CustomerID = (SELECT MIN(CustomerID) FROM customers)\t----- bird -----\tdebit_card_specializing",
    "1518": "SELECT T2.Country FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE STRFTIME('%Y-%m-%d',T1.Date) = '2012-08-24' AND T1.Time = '12:42:00'\t----- bird -----\tdebit_card_specializing",
    "1519": "SELECT T1.ProductID FROM transactions_1k AS T1 WHERE T1.Date = '2012-08-23' AND T1.Time = '21:20:00'\t----- bird -----\tdebit_card_specializing",
    "1520": "SELECT T1.Date, T1.Consumption FROM yearmonth AS T1 INNER JOIN \"transactions_1k\" AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Amount = 124.05 AND T2.Date = '2012-08-24' AND T1.Date LIKE '2012-01%'\t----- bird -----\tdebit_card_specializing",
    "1521": "SELECT COUNT(TransactionID) FROM transactions_1k JOIN gasstations ON transactions_1k.GasStationID = gasstations.GasStationID WHERE Time BETWEEN '08:00' AND '09:00' AND Date = '2012-08-26' AND Country = 'CZE';\t----- bird -----\tdebit_card_specializing",
    "1522": "SELECT c.Currency FROM customers c JOIN transactions_1k t ON c.CustomerID = t.CustomerID JOIN yearmonth y ON c.CustomerID = y.CustomerID WHERE y.Date LIKE '201306%' GROUP BY c.Currency HAVING SUM(t.Amount) = 214582.17\t----- bird -----\tdebit_card_specializing",
    "1523": "SELECT T2.Country FROM customers AS T1 INNER JOIN gasstations AS T2 ON T1.CustomerID = T2.ChainID WHERE T1.CustomerID = 667467\t----- bird -----\tdebit_card_specializing",
    "1524": "SELECT T2.Country FROM transactions_1k AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Date = '2012-08-24' AND T1.Amount = 548.4\t----- bird -----\tdebit_card_specializing",
    "1525": "SELECT COUNT(DISTINCT CustomerID) * 100 / (SELECT COUNT(DISTINCT CustomerID) FROM yearmonth WHERE Date = '2012-08-25' AND Currency = 'EUR') FROM yearmonth WHERE Date = '2012-08-25' AND Currency = 'EUR'\t----- bird -----\tdebit_card_specializing",
    "1526": "SELECT ((T1.Consumption_2012 - T2.Consumption_2013) / T1.Consumption_2012) as decrease_rate FROM (SELECT Consumption as Consumption_2012 FROM yearmonth WHERE Date LIKE '2012%' AND CustomerID = (SELECT CustomerID FROM transactions_1k WHERE Price = 634.8 AND Date = '2012-08-25')) as T1, (SELECT Consumption as Consumption_2013 FROM yearmonth WHERE Date LIKE '2013%' AND CustomerID = (SELECT CustomerID FROM transactions_1k WHERE Price = 634.8 AND Date = '2012-08-25')) as T2;\t----- bird -----\tdebit_card_specializing",
    "1527": "SELECT T1.GasStationID, SUM(T2.Amount * T2.Price) AS Revenue FROM gasstations AS T1 INNER JOIN transactions_1k AS T2 ON T1.GasStationID = T2.GasStationID GROUP BY T1.GasStationID ORDER BY Revenue DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1528": "SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM gasstations WHERE Country = 'SVK') AS PremiumPercentage FROM gasstations WHERE Country = 'SVK' AND Segment = 'premium'\t----- bird -----\tdebit_card_specializing",
    "1529": "SELECT SUM(Amount) FROM transactions_1k WHERE CustomerID = 38508 AND Date LIKE '201201%'\t----- bird -----\tdebit_card_specializing",
    "1530": "SELECT Description FROM products ORDER BY (SELECT SUM(Amount) FROM transactions_1k WHERE ProductID = products.ProductID) DESC LIMIT 5\t----- bird -----\tdebit_card_specializing",
    "1531": "SELECT T1.First, T1.Last, AVG(T2.Price / T2.Amount) AS AvgPricePerItem, T1.Currency FROM customers AS T1 INNER JOIN transactions_1k AS T2 ON T1.CustomerID = T2.CustomerID GROUP BY T1.CustomerID ORDER BY SUM(T2.Price) DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1532": "SELECT t1.Country FROM gasstations AS t1 INNER JOIN transactions_1k AS t2 ON t1.GasStationID = t2.GasStationID WHERE t2.ProductID = 2 ORDER BY t2.Price DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1533": "SELECT T1.CustomerID, T2.Consumption FROM transactions_1k AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.ProductID = 5 AND T1.Price / T1.Amount > 29.00 AND T2.Date LIKE '%201208%'\t----- bird -----\tdebit_card_specializing"
}